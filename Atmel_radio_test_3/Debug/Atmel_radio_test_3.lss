
Atmel_radio_test_3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000e3f8  00000000  00000000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000000c4  200000b0  0000e3f8  000180b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00003efc  20000174  0000e4bc  00018174  2**2
                  ALLOC
  3 .heap         00001f90  20004070  000123b8  00018174  2**0
                  ALLOC
  4 .stack        00002000  20006000  00014348  00018174  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  00018174  2**0
                  CONTENTS, READONLY
  6 .comment      000000cb  00000000  00000000  0001819c  2**0
                  CONTENTS, READONLY
  7 .debug_info   00031af3  00000000  00000000  00018267  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00005a8c  00000000  00000000  00049d5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000059c8  00000000  00000000  0004f7e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000800  00000000  00000000  000551ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000758  00000000  00000000  000559ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000212c7  00000000  00000000  00056106  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00019847  00000000  00000000  000773cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00086399  00000000  00000000  00090c14  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002c4c  00000000  00000000  00116fb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .stab         0000003c  00000000  00000000  00119bfc  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .stabstr      00000076  00000000  00000000  00119c38  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <_sfixed>:
       0:	20008000 	.word	0x20008000
       4:	00002bd5 	.word	0x00002bd5
       8:	00002bd1 	.word	0x00002bd1
       c:	00002bd1 	.word	0x00002bd1
	...
      2c:	00001135 	.word	0x00001135
	...
      38:	000011a1 	.word	0x000011a1
      3c:	000011e5 	.word	0x000011e5
      40:	00002bd1 	.word	0x00002bd1
      44:	00002bd1 	.word	0x00002bd1
      48:	00002bd1 	.word	0x00002bd1
      4c:	00002bd1 	.word	0x00002bd1
      50:	00002bd1 	.word	0x00002bd1
      54:	00002bd1 	.word	0x00002bd1
      58:	00002bd1 	.word	0x00002bd1
      5c:	00000000 	.word	0x00000000
      60:	00002bd1 	.word	0x00002bd1
      64:	00002bd1 	.word	0x00002bd1
      68:	00002bd1 	.word	0x00002bd1
      6c:	00002bd1 	.word	0x00002bd1
      70:	00002bd1 	.word	0x00002bd1
	...
      7c:	00002bd1 	.word	0x00002bd1
      80:	00002bd1 	.word	0x00002bd1
      84:	00002bd1 	.word	0x00002bd1
      88:	000054c9 	.word	0x000054c9
      8c:	000054d5 	.word	0x000054d5
      90:	000054e1 	.word	0x000054e1
	...
      ac:	00002bd1 	.word	0x00002bd1
      b0:	00000000 	.word	0x00000000

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	20000174 	.word	0x20000174
      d4:	00000000 	.word	0x00000000
      d8:	0000e3f8 	.word	0x0000e3f8

000000dc <frame_dummy>:
      dc:	b508      	push	{r3, lr}
      de:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4807      	ldr	r0, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4908      	ldr	r1, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd08      	pop	{r3, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	0000e3f8 	.word	0x0000e3f8
     108:	20000178 	.word	0x20000178
     10c:	0000e3f8 	.word	0x0000e3f8
     110:	00000000 	.word	0x00000000

00000114 <_ZN4mbed10SerialBaseD1Ev>:
#endif

protected:
    SerialBase(PinName tx, PinName rx);
    virtual ~SerialBase() {
    }
     114:	4770      	bx	lr
     116:	46c0      	nop			; (mov r8, r8)

00000118 <_ZN4mbed6SerialD1Ev>:
 * int main() {
 *     pc.printf("Hello World\n");
 * }
 * @endcode
 */
class Serial : public SerialBase, public Stream {
     118:	b510      	push	{r4, lr}
     11a:	1c04      	adds	r4, r0, #0
     11c:	4b06      	ldr	r3, [pc, #24]	; (138 <_ZN4mbed6SerialD1Ev+0x20>)
     11e:	6003      	str	r3, [r0, #0]
     120:	1c19      	adds	r1, r3, #0
     122:	3118      	adds	r1, #24
     124:	22dc      	movs	r2, #220	; 0xdc
     126:	5081      	str	r1, [r0, r2]
     128:	334c      	adds	r3, #76	; 0x4c
     12a:	3204      	adds	r2, #4
     12c:	5083      	str	r3, [r0, r2]
     12e:	30dc      	adds	r0, #220	; 0xdc
     130:	4b02      	ldr	r3, [pc, #8]	; (13c <_ZN4mbed6SerialD1Ev+0x24>)
     132:	4798      	blx	r3
     134:	1c20      	adds	r0, r4, #0
     136:	bd10      	pop	{r4, pc}
     138:	0000d778 	.word	0x0000d778
     13c:	00003f11 	.word	0x00003f11

00000140 <_ZThn220_N4mbed6SerialD1Ev>:
     140:	b408      	push	{r3}
     142:	4b02      	ldr	r3, [pc, #8]	; (14c <_ZThn220_N4mbed6SerialD1Ev+0xc>)
     144:	469c      	mov	ip, r3
     146:	38dc      	subs	r0, #220	; 0xdc
     148:	bc08      	pop	{r3}
     14a:	4760      	bx	ip
     14c:	00000119 	.word	0x00000119

00000150 <_ZThn224_N4mbed6SerialD1Ev>:
     150:	b408      	push	{r3}
     152:	4b02      	ldr	r3, [pc, #8]	; (15c <_ZThn224_N4mbed6SerialD1Ev+0xc>)
     154:	469c      	mov	ip, r3
     156:	38e0      	subs	r0, #224	; 0xe0
     158:	bc08      	pop	{r3}
     15a:	4760      	bx	ip
     15c:	00000119 	.word	0x00000119

00000160 <_ZN4mbed10SerialBaseD0Ev>:
    void interrupt_handler_asynch(void);
#endif

protected:
    SerialBase(PinName tx, PinName rx);
    virtual ~SerialBase() {
     160:	b510      	push	{r4, lr}
     162:	1c04      	adds	r4, r0, #0
    }
     164:	4b01      	ldr	r3, [pc, #4]	; (16c <_ZN4mbed10SerialBaseD0Ev+0xc>)
     166:	4798      	blx	r3
     168:	1c20      	adds	r0, r4, #0
     16a:	bd10      	pop	{r4, pc}
     16c:	000058a7 	.word	0x000058a7

00000170 <_Z12configureHMIv>:
xQueueHandle uartQueue;
Serial hmi(PA22,PA23);
/************************************************************************/
/* FUNCTION                                                             */
/************************************************************************/
void configureHMI(void){
     170:	b508      	push	{r3, lr}
	hmi.printf("config HMI \r\n");
     172:	4803      	ldr	r0, [pc, #12]	; (180 <_Z12configureHMIv+0x10>)
     174:	30dc      	adds	r0, #220	; 0xdc
     176:	4903      	ldr	r1, [pc, #12]	; (184 <_Z12configureHMIv+0x14>)
     178:	4b03      	ldr	r3, [pc, #12]	; (188 <_Z12configureHMIv+0x18>)
     17a:	4798      	blx	r3
}
     17c:	bd08      	pop	{r3, pc}
     17e:	46c0      	nop			; (mov r8, r8)
     180:	20000190 	.word	0x20000190
     184:	0000d128 	.word	0x0000d128
     188:	00003f61 	.word	0x00003f61

0000018c <_ZN4mbed6SerialD0Ev>:
     18c:	b510      	push	{r4, lr}
     18e:	1c04      	adds	r4, r0, #0
     190:	4b08      	ldr	r3, [pc, #32]	; (1b4 <_ZN4mbed6SerialD0Ev+0x28>)
     192:	6003      	str	r3, [r0, #0]
     194:	1c19      	adds	r1, r3, #0
     196:	3118      	adds	r1, #24
     198:	22dc      	movs	r2, #220	; 0xdc
     19a:	5081      	str	r1, [r0, r2]
     19c:	334c      	adds	r3, #76	; 0x4c
     19e:	3204      	adds	r2, #4
     1a0:	5083      	str	r3, [r0, r2]
     1a2:	30dc      	adds	r0, #220	; 0xdc
     1a4:	4b04      	ldr	r3, [pc, #16]	; (1b8 <_ZN4mbed6SerialD0Ev+0x2c>)
     1a6:	4798      	blx	r3
     1a8:	1c20      	adds	r0, r4, #0
     1aa:	4b04      	ldr	r3, [pc, #16]	; (1bc <_ZN4mbed6SerialD0Ev+0x30>)
     1ac:	4798      	blx	r3
     1ae:	1c20      	adds	r0, r4, #0
     1b0:	bd10      	pop	{r4, pc}
     1b2:	46c0      	nop			; (mov r8, r8)
     1b4:	0000d778 	.word	0x0000d778
     1b8:	00003f11 	.word	0x00003f11
     1bc:	000058a7 	.word	0x000058a7

000001c0 <_ZThn220_N4mbed6SerialD0Ev>:
     1c0:	b408      	push	{r3}
     1c2:	4b02      	ldr	r3, [pc, #8]	; (1cc <_ZThn220_N4mbed6SerialD0Ev+0xc>)
     1c4:	469c      	mov	ip, r3
     1c6:	38dc      	subs	r0, #220	; 0xdc
     1c8:	bc08      	pop	{r3}
     1ca:	4760      	bx	ip
     1cc:	0000018d 	.word	0x0000018d

000001d0 <_ZThn224_N4mbed6SerialD0Ev>:
     1d0:	b408      	push	{r3}
     1d2:	4b02      	ldr	r3, [pc, #8]	; (1dc <_ZThn224_N4mbed6SerialD0Ev+0xc>)
     1d4:	469c      	mov	ip, r3
     1d6:	38e0      	subs	r0, #224	; 0xe0
     1d8:	bc08      	pop	{r3}
     1da:	4760      	bx	ip
     1dc:	0000018d 	.word	0x0000018d

000001e0 <_GLOBAL__sub_I_uartQueue>:
				
			}
			
				return false;
			
     1e0:	b538      	push	{r3, r4, r5, lr}
#include "hmi.h"
/************************************************************************/
/* GLOBAL                                                               */
/************************************************************************/
xQueueHandle uartQueue;
Serial hmi(PA22,PA23);
     1e2:	4c06      	ldr	r4, [pc, #24]	; (1fc <_GLOBAL__sub_I_uartQueue+0x1c>)
     1e4:	1c20      	adds	r0, r4, #0
     1e6:	2116      	movs	r1, #22
     1e8:	2217      	movs	r2, #23
     1ea:	2300      	movs	r3, #0
     1ec:	4d04      	ldr	r5, [pc, #16]	; (200 <_GLOBAL__sub_I_uartQueue+0x20>)
     1ee:	47a8      	blx	r5
     1f0:	1c20      	adds	r0, r4, #0
     1f2:	4904      	ldr	r1, [pc, #16]	; (204 <_GLOBAL__sub_I_uartQueue+0x24>)
     1f4:	4a04      	ldr	r2, [pc, #16]	; (208 <_GLOBAL__sub_I_uartQueue+0x28>)
     1f6:	4b05      	ldr	r3, [pc, #20]	; (20c <_GLOBAL__sub_I_uartQueue+0x2c>)
     1f8:	4798      	blx	r3
				
			}
			
				return false;
			
     1fa:	bd38      	pop	{r3, r4, r5, pc}
     1fc:	20000190 	.word	0x20000190
     200:	00003d05 	.word	0x00003d05
     204:	00000119 	.word	0x00000119
     208:	200000b0 	.word	0x200000b0
     20c:	00005899 	.word	0x00005899

00000210 <_Z14smartMeterTaskv>:
			}
		}
	}
}

void smartMeterTask(void){
     210:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     212:	465f      	mov	r7, fp
     214:	4656      	mov	r6, sl
     216:	464d      	mov	r5, r9
     218:	4644      	mov	r4, r8
     21a:	b4f0      	push	{r4, r5, r6, r7}
	
	xSemaphoreHandle synchroSmartMeter;
	vSemaphoreCreateBinary(synchroSmartMeter);
     21c:	2001      	movs	r0, #1
     21e:	2100      	movs	r1, #0
     220:	2203      	movs	r2, #3
     222:	4b41      	ldr	r3, [pc, #260]	; (328 <_Z14smartMeterTaskv+0x118>)
     224:	4798      	blx	r3
     226:	1e04      	subs	r4, r0, #0
     228:	d004      	beq.n	234 <_Z14smartMeterTaskv+0x24>
     22a:	2100      	movs	r1, #0
     22c:	2200      	movs	r2, #0
     22e:	2300      	movs	r3, #0
     230:	4d3e      	ldr	r5, [pc, #248]	; (32c <_Z14smartMeterTaskv+0x11c>)
     232:	47a8      	blx	r5
	
	Channel* pc = new ChannelSerialDebug;
     234:	2580      	movs	r5, #128	; 0x80
     236:	006d      	lsls	r5, r5, #1
     238:	1c28      	adds	r0, r5, #0
     23a:	4f3d      	ldr	r7, [pc, #244]	; (330 <_Z14smartMeterTaskv+0x120>)
     23c:	47b8      	blx	r7
     23e:	4681      	mov	r9, r0
     240:	2104      	movs	r1, #4
     242:	2205      	movs	r2, #5
     244:	4e3b      	ldr	r6, [pc, #236]	; (334 <_Z14smartMeterTaskv+0x124>)
     246:	47b0      	blx	r6
	Channel* s1 = new ChannelSerialSercom1;
     248:	1c28      	adds	r0, r5, #0
     24a:	47b8      	blx	r7
     24c:	1c05      	adds	r5, r0, #0
     24e:	2110      	movs	r1, #16
     250:	2211      	movs	r2, #17
     252:	47b0      	blx	r6
	ChannelCallback* relaytos1 = new Relay(s1);
     254:	2008      	movs	r0, #8
     256:	47b8      	blx	r7
     258:	1c29      	adds	r1, r5, #0
     25a:	4e37      	ldr	r6, [pc, #220]	; (338 <_Z14smartMeterTaskv+0x128>)
     25c:	47b0      	blx	r6
	ChannelCallback* relaytopc = new Relay(pc);
     25e:	2008      	movs	r0, #8
     260:	47b8      	blx	r7
     262:	4649      	mov	r1, r9
     264:	47b0      	blx	r6
	RelayBuffered* relaybtopc = new RelayBufferedTask(pc,synchroSmartMeter,'\x03');
     266:	20a2      	movs	r0, #162	; 0xa2
     268:	0040      	lsls	r0, r0, #1
     26a:	47b8      	blx	r7
     26c:	4680      	mov	r8, r0
     26e:	4649      	mov	r1, r9
     270:	1c22      	adds	r2, r4, #0
     272:	2303      	movs	r3, #3
     274:	4e31      	ldr	r6, [pc, #196]	; (33c <_Z14smartMeterTaskv+0x12c>)
     276:	46b3      	mov	fp, r6
     278:	47b0      	blx	r6
	RelayBuffered* relaybtos1 = new RelayBufferedTask(s1,synchroSmartMeter,'\x03');
     27a:	20a2      	movs	r0, #162	; 0xa2
     27c:	0040      	lsls	r0, r0, #1
     27e:	47b8      	blx	r7
     280:	1c06      	adds	r6, r0, #0
     282:	1c29      	adds	r1, r5, #0
     284:	1c22      	adds	r2, r4, #0
     286:	2303      	movs	r3, #3
     288:	47d8      	blx	fp
	
	ChannelRadio* radio = ChannelRadio::GetChannel();
     28a:	4b2d      	ldr	r3, [pc, #180]	; (340 <_Z14smartMeterTaskv+0x130>)
     28c:	4798      	blx	r3
     28e:	4682      	mov	sl, r0
	cMxRadio* r = radio->GetRadio();
     290:	4b2c      	ldr	r3, [pc, #176]	; (344 <_Z14smartMeterTaskv+0x134>)
     292:	4798      	blx	r3
	// Radio Config
	r->begin(11);
     294:	210b      	movs	r1, #11
     296:	4b2c      	ldr	r3, [pc, #176]	; (348 <_Z14smartMeterTaskv+0x138>)
     298:	4798      	blx	r3
	
	RelayBuffered* relaybtoradio = new RelayBufferedTask(radio,synchroSmartMeter,'\x03');
     29a:	20a2      	movs	r0, #162	; 0xa2
     29c:	0040      	lsls	r0, r0, #1
     29e:	47b8      	blx	r7
     2a0:	1c07      	adds	r7, r0, #0
     2a2:	4651      	mov	r1, sl
     2a4:	1c22      	adds	r2, r4, #0
     2a6:	2303      	movs	r3, #3
     2a8:	47d8      	blx	fp
	
	pc->SetCallback(relaybtoradio);
     2aa:	464b      	mov	r3, r9
     2ac:	681b      	ldr	r3, [r3, #0]
     2ae:	691b      	ldr	r3, [r3, #16]
     2b0:	4648      	mov	r0, r9
     2b2:	1c39      	adds	r1, r7, #0
     2b4:	4798      	blx	r3
#ifdef MASTERMODE
	radio->SetCallback(relaybtopc);
#else
	radio->SetCallback(relaybtos1);
     2b6:	4653      	mov	r3, sl
     2b8:	681b      	ldr	r3, [r3, #0]
     2ba:	691b      	ldr	r3, [r3, #16]
     2bc:	4650      	mov	r0, sl
     2be:	1c31      	adds	r1, r6, #0
     2c0:	4798      	blx	r3
#endif
	s1->SetCallback(relaybtoradio);
     2c2:	682b      	ldr	r3, [r5, #0]
     2c4:	691b      	ldr	r3, [r3, #16]
     2c6:	1c28      	adds	r0, r5, #0
     2c8:	1c39      	adds	r1, r7, #0
     2ca:	4798      	blx	r3
	//PrintBuffer(pc,"RESET\r\n");
    while(1)
	{
		if(synchroSmartMeter!=NULL)
		{
			if( xSemaphoreTake(synchroSmartMeter,portMAX_DELAY) == pdTRUE )
     2cc:	4d1f      	ldr	r5, [pc, #124]	; (34c <_Z14smartMeterTaskv+0x13c>)
#endif
	s1->SetCallback(relaybtoradio);
	//PrintBuffer(pc,"RESET\r\n");
    while(1)
	{
		if(synchroSmartMeter!=NULL)
     2ce:	2c00      	cmp	r4, #0
     2d0:	d100      	bne.n	2d4 <_Z14smartMeterTaskv+0xc4>
     2d2:	e7fe      	b.n	2d2 <_Z14smartMeterTaskv+0xc2>
		{
			if( xSemaphoreTake(synchroSmartMeter,portMAX_DELAY) == pdTRUE )
     2d4:	1c20      	adds	r0, r4, #0
     2d6:	2100      	movs	r1, #0
     2d8:	2201      	movs	r2, #1
     2da:	4252      	negs	r2, r2
     2dc:	2300      	movs	r3, #0
     2de:	47a8      	blx	r5
     2e0:	2801      	cmp	r0, #1
     2e2:	d1f4      	bne.n	2ce <_Z14smartMeterTaskv+0xbe>
			{//stay here until sync request
				if(relaybtopc->HasNewData())
     2e4:	4643      	mov	r3, r8
     2e6:	681b      	ldr	r3, [r3, #0]
     2e8:	69db      	ldr	r3, [r3, #28]
     2ea:	4640      	mov	r0, r8
     2ec:	4798      	blx	r3
     2ee:	2800      	cmp	r0, #0
     2f0:	d004      	beq.n	2fc <_Z14smartMeterTaskv+0xec>
				{
					relaybtopc->PushData();
     2f2:	4643      	mov	r3, r8
     2f4:	681b      	ldr	r3, [r3, #0]
     2f6:	699b      	ldr	r3, [r3, #24]
     2f8:	4640      	mov	r0, r8
     2fa:	4798      	blx	r3
				}
		
				if(relaybtos1->HasNewData())
     2fc:	6833      	ldr	r3, [r6, #0]
     2fe:	69db      	ldr	r3, [r3, #28]
     300:	1c30      	adds	r0, r6, #0
     302:	4798      	blx	r3
     304:	2800      	cmp	r0, #0
     306:	d003      	beq.n	310 <_Z14smartMeterTaskv+0x100>
				{
					relaybtos1->PushData();
     308:	6833      	ldr	r3, [r6, #0]
     30a:	699b      	ldr	r3, [r3, #24]
     30c:	1c30      	adds	r0, r6, #0
     30e:	4798      	blx	r3
				}
		
				if(relaybtoradio->HasNewData())
     310:	683b      	ldr	r3, [r7, #0]
     312:	69db      	ldr	r3, [r3, #28]
     314:	1c38      	adds	r0, r7, #0
     316:	4798      	blx	r3
     318:	2800      	cmp	r0, #0
     31a:	d0d8      	beq.n	2ce <_Z14smartMeterTaskv+0xbe>
				{
					relaybtoradio->PushData();
     31c:	683b      	ldr	r3, [r7, #0]
     31e:	699b      	ldr	r3, [r3, #24]
     320:	1c38      	adds	r0, r7, #0
     322:	4798      	blx	r3
     324:	e7d3      	b.n	2ce <_Z14smartMeterTaskv+0xbe>
     326:	46c0      	nop			; (mov r8, r8)
     328:	00000529 	.word	0x00000529
     32c:	00000579 	.word	0x00000579
     330:	000058af 	.word	0x000058af
     334:	00002661 	.word	0x00002661
     338:	000027ed 	.word	0x000027ed
     33c:	00002839 	.word	0x00002839
     340:	000024e1 	.word	0x000024e1
     344:	00002469 	.word	0x00002469
     348:	00001751 	.word	0x00001751
     34c:	00000709 	.word	0x00000709

00000350 <_Z12kernelConfigv>:
 * Created: 13/05/2016 16:34:52
 *  Author: MORAND Baptiste
 */ 
#include "utask.h"

void kernelConfig(void){	
     350:	b510      	push	{r4, lr}
     352:	b084      	sub	sp, #16
	// tasks creations
	xTaskCreate((pdTASK_CODE)smartMeterTask,(const signed char*)"SmartMeterTask",configMINIMAL_STACK_SIZE,NULL, tskIDLE_PRIORITY +1, NULL);
     354:	2301      	movs	r3, #1
     356:	9300      	str	r3, [sp, #0]
     358:	2300      	movs	r3, #0
     35a:	9301      	str	r3, [sp, #4]
     35c:	9302      	str	r3, [sp, #8]
     35e:	9303      	str	r3, [sp, #12]
     360:	4803      	ldr	r0, [pc, #12]	; (370 <_Z12kernelConfigv+0x20>)
     362:	4904      	ldr	r1, [pc, #16]	; (374 <_Z12kernelConfigv+0x24>)
     364:	2296      	movs	r2, #150	; 0x96
     366:	0052      	lsls	r2, r2, #1
     368:	4c03      	ldr	r4, [pc, #12]	; (378 <_Z12kernelConfigv+0x28>)
     36a:	47a0      	blx	r4
}
     36c:	b004      	add	sp, #16
     36e:	bd10      	pop	{r4, pc}
     370:	00000211 	.word	0x00000211
     374:	0000d138 	.word	0x0000d138
     378:	00000971 	.word	0x00000971

0000037c <prvCopyDataToQueue>:

#endif /* configUSE_TRACE_FACILITY */
/*-----------------------------------------------------------*/

static void prvCopyDataToQueue( xQUEUE *pxQueue, const void *pvItemToQueue, portBASE_TYPE xPosition )
{
     37c:	b510      	push	{r4, lr}
     37e:	1c04      	adds	r4, r0, #0
	if( pxQueue->uxItemSize == ( unsigned portBASE_TYPE ) 0 )
     380:	6c03      	ldr	r3, [r0, #64]	; 0x40
     382:	2b00      	cmp	r3, #0
     384:	d108      	bne.n	398 <prvCopyDataToQueue+0x1c>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     386:	6803      	ldr	r3, [r0, #0]
     388:	2b00      	cmp	r3, #0
     38a:	d126      	bne.n	3da <prvCopyDataToQueue+0x5e>
			{
				/* The mutex is no longer being held. */
				vTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
     38c:	6840      	ldr	r0, [r0, #4]
     38e:	4b15      	ldr	r3, [pc, #84]	; (3e4 <prvCopyDataToQueue+0x68>)
     390:	4798      	blx	r3
				pxQueue->pxMutexHolder = NULL;
     392:	2300      	movs	r3, #0
     394:	6063      	str	r3, [r4, #4]
     396:	e020      	b.n	3da <prvCopyDataToQueue+0x5e>
			}
		}
		#endif
	}
	else if( xPosition == queueSEND_TO_BACK )
     398:	2a00      	cmp	r2, #0
     39a:	d10e      	bne.n	3ba <prvCopyDataToQueue+0x3e>
	{
		memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
     39c:	6880      	ldr	r0, [r0, #8]
     39e:	1c1a      	adds	r2, r3, #0
     3a0:	4b11      	ldr	r3, [pc, #68]	; (3e8 <prvCopyDataToQueue+0x6c>)
     3a2:	4798      	blx	r3
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
     3a4:	68a3      	ldr	r3, [r4, #8]
     3a6:	6c22      	ldr	r2, [r4, #64]	; 0x40
     3a8:	4694      	mov	ip, r2
     3aa:	4463      	add	r3, ip
     3ac:	60a3      	str	r3, [r4, #8]
		if( pxQueue->pcWriteTo >= pxQueue->pcTail )
     3ae:	6862      	ldr	r2, [r4, #4]
     3b0:	4293      	cmp	r3, r2
     3b2:	d312      	bcc.n	3da <prvCopyDataToQueue+0x5e>
		{
			pxQueue->pcWriteTo = pxQueue->pcHead;
     3b4:	6823      	ldr	r3, [r4, #0]
     3b6:	60a3      	str	r3, [r4, #8]
     3b8:	e00f      	b.n	3da <prvCopyDataToQueue+0x5e>
		}
	}
	else
	{
		memcpy( ( void * ) pxQueue->pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
     3ba:	68c0      	ldr	r0, [r0, #12]
     3bc:	1c1a      	adds	r2, r3, #0
     3be:	4b0a      	ldr	r3, [pc, #40]	; (3e8 <prvCopyDataToQueue+0x6c>)
     3c0:	4798      	blx	r3
		pxQueue->pcReadFrom -= pxQueue->uxItemSize;
     3c2:	6c23      	ldr	r3, [r4, #64]	; 0x40
     3c4:	425b      	negs	r3, r3
     3c6:	68e2      	ldr	r2, [r4, #12]
     3c8:	18d2      	adds	r2, r2, r3
     3ca:	60e2      	str	r2, [r4, #12]
		if( pxQueue->pcReadFrom < pxQueue->pcHead )
     3cc:	6821      	ldr	r1, [r4, #0]
     3ce:	428a      	cmp	r2, r1
     3d0:	d203      	bcs.n	3da <prvCopyDataToQueue+0x5e>
		{
			pxQueue->pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
     3d2:	6862      	ldr	r2, [r4, #4]
     3d4:	4694      	mov	ip, r2
     3d6:	4463      	add	r3, ip
     3d8:	60e3      	str	r3, [r4, #12]
		}
	}

	++( pxQueue->uxMessagesWaiting );
     3da:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     3dc:	3301      	adds	r3, #1
     3de:	63a3      	str	r3, [r4, #56]	; 0x38
}
     3e0:	bd10      	pop	{r4, pc}
     3e2:	46c0      	nop			; (mov r8, r8)
     3e4:	000010ad 	.word	0x000010ad
     3e8:	000064ef 	.word	0x000064ef

000003ec <prvCopyDataFromQueue>:
/*-----------------------------------------------------------*/

static void prvCopyDataFromQueue( xQUEUE * const pxQueue, const void *pvBuffer )
{
     3ec:	b538      	push	{r3, r4, r5, lr}
	if( pxQueue->uxQueueType != queueQUEUE_IS_MUTEX )
     3ee:	6804      	ldr	r4, [r0, #0]
     3f0:	2c00      	cmp	r4, #0
     3f2:	d00c      	beq.n	40e <prvCopyDataFromQueue+0x22>
	{
		pxQueue->pcReadFrom += pxQueue->uxItemSize;
     3f4:	6c02      	ldr	r2, [r0, #64]	; 0x40
     3f6:	68c3      	ldr	r3, [r0, #12]
     3f8:	189b      	adds	r3, r3, r2
     3fa:	60c3      	str	r3, [r0, #12]
		if( pxQueue->pcReadFrom >= pxQueue->pcTail )
     3fc:	6845      	ldr	r5, [r0, #4]
     3fe:	42ab      	cmp	r3, r5
     400:	d300      	bcc.n	404 <prvCopyDataFromQueue+0x18>
		{
			pxQueue->pcReadFrom = pxQueue->pcHead;
     402:	60c4      	str	r4, [r0, #12]
     404:	1c0b      	adds	r3, r1, #0
		}
		memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->pcReadFrom, ( size_t ) pxQueue->uxItemSize );
     406:	68c1      	ldr	r1, [r0, #12]
     408:	1c18      	adds	r0, r3, #0
     40a:	4b01      	ldr	r3, [pc, #4]	; (410 <prvCopyDataFromQueue+0x24>)
     40c:	4798      	blx	r3
	}
}
     40e:	bd38      	pop	{r3, r4, r5, pc}
     410:	000064ef 	.word	0x000064ef

00000414 <prvUnlockQueue>:
/*-----------------------------------------------------------*/

static void prvUnlockQueue( xQUEUE *pxQueue )
{
     414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     416:	1c04      	adds	r4, r0, #0

	/* The lock counts contains the number of extra data items placed or
	removed from the queue while the queue was locked.  When a queue is
	locked items can be added or removed, but the event lists cannot be
	updated. */
	taskENTER_CRITICAL();
     418:	4b21      	ldr	r3, [pc, #132]	; (4a0 <prvUnlockQueue+0x8c>)
     41a:	4798      	blx	r3
	{
		/* See if data was added to the queue while it was locked. */
		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
     41c:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     41e:	2b00      	cmp	r3, #0
     420:	dd16      	ble.n	450 <prvUnlockQueue+0x3c>
			}
			#else /* configUSE_QUEUE_SETS */
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     422:	6a63      	ldr	r3, [r4, #36]	; 0x24
     424:	2b00      	cmp	r3, #0
     426:	d104      	bne.n	432 <prvUnlockQueue+0x1e>
     428:	e012      	b.n	450 <prvUnlockQueue+0x3c>
     42a:	6a63      	ldr	r3, [r4, #36]	; 0x24
     42c:	2b00      	cmp	r3, #0
     42e:	d104      	bne.n	43a <prvUnlockQueue+0x26>
     430:	e00e      	b.n	450 <prvUnlockQueue+0x3c>
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     432:	1c25      	adds	r5, r4, #0
     434:	3524      	adds	r5, #36	; 0x24
     436:	4f1b      	ldr	r7, [pc, #108]	; (4a4 <prvUnlockQueue+0x90>)
					{
						/* The task waiting has a higher priority so record that a
						context	switch is required. */
						vTaskMissedYield();
     438:	4e1b      	ldr	r6, [pc, #108]	; (4a8 <prvUnlockQueue+0x94>)
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     43a:	1c28      	adds	r0, r5, #0
     43c:	47b8      	blx	r7
     43e:	2800      	cmp	r0, #0
     440:	d000      	beq.n	444 <prvUnlockQueue+0x30>
					{
						/* The task waiting has a higher priority so record that a
						context	switch is required. */
						vTaskMissedYield();
     442:	47b0      	blx	r6
					break;
				}
			}
			#endif /* configUSE_QUEUE_SETS */

			--( pxQueue->xTxLock );
     444:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     446:	3b01      	subs	r3, #1
     448:	64a3      	str	r3, [r4, #72]	; 0x48
	locked items can be added or removed, but the event lists cannot be
	updated. */
	taskENTER_CRITICAL();
	{
		/* See if data was added to the queue while it was locked. */
		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
     44a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     44c:	2b00      	cmp	r3, #0
     44e:	dcec      	bgt.n	42a <prvUnlockQueue+0x16>
			#endif /* configUSE_QUEUE_SETS */

			--( pxQueue->xTxLock );
		}

		pxQueue->xTxLock = queueUNLOCKED;
     450:	2301      	movs	r3, #1
     452:	425b      	negs	r3, r3
     454:	64a3      	str	r3, [r4, #72]	; 0x48
	}
	taskEXIT_CRITICAL();
     456:	4b15      	ldr	r3, [pc, #84]	; (4ac <prvUnlockQueue+0x98>)
     458:	4798      	blx	r3

	/* Do the same for the Rx lock. */
	taskENTER_CRITICAL();
     45a:	4b11      	ldr	r3, [pc, #68]	; (4a0 <prvUnlockQueue+0x8c>)
     45c:	4798      	blx	r3
	{
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
     45e:	6c63      	ldr	r3, [r4, #68]	; 0x44
     460:	2b00      	cmp	r3, #0
     462:	dd16      	ble.n	492 <prvUnlockQueue+0x7e>
		{
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     464:	6923      	ldr	r3, [r4, #16]
     466:	2b00      	cmp	r3, #0
     468:	d104      	bne.n	474 <prvUnlockQueue+0x60>
     46a:	e012      	b.n	492 <prvUnlockQueue+0x7e>
     46c:	6923      	ldr	r3, [r4, #16]
     46e:	2b00      	cmp	r3, #0
     470:	d104      	bne.n	47c <prvUnlockQueue+0x68>
     472:	e00e      	b.n	492 <prvUnlockQueue+0x7e>
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     474:	1c25      	adds	r5, r4, #0
     476:	3510      	adds	r5, #16
     478:	4f0a      	ldr	r7, [pc, #40]	; (4a4 <prvUnlockQueue+0x90>)
				{
					vTaskMissedYield();
     47a:	4e0b      	ldr	r6, [pc, #44]	; (4a8 <prvUnlockQueue+0x94>)
	{
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
		{
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     47c:	1c28      	adds	r0, r5, #0
     47e:	47b8      	blx	r7
     480:	2800      	cmp	r0, #0
     482:	d000      	beq.n	486 <prvUnlockQueue+0x72>
				{
					vTaskMissedYield();
     484:	47b0      	blx	r6
				}

				--( pxQueue->xRxLock );
     486:	6c63      	ldr	r3, [r4, #68]	; 0x44
     488:	3b01      	subs	r3, #1
     48a:	6463      	str	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();

	/* Do the same for the Rx lock. */
	taskENTER_CRITICAL();
	{
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
     48c:	6c63      	ldr	r3, [r4, #68]	; 0x44
     48e:	2b00      	cmp	r3, #0
     490:	dcec      	bgt.n	46c <prvUnlockQueue+0x58>
			{
				break;
			}
		}

		pxQueue->xRxLock = queueUNLOCKED;
     492:	2301      	movs	r3, #1
     494:	425b      	negs	r3, r3
     496:	6463      	str	r3, [r4, #68]	; 0x44
	}
	taskEXIT_CRITICAL();
     498:	4b04      	ldr	r3, [pc, #16]	; (4ac <prvUnlockQueue+0x98>)
     49a:	4798      	blx	r3
}
     49c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     49e:	46c0      	nop			; (mov r8, r8)
     4a0:	00001175 	.word	0x00001175
     4a4:	00000f0d 	.word	0x00000f0d
     4a8:	00001019 	.word	0x00001019
     4ac:	0000118d 	.word	0x0000118d

000004b0 <xQueueGenericReset>:
	}														\
	taskEXIT_CRITICAL()
/*-----------------------------------------------------------*/

portBASE_TYPE xQueueGenericReset( xQueueHandle xQueue, portBASE_TYPE xNewQueue )
{
     4b0:	b538      	push	{r3, r4, r5, lr}
xQUEUE *pxQueue;

	pxQueue = ( xQUEUE * ) xQueue;
	configASSERT( pxQueue );
     4b2:	2800      	cmp	r0, #0
     4b4:	d101      	bne.n	4ba <xQueueGenericReset+0xa>
     4b6:	b672      	cpsid	i
     4b8:	e7fe      	b.n	4b8 <xQueueGenericReset+0x8>
     4ba:	1c0d      	adds	r5, r1, #0
     4bc:	1c04      	adds	r4, r0, #0

	taskENTER_CRITICAL();
     4be:	4b15      	ldr	r3, [pc, #84]	; (514 <xQueueGenericReset+0x64>)
     4c0:	4798      	blx	r3
	{
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
     4c2:	6822      	ldr	r2, [r4, #0]
     4c4:	6c21      	ldr	r1, [r4, #64]	; 0x40
     4c6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     4c8:	434b      	muls	r3, r1
     4ca:	18d0      	adds	r0, r2, r3
     4cc:	6060      	str	r0, [r4, #4]
		pxQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
     4ce:	2000      	movs	r0, #0
     4d0:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
     4d2:	60a2      	str	r2, [r4, #8]
		pxQueue->pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( unsigned portBASE_TYPE ) 1U ) * pxQueue->uxItemSize );
     4d4:	1a5b      	subs	r3, r3, r1
     4d6:	18d3      	adds	r3, r2, r3
     4d8:	60e3      	str	r3, [r4, #12]
		pxQueue->xRxLock = queueUNLOCKED;
     4da:	2301      	movs	r3, #1
     4dc:	425b      	negs	r3, r3
     4de:	6463      	str	r3, [r4, #68]	; 0x44
		pxQueue->xTxLock = queueUNLOCKED;
     4e0:	64a3      	str	r3, [r4, #72]	; 0x48

		if( xNewQueue == pdFALSE )
     4e2:	2d00      	cmp	r5, #0
     4e4:	d10b      	bne.n	4fe <xQueueGenericReset+0x4e>
			/* If there are tasks blocked waiting to read from the queue, then
			the tasks will remain blocked as after this function exits the queue
			will still be empty.  If there are tasks blocked waiting to	write to
			the queue, then one should be unblocked as after this function exits
			it will be possible to write to it. */
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     4e6:	6923      	ldr	r3, [r4, #16]
     4e8:	2b00      	cmp	r3, #0
     4ea:	d00f      	beq.n	50c <xQueueGenericReset+0x5c>
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
     4ec:	1c20      	adds	r0, r4, #0
     4ee:	3010      	adds	r0, #16
     4f0:	4b09      	ldr	r3, [pc, #36]	; (518 <xQueueGenericReset+0x68>)
     4f2:	4798      	blx	r3
     4f4:	2801      	cmp	r0, #1
     4f6:	d109      	bne.n	50c <xQueueGenericReset+0x5c>
				{
					portYIELD_WITHIN_API();
     4f8:	4b08      	ldr	r3, [pc, #32]	; (51c <xQueueGenericReset+0x6c>)
     4fa:	4798      	blx	r3
     4fc:	e006      	b.n	50c <xQueueGenericReset+0x5c>
			}
		}
		else
		{
			/* Ensure the event queues start in the correct state. */
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
     4fe:	1c20      	adds	r0, r4, #0
     500:	3010      	adds	r0, #16
     502:	4d07      	ldr	r5, [pc, #28]	; (520 <xQueueGenericReset+0x70>)
     504:	47a8      	blx	r5
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
     506:	1c20      	adds	r0, r4, #0
     508:	3024      	adds	r0, #36	; 0x24
     50a:	47a8      	blx	r5
		}
	}
	taskEXIT_CRITICAL();
     50c:	4b05      	ldr	r3, [pc, #20]	; (524 <xQueueGenericReset+0x74>)
     50e:	4798      	blx	r3

	/* A value is returned for calling semantic consistency with previous
	versions. */
	return pdPASS;
}
     510:	2001      	movs	r0, #1
     512:	bd38      	pop	{r3, r4, r5, pc}
     514:	00001175 	.word	0x00001175
     518:	00000f0d 	.word	0x00000f0d
     51c:	0000115d 	.word	0x0000115d
     520:	00000879 	.word	0x00000879
     524:	0000118d 	.word	0x0000118d

00000528 <xQueueGenericCreate>:
/*-----------------------------------------------------------*/

xQueueHandle xQueueGenericCreate( unsigned portBASE_TYPE uxQueueLength, unsigned portBASE_TYPE uxItemSize, unsigned char ucQueueType )
{
     528:	b570      	push	{r4, r5, r6, lr}
	/* Remove compiler warnings about unused parameters should
	configUSE_TRACE_FACILITY not be set to 1. */
	( void ) ucQueueType;

	/* Allocate the new queue structure. */
	if( uxQueueLength > ( unsigned portBASE_TYPE ) 0 )
     52a:	2800      	cmp	r0, #0
     52c:	d013      	beq.n	556 <xQueueGenericCreate+0x2e>
     52e:	1c0e      	adds	r6, r1, #0
     530:	1c05      	adds	r5, r0, #0
	{
		pxNewQueue = ( xQUEUE * ) pvPortMalloc( sizeof( xQUEUE ) );
     532:	204c      	movs	r0, #76	; 0x4c
     534:	4b0d      	ldr	r3, [pc, #52]	; (56c <xQueueGenericCreate+0x44>)
     536:	4798      	blx	r3
     538:	1e04      	subs	r4, r0, #0
		if( pxNewQueue != NULL )
     53a:	d00c      	beq.n	556 <xQueueGenericCreate+0x2e>
		{
			/* Create the list of pointers to queue items.  The queue is one byte
			longer than asked for to make wrap checking easier/faster. */
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ) + ( size_t ) 1;
     53c:	1c30      	adds	r0, r6, #0
     53e:	4368      	muls	r0, r5
     540:	3001      	adds	r0, #1

			pxNewQueue->pcHead = ( signed char * ) pvPortMalloc( xQueueSizeInBytes );
     542:	4b0a      	ldr	r3, [pc, #40]	; (56c <xQueueGenericCreate+0x44>)
     544:	4798      	blx	r3
     546:	6020      	str	r0, [r4, #0]
			if( pxNewQueue->pcHead != NULL )
     548:	2800      	cmp	r0, #0
     54a:	d106      	bne.n	55a <xQueueGenericCreate+0x32>
				xReturn = pxNewQueue;
			}
			else
			{
				traceQUEUE_CREATE_FAILED( ucQueueType );
				vPortFree( pxNewQueue );
     54c:	1c20      	adds	r0, r4, #0
     54e:	4b08      	ldr	r3, [pc, #32]	; (570 <xQueueGenericCreate+0x48>)
     550:	4798      	blx	r3
     552:	e000      	b.n	556 <xQueueGenericCreate+0x2e>
			}
		}
	}

	configASSERT( xReturn );
     554:	e7fe      	b.n	554 <xQueueGenericCreate+0x2c>
     556:	b672      	cpsid	i
     558:	e7fc      	b.n	554 <xQueueGenericCreate+0x2c>
			pxNewQueue->pcHead = ( signed char * ) pvPortMalloc( xQueueSizeInBytes );
			if( pxNewQueue->pcHead != NULL )
			{
				/* Initialise the queue members as described above where the
				queue type is defined. */
				pxNewQueue->uxLength = uxQueueLength;
     55a:	63e5      	str	r5, [r4, #60]	; 0x3c
				pxNewQueue->uxItemSize = uxItemSize;
     55c:	6426      	str	r6, [r4, #64]	; 0x40
				xQueueGenericReset( pxNewQueue, pdTRUE );
     55e:	1c20      	adds	r0, r4, #0
     560:	2101      	movs	r1, #1
     562:	4b04      	ldr	r3, [pc, #16]	; (574 <xQueueGenericCreate+0x4c>)
     564:	4798      	blx	r3
	}

	configASSERT( xReturn );

	return xReturn;
}
     566:	1c20      	adds	r0, r4, #0
     568:	bd70      	pop	{r4, r5, r6, pc}
     56a:	46c0      	nop			; (mov r8, r8)
     56c:	00001275 	.word	0x00001275
     570:	000012dd 	.word	0x000012dd
     574:	000004b1 	.word	0x000004b1

00000578 <xQueueGenericSend>:

#endif /* configUSE_COUNTING_SEMAPHORES */
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueGenericSend( xQueueHandle xQueue, const void * const pvItemToQueue, portTickType xTicksToWait, portBASE_TYPE xCopyPosition )
{
     578:	b5f0      	push	{r4, r5, r6, r7, lr}
     57a:	4657      	mov	r7, sl
     57c:	b480      	push	{r7}
     57e:	b086      	sub	sp, #24
     580:	9203      	str	r2, [sp, #12]
signed portBASE_TYPE xEntryTimeSet = pdFALSE;
xTimeOutType xTimeOut;
xQUEUE *pxQueue;

	pxQueue = ( xQUEUE * ) xQueue;
	configASSERT( pxQueue );
     582:	2800      	cmp	r0, #0
     584:	d101      	bne.n	58a <xQueueGenericSend+0x12>
     586:	b672      	cpsid	i
     588:	e7fe      	b.n	588 <xQueueGenericSend+0x10>
     58a:	2700      	movs	r7, #0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) ) );
     58c:	2900      	cmp	r1, #0
     58e:	d105      	bne.n	59c <xQueueGenericSend+0x24>
     590:	6c02      	ldr	r2, [r0, #64]	; 0x40
     592:	2a00      	cmp	r2, #0
     594:	d001      	beq.n	59a <xQueueGenericSend+0x22>
     596:	b672      	cpsid	i
     598:	e7fe      	b.n	598 <xQueueGenericSend+0x20>
     59a:	2700      	movs	r7, #0
     59c:	9302      	str	r3, [sp, #8]
     59e:	9101      	str	r1, [sp, #4]
     5a0:	1c04      	adds	r4, r0, #0
	/* This function relaxes the coding standard somewhat to allow return
	statements within the function itself.  This is done in the interest
	of execution time efficiency. */
	for( ;; )
	{
		taskENTER_CRITICAL();
     5a2:	4d33      	ldr	r5, [pc, #204]	; (670 <xQueueGenericSend+0xf8>)
     5a4:	47a8      	blx	r5
		{
			/* Is there room on the queue now?  To be running we must be
			the highest priority task wanting to access the queue. */
			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
     5a6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     5a8:	6be2      	ldr	r2, [r4, #60]	; 0x3c
     5aa:	4293      	cmp	r3, r2
     5ac:	d213      	bcs.n	5d6 <xQueueGenericSend+0x5e>
			{
				traceQUEUE_SEND( pxQueue );
				prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     5ae:	1c20      	adds	r0, r4, #0
     5b0:	9901      	ldr	r1, [sp, #4]
     5b2:	9a02      	ldr	r2, [sp, #8]
     5b4:	4b2f      	ldr	r3, [pc, #188]	; (674 <xQueueGenericSend+0xfc>)
     5b6:	4798      	blx	r3
				}
				#else /* configUSE_QUEUE_SETS */
				{
					/* If there was a task waiting for data to arrive on the
					queue then unblock it now. */
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     5b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
     5ba:	2b00      	cmp	r3, #0
     5bc:	d007      	beq.n	5ce <xQueueGenericSend+0x56>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
     5be:	1c20      	adds	r0, r4, #0
     5c0:	3024      	adds	r0, #36	; 0x24
     5c2:	4b2d      	ldr	r3, [pc, #180]	; (678 <xQueueGenericSend+0x100>)
     5c4:	4798      	blx	r3
     5c6:	2801      	cmp	r0, #1
     5c8:	d101      	bne.n	5ce <xQueueGenericSend+0x56>
						{
							/* The unblocked task has a priority higher than
							our own so yield immediately.  Yes it is ok to do
							this from within the critical section - the kernel
							takes care of that. */
							portYIELD_WITHIN_API();
     5ca:	4b2c      	ldr	r3, [pc, #176]	; (67c <xQueueGenericSend+0x104>)
     5cc:	4798      	blx	r3
						}
					}
				}
				#endif /* configUSE_QUEUE_SETS */

				taskEXIT_CRITICAL();
     5ce:	4b2c      	ldr	r3, [pc, #176]	; (680 <xQueueGenericSend+0x108>)
     5d0:	4798      	blx	r3

				/* Return to the original privilege level before exiting the
				function. */
				return pdPASS;
     5d2:	2001      	movs	r0, #1
     5d4:	e048      	b.n	668 <xQueueGenericSend+0xf0>
			}
			else
			{
				if( xTicksToWait == ( portTickType ) 0 )
     5d6:	9b03      	ldr	r3, [sp, #12]
     5d8:	2b00      	cmp	r3, #0
     5da:	d103      	bne.n	5e4 <xQueueGenericSend+0x6c>
				{
					/* The queue was full and no block time is specified (or
					the block time has expired) so leave now. */
					taskEXIT_CRITICAL();
     5dc:	4b28      	ldr	r3, [pc, #160]	; (680 <xQueueGenericSend+0x108>)
     5de:	4798      	blx	r3

					/* Return to the original privilege level before exiting
					the function. */
					traceQUEUE_SEND_FAILED( pxQueue );
					return errQUEUE_FULL;
     5e0:	2000      	movs	r0, #0
     5e2:	e041      	b.n	668 <xQueueGenericSend+0xf0>
				}
				else if( xEntryTimeSet == pdFALSE )
     5e4:	2f00      	cmp	r7, #0
     5e6:	d103      	bne.n	5f0 <xQueueGenericSend+0x78>
				{
					/* The queue was full and a block time was specified so
					configure the timeout structure. */
					vTaskSetTimeOutState( &xTimeOut );
     5e8:	a804      	add	r0, sp, #16
     5ea:	4b26      	ldr	r3, [pc, #152]	; (684 <xQueueGenericSend+0x10c>)
     5ec:	4798      	blx	r3
					xEntryTimeSet = pdTRUE;
     5ee:	3701      	adds	r7, #1
				}
			}
		}
		taskEXIT_CRITICAL();
     5f0:	4b23      	ldr	r3, [pc, #140]	; (680 <xQueueGenericSend+0x108>)
     5f2:	4798      	blx	r3

		/* Interrupts and other tasks can send to and receive from the queue
		now the critical section has been exited. */

		vTaskSuspendAll();
     5f4:	4b24      	ldr	r3, [pc, #144]	; (688 <xQueueGenericSend+0x110>)
     5f6:	4798      	blx	r3
		prvLockQueue( pxQueue );
     5f8:	4b1d      	ldr	r3, [pc, #116]	; (670 <xQueueGenericSend+0xf8>)
     5fa:	4798      	blx	r3
     5fc:	6c63      	ldr	r3, [r4, #68]	; 0x44
     5fe:	3301      	adds	r3, #1
     600:	d101      	bne.n	606 <xQueueGenericSend+0x8e>
     602:	2300      	movs	r3, #0
     604:	6463      	str	r3, [r4, #68]	; 0x44
     606:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     608:	3301      	adds	r3, #1
     60a:	d101      	bne.n	610 <xQueueGenericSend+0x98>
     60c:	2300      	movs	r3, #0
     60e:	64a3      	str	r3, [r4, #72]	; 0x48
     610:	4b1b      	ldr	r3, [pc, #108]	; (680 <xQueueGenericSend+0x108>)
     612:	4798      	blx	r3

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
     614:	a804      	add	r0, sp, #16
     616:	a903      	add	r1, sp, #12
     618:	4b1c      	ldr	r3, [pc, #112]	; (68c <xQueueGenericSend+0x114>)
     61a:	4798      	blx	r3
     61c:	2800      	cmp	r0, #0
     61e:	d11d      	bne.n	65c <xQueueGenericSend+0xe4>

static signed portBASE_TYPE prvIsQueueFull( const xQUEUE *pxQueue )
{
signed portBASE_TYPE xReturn;

	taskENTER_CRITICAL();
     620:	4b13      	ldr	r3, [pc, #76]	; (670 <xQueueGenericSend+0xf8>)
     622:	4798      	blx	r3
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
     624:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     626:	469a      	mov	sl, r3
     628:	6be6      	ldr	r6, [r4, #60]	; 0x3c
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
     62a:	4b15      	ldr	r3, [pc, #84]	; (680 <xQueueGenericSend+0x108>)
     62c:	4798      	blx	r3
		prvLockQueue( pxQueue );

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
		{
			if( prvIsQueueFull( pxQueue ) != pdFALSE )
     62e:	45b2      	cmp	sl, r6
     630:	d10e      	bne.n	650 <xQueueGenericSend+0xd8>
			{
				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
     632:	1c20      	adds	r0, r4, #0
     634:	3010      	adds	r0, #16
     636:	9903      	ldr	r1, [sp, #12]
     638:	4b15      	ldr	r3, [pc, #84]	; (690 <xQueueGenericSend+0x118>)
     63a:	4798      	blx	r3
				/* Unlocking the queue means queue events can effect the
				event list.  It is possible	that interrupts occurring now
				remove this task from the event	list again - but as the
				scheduler is suspended the task will go onto the pending
				ready last instead of the actual ready list. */
				prvUnlockQueue( pxQueue );
     63c:	1c20      	adds	r0, r4, #0
     63e:	4b15      	ldr	r3, [pc, #84]	; (694 <xQueueGenericSend+0x11c>)
     640:	4798      	blx	r3
				/* Resuming the scheduler will move tasks from the pending
				ready list into the ready list - so it is feasible that this
				task is already in a ready list before it yields - in which
				case the yield will not cause a context switch unless there
				is also a higher priority task in the pending ready list. */
				if( xTaskResumeAll() == pdFALSE )
     642:	4b15      	ldr	r3, [pc, #84]	; (698 <xQueueGenericSend+0x120>)
     644:	4798      	blx	r3
     646:	2800      	cmp	r0, #0
     648:	d1ac      	bne.n	5a4 <xQueueGenericSend+0x2c>
				{
					portYIELD_WITHIN_API();
     64a:	4b0c      	ldr	r3, [pc, #48]	; (67c <xQueueGenericSend+0x104>)
     64c:	4798      	blx	r3
     64e:	e7a9      	b.n	5a4 <xQueueGenericSend+0x2c>
				}
			}
			else
			{
				/* Try again. */
				prvUnlockQueue( pxQueue );
     650:	1c20      	adds	r0, r4, #0
     652:	4b10      	ldr	r3, [pc, #64]	; (694 <xQueueGenericSend+0x11c>)
     654:	4798      	blx	r3
				( void ) xTaskResumeAll();
     656:	4b10      	ldr	r3, [pc, #64]	; (698 <xQueueGenericSend+0x120>)
     658:	4798      	blx	r3
     65a:	e7a3      	b.n	5a4 <xQueueGenericSend+0x2c>
			}
		}
		else
		{
			/* The timeout has expired. */
			prvUnlockQueue( pxQueue );
     65c:	1c20      	adds	r0, r4, #0
     65e:	4b0d      	ldr	r3, [pc, #52]	; (694 <xQueueGenericSend+0x11c>)
     660:	4798      	blx	r3
			( void ) xTaskResumeAll();
     662:	4b0d      	ldr	r3, [pc, #52]	; (698 <xQueueGenericSend+0x120>)
     664:	4798      	blx	r3

			/* Return to the original privilege level before exiting the
			function. */
			traceQUEUE_SEND_FAILED( pxQueue );
			return errQUEUE_FULL;
     666:	2000      	movs	r0, #0
		}
	}
}
     668:	b006      	add	sp, #24
     66a:	bc04      	pop	{r2}
     66c:	4692      	mov	sl, r2
     66e:	bdf0      	pop	{r4, r5, r6, r7, pc}
     670:	00001175 	.word	0x00001175
     674:	0000037d 	.word	0x0000037d
     678:	00000f0d 	.word	0x00000f0d
     67c:	0000115d 	.word	0x0000115d
     680:	0000118d 	.word	0x0000118d
     684:	00000f89 	.word	0x00000f89
     688:	00000bb5 	.word	0x00000bb5
     68c:	00000fa9 	.word	0x00000fa9
     690:	00000ecd 	.word	0x00000ecd
     694:	00000415 	.word	0x00000415
     698:	00000ce1 	.word	0x00000ce1

0000069c <xQueueGenericSendFromISR>:

#endif /* configUSE_ALTERNATIVE_API */
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueGenericSendFromISR( xQueueHandle xQueue, const void * const pvItemToQueue, signed portBASE_TYPE *pxHigherPriorityTaskWoken, portBASE_TYPE xCopyPosition )
{
     69c:	b570      	push	{r4, r5, r6, lr}
signed portBASE_TYPE xReturn;
unsigned portBASE_TYPE uxSavedInterruptStatus;
xQUEUE *pxQueue;

	pxQueue = ( xQUEUE * ) xQueue;
	configASSERT( pxQueue );
     69e:	2800      	cmp	r0, #0
     6a0:	d101      	bne.n	6a6 <xQueueGenericSendFromISR+0xa>
     6a2:	b672      	cpsid	i
     6a4:	e7fe      	b.n	6a4 <xQueueGenericSendFromISR+0x8>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) ) );
     6a6:	2900      	cmp	r1, #0
     6a8:	d104      	bne.n	6b4 <xQueueGenericSendFromISR+0x18>
     6aa:	6c04      	ldr	r4, [r0, #64]	; 0x40
     6ac:	2c00      	cmp	r4, #0
     6ae:	d001      	beq.n	6b4 <xQueueGenericSendFromISR+0x18>
     6b0:	b672      	cpsid	i
     6b2:	e7fe      	b.n	6b2 <xQueueGenericSendFromISR+0x16>
	/* Similar to xQueueGenericSend, except we don't block if there is no room
	in the queue.  Also we don't directly wake a task that was blocked on a
	queue read, instead we return a flag to say whether a context switch is
	required or not (i.e. has a task with a higher priority than us been woken
	by this	post). */
	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
     6b4:	b672      	cpsid	i
	{
		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
     6b6:	6b84      	ldr	r4, [r0, #56]	; 0x38
			xReturn = pdPASS;
		}
		else
		{
			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
			xReturn = errQUEUE_FULL;
     6b8:	2500      	movs	r5, #0
	queue read, instead we return a flag to say whether a context switch is
	required or not (i.e. has a task with a higher priority than us been woken
	by this	post). */
	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
	{
		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
     6ba:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
     6bc:	42b4      	cmp	r4, r6
     6be:	d21c      	bcs.n	6fa <xQueueGenericSendFromISR+0x5e>
     6c0:	1c16      	adds	r6, r2, #0
     6c2:	1c04      	adds	r4, r0, #0
		{
			traceQUEUE_SEND_FROM_ISR( pxQueue );

			prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     6c4:	1c1a      	adds	r2, r3, #0
     6c6:	4b0e      	ldr	r3, [pc, #56]	; (700 <xQueueGenericSendFromISR+0x64>)
     6c8:	4798      	blx	r3

			/* If the queue is locked we do not alter the event list.  This will
			be done when the queue is unlocked later. */
			if( pxQueue->xTxLock == queueUNLOCKED )
     6ca:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     6cc:	3301      	adds	r3, #1
     6ce:	d10e      	bne.n	6ee <xQueueGenericSendFromISR+0x52>
						}
					}
				}
				#else /* configUSE_QUEUE_SETS */
				{
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     6d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
				/* Increment the lock count so the task that unlocks the queue
				knows that data was posted while it was locked. */
				++( pxQueue->xTxLock );
			}

			xReturn = pdPASS;
     6d2:	3501      	adds	r5, #1
						}
					}
				}
				#else /* configUSE_QUEUE_SETS */
				{
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     6d4:	2b00      	cmp	r3, #0
     6d6:	d010      	beq.n	6fa <xQueueGenericSendFromISR+0x5e>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     6d8:	1c20      	adds	r0, r4, #0
     6da:	3024      	adds	r0, #36	; 0x24
     6dc:	4b09      	ldr	r3, [pc, #36]	; (704 <xQueueGenericSendFromISR+0x68>)
     6de:	4798      	blx	r3
     6e0:	2800      	cmp	r0, #0
     6e2:	d00a      	beq.n	6fa <xQueueGenericSendFromISR+0x5e>
						{
							/* The task waiting has a higher priority so record that a
							context	switch is required. */
							if( pxHigherPriorityTaskWoken != NULL )
     6e4:	2e00      	cmp	r6, #0
     6e6:	d007      	beq.n	6f8 <xQueueGenericSendFromISR+0x5c>
							{
								*pxHigherPriorityTaskWoken = pdTRUE;
     6e8:	2301      	movs	r3, #1
     6ea:	6033      	str	r3, [r6, #0]
     6ec:	e005      	b.n	6fa <xQueueGenericSendFromISR+0x5e>
			}
			else
			{
				/* Increment the lock count so the task that unlocks the queue
				knows that data was posted while it was locked. */
				++( pxQueue->xTxLock );
     6ee:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     6f0:	3301      	adds	r3, #1
     6f2:	64a3      	str	r3, [r4, #72]	; 0x48
			}

			xReturn = pdPASS;
     6f4:	2501      	movs	r5, #1
     6f6:	e000      	b.n	6fa <xQueueGenericSendFromISR+0x5e>
     6f8:	2501      	movs	r5, #1
		{
			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
			xReturn = errQUEUE_FULL;
		}
	}
	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
     6fa:	b662      	cpsie	i

	return xReturn;
}
     6fc:	1c28      	adds	r0, r5, #0
     6fe:	bd70      	pop	{r4, r5, r6, pc}
     700:	0000037d 	.word	0x0000037d
     704:	00000f0d 	.word	0x00000f0d

00000708 <xQueueGenericReceive>:
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueGenericReceive( xQueueHandle xQueue, void * const pvBuffer, portTickType xTicksToWait, portBASE_TYPE xJustPeeking )
{
     708:	b5f0      	push	{r4, r5, r6, r7, lr}
     70a:	464f      	mov	r7, r9
     70c:	b480      	push	{r7}
     70e:	b084      	sub	sp, #16
     710:	9201      	str	r2, [sp, #4]
xTimeOutType xTimeOut;
signed char *pcOriginalReadPosition;
xQUEUE *pxQueue;

	pxQueue = ( xQUEUE * ) xQueue;
	configASSERT( pxQueue );
     712:	2800      	cmp	r0, #0
     714:	d101      	bne.n	71a <xQueueGenericReceive+0x12>
     716:	b672      	cpsid	i
     718:	e7fe      	b.n	718 <xQueueGenericReceive+0x10>
     71a:	2700      	movs	r7, #0
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) ) );
     71c:	2900      	cmp	r1, #0
     71e:	d105      	bne.n	72c <xQueueGenericReceive+0x24>
     720:	6c02      	ldr	r2, [r0, #64]	; 0x40
     722:	2a00      	cmp	r2, #0
     724:	d001      	beq.n	72a <xQueueGenericReceive+0x22>
     726:	b672      	cpsid	i
     728:	e7fe      	b.n	728 <xQueueGenericReceive+0x20>
     72a:	2700      	movs	r7, #0
     72c:	1c1d      	adds	r5, r3, #0
     72e:	9100      	str	r1, [sp, #0]
     730:	1c04      	adds	r4, r0, #0
	statements within the function itself.  This is done in the interest
	of execution time efficiency. */

	for( ;; )
	{
		taskENTER_CRITICAL();
     732:	4e44      	ldr	r6, [pc, #272]	; (844 <xQueueGenericReceive+0x13c>)
     734:	47b0      	blx	r6
		{
			/* Is there data in the queue now?  To be running we must be
			the highest priority task wanting to access the queue. */
			if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
     736:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     738:	2b00      	cmp	r3, #0
     73a:	d02b      	beq.n	794 <xQueueGenericReceive+0x8c>
			{
				/* Remember our read position in case we are just peeking. */
				pcOriginalReadPosition = pxQueue->pcReadFrom;
     73c:	68e7      	ldr	r7, [r4, #12]

				prvCopyDataFromQueue( pxQueue, pvBuffer );
     73e:	1c20      	adds	r0, r4, #0
     740:	9900      	ldr	r1, [sp, #0]
     742:	4b41      	ldr	r3, [pc, #260]	; (848 <xQueueGenericReceive+0x140>)
     744:	4798      	blx	r3

				if( xJustPeeking == pdFALSE )
     746:	2d00      	cmp	r5, #0
     748:	d114      	bne.n	774 <xQueueGenericReceive+0x6c>
				{
					traceQUEUE_RECEIVE( pxQueue );

					/* We are actually removing data. */
					--( pxQueue->uxMessagesWaiting );
     74a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     74c:	3b01      	subs	r3, #1
     74e:	63a3      	str	r3, [r4, #56]	; 0x38

					#if ( configUSE_MUTEXES == 1 )
					{
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     750:	6823      	ldr	r3, [r4, #0]
     752:	2b00      	cmp	r3, #0
     754:	d102      	bne.n	75c <xQueueGenericReceive+0x54>
						{
							/* Record the information required to implement
							priority inheritance should it become necessary. */
							pxQueue->pxMutexHolder = xTaskGetCurrentTaskHandle();
     756:	4b3d      	ldr	r3, [pc, #244]	; (84c <xQueueGenericReceive+0x144>)
     758:	4798      	blx	r3
     75a:	6060      	str	r0, [r4, #4]
						}
					}
					#endif

					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     75c:	6923      	ldr	r3, [r4, #16]
     75e:	2b00      	cmp	r3, #0
     760:	d014      	beq.n	78c <xQueueGenericReceive+0x84>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
     762:	1c20      	adds	r0, r4, #0
     764:	3010      	adds	r0, #16
     766:	4b3a      	ldr	r3, [pc, #232]	; (850 <xQueueGenericReceive+0x148>)
     768:	4798      	blx	r3
     76a:	2801      	cmp	r0, #1
     76c:	d10e      	bne.n	78c <xQueueGenericReceive+0x84>
						{
							portYIELD_WITHIN_API();
     76e:	4b39      	ldr	r3, [pc, #228]	; (854 <xQueueGenericReceive+0x14c>)
     770:	4798      	blx	r3
     772:	e00b      	b.n	78c <xQueueGenericReceive+0x84>
				{
					traceQUEUE_PEEK( pxQueue );

					/* The data is not being removed, so reset the read
					pointer. */
					pxQueue->pcReadFrom = pcOriginalReadPosition;
     774:	60e7      	str	r7, [r4, #12]

					/* The data is being left in the queue, so see if there are
					any other tasks waiting for the data. */
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     776:	6a63      	ldr	r3, [r4, #36]	; 0x24
     778:	2b00      	cmp	r3, #0
     77a:	d007      	beq.n	78c <xQueueGenericReceive+0x84>
					{
						/* Tasks that are removed from the event list will get added to
						the pending ready list as the scheduler is still suspended. */
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     77c:	1c20      	adds	r0, r4, #0
     77e:	3024      	adds	r0, #36	; 0x24
     780:	4b33      	ldr	r3, [pc, #204]	; (850 <xQueueGenericReceive+0x148>)
     782:	4798      	blx	r3
     784:	2800      	cmp	r0, #0
     786:	d001      	beq.n	78c <xQueueGenericReceive+0x84>
						{
							/* The task waiting has a higher priority than this task. */
							portYIELD_WITHIN_API();
     788:	4b32      	ldr	r3, [pc, #200]	; (854 <xQueueGenericReceive+0x14c>)
     78a:	4798      	blx	r3
						}
					}
				}

				taskEXIT_CRITICAL();
     78c:	4b32      	ldr	r3, [pc, #200]	; (858 <xQueueGenericReceive+0x150>)
     78e:	4798      	blx	r3
				return pdPASS;
     790:	2001      	movs	r0, #1
     792:	e052      	b.n	83a <xQueueGenericReceive+0x132>
			}
			else
			{
				if( xTicksToWait == ( portTickType ) 0 )
     794:	9b01      	ldr	r3, [sp, #4]
     796:	2b00      	cmp	r3, #0
     798:	d103      	bne.n	7a2 <xQueueGenericReceive+0x9a>
				{
					/* The queue was empty and no block time is specified (or
					the block time has expired) so leave now. */
					taskEXIT_CRITICAL();
     79a:	4b2f      	ldr	r3, [pc, #188]	; (858 <xQueueGenericReceive+0x150>)
     79c:	4798      	blx	r3
					traceQUEUE_RECEIVE_FAILED( pxQueue );
					return errQUEUE_EMPTY;
     79e:	2000      	movs	r0, #0
     7a0:	e04b      	b.n	83a <xQueueGenericReceive+0x132>
				}
				else if( xEntryTimeSet == pdFALSE )
     7a2:	2f00      	cmp	r7, #0
     7a4:	d103      	bne.n	7ae <xQueueGenericReceive+0xa6>
				{
					/* The queue was empty and a block time was specified so
					configure the timeout structure. */
					vTaskSetTimeOutState( &xTimeOut );
     7a6:	a802      	add	r0, sp, #8
     7a8:	4b2c      	ldr	r3, [pc, #176]	; (85c <xQueueGenericReceive+0x154>)
     7aa:	4798      	blx	r3
					xEntryTimeSet = pdTRUE;
     7ac:	3701      	adds	r7, #1
				}
			}
		}
		taskEXIT_CRITICAL();
     7ae:	4b2a      	ldr	r3, [pc, #168]	; (858 <xQueueGenericReceive+0x150>)
     7b0:	4798      	blx	r3

		/* Interrupts and other tasks can send to and receive from the queue
		now the critical section has been exited. */

		vTaskSuspendAll();
     7b2:	4b2b      	ldr	r3, [pc, #172]	; (860 <xQueueGenericReceive+0x158>)
     7b4:	4798      	blx	r3
		prvLockQueue( pxQueue );
     7b6:	4b23      	ldr	r3, [pc, #140]	; (844 <xQueueGenericReceive+0x13c>)
     7b8:	4798      	blx	r3
     7ba:	6c63      	ldr	r3, [r4, #68]	; 0x44
     7bc:	3301      	adds	r3, #1
     7be:	d101      	bne.n	7c4 <xQueueGenericReceive+0xbc>
     7c0:	2300      	movs	r3, #0
     7c2:	6463      	str	r3, [r4, #68]	; 0x44
     7c4:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     7c6:	3301      	adds	r3, #1
     7c8:	d101      	bne.n	7ce <xQueueGenericReceive+0xc6>
     7ca:	2300      	movs	r3, #0
     7cc:	64a3      	str	r3, [r4, #72]	; 0x48
     7ce:	4b22      	ldr	r3, [pc, #136]	; (858 <xQueueGenericReceive+0x150>)
     7d0:	4798      	blx	r3

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
     7d2:	a802      	add	r0, sp, #8
     7d4:	a901      	add	r1, sp, #4
     7d6:	4b23      	ldr	r3, [pc, #140]	; (864 <xQueueGenericReceive+0x15c>)
     7d8:	4798      	blx	r3
     7da:	2800      	cmp	r0, #0
     7dc:	d127      	bne.n	82e <xQueueGenericReceive+0x126>

static signed portBASE_TYPE prvIsQueueEmpty( const xQUEUE *pxQueue )
{
signed portBASE_TYPE xReturn;

	taskENTER_CRITICAL();
     7de:	4b19      	ldr	r3, [pc, #100]	; (844 <xQueueGenericReceive+0x13c>)
     7e0:	4798      	blx	r3
	{
		if( pxQueue->uxMessagesWaiting == 0 )
     7e2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     7e4:	4699      	mov	r9, r3
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
     7e6:	4b1c      	ldr	r3, [pc, #112]	; (858 <xQueueGenericReceive+0x150>)
     7e8:	4798      	blx	r3
		prvLockQueue( pxQueue );

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
		{
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
     7ea:	464b      	mov	r3, r9
     7ec:	2b00      	cmp	r3, #0
     7ee:	d118      	bne.n	822 <xQueueGenericReceive+0x11a>
			{
				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );

				#if ( configUSE_MUTEXES == 1 )
				{
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     7f0:	6823      	ldr	r3, [r4, #0]
     7f2:	2b00      	cmp	r3, #0
     7f4:	d106      	bne.n	804 <xQueueGenericReceive+0xfc>
					{
						portENTER_CRITICAL();
     7f6:	4b13      	ldr	r3, [pc, #76]	; (844 <xQueueGenericReceive+0x13c>)
     7f8:	4798      	blx	r3
						{
							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
     7fa:	6860      	ldr	r0, [r4, #4]
     7fc:	4b1a      	ldr	r3, [pc, #104]	; (868 <xQueueGenericReceive+0x160>)
     7fe:	4798      	blx	r3
						}
						portEXIT_CRITICAL();
     800:	4b15      	ldr	r3, [pc, #84]	; (858 <xQueueGenericReceive+0x150>)
     802:	4798      	blx	r3
					}
				}
				#endif

				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
     804:	1c20      	adds	r0, r4, #0
     806:	3024      	adds	r0, #36	; 0x24
     808:	9901      	ldr	r1, [sp, #4]
     80a:	4b18      	ldr	r3, [pc, #96]	; (86c <xQueueGenericReceive+0x164>)
     80c:	4798      	blx	r3
				prvUnlockQueue( pxQueue );
     80e:	1c20      	adds	r0, r4, #0
     810:	4b17      	ldr	r3, [pc, #92]	; (870 <xQueueGenericReceive+0x168>)
     812:	4798      	blx	r3
				if( xTaskResumeAll() == pdFALSE )
     814:	4b17      	ldr	r3, [pc, #92]	; (874 <xQueueGenericReceive+0x16c>)
     816:	4798      	blx	r3
     818:	2800      	cmp	r0, #0
     81a:	d18b      	bne.n	734 <xQueueGenericReceive+0x2c>
				{
					portYIELD_WITHIN_API();
     81c:	4b0d      	ldr	r3, [pc, #52]	; (854 <xQueueGenericReceive+0x14c>)
     81e:	4798      	blx	r3
     820:	e788      	b.n	734 <xQueueGenericReceive+0x2c>
				}
			}
			else
			{
				/* Try again. */
				prvUnlockQueue( pxQueue );
     822:	1c20      	adds	r0, r4, #0
     824:	4b12      	ldr	r3, [pc, #72]	; (870 <xQueueGenericReceive+0x168>)
     826:	4798      	blx	r3
				( void ) xTaskResumeAll();
     828:	4b12      	ldr	r3, [pc, #72]	; (874 <xQueueGenericReceive+0x16c>)
     82a:	4798      	blx	r3
     82c:	e782      	b.n	734 <xQueueGenericReceive+0x2c>
			}
		}
		else
		{
			prvUnlockQueue( pxQueue );
     82e:	1c20      	adds	r0, r4, #0
     830:	4b0f      	ldr	r3, [pc, #60]	; (870 <xQueueGenericReceive+0x168>)
     832:	4798      	blx	r3
			( void ) xTaskResumeAll();
     834:	4b0f      	ldr	r3, [pc, #60]	; (874 <xQueueGenericReceive+0x16c>)
     836:	4798      	blx	r3
			traceQUEUE_RECEIVE_FAILED( pxQueue );
			return errQUEUE_EMPTY;
     838:	2000      	movs	r0, #0
		}
	}
}
     83a:	b004      	add	sp, #16
     83c:	bc04      	pop	{r2}
     83e:	4691      	mov	r9, r2
     840:	bdf0      	pop	{r4, r5, r6, r7, pc}
     842:	46c0      	nop			; (mov r8, r8)
     844:	00001175 	.word	0x00001175
     848:	000003ed 	.word	0x000003ed
     84c:	00001025 	.word	0x00001025
     850:	00000f0d 	.word	0x00000f0d
     854:	0000115d 	.word	0x0000115d
     858:	0000118d 	.word	0x0000118d
     85c:	00000f89 	.word	0x00000f89
     860:	00000bb5 	.word	0x00000bb5
     864:	00000fa9 	.word	0x00000fa9
     868:	00001031 	.word	0x00001031
     86c:	00000ecd 	.word	0x00000ecd
     870:	00000415 	.word	0x00000415
     874:	00000ce1 	.word	0x00000ce1

00000878 <vListInitialise>:
void vListInitialise( xList *pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( xListItem * ) &( pxList->xListEnd );
     878:	1c03      	adds	r3, r0, #0
     87a:	3308      	adds	r3, #8
     87c:	6043      	str	r3, [r0, #4]

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
     87e:	2201      	movs	r2, #1
     880:	4252      	negs	r2, r2
     882:	6082      	str	r2, [r0, #8]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( xListItem * ) &( pxList->xListEnd );
     884:	60c3      	str	r3, [r0, #12]
	pxList->xListEnd.pxPrevious = ( xListItem * ) &( pxList->xListEnd );
     886:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( unsigned portBASE_TYPE ) 0U;
     888:	2300      	movs	r3, #0
     88a:	6003      	str	r3, [r0, #0]
}
     88c:	4770      	bx	lr
     88e:	46c0      	nop			; (mov r8, r8)

00000890 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( xListItem *pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
     890:	2300      	movs	r3, #0
     892:	6103      	str	r3, [r0, #16]
}
     894:	4770      	bx	lr
     896:	46c0      	nop			; (mov r8, r8)

00000898 <vListInsertEnd>:

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	pvListGetOwnerOfNextEntry.  This means it has to be the item pointed to by
	the pxIndex member. */
	pxIndex = pxList->pxIndex;
     898:	6843      	ldr	r3, [r0, #4]

	pxNewListItem->pxNext = pxIndex->pxNext;
     89a:	685a      	ldr	r2, [r3, #4]
     89c:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxPrevious = pxList->pxIndex;
     89e:	6842      	ldr	r2, [r0, #4]
     8a0:	608a      	str	r2, [r1, #8]
	pxIndex->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
     8a2:	685a      	ldr	r2, [r3, #4]
     8a4:	6091      	str	r1, [r2, #8]
	pxIndex->pxNext = ( volatile xListItem * ) pxNewListItem;
     8a6:	6059      	str	r1, [r3, #4]
	pxList->pxIndex = ( volatile xListItem * ) pxNewListItem;
     8a8:	6041      	str	r1, [r0, #4]

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;
     8aa:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
     8ac:	6803      	ldr	r3, [r0, #0]
     8ae:	3301      	adds	r3, #1
     8b0:	6003      	str	r3, [r0, #0]
}
     8b2:	4770      	bx	lr

000008b4 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( xList *pxList, xListItem *pxNewListItem )
{
     8b4:	b510      	push	{r4, lr}
volatile xListItem *pxIterator;
portTickType xValueOfInsertion;

	/* Insert the new list item into the list, sorted in ulListItem order. */
	xValueOfInsertion = pxNewListItem->xItemValue;
     8b6:	680c      	ldr	r4, [r1, #0]
	are stored in ready lists (all of which have the same ulListItem value)
	get an equal share of the CPU.  However, if the xItemValue is the same as
	the back marker the iteration loop below will not end.  This means we need
	to guard against this by checking the value first and modifying the
	algorithm slightly if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
     8b8:	1c63      	adds	r3, r4, #1
     8ba:	d101      	bne.n	8c0 <vListInsert+0xc>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
     8bc:	6903      	ldr	r3, [r0, #16]
     8be:	e00a      	b.n	8d6 <vListInsert+0x22>
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		See http://www.freertos.org/FAQHelp.html for more tips.
		**********************************************************************/

		for( pxIterator = ( xListItem * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
     8c0:	1c03      	adds	r3, r0, #0
     8c2:	3308      	adds	r3, #8
     8c4:	68c2      	ldr	r2, [r0, #12]
     8c6:	6812      	ldr	r2, [r2, #0]
     8c8:	4294      	cmp	r4, r2
     8ca:	d304      	bcc.n	8d6 <vListInsert+0x22>
     8cc:	685b      	ldr	r3, [r3, #4]
     8ce:	685a      	ldr	r2, [r3, #4]
     8d0:	6812      	ldr	r2, [r2, #0]
     8d2:	4294      	cmp	r4, r2
     8d4:	d2fa      	bcs.n	8cc <vListInsert+0x18>
			/* There is nothing to do here, we are just iterating to the
			wanted insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
     8d6:	685a      	ldr	r2, [r3, #4]
     8d8:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
     8da:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
     8dc:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = ( volatile xListItem * ) pxNewListItem;
     8de:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;
     8e0:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
     8e2:	6803      	ldr	r3, [r0, #0]
     8e4:	3301      	adds	r3, #1
     8e6:	6003      	str	r3, [r0, #0]
}
     8e8:	bd10      	pop	{r4, pc}
     8ea:	46c0      	nop			; (mov r8, r8)

000008ec <uxListRemove>:

unsigned portBASE_TYPE uxListRemove( xListItem *pxItemToRemove )
{
xList * pxList;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
     8ec:	6843      	ldr	r3, [r0, #4]
     8ee:	6882      	ldr	r2, [r0, #8]
     8f0:	609a      	str	r2, [r3, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
     8f2:	6883      	ldr	r3, [r0, #8]
     8f4:	6842      	ldr	r2, [r0, #4]
     8f6:	605a      	str	r2, [r3, #4]

	/* The list item knows which list it is in.  Obtain the list from the list
	item. */
	pxList = ( xList * ) pxItemToRemove->pvContainer;
     8f8:	6903      	ldr	r3, [r0, #16]

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
     8fa:	685a      	ldr	r2, [r3, #4]
     8fc:	4282      	cmp	r2, r0
     8fe:	d101      	bne.n	904 <uxListRemove+0x18>
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
     900:	6882      	ldr	r2, [r0, #8]
     902:	605a      	str	r2, [r3, #4]
	}

	pxItemToRemove->pvContainer = NULL;
     904:	2200      	movs	r2, #0
     906:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
     908:	681a      	ldr	r2, [r3, #0]
     90a:	3a01      	subs	r2, #1
     90c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
     90e:	6818      	ldr	r0, [r3, #0]
}
     910:	4770      	bx	lr
     912:	46c0      	nop			; (mov r8, r8)

00000914 <prvIdleTask>:
				}
				xTaskResumeAll();
			}
		}
		#endif /* configUSE_TICKLESS_IDLE */
	}
     914:	e7fe      	b.n	914 <prvIdleTask>
     916:	46c0      	nop			; (mov r8, r8)

00000918 <prvAddCurrentTaskToDelayedList>:
	#endif /* vTaskDelete */
}
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( portTickType xTimeToWake )
{
     918:	b510      	push	{r4, lr}
     91a:	1e04      	subs	r4, r0, #0
	/* The list item will be inserted in wake time order. */
	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
     91c:	4b0e      	ldr	r3, [pc, #56]	; (958 <prvAddCurrentTaskToDelayedList+0x40>)
     91e:	681b      	ldr	r3, [r3, #0]
     920:	6058      	str	r0, [r3, #4]

	if( xTimeToWake < xTickCount )
     922:	4b0e      	ldr	r3, [pc, #56]	; (95c <prvAddCurrentTaskToDelayedList+0x44>)
     924:	681b      	ldr	r3, [r3, #0]
     926:	429c      	cmp	r4, r3
     928:	d207      	bcs.n	93a <prvAddCurrentTaskToDelayedList+0x22>
	{
		/* Wake time has overflowed.  Place this item in the overflow list. */
		vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
     92a:	4b0d      	ldr	r3, [pc, #52]	; (960 <prvAddCurrentTaskToDelayedList+0x48>)
     92c:	6818      	ldr	r0, [r3, #0]
     92e:	4b0a      	ldr	r3, [pc, #40]	; (958 <prvAddCurrentTaskToDelayedList+0x40>)
     930:	6819      	ldr	r1, [r3, #0]
     932:	3104      	adds	r1, #4
     934:	4b0b      	ldr	r3, [pc, #44]	; (964 <prvAddCurrentTaskToDelayedList+0x4c>)
     936:	4798      	blx	r3
     938:	e00c      	b.n	954 <prvAddCurrentTaskToDelayedList+0x3c>
	}
	else
	{
		/* The wake time has not overflowed, so we can use the current block list. */
		vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
     93a:	4b0b      	ldr	r3, [pc, #44]	; (968 <prvAddCurrentTaskToDelayedList+0x50>)
     93c:	6818      	ldr	r0, [r3, #0]
     93e:	4b06      	ldr	r3, [pc, #24]	; (958 <prvAddCurrentTaskToDelayedList+0x40>)
     940:	6819      	ldr	r1, [r3, #0]
     942:	3104      	adds	r1, #4
     944:	4b07      	ldr	r3, [pc, #28]	; (964 <prvAddCurrentTaskToDelayedList+0x4c>)
     946:	4798      	blx	r3

		/* If the task entering the blocked state was placed at the head of the
		list of blocked tasks then xNextTaskUnblockTime needs to be updated
		too. */
		if( xTimeToWake < xNextTaskUnblockTime )
     948:	4b08      	ldr	r3, [pc, #32]	; (96c <prvAddCurrentTaskToDelayedList+0x54>)
     94a:	681b      	ldr	r3, [r3, #0]
     94c:	429c      	cmp	r4, r3
     94e:	d201      	bcs.n	954 <prvAddCurrentTaskToDelayedList+0x3c>
		{
			xNextTaskUnblockTime = xTimeToWake;
     950:	4b06      	ldr	r3, [pc, #24]	; (96c <prvAddCurrentTaskToDelayedList+0x54>)
     952:	601c      	str	r4, [r3, #0]
		}
	}
}
     954:	bd10      	pop	{r4, pc}
     956:	46c0      	nop			; (mov r8, r8)
     958:	20000324 	.word	0x20000324
     95c:	2000033c 	.word	0x2000033c
     960:	20000340 	.word	0x20000340
     964:	000008b5 	.word	0x000008b5
     968:	20000288 	.word	0x20000288
     96c:	200000b4 	.word	0x200000b4

00000970 <xTaskGenericCreate>:
#endif

/*lint +e956 */

signed portBASE_TYPE xTaskGenericCreate( pdTASK_CODE pxTaskCode, const signed char * const pcName, unsigned short usStackDepth, void *pvParameters, unsigned portBASE_TYPE uxPriority, xTaskHandle *pxCreatedTask, portSTACK_TYPE *puxStackBuffer, const xMemoryRegion * const xRegions )
{
     970:	b5f0      	push	{r4, r5, r6, r7, lr}
     972:	464f      	mov	r7, r9
     974:	4646      	mov	r6, r8
     976:	b4c0      	push	{r6, r7}
     978:	b085      	sub	sp, #20
     97a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
signed portBASE_TYPE xReturn;
tskTCB * pxNewTCB;

	configASSERT( pxTaskCode );
     97c:	2800      	cmp	r0, #0
     97e:	d101      	bne.n	984 <xTaskGenericCreate+0x14>
     980:	b672      	cpsid	i
     982:	e7fe      	b.n	982 <xTaskGenericCreate+0x12>
	configASSERT( ( ( uxPriority & ( ~portPRIVILEGE_BIT ) ) < configMAX_PRIORITIES ) );
     984:	2c05      	cmp	r4, #5
     986:	d901      	bls.n	98c <xTaskGenericCreate+0x1c>
     988:	b672      	cpsid	i
     98a:	e7fe      	b.n	98a <xTaskGenericCreate+0x1a>
     98c:	9303      	str	r3, [sp, #12]
     98e:	1c16      	adds	r6, r2, #0
     990:	1c0f      	adds	r7, r1, #0
     992:	9002      	str	r0, [sp, #8]
{
tskTCB *pxNewTCB;

	/* Allocate space for the TCB.  Where the memory comes from depends on
	the implementation of the port malloc function. */
	pxNewTCB = ( tskTCB * ) pvPortMalloc( sizeof( tskTCB ) );
     994:	2040      	movs	r0, #64	; 0x40
     996:	4b59      	ldr	r3, [pc, #356]	; (afc <xTaskGenericCreate+0x18c>)
     998:	4798      	blx	r3
     99a:	1e05      	subs	r5, r0, #0

	if( pxNewTCB != NULL )
     99c:	d100      	bne.n	9a0 <xTaskGenericCreate+0x30>
     99e:	e0a5      	b.n	aec <xTaskGenericCreate+0x17c>
	{
		/* Allocate space for the stack used by the task being created.
		The base of the stack memory stored in the TCB so the task can
		be deleted later if required. */
		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * sizeof( portSTACK_TYPE ) ), puxStackBuffer );
     9a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
     9a2:	2b00      	cmp	r3, #0
     9a4:	d000      	beq.n	9a8 <xTaskGenericCreate+0x38>
     9a6:	e09d      	b.n	ae4 <xTaskGenericCreate+0x174>
     9a8:	00b0      	lsls	r0, r6, #2
     9aa:	4b54      	ldr	r3, [pc, #336]	; (afc <xTaskGenericCreate+0x18c>)
     9ac:	4798      	blx	r3
     9ae:	6328      	str	r0, [r5, #48]	; 0x30

		if( pxNewTCB->pxStack == NULL )
     9b0:	2800      	cmp	r0, #0
     9b2:	d103      	bne.n	9bc <xTaskGenericCreate+0x4c>
		{
			/* Could not allocate the stack.  Delete the allocated TCB. */
			vPortFree( pxNewTCB );
     9b4:	1c28      	adds	r0, r5, #0
     9b6:	4b52      	ldr	r3, [pc, #328]	; (b00 <xTaskGenericCreate+0x190>)
     9b8:	4798      	blx	r3
     9ba:	e097      	b.n	aec <xTaskGenericCreate+0x17c>
			pxNewTCB = NULL;
		}
		else
		{
			/* Just to help debugging. */
			memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) usStackDepth * sizeof( portSTACK_TYPE ) );
     9bc:	00b2      	lsls	r2, r6, #2
     9be:	21a5      	movs	r1, #165	; 0xa5
     9c0:	4b50      	ldr	r3, [pc, #320]	; (b04 <xTaskGenericCreate+0x194>)
     9c2:	4798      	blx	r3
		stack grows from high memory to low (as per the 80x86) or visa versa.
		portSTACK_GROWTH is used to make the result positive or negative as
		required by the port. */
		#if( portSTACK_GROWTH < 0 )
		{
			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( unsigned short ) 1 );
     9c4:	4b50      	ldr	r3, [pc, #320]	; (b08 <xTaskGenericCreate+0x198>)
     9c6:	18f3      	adds	r3, r6, r3
     9c8:	009b      	lsls	r3, r3, #2
     9ca:	6b2a      	ldr	r2, [r5, #48]	; 0x30
     9cc:	4694      	mov	ip, r2
     9ce:	4463      	add	r3, ip
			pxTopOfStack = ( portSTACK_TYPE * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ( portPOINTER_SIZE_TYPE ) ~portBYTE_ALIGNMENT_MASK  ) );
     9d0:	2207      	movs	r2, #7
     9d2:	4393      	bics	r3, r2
     9d4:	4698      	mov	r8, r3
{
	/* Store the function name in the TCB. */
	#if configMAX_TASK_NAME_LEN > 1
	{
		/* Don't bring strncpy into the build unnecessarily. */
		strncpy( ( char * ) pxTCB->pcTaskName, ( const char * ) pcName, ( unsigned short ) configMAX_TASK_NAME_LEN );
     9d6:	1c28      	adds	r0, r5, #0
     9d8:	3034      	adds	r0, #52	; 0x34
     9da:	1c39      	adds	r1, r7, #0
     9dc:	3201      	adds	r2, #1
     9de:	4b4b      	ldr	r3, [pc, #300]	; (b0c <xTaskGenericCreate+0x19c>)
     9e0:	4798      	blx	r3
	}
	#endif /* configMAX_TASK_NAME_LEN */
	pxTCB->pcTaskName[ ( unsigned short ) configMAX_TASK_NAME_LEN - ( unsigned short ) 1 ] = ( signed char ) '\0';
     9e2:	2200      	movs	r2, #0
     9e4:	233b      	movs	r3, #59	; 0x3b
     9e6:	54ea      	strb	r2, [r5, r3]
     9e8:	1e27      	subs	r7, r4, #0
     9ea:	2f05      	cmp	r7, #5
     9ec:	d900      	bls.n	9f0 <xTaskGenericCreate+0x80>
     9ee:	2705      	movs	r7, #5
	if( uxPriority >= configMAX_PRIORITIES )
	{
		uxPriority = configMAX_PRIORITIES - ( unsigned portBASE_TYPE ) 1U;
	}

	pxTCB->uxPriority = uxPriority;
     9f0:	62ef      	str	r7, [r5, #44]	; 0x2c
	#if ( configUSE_MUTEXES == 1 )
	{
		pxTCB->uxBasePriority = uxPriority;
     9f2:	63ef      	str	r7, [r5, #60]	; 0x3c
	}
	#endif /* configUSE_MUTEXES */

	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
     9f4:	1d2b      	adds	r3, r5, #4
     9f6:	9301      	str	r3, [sp, #4]
     9f8:	1c18      	adds	r0, r3, #0
     9fa:	4e45      	ldr	r6, [pc, #276]	; (b10 <xTaskGenericCreate+0x1a0>)
     9fc:	47b0      	blx	r6
	vListInitialiseItem( &( pxTCB->xEventListItem ) );
     9fe:	1c28      	adds	r0, r5, #0
     a00:	3018      	adds	r0, #24
     a02:	47b0      	blx	r6

	/* Set the pxTCB as a link back from the xListItem.  This is so we can get
	back to	the containing TCB from a generic item in a list. */
	listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
     a04:	612d      	str	r5, [r5, #16]

	/* Event lists are always in priority order. */
	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) uxPriority );
     a06:	2306      	movs	r3, #6
     a08:	1bdb      	subs	r3, r3, r7
     a0a:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
     a0c:	626d      	str	r5, [r5, #36]	; 0x24
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivileged );
		}
		#else /* portUSING_MPU_WRAPPERS */
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
     a0e:	4640      	mov	r0, r8
     a10:	9902      	ldr	r1, [sp, #8]
     a12:	9a03      	ldr	r2, [sp, #12]
     a14:	4b3f      	ldr	r3, [pc, #252]	; (b14 <xTaskGenericCreate+0x1a4>)
     a16:	4798      	blx	r3
     a18:	6028      	str	r0, [r5, #0]
		}
		#endif /* portUSING_MPU_WRAPPERS */

		/* Check the alignment of the initialised stack. */
		portALIGNMENT_ASSERT_pxCurrentTCB( ( ( ( unsigned long ) pxNewTCB->pxTopOfStack & ( unsigned long ) portBYTE_ALIGNMENT_MASK ) == 0UL ) );
     a1a:	0743      	lsls	r3, r0, #29
     a1c:	d001      	beq.n	a22 <xTaskGenericCreate+0xb2>
     a1e:	b672      	cpsid	i
     a20:	e7fe      	b.n	a20 <xTaskGenericCreate+0xb0>

		if( ( void * ) pxCreatedTask != NULL )
     a22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
     a24:	2b00      	cmp	r3, #0
     a26:	d000      	beq.n	a2a <xTaskGenericCreate+0xba>
		{
			/* Pass the TCB out - in an anonymous way.  The calling function/
			task can use this as a handle to delete the task later if
			required.*/
			*pxCreatedTask = ( xTaskHandle ) pxNewTCB;
     a28:	601d      	str	r5, [r3, #0]
		}

		/* We are going to manipulate the task queues to add this task to a
		ready list, so must make sure no interrupts occur. */
		taskENTER_CRITICAL();
     a2a:	4b3b      	ldr	r3, [pc, #236]	; (b18 <xTaskGenericCreate+0x1a8>)
     a2c:	4798      	blx	r3
		{
			uxCurrentNumberOfTasks++;
     a2e:	4a3b      	ldr	r2, [pc, #236]	; (b1c <xTaskGenericCreate+0x1ac>)
     a30:	6813      	ldr	r3, [r2, #0]
     a32:	3301      	adds	r3, #1
     a34:	6013      	str	r3, [r2, #0]
			if( pxCurrentTCB == NULL )
     a36:	4b3a      	ldr	r3, [pc, #232]	; (b20 <xTaskGenericCreate+0x1b0>)
     a38:	681b      	ldr	r3, [r3, #0]
     a3a:	2b00      	cmp	r3, #0
     a3c:	d11e      	bne.n	a7c <xTaskGenericCreate+0x10c>
			{
				/* There are no other tasks, or all the other tasks are in
				the suspended state - make this the current task. */
				pxCurrentTCB =  pxNewTCB;
     a3e:	4b38      	ldr	r3, [pc, #224]	; (b20 <xTaskGenericCreate+0x1b0>)
     a40:	601d      	str	r5, [r3, #0]

				if( uxCurrentNumberOfTasks == ( unsigned portBASE_TYPE ) 1 )
     a42:	6813      	ldr	r3, [r2, #0]
     a44:	2b01      	cmp	r3, #1
     a46:	d124      	bne.n	a92 <xTaskGenericCreate+0x122>
     a48:	4e36      	ldr	r6, [pc, #216]	; (b24 <xTaskGenericCreate+0x1b4>)
     a4a:	3377      	adds	r3, #119	; 0x77
     a4c:	4699      	mov	r9, r3
     a4e:	44b1      	add	r9, r6
{
unsigned portBASE_TYPE uxPriority;

	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
     a50:	4f35      	ldr	r7, [pc, #212]	; (b28 <xTaskGenericCreate+0x1b8>)
     a52:	1c30      	adds	r0, r6, #0
     a54:	47b8      	blx	r7
     a56:	3614      	adds	r6, #20

static void prvInitialiseTaskLists( void )
{
unsigned portBASE_TYPE uxPriority;

	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
     a58:	454e      	cmp	r6, r9
     a5a:	d1fa      	bne.n	a52 <xTaskGenericCreate+0xe2>
	{
		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
	}

	vListInitialise( ( xList * ) &xDelayedTaskList1 );
     a5c:	4b33      	ldr	r3, [pc, #204]	; (b2c <xTaskGenericCreate+0x1bc>)
     a5e:	4699      	mov	r9, r3
     a60:	1c18      	adds	r0, r3, #0
     a62:	4e31      	ldr	r6, [pc, #196]	; (b28 <xTaskGenericCreate+0x1b8>)
     a64:	47b0      	blx	r6
	vListInitialise( ( xList * ) &xDelayedTaskList2 );
     a66:	4f32      	ldr	r7, [pc, #200]	; (b30 <xTaskGenericCreate+0x1c0>)
     a68:	1c38      	adds	r0, r7, #0
     a6a:	47b0      	blx	r6
	vListInitialise( ( xList * ) &xPendingReadyList );
     a6c:	4831      	ldr	r0, [pc, #196]	; (b34 <xTaskGenericCreate+0x1c4>)
     a6e:	47b0      	blx	r6
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
     a70:	4b31      	ldr	r3, [pc, #196]	; (b38 <xTaskGenericCreate+0x1c8>)
     a72:	464a      	mov	r2, r9
     a74:	601a      	str	r2, [r3, #0]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
     a76:	4b31      	ldr	r3, [pc, #196]	; (b3c <xTaskGenericCreate+0x1cc>)
     a78:	601f      	str	r7, [r3, #0]
     a7a:	e00a      	b.n	a92 <xTaskGenericCreate+0x122>
			else
			{
				/* If the scheduler is not already running, make this task the
				current task if it is the highest priority task to be created
				so far. */
				if( xSchedulerRunning == pdFALSE )
     a7c:	4b30      	ldr	r3, [pc, #192]	; (b40 <xTaskGenericCreate+0x1d0>)
     a7e:	681b      	ldr	r3, [r3, #0]
     a80:	2b00      	cmp	r3, #0
     a82:	d106      	bne.n	a92 <xTaskGenericCreate+0x122>
				{
					if( pxCurrentTCB->uxPriority <= uxPriority )
     a84:	4b26      	ldr	r3, [pc, #152]	; (b20 <xTaskGenericCreate+0x1b0>)
     a86:	681b      	ldr	r3, [r3, #0]
     a88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     a8a:	429c      	cmp	r4, r3
     a8c:	d301      	bcc.n	a92 <xTaskGenericCreate+0x122>
					{
						pxCurrentTCB = pxNewTCB;
     a8e:	4b24      	ldr	r3, [pc, #144]	; (b20 <xTaskGenericCreate+0x1b0>)
     a90:	601d      	str	r5, [r3, #0]
				}
			}

			/* Remember the top priority to make context switching faster.  Use
			the priority in pxNewTCB as this has been capped to a valid value. */
			if( pxNewTCB->uxPriority > uxTopUsedPriority )
     a92:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
     a94:	4a2b      	ldr	r2, [pc, #172]	; (b44 <xTaskGenericCreate+0x1d4>)
     a96:	6812      	ldr	r2, [r2, #0]
     a98:	4293      	cmp	r3, r2
     a9a:	d901      	bls.n	aa0 <xTaskGenericCreate+0x130>
			{
				uxTopUsedPriority = pxNewTCB->uxPriority;
     a9c:	4a29      	ldr	r2, [pc, #164]	; (b44 <xTaskGenericCreate+0x1d4>)
     a9e:	6013      	str	r3, [r2, #0]
			}

			uxTaskNumber++;
     aa0:	4929      	ldr	r1, [pc, #164]	; (b48 <xTaskGenericCreate+0x1d8>)
     aa2:	680a      	ldr	r2, [r1, #0]
     aa4:	3201      	adds	r2, #1
     aa6:	600a      	str	r2, [r1, #0]
				pxNewTCB->uxTCBNumber = uxTaskNumber;
			}
			#endif /* configUSE_TRACE_FACILITY */
			traceTASK_CREATE( pxNewTCB );

			prvAddTaskToReadyQueue( pxNewTCB );
     aa8:	4a28      	ldr	r2, [pc, #160]	; (b4c <xTaskGenericCreate+0x1dc>)
     aaa:	6812      	ldr	r2, [r2, #0]
     aac:	4293      	cmp	r3, r2
     aae:	d901      	bls.n	ab4 <xTaskGenericCreate+0x144>
     ab0:	4a26      	ldr	r2, [pc, #152]	; (b4c <xTaskGenericCreate+0x1dc>)
     ab2:	6013      	str	r3, [r2, #0]
     ab4:	0098      	lsls	r0, r3, #2
     ab6:	18c3      	adds	r3, r0, r3
     ab8:	009b      	lsls	r3, r3, #2
     aba:	481a      	ldr	r0, [pc, #104]	; (b24 <xTaskGenericCreate+0x1b4>)
     abc:	18c0      	adds	r0, r0, r3
     abe:	9901      	ldr	r1, [sp, #4]
     ac0:	4b23      	ldr	r3, [pc, #140]	; (b50 <xTaskGenericCreate+0x1e0>)
     ac2:	4798      	blx	r3

			xReturn = pdPASS;
			portSETUP_TCB( pxNewTCB );
		}
		taskEXIT_CRITICAL();
     ac4:	4b23      	ldr	r3, [pc, #140]	; (b54 <xTaskGenericCreate+0x1e4>)
     ac6:	4798      	blx	r3
		traceTASK_CREATE_FAILED();
	}

	if( xReturn == pdPASS )
	{
		if( xSchedulerRunning != pdFALSE )
     ac8:	4b1d      	ldr	r3, [pc, #116]	; (b40 <xTaskGenericCreate+0x1d0>)
     aca:	681b      	ldr	r3, [r3, #0]
     acc:	2001      	movs	r0, #1
     ace:	2b00      	cmp	r3, #0
     ad0:	d00e      	beq.n	af0 <xTaskGenericCreate+0x180>
		{
			/* If the created task is of a higher priority than the current task
			then it should run now. */
			if( pxCurrentTCB->uxPriority < uxPriority )
     ad2:	4b13      	ldr	r3, [pc, #76]	; (b20 <xTaskGenericCreate+0x1b0>)
     ad4:	681b      	ldr	r3, [r3, #0]
     ad6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     ad8:	429c      	cmp	r4, r3
     ada:	d909      	bls.n	af0 <xTaskGenericCreate+0x180>
			{
				portYIELD_WITHIN_API();
     adc:	4b1e      	ldr	r3, [pc, #120]	; (b58 <xTaskGenericCreate+0x1e8>)
     ade:	4798      	blx	r3
     ae0:	2001      	movs	r0, #1
     ae2:	e005      	b.n	af0 <xTaskGenericCreate+0x180>
	if( pxNewTCB != NULL )
	{
		/* Allocate space for the stack used by the task being created.
		The base of the stack memory stored in the TCB so the task can
		be deleted later if required. */
		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * sizeof( portSTACK_TYPE ) ), puxStackBuffer );
     ae4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
     ae6:	6303      	str	r3, [r0, #48]	; 0x30
     ae8:	1c18      	adds	r0, r3, #0
     aea:	e767      	b.n	9bc <xTaskGenericCreate+0x4c>
		}
		taskEXIT_CRITICAL();
	}
	else
	{
		xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
     aec:	2001      	movs	r0, #1
     aee:	4240      	negs	r0, r0
			}
		}
	}

	return xReturn;
}
     af0:	b005      	add	sp, #20
     af2:	bc0c      	pop	{r2, r3}
     af4:	4690      	mov	r8, r2
     af6:	4699      	mov	r9, r3
     af8:	bdf0      	pop	{r4, r5, r6, r7, pc}
     afa:	46c0      	nop			; (mov r8, r8)
     afc:	00001275 	.word	0x00001275
     b00:	000012dd 	.word	0x000012dd
     b04:	00006501 	.word	0x00006501
     b08:	3fffffff 	.word	0x3fffffff
     b0c:	00007e57 	.word	0x00007e57
     b10:	00000891 	.word	0x00000891
     b14:	0000111d 	.word	0x0000111d
     b18:	00001175 	.word	0x00001175
     b1c:	20000364 	.word	0x20000364
     b20:	20000324 	.word	0x20000324
     b24:	200002a8 	.word	0x200002a8
     b28:	00000879 	.word	0x00000879
     b2c:	2000034c 	.word	0x2000034c
     b30:	20000294 	.word	0x20000294
     b34:	20000328 	.word	0x20000328
     b38:	20000288 	.word	0x20000288
     b3c:	20000340 	.word	0x20000340
     b40:	2000028c 	.word	0x2000028c
     b44:	20000368 	.word	0x20000368
     b48:	20000348 	.word	0x20000348
     b4c:	20000344 	.word	0x20000344
     b50:	00000899 	.word	0x00000899
     b54:	0000118d 	.word	0x0000118d
     b58:	0000115d 	.word	0x0000115d

00000b5c <vTaskStartScheduler>:

#endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
/*-----------------------------------------------------------*/

void vTaskStartScheduler( void )
{
     b5c:	b510      	push	{r4, lr}
     b5e:	b084      	sub	sp, #16
		xReturn = xTaskCreate( prvIdleTask, ( signed char * ) "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), &xIdleTaskHandle );
	}
	#else
	{
		/* Create the idle task without storing its handle. */
		xReturn = xTaskCreate( prvIdleTask, ( signed char * ) "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), NULL );
     b60:	2300      	movs	r3, #0
     b62:	9300      	str	r3, [sp, #0]
     b64:	9301      	str	r3, [sp, #4]
     b66:	9302      	str	r3, [sp, #8]
     b68:	9303      	str	r3, [sp, #12]
     b6a:	480c      	ldr	r0, [pc, #48]	; (b9c <vTaskStartScheduler+0x40>)
     b6c:	490c      	ldr	r1, [pc, #48]	; (ba0 <vTaskStartScheduler+0x44>)
     b6e:	2296      	movs	r2, #150	; 0x96
     b70:	0052      	lsls	r2, r2, #1
     b72:	4c0c      	ldr	r4, [pc, #48]	; (ba4 <vTaskStartScheduler+0x48>)
     b74:	47a0      	blx	r4
			xReturn = xTimerCreateTimerTask();
		}
	}
	#endif /* configUSE_TIMERS */

	if( xReturn == pdPASS )
     b76:	2801      	cmp	r0, #1
     b78:	d109      	bne.n	b8e <vTaskStartScheduler+0x32>
		so interrupts will automatically get re-enabled when the first task
		starts to run.

		STEPPING THROUGH HERE USING A DEBUGGER CAN CAUSE BIG PROBLEMS IF THE
		DEBUGGER ALLOWS INTERRUPTS TO BE PROCESSED. */
		portDISABLE_INTERRUPTS();
     b7a:	b672      	cpsid	i

		xSchedulerRunning = pdTRUE;
     b7c:	2201      	movs	r2, #1
     b7e:	4b0a      	ldr	r3, [pc, #40]	; (ba8 <vTaskStartScheduler+0x4c>)
     b80:	601a      	str	r2, [r3, #0]
		xTickCount = ( portTickType ) 0U;
     b82:	2200      	movs	r2, #0
     b84:	4b09      	ldr	r3, [pc, #36]	; (bac <vTaskStartScheduler+0x50>)
     b86:	601a      	str	r2, [r3, #0]
		the run time counter time base. */
		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();

		/* Setting up the timer tick is hardware specific and thus in the
		portable interface. */
		if( xPortStartScheduler() != pdFALSE )
     b88:	4b09      	ldr	r3, [pc, #36]	; (bb0 <vTaskStartScheduler+0x54>)
     b8a:	4798      	blx	r3
     b8c:	e003      	b.n	b96 <vTaskStartScheduler+0x3a>
	else
	{
		/* This line will only be reached if the kernel could not be started,
		because there was not enough FreeRTOS heap to create the idle task
		or the timer task. */
		configASSERT( xReturn );
     b8e:	2800      	cmp	r0, #0
     b90:	d101      	bne.n	b96 <vTaskStartScheduler+0x3a>
     b92:	b672      	cpsid	i
     b94:	e7fe      	b.n	b94 <vTaskStartScheduler+0x38>
	}
}
     b96:	b004      	add	sp, #16
     b98:	bd10      	pop	{r4, pc}
     b9a:	46c0      	nop			; (mov r8, r8)
     b9c:	00000915 	.word	0x00000915
     ba0:	0000d148 	.word	0x0000d148
     ba4:	00000971 	.word	0x00000971
     ba8:	2000028c 	.word	0x2000028c
     bac:	2000033c 	.word	0x2000033c
     bb0:	00001239 	.word	0x00001239

00000bb4 <vTaskSuspendAll>:

void vTaskSuspendAll( void )
{
	/* A critical section is not required as the variable is of type
	portBASE_TYPE. */
	++uxSchedulerSuspended;
     bb4:	4a02      	ldr	r2, [pc, #8]	; (bc0 <vTaskSuspendAll+0xc>)
     bb6:	6813      	ldr	r3, [r2, #0]
     bb8:	3301      	adds	r3, #1
     bba:	6013      	str	r3, [r2, #0]
}
     bbc:	4770      	bx	lr
     bbe:	46c0      	nop			; (mov r8, r8)
     bc0:	20000320 	.word	0x20000320

00000bc4 <vTaskIncrementTick>:

#endif /* configUSE_TICKLESS_IDLE */
/*----------------------------------------------------------*/

void vTaskIncrementTick( void )
{
     bc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

	/* Called by the portable layer each time a tick interrupt occurs.
	Increments the tick then checks to see if the new tick value will cause any
	tasks to be unblocked. */
	traceTASK_INCREMENT_TICK( xTickCount );
	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
     bc6:	4b3b      	ldr	r3, [pc, #236]	; (cb4 <vTaskIncrementTick+0xf0>)
     bc8:	681b      	ldr	r3, [r3, #0]
     bca:	2b00      	cmp	r3, #0
     bcc:	d16d      	bne.n	caa <vTaskIncrementTick+0xe6>
	{
		++xTickCount;
     bce:	4b3a      	ldr	r3, [pc, #232]	; (cb8 <vTaskIncrementTick+0xf4>)
     bd0:	681a      	ldr	r2, [r3, #0]
     bd2:	3201      	adds	r2, #1
     bd4:	601a      	str	r2, [r3, #0]
		if( xTickCount == ( portTickType ) 0U )
     bd6:	681b      	ldr	r3, [r3, #0]
     bd8:	2b00      	cmp	r3, #0
     bda:	d120      	bne.n	c1e <vTaskIncrementTick+0x5a>
			xList *pxTemp;

			/* Tick count has overflowed so we need to swap the delay lists.
			If there are any items in pxDelayedTaskList here then there is
			an error! */
			configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );
     bdc:	4b37      	ldr	r3, [pc, #220]	; (cbc <vTaskIncrementTick+0xf8>)
     bde:	681b      	ldr	r3, [r3, #0]
     be0:	681b      	ldr	r3, [r3, #0]
     be2:	2b00      	cmp	r3, #0
     be4:	d001      	beq.n	bea <vTaskIncrementTick+0x26>
     be6:	b672      	cpsid	i
     be8:	e7fe      	b.n	be8 <vTaskIncrementTick+0x24>

			pxTemp = pxDelayedTaskList;
     bea:	4b34      	ldr	r3, [pc, #208]	; (cbc <vTaskIncrementTick+0xf8>)
     bec:	6819      	ldr	r1, [r3, #0]
			pxDelayedTaskList = pxOverflowDelayedTaskList;
     bee:	4a34      	ldr	r2, [pc, #208]	; (cc0 <vTaskIncrementTick+0xfc>)
     bf0:	6810      	ldr	r0, [r2, #0]
     bf2:	6018      	str	r0, [r3, #0]
			pxOverflowDelayedTaskList = pxTemp;
     bf4:	6011      	str	r1, [r2, #0]
			xNumOfOverflows++;
     bf6:	4933      	ldr	r1, [pc, #204]	; (cc4 <vTaskIncrementTick+0x100>)
     bf8:	680a      	ldr	r2, [r1, #0]
     bfa:	3201      	adds	r2, #1
     bfc:	600a      	str	r2, [r1, #0]

			if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
     bfe:	681b      	ldr	r3, [r3, #0]
     c00:	681b      	ldr	r3, [r3, #0]
     c02:	2b00      	cmp	r3, #0
     c04:	d104      	bne.n	c10 <vTaskIncrementTick+0x4c>
				/* The new current delayed list is empty.  Set
				xNextTaskUnblockTime to the maximum possible value so it is
				extremely unlikely that the
				if( xTickCount >= xNextTaskUnblockTime ) test will pass until
				there is an item in the delayed list. */
				xNextTaskUnblockTime = portMAX_DELAY;
     c06:	2201      	movs	r2, #1
     c08:	4252      	negs	r2, r2
     c0a:	4b2f      	ldr	r3, [pc, #188]	; (cc8 <vTaskIncrementTick+0x104>)
     c0c:	601a      	str	r2, [r3, #0]
     c0e:	e006      	b.n	c1e <vTaskIncrementTick+0x5a>
			{
				/* The new current delayed list is not empty, get the value of
				the item at the head of the delayed list.  This is the time at
				which the task at the head of the delayed list should be removed
				from the Blocked state. */
				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
     c10:	4b2a      	ldr	r3, [pc, #168]	; (cbc <vTaskIncrementTick+0xf8>)
     c12:	681b      	ldr	r3, [r3, #0]
     c14:	68db      	ldr	r3, [r3, #12]
     c16:	68db      	ldr	r3, [r3, #12]
				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
     c18:	685a      	ldr	r2, [r3, #4]
     c1a:	4b2b      	ldr	r3, [pc, #172]	; (cc8 <vTaskIncrementTick+0x104>)
     c1c:	601a      	str	r2, [r3, #0]
			}
		}

		/* See if this tick has made a timeout expire. */
		prvCheckDelayedTasks();
     c1e:	4b26      	ldr	r3, [pc, #152]	; (cb8 <vTaskIncrementTick+0xf4>)
     c20:	681a      	ldr	r2, [r3, #0]
     c22:	4b29      	ldr	r3, [pc, #164]	; (cc8 <vTaskIncrementTick+0x104>)
     c24:	681b      	ldr	r3, [r3, #0]
     c26:	429a      	cmp	r2, r3
     c28:	d343      	bcc.n	cb2 <vTaskIncrementTick+0xee>
     c2a:	4b24      	ldr	r3, [pc, #144]	; (cbc <vTaskIncrementTick+0xf8>)
     c2c:	681b      	ldr	r3, [r3, #0]
     c2e:	681b      	ldr	r3, [r3, #0]
     c30:	2b00      	cmp	r3, #0
     c32:	d00b      	beq.n	c4c <vTaskIncrementTick+0x88>
     c34:	4b21      	ldr	r3, [pc, #132]	; (cbc <vTaskIncrementTick+0xf8>)
     c36:	681b      	ldr	r3, [r3, #0]
     c38:	68db      	ldr	r3, [r3, #12]
     c3a:	68dd      	ldr	r5, [r3, #12]
     c3c:	686b      	ldr	r3, [r5, #4]
     c3e:	4a1e      	ldr	r2, [pc, #120]	; (cb8 <vTaskIncrementTick+0xf4>)
     c40:	6812      	ldr	r2, [r2, #0]
     c42:	4293      	cmp	r3, r2
     c44:	d810      	bhi.n	c68 <vTaskIncrementTick+0xa4>
     c46:	4f21      	ldr	r7, [pc, #132]	; (ccc <vTaskIncrementTick+0x108>)
     c48:	4e21      	ldr	r6, [pc, #132]	; (cd0 <vTaskIncrementTick+0x10c>)
     c4a:	e010      	b.n	c6e <vTaskIncrementTick+0xaa>
     c4c:	2201      	movs	r2, #1
     c4e:	4252      	negs	r2, r2
     c50:	4b1d      	ldr	r3, [pc, #116]	; (cc8 <vTaskIncrementTick+0x104>)
     c52:	601a      	str	r2, [r3, #0]
     c54:	e02d      	b.n	cb2 <vTaskIncrementTick+0xee>
     c56:	4b19      	ldr	r3, [pc, #100]	; (cbc <vTaskIncrementTick+0xf8>)
     c58:	681b      	ldr	r3, [r3, #0]
     c5a:	68db      	ldr	r3, [r3, #12]
     c5c:	68dd      	ldr	r5, [r3, #12]
     c5e:	686b      	ldr	r3, [r5, #4]
     c60:	4a15      	ldr	r2, [pc, #84]	; (cb8 <vTaskIncrementTick+0xf4>)
     c62:	6812      	ldr	r2, [r2, #0]
     c64:	4293      	cmp	r3, r2
     c66:	d902      	bls.n	c6e <vTaskIncrementTick+0xaa>
     c68:	4a17      	ldr	r2, [pc, #92]	; (cc8 <vTaskIncrementTick+0x104>)
     c6a:	6013      	str	r3, [r2, #0]
     c6c:	e021      	b.n	cb2 <vTaskIncrementTick+0xee>
     c6e:	1d2c      	adds	r4, r5, #4
     c70:	1c20      	adds	r0, r4, #0
     c72:	47b8      	blx	r7
     c74:	6aab      	ldr	r3, [r5, #40]	; 0x28
     c76:	2b00      	cmp	r3, #0
     c78:	d003      	beq.n	c82 <vTaskIncrementTick+0xbe>
     c7a:	1c28      	adds	r0, r5, #0
     c7c:	3018      	adds	r0, #24
     c7e:	4b13      	ldr	r3, [pc, #76]	; (ccc <vTaskIncrementTick+0x108>)
     c80:	4798      	blx	r3
     c82:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
     c84:	6832      	ldr	r2, [r6, #0]
     c86:	4293      	cmp	r3, r2
     c88:	d901      	bls.n	c8e <vTaskIncrementTick+0xca>
     c8a:	4a11      	ldr	r2, [pc, #68]	; (cd0 <vTaskIncrementTick+0x10c>)
     c8c:	6013      	str	r3, [r2, #0]
     c8e:	0098      	lsls	r0, r3, #2
     c90:	18c3      	adds	r3, r0, r3
     c92:	009b      	lsls	r3, r3, #2
     c94:	480f      	ldr	r0, [pc, #60]	; (cd4 <vTaskIncrementTick+0x110>)
     c96:	18c0      	adds	r0, r0, r3
     c98:	1c21      	adds	r1, r4, #0
     c9a:	4b0f      	ldr	r3, [pc, #60]	; (cd8 <vTaskIncrementTick+0x114>)
     c9c:	4798      	blx	r3
     c9e:	4b07      	ldr	r3, [pc, #28]	; (cbc <vTaskIncrementTick+0xf8>)
     ca0:	681b      	ldr	r3, [r3, #0]
     ca2:	681b      	ldr	r3, [r3, #0]
     ca4:	2b00      	cmp	r3, #0
     ca6:	d1d6      	bne.n	c56 <vTaskIncrementTick+0x92>
     ca8:	e7d0      	b.n	c4c <vTaskIncrementTick+0x88>
	}
	else
	{
		++uxMissedTicks;
     caa:	4a0c      	ldr	r2, [pc, #48]	; (cdc <vTaskIncrementTick+0x118>)
     cac:	6813      	ldr	r3, [r2, #0]
     cae:	3301      	adds	r3, #1
     cb0:	6013      	str	r3, [r2, #0]
		{
			vApplicationTickHook();
		}
	}
	#endif /* configUSE_TICK_HOOK */
}
     cb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     cb4:	20000320 	.word	0x20000320
     cb8:	2000033c 	.word	0x2000033c
     cbc:	20000288 	.word	0x20000288
     cc0:	20000340 	.word	0x20000340
     cc4:	20000290 	.word	0x20000290
     cc8:	200000b4 	.word	0x200000b4
     ccc:	000008ed 	.word	0x000008ed
     cd0:	20000344 	.word	0x20000344
     cd4:	200002a8 	.word	0x200002a8
     cd8:	00000899 	.word	0x00000899
     cdc:	20000284 	.word	0x20000284

00000ce0 <xTaskResumeAll>:

#endif /* configUSE_TICKLESS_IDLE */
/*----------------------------------------------------------*/

signed portBASE_TYPE xTaskResumeAll( void )
{
     ce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
register tskTCB *pxTCB;
signed portBASE_TYPE xAlreadyYielded = pdFALSE;

	/* If uxSchedulerSuspended is zero then this function does not match a
	previous call to vTaskSuspendAll(). */
	configASSERT( uxSchedulerSuspended );
     ce2:	4b2f      	ldr	r3, [pc, #188]	; (da0 <xTaskResumeAll+0xc0>)
     ce4:	681b      	ldr	r3, [r3, #0]
     ce6:	2b00      	cmp	r3, #0
     ce8:	d101      	bne.n	cee <xTaskResumeAll+0xe>
     cea:	b672      	cpsid	i
     cec:	e7fe      	b.n	cec <xTaskResumeAll+0xc>
	/* It is possible that an ISR caused a task to be removed from an event
	list while the scheduler was suspended.  If this was the case then the
	removed task will have been added to the xPendingReadyList.  Once the
	scheduler has been resumed it is safe to move all the pending ready
	tasks from this list into their appropriate ready list. */
	taskENTER_CRITICAL();
     cee:	4b2d      	ldr	r3, [pc, #180]	; (da4 <xTaskResumeAll+0xc4>)
     cf0:	4798      	blx	r3
	{
		--uxSchedulerSuspended;
     cf2:	4b2b      	ldr	r3, [pc, #172]	; (da0 <xTaskResumeAll+0xc0>)
     cf4:	681a      	ldr	r2, [r3, #0]
     cf6:	3a01      	subs	r2, #1
     cf8:	601a      	str	r2, [r3, #0]

		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
     cfa:	681b      	ldr	r3, [r3, #0]
/*----------------------------------------------------------*/

signed portBASE_TYPE xTaskResumeAll( void )
{
register tskTCB *pxTCB;
signed portBASE_TYPE xAlreadyYielded = pdFALSE;
     cfc:	2400      	movs	r4, #0
	tasks from this list into their appropriate ready list. */
	taskENTER_CRITICAL();
	{
		--uxSchedulerSuspended;

		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
     cfe:	2b00      	cmp	r3, #0
     d00:	d149      	bne.n	d96 <xTaskResumeAll+0xb6>
		{
			if( uxCurrentNumberOfTasks > ( unsigned portBASE_TYPE ) 0U )
     d02:	4b29      	ldr	r3, [pc, #164]	; (da8 <xTaskResumeAll+0xc8>)
     d04:	681b      	ldr	r3, [r3, #0]
     d06:	2b00      	cmp	r3, #0
     d08:	d122      	bne.n	d50 <xTaskResumeAll+0x70>
     d0a:	e044      	b.n	d96 <xTaskResumeAll+0xb6>

				/* Move any readied tasks from the pending list into the
				appropriate ready list. */
				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
				{
					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY(  ( ( xList * ) &xPendingReadyList ) );
     d0c:	4b27      	ldr	r3, [pc, #156]	; (dac <xTaskResumeAll+0xcc>)
     d0e:	68db      	ldr	r3, [r3, #12]
     d10:	68df      	ldr	r7, [r3, #12]
					uxListRemove( &( pxTCB->xEventListItem ) );
     d12:	1c38      	adds	r0, r7, #0
     d14:	3018      	adds	r0, #24
     d16:	4b26      	ldr	r3, [pc, #152]	; (db0 <xTaskResumeAll+0xd0>)
     d18:	4798      	blx	r3
					uxListRemove( &( pxTCB->xGenericListItem ) );
     d1a:	1d3d      	adds	r5, r7, #4
     d1c:	1c28      	adds	r0, r5, #0
     d1e:	4b24      	ldr	r3, [pc, #144]	; (db0 <xTaskResumeAll+0xd0>)
     d20:	4798      	blx	r3
					prvAddTaskToReadyQueue( pxTCB );
     d22:	6afb      	ldr	r3, [r7, #44]	; 0x2c
     d24:	4a23      	ldr	r2, [pc, #140]	; (db4 <xTaskResumeAll+0xd4>)
     d26:	6812      	ldr	r2, [r2, #0]
     d28:	4293      	cmp	r3, r2
     d2a:	d901      	bls.n	d30 <xTaskResumeAll+0x50>
     d2c:	4a21      	ldr	r2, [pc, #132]	; (db4 <xTaskResumeAll+0xd4>)
     d2e:	6013      	str	r3, [r2, #0]
     d30:	0098      	lsls	r0, r3, #2
     d32:	18c3      	adds	r3, r0, r3
     d34:	009b      	lsls	r3, r3, #2
     d36:	4820      	ldr	r0, [pc, #128]	; (db8 <xTaskResumeAll+0xd8>)
     d38:	18c0      	adds	r0, r0, r3
     d3a:	1c29      	adds	r1, r5, #0
     d3c:	4b1f      	ldr	r3, [pc, #124]	; (dbc <xTaskResumeAll+0xdc>)
     d3e:	4798      	blx	r3

					/* If we have moved a task that has a priority higher than
					the current task then we should yield. */
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
     d40:	4b1f      	ldr	r3, [pc, #124]	; (dc0 <xTaskResumeAll+0xe0>)
     d42:	681b      	ldr	r3, [r3, #0]
     d44:	6afa      	ldr	r2, [r7, #44]	; 0x2c
     d46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     d48:	429a      	cmp	r2, r3
     d4a:	d302      	bcc.n	d52 <xTaskResumeAll+0x72>
					{
						xYieldRequired = pdTRUE;
     d4c:	2401      	movs	r4, #1
     d4e:	e000      	b.n	d52 <xTaskResumeAll+0x72>
			{
				portBASE_TYPE xYieldRequired = pdFALSE;

				/* Move any readied tasks from the pending list into the
				appropriate ready list. */
				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
     d50:	4e16      	ldr	r6, [pc, #88]	; (dac <xTaskResumeAll+0xcc>)
     d52:	6833      	ldr	r3, [r6, #0]
     d54:	2b00      	cmp	r3, #0
     d56:	d1d9      	bne.n	d0c <xTaskResumeAll+0x2c>
				}

				/* If any ticks occurred while the scheduler was suspended then
				they should be processed now.  This ensures the tick count does not
				slip, and that any delayed tasks are resumed at the correct time. */
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
     d58:	4b1a      	ldr	r3, [pc, #104]	; (dc4 <xTaskResumeAll+0xe4>)
     d5a:	681b      	ldr	r3, [r3, #0]
     d5c:	2b00      	cmp	r3, #0
     d5e:	d00d      	beq.n	d7c <xTaskResumeAll+0x9c>
				{
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
     d60:	4b18      	ldr	r3, [pc, #96]	; (dc4 <xTaskResumeAll+0xe4>)
     d62:	681b      	ldr	r3, [r3, #0]
     d64:	2b00      	cmp	r3, #0
     d66:	d010      	beq.n	d8a <xTaskResumeAll+0xaa>
					{
						vTaskIncrementTick();
     d68:	4d17      	ldr	r5, [pc, #92]	; (dc8 <xTaskResumeAll+0xe8>)
						--uxMissedTicks;
     d6a:	4c16      	ldr	r4, [pc, #88]	; (dc4 <xTaskResumeAll+0xe4>)
				slip, and that any delayed tasks are resumed at the correct time. */
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
				{
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
					{
						vTaskIncrementTick();
     d6c:	47a8      	blx	r5
						--uxMissedTicks;
     d6e:	6823      	ldr	r3, [r4, #0]
     d70:	3b01      	subs	r3, #1
     d72:	6023      	str	r3, [r4, #0]
				/* If any ticks occurred while the scheduler was suspended then
				they should be processed now.  This ensures the tick count does not
				slip, and that any delayed tasks are resumed at the correct time. */
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
				{
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
     d74:	6823      	ldr	r3, [r4, #0]
     d76:	2b00      	cmp	r3, #0
     d78:	d1f8      	bne.n	d6c <xTaskResumeAll+0x8c>
     d7a:	e006      	b.n	d8a <xTaskResumeAll+0xaa>
						xYieldRequired = pdTRUE;
					}
					#endif
				}

				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
     d7c:	2c01      	cmp	r4, #1
     d7e:	d004      	beq.n	d8a <xTaskResumeAll+0xaa>
     d80:	4b12      	ldr	r3, [pc, #72]	; (dcc <xTaskResumeAll+0xec>)
     d82:	681b      	ldr	r3, [r3, #0]
/*----------------------------------------------------------*/

signed portBASE_TYPE xTaskResumeAll( void )
{
register tskTCB *pxTCB;
signed portBASE_TYPE xAlreadyYielded = pdFALSE;
     d84:	2400      	movs	r4, #0
						xYieldRequired = pdTRUE;
					}
					#endif
				}

				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
     d86:	2b01      	cmp	r3, #1
     d88:	d105      	bne.n	d96 <xTaskResumeAll+0xb6>
				{
					xAlreadyYielded = pdTRUE;
					xMissedYield = pdFALSE;
     d8a:	2200      	movs	r2, #0
     d8c:	4b0f      	ldr	r3, [pc, #60]	; (dcc <xTaskResumeAll+0xec>)
     d8e:	601a      	str	r2, [r3, #0]
					portYIELD_WITHIN_API();
     d90:	4b0f      	ldr	r3, [pc, #60]	; (dd0 <xTaskResumeAll+0xf0>)
     d92:	4798      	blx	r3
					#endif
				}

				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
				{
					xAlreadyYielded = pdTRUE;
     d94:	2401      	movs	r4, #1
					portYIELD_WITHIN_API();
				}
			}
		}
	}
	taskEXIT_CRITICAL();
     d96:	4b0f      	ldr	r3, [pc, #60]	; (dd4 <xTaskResumeAll+0xf4>)
     d98:	4798      	blx	r3

	return xAlreadyYielded;
}
     d9a:	1c20      	adds	r0, r4, #0
     d9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     d9e:	46c0      	nop			; (mov r8, r8)
     da0:	20000320 	.word	0x20000320
     da4:	00001175 	.word	0x00001175
     da8:	20000364 	.word	0x20000364
     dac:	20000328 	.word	0x20000328
     db0:	000008ed 	.word	0x000008ed
     db4:	20000344 	.word	0x20000344
     db8:	200002a8 	.word	0x200002a8
     dbc:	00000899 	.word	0x00000899
     dc0:	20000324 	.word	0x20000324
     dc4:	20000284 	.word	0x20000284
     dc8:	00000bc5 	.word	0x00000bc5
     dcc:	20000360 	.word	0x20000360
     dd0:	0000115d 	.word	0x0000115d
     dd4:	0000118d 	.word	0x0000118d

00000dd8 <vTaskDelay>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelay == 1 )

	void vTaskDelay( portTickType xTicksToDelay )
	{
     dd8:	b510      	push	{r4, lr}
     dda:	1e04      	subs	r4, r0, #0
	portTickType xTimeToWake;
	signed portBASE_TYPE xAlreadyYielded = pdFALSE;

		/* A delay time of zero just forces a reschedule. */
		if( xTicksToDelay > ( portTickType ) 0U )
     ddc:	d010      	beq.n	e00 <vTaskDelay+0x28>
		{
			vTaskSuspendAll();
     dde:	4b0a      	ldr	r3, [pc, #40]	; (e08 <vTaskDelay+0x30>)
     de0:	4798      	blx	r3
				This task cannot be in an event list as it is the currently
				executing task. */

				/* Calculate the time to wake - this may overflow but this is
				not a problem. */
				xTimeToWake = xTickCount + xTicksToDelay;
     de2:	4b0a      	ldr	r3, [pc, #40]	; (e0c <vTaskDelay+0x34>)
     de4:	681b      	ldr	r3, [r3, #0]
     de6:	18e4      	adds	r4, r4, r3

				/* We must remove ourselves from the ready list before adding
				ourselves to the blocked list as the same list item is used for
				both lists. */
				if( uxListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) ) == 0 )
     de8:	4b09      	ldr	r3, [pc, #36]	; (e10 <vTaskDelay+0x38>)
     dea:	6818      	ldr	r0, [r3, #0]
     dec:	3004      	adds	r0, #4
     dee:	4b09      	ldr	r3, [pc, #36]	; (e14 <vTaskDelay+0x3c>)
     df0:	4798      	blx	r3
					/* The current task must be in a ready list, so there is
					no need to check, and the port reset macro can be called
					directly. */
					portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
				}
				prvAddCurrentTaskToDelayedList( xTimeToWake );
     df2:	1c20      	adds	r0, r4, #0
     df4:	4b08      	ldr	r3, [pc, #32]	; (e18 <vTaskDelay+0x40>)
     df6:	4798      	blx	r3
			}
			xAlreadyYielded = xTaskResumeAll();
     df8:	4b08      	ldr	r3, [pc, #32]	; (e1c <vTaskDelay+0x44>)
     dfa:	4798      	blx	r3
		}

		/* Force a reschedule if xTaskResumeAll has not already done so, we may
		have put ourselves to sleep. */
		if( xAlreadyYielded == pdFALSE )
     dfc:	2800      	cmp	r0, #0
     dfe:	d101      	bne.n	e04 <vTaskDelay+0x2c>
		{
			portYIELD_WITHIN_API();
     e00:	4b07      	ldr	r3, [pc, #28]	; (e20 <vTaskDelay+0x48>)
     e02:	4798      	blx	r3
		}
	}
     e04:	bd10      	pop	{r4, pc}
     e06:	46c0      	nop			; (mov r8, r8)
     e08:	00000bb5 	.word	0x00000bb5
     e0c:	2000033c 	.word	0x2000033c
     e10:	20000324 	.word	0x20000324
     e14:	000008ed 	.word	0x000008ed
     e18:	00000919 	.word	0x00000919
     e1c:	00000ce1 	.word	0x00000ce1
     e20:	0000115d 	.word	0x0000115d

00000e24 <vTaskSwitchContext>:

#endif /* configUSE_APPLICATION_TASK_TAG */
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
     e24:	b510      	push	{r4, lr}
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
     e26:	4b24      	ldr	r3, [pc, #144]	; (eb8 <vTaskSwitchContext+0x94>)
     e28:	681b      	ldr	r3, [r3, #0]
     e2a:	2b00      	cmp	r3, #0
     e2c:	d110      	bne.n	e50 <vTaskSwitchContext+0x2c>
		#endif /* configGENERATE_RUN_TIME_STATS */

		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();

		taskSELECT_HIGHEST_PRIORITY_TASK();
     e2e:	4b23      	ldr	r3, [pc, #140]	; (ebc <vTaskSwitchContext+0x98>)
     e30:	681b      	ldr	r3, [r3, #0]
     e32:	009a      	lsls	r2, r3, #2
     e34:	18d3      	adds	r3, r2, r3
     e36:	009b      	lsls	r3, r3, #2
     e38:	4a21      	ldr	r2, [pc, #132]	; (ec0 <vTaskSwitchContext+0x9c>)
     e3a:	589b      	ldr	r3, [r3, r2]
     e3c:	2b00      	cmp	r3, #0
     e3e:	d11a      	bne.n	e76 <vTaskSwitchContext+0x52>
     e40:	4b1e      	ldr	r3, [pc, #120]	; (ebc <vTaskSwitchContext+0x98>)
     e42:	681b      	ldr	r3, [r3, #0]
     e44:	2b00      	cmp	r3, #0
     e46:	d00a      	beq.n	e5e <vTaskSwitchContext+0x3a>
     e48:	4a1c      	ldr	r2, [pc, #112]	; (ebc <vTaskSwitchContext+0x98>)
     e4a:	4c1d      	ldr	r4, [pc, #116]	; (ec0 <vTaskSwitchContext+0x9c>)
     e4c:	1c10      	adds	r0, r2, #0
     e4e:	e008      	b.n	e62 <vTaskSwitchContext+0x3e>
{
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
	{
		/* The scheduler is currently suspended - do not allow a context
		switch. */
		xMissedYield = pdTRUE;
     e50:	2201      	movs	r2, #1
     e52:	4b1c      	ldr	r3, [pc, #112]	; (ec4 <vTaskSwitchContext+0xa0>)
     e54:	601a      	str	r2, [r3, #0]
     e56:	e02d      	b.n	eb4 <vTaskSwitchContext+0x90>
		#endif /* configGENERATE_RUN_TIME_STATS */

		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();

		taskSELECT_HIGHEST_PRIORITY_TASK();
     e58:	6803      	ldr	r3, [r0, #0]
     e5a:	2b00      	cmp	r3, #0
     e5c:	d101      	bne.n	e62 <vTaskSwitchContext+0x3e>
     e5e:	b672      	cpsid	i
     e60:	e7fe      	b.n	e60 <vTaskSwitchContext+0x3c>
     e62:	6813      	ldr	r3, [r2, #0]
     e64:	3b01      	subs	r3, #1
     e66:	6013      	str	r3, [r2, #0]
     e68:	6813      	ldr	r3, [r2, #0]
     e6a:	0099      	lsls	r1, r3, #2
     e6c:	18cb      	adds	r3, r1, r3
     e6e:	009b      	lsls	r3, r3, #2
     e70:	591b      	ldr	r3, [r3, r4]
     e72:	2b00      	cmp	r3, #0
     e74:	d0f0      	beq.n	e58 <vTaskSwitchContext+0x34>
     e76:	4b11      	ldr	r3, [pc, #68]	; (ebc <vTaskSwitchContext+0x98>)
     e78:	681b      	ldr	r3, [r3, #0]
     e7a:	4c11      	ldr	r4, [pc, #68]	; (ec0 <vTaskSwitchContext+0x9c>)
     e7c:	009a      	lsls	r2, r3, #2
     e7e:	18d1      	adds	r1, r2, r3
     e80:	0089      	lsls	r1, r1, #2
     e82:	1861      	adds	r1, r4, r1
     e84:	6848      	ldr	r0, [r1, #4]
     e86:	6840      	ldr	r0, [r0, #4]
     e88:	6048      	str	r0, [r1, #4]
     e8a:	18d2      	adds	r2, r2, r3
     e8c:	0092      	lsls	r2, r2, #2
     e8e:	3208      	adds	r2, #8
     e90:	18a2      	adds	r2, r4, r2
     e92:	4290      	cmp	r0, r2
     e94:	d105      	bne.n	ea2 <vTaskSwitchContext+0x7e>
     e96:	6841      	ldr	r1, [r0, #4]
     e98:	009a      	lsls	r2, r3, #2
     e9a:	18d2      	adds	r2, r2, r3
     e9c:	0092      	lsls	r2, r2, #2
     e9e:	18a2      	adds	r2, r4, r2
     ea0:	6051      	str	r1, [r2, #4]
     ea2:	009a      	lsls	r2, r3, #2
     ea4:	18d3      	adds	r3, r2, r3
     ea6:	009b      	lsls	r3, r3, #2
     ea8:	4a05      	ldr	r2, [pc, #20]	; (ec0 <vTaskSwitchContext+0x9c>)
     eaa:	18d3      	adds	r3, r2, r3
     eac:	685b      	ldr	r3, [r3, #4]
     eae:	68da      	ldr	r2, [r3, #12]
     eb0:	4b05      	ldr	r3, [pc, #20]	; (ec8 <vTaskSwitchContext+0xa4>)
     eb2:	601a      	str	r2, [r3, #0]

		traceTASK_SWITCHED_IN();
	}
}
     eb4:	bd10      	pop	{r4, pc}
     eb6:	46c0      	nop			; (mov r8, r8)
     eb8:	20000320 	.word	0x20000320
     ebc:	20000344 	.word	0x20000344
     ec0:	200002a8 	.word	0x200002a8
     ec4:	20000360 	.word	0x20000360
     ec8:	20000324 	.word	0x20000324

00000ecc <vTaskPlaceOnEventList>:
/*-----------------------------------------------------------*/

void vTaskPlaceOnEventList( const xList * const pxEventList, portTickType xTicksToWait )
{
     ecc:	b538      	push	{r3, r4, r5, lr}
portTickType xTimeToWake;

	configASSERT( pxEventList );
     ece:	2800      	cmp	r0, #0
     ed0:	d101      	bne.n	ed6 <vTaskPlaceOnEventList+0xa>
     ed2:	b672      	cpsid	i
     ed4:	e7fe      	b.n	ed4 <vTaskPlaceOnEventList+0x8>
     ed6:	1c0c      	adds	r4, r1, #0
	SCHEDULER SUSPENDED. */

	/* Place the event list item of the TCB in the appropriate event list.
	This is placed in the list in priority order so the highest priority task
	is the first to be woken by the event. */
	vListInsert( ( xList * ) pxEventList, ( xListItem * ) &( pxCurrentTCB->xEventListItem ) );
     ed8:	4d07      	ldr	r5, [pc, #28]	; (ef8 <vTaskPlaceOnEventList+0x2c>)
     eda:	6829      	ldr	r1, [r5, #0]
     edc:	3118      	adds	r1, #24
     ede:	4b07      	ldr	r3, [pc, #28]	; (efc <vTaskPlaceOnEventList+0x30>)
     ee0:	4798      	blx	r3

	/* We must remove ourselves from the ready list before adding ourselves
	to the blocked list as the same list item is used for both lists.  We have
	exclusive access to the ready lists as the scheduler is locked. */
	if( uxListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) ) == 0 )
     ee2:	6828      	ldr	r0, [r5, #0]
     ee4:	3004      	adds	r0, #4
     ee6:	4b06      	ldr	r3, [pc, #24]	; (f00 <vTaskPlaceOnEventList+0x34>)
     ee8:	4798      	blx	r3
	}
	#else /* INCLUDE_vTaskSuspend */
	{
			/* Calculate the time at which the task should be woken if the event does
			not occur.  This may overflow but this doesn't matter. */
			xTimeToWake = xTickCount + xTicksToWait;
     eea:	4b06      	ldr	r3, [pc, #24]	; (f04 <vTaskPlaceOnEventList+0x38>)
     eec:	6818      	ldr	r0, [r3, #0]
     eee:	1820      	adds	r0, r4, r0
			prvAddCurrentTaskToDelayedList( xTimeToWake );
     ef0:	4b05      	ldr	r3, [pc, #20]	; (f08 <vTaskPlaceOnEventList+0x3c>)
     ef2:	4798      	blx	r3
	}
	#endif /* INCLUDE_vTaskSuspend */
}
     ef4:	bd38      	pop	{r3, r4, r5, pc}
     ef6:	46c0      	nop			; (mov r8, r8)
     ef8:	20000324 	.word	0x20000324
     efc:	000008b5 	.word	0x000008b5
     f00:	000008ed 	.word	0x000008ed
     f04:	2000033c 	.word	0x2000033c
     f08:	00000919 	.word	0x00000919

00000f0c <xTaskRemoveFromEventList>:

#endif /* configUSE_TIMERS */
/*-----------------------------------------------------------*/

signed portBASE_TYPE xTaskRemoveFromEventList( const xList * const pxEventList )
{
     f0c:	b538      	push	{r3, r4, r5, lr}
	get called - the lock count on the queue will get modified instead.  This
	means we can always expect exclusive access to the event list here.

	This function assumes that a check has already been made to ensure that
	pxEventList is not empty. */
	pxUnblockedTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
     f0e:	68c3      	ldr	r3, [r0, #12]
     f10:	68dd      	ldr	r5, [r3, #12]
	configASSERT( pxUnblockedTCB );
     f12:	2d00      	cmp	r5, #0
     f14:	d101      	bne.n	f1a <xTaskRemoveFromEventList+0xe>
     f16:	b672      	cpsid	i
     f18:	e7fe      	b.n	f18 <xTaskRemoveFromEventList+0xc>
	uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
     f1a:	1c2c      	adds	r4, r5, #0
     f1c:	3418      	adds	r4, #24
     f1e:	1c20      	adds	r0, r4, #0
     f20:	4b12      	ldr	r3, [pc, #72]	; (f6c <xTaskRemoveFromEventList+0x60>)
     f22:	4798      	blx	r3

	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
     f24:	4b12      	ldr	r3, [pc, #72]	; (f70 <xTaskRemoveFromEventList+0x64>)
     f26:	681b      	ldr	r3, [r3, #0]
     f28:	2b00      	cmp	r3, #0
     f2a:	d113      	bne.n	f54 <xTaskRemoveFromEventList+0x48>
	{
		uxListRemove( &( pxUnblockedTCB->xGenericListItem ) );
     f2c:	1d2c      	adds	r4, r5, #4
     f2e:	1c20      	adds	r0, r4, #0
     f30:	4b0e      	ldr	r3, [pc, #56]	; (f6c <xTaskRemoveFromEventList+0x60>)
     f32:	4798      	blx	r3
		prvAddTaskToReadyQueue( pxUnblockedTCB );
     f34:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
     f36:	4a0f      	ldr	r2, [pc, #60]	; (f74 <xTaskRemoveFromEventList+0x68>)
     f38:	6812      	ldr	r2, [r2, #0]
     f3a:	4293      	cmp	r3, r2
     f3c:	d901      	bls.n	f42 <xTaskRemoveFromEventList+0x36>
     f3e:	4a0d      	ldr	r2, [pc, #52]	; (f74 <xTaskRemoveFromEventList+0x68>)
     f40:	6013      	str	r3, [r2, #0]
     f42:	0098      	lsls	r0, r3, #2
     f44:	18c3      	adds	r3, r0, r3
     f46:	009b      	lsls	r3, r3, #2
     f48:	480b      	ldr	r0, [pc, #44]	; (f78 <xTaskRemoveFromEventList+0x6c>)
     f4a:	18c0      	adds	r0, r0, r3
     f4c:	1c21      	adds	r1, r4, #0
     f4e:	4b0b      	ldr	r3, [pc, #44]	; (f7c <xTaskRemoveFromEventList+0x70>)
     f50:	4798      	blx	r3
     f52:	e003      	b.n	f5c <xTaskRemoveFromEventList+0x50>
	}
	else
	{
		/* We cannot access the delayed or ready lists, so will hold this
		task pending until the scheduler is resumed. */
		vListInsertEnd( ( xList * ) &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
     f54:	480a      	ldr	r0, [pc, #40]	; (f80 <xTaskRemoveFromEventList+0x74>)
     f56:	1c21      	adds	r1, r4, #0
     f58:	4b08      	ldr	r3, [pc, #32]	; (f7c <xTaskRemoveFromEventList+0x70>)
     f5a:	4798      	blx	r3
	}

	if( pxUnblockedTCB->uxPriority >= pxCurrentTCB->uxPriority )
     f5c:	4b09      	ldr	r3, [pc, #36]	; (f84 <xTaskRemoveFromEventList+0x78>)
     f5e:	681b      	ldr	r3, [r3, #0]
     f60:	6aea      	ldr	r2, [r5, #44]	; 0x2c
     f62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     f64:	2000      	movs	r0, #0
     f66:	429a      	cmp	r2, r3
     f68:	4140      	adcs	r0, r0
	{
		xReturn = pdFALSE;
	}

	return xReturn;
}
     f6a:	bd38      	pop	{r3, r4, r5, pc}
     f6c:	000008ed 	.word	0x000008ed
     f70:	20000320 	.word	0x20000320
     f74:	20000344 	.word	0x20000344
     f78:	200002a8 	.word	0x200002a8
     f7c:	00000899 	.word	0x00000899
     f80:	20000328 	.word	0x20000328
     f84:	20000324 	.word	0x20000324

00000f88 <vTaskSetTimeOutState>:
/*-----------------------------------------------------------*/

void vTaskSetTimeOutState( xTimeOutType * const pxTimeOut )
{
	configASSERT( pxTimeOut );
     f88:	2800      	cmp	r0, #0
     f8a:	d101      	bne.n	f90 <vTaskSetTimeOutState+0x8>
     f8c:	b672      	cpsid	i
     f8e:	e7fe      	b.n	f8e <vTaskSetTimeOutState+0x6>
	pxTimeOut->xOverflowCount = xNumOfOverflows;
     f90:	4b03      	ldr	r3, [pc, #12]	; (fa0 <vTaskSetTimeOutState+0x18>)
     f92:	681b      	ldr	r3, [r3, #0]
     f94:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
     f96:	4b03      	ldr	r3, [pc, #12]	; (fa4 <vTaskSetTimeOutState+0x1c>)
     f98:	681b      	ldr	r3, [r3, #0]
     f9a:	6043      	str	r3, [r0, #4]
}
     f9c:	4770      	bx	lr
     f9e:	46c0      	nop			; (mov r8, r8)
     fa0:	20000290 	.word	0x20000290
     fa4:	2000033c 	.word	0x2000033c

00000fa8 <xTaskCheckForTimeOut>:
/*-----------------------------------------------------------*/

portBASE_TYPE xTaskCheckForTimeOut( xTimeOutType * const pxTimeOut, portTickType * const pxTicksToWait )
{
     fa8:	b570      	push	{r4, r5, r6, lr}
portBASE_TYPE xReturn;

	configASSERT( pxTimeOut );
     faa:	2800      	cmp	r0, #0
     fac:	d101      	bne.n	fb2 <xTaskCheckForTimeOut+0xa>
     fae:	b672      	cpsid	i
     fb0:	e7fe      	b.n	fb0 <xTaskCheckForTimeOut+0x8>
	configASSERT( pxTicksToWait );
     fb2:	2900      	cmp	r1, #0
     fb4:	d101      	bne.n	fba <xTaskCheckForTimeOut+0x12>
     fb6:	b672      	cpsid	i
     fb8:	e7fe      	b.n	fb8 <xTaskCheckForTimeOut+0x10>
     fba:	1c0d      	adds	r5, r1, #0
     fbc:	1c04      	adds	r4, r0, #0

	taskENTER_CRITICAL();
     fbe:	4b11      	ldr	r3, [pc, #68]	; (1004 <xTaskCheckForTimeOut+0x5c>)
     fc0:	4798      	blx	r3
				xReturn = pdFALSE;
			}
			else /* We are not blocking indefinitely, perform the checks below. */
		#endif

		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( ( portTickType ) xTickCount >= ( portTickType ) pxTimeOut->xTimeOnEntering ) )
     fc2:	4b11      	ldr	r3, [pc, #68]	; (1008 <xTaskCheckForTimeOut+0x60>)
     fc4:	681b      	ldr	r3, [r3, #0]
     fc6:	6822      	ldr	r2, [r4, #0]
     fc8:	429a      	cmp	r2, r3
     fca:	d005      	beq.n	fd8 <xTaskCheckForTimeOut+0x30>
     fcc:	4b0f      	ldr	r3, [pc, #60]	; (100c <xTaskCheckForTimeOut+0x64>)
     fce:	681b      	ldr	r3, [r3, #0]
		{
			/* The tick count is greater than the time at which vTaskSetTimeout()
			was called, but has also overflowed since vTaskSetTimeOut() was called.
			It must have wrapped all the way around and gone past us again. This
			passed since vTaskSetTimeout() was called. */
			xReturn = pdTRUE;
     fd0:	2601      	movs	r6, #1
				xReturn = pdFALSE;
			}
			else /* We are not blocking indefinitely, perform the checks below. */
		#endif

		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( ( portTickType ) xTickCount >= ( portTickType ) pxTimeOut->xTimeOnEntering ) )
     fd2:	6862      	ldr	r2, [r4, #4]
     fd4:	429a      	cmp	r2, r3
     fd6:	d910      	bls.n	ffa <xTaskCheckForTimeOut+0x52>
			was called, but has also overflowed since vTaskSetTimeOut() was called.
			It must have wrapped all the way around and gone past us again. This
			passed since vTaskSetTimeout() was called. */
			xReturn = pdTRUE;
		}
		else if( ( ( portTickType ) ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering ) ) < ( portTickType ) *pxTicksToWait )
     fd8:	4b0c      	ldr	r3, [pc, #48]	; (100c <xTaskCheckForTimeOut+0x64>)
     fda:	6819      	ldr	r1, [r3, #0]
     fdc:	6860      	ldr	r0, [r4, #4]
     fde:	682b      	ldr	r3, [r5, #0]
     fe0:	1a09      	subs	r1, r1, r0
			vTaskSetTimeOutState( pxTimeOut );
			xReturn = pdFALSE;
		}
		else
		{
			xReturn = pdTRUE;
     fe2:	2601      	movs	r6, #1
			was called, but has also overflowed since vTaskSetTimeOut() was called.
			It must have wrapped all the way around and gone past us again. This
			passed since vTaskSetTimeout() was called. */
			xReturn = pdTRUE;
		}
		else if( ( ( portTickType ) ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering ) ) < ( portTickType ) *pxTicksToWait )
     fe4:	4299      	cmp	r1, r3
     fe6:	d208      	bcs.n	ffa <xTaskCheckForTimeOut+0x52>
		{
			/* Not a genuine timeout. Adjust parameters for time remaining. */
			*pxTicksToWait -= ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering );
     fe8:	4a08      	ldr	r2, [pc, #32]	; (100c <xTaskCheckForTimeOut+0x64>)
     fea:	6812      	ldr	r2, [r2, #0]
     fec:	1a12      	subs	r2, r2, r0
     fee:	1a9b      	subs	r3, r3, r2
     ff0:	602b      	str	r3, [r5, #0]
			vTaskSetTimeOutState( pxTimeOut );
     ff2:	1c20      	adds	r0, r4, #0
     ff4:	4b06      	ldr	r3, [pc, #24]	; (1010 <xTaskCheckForTimeOut+0x68>)
     ff6:	4798      	blx	r3
			xReturn = pdFALSE;
     ff8:	2600      	movs	r6, #0
		else
		{
			xReturn = pdTRUE;
		}
	}
	taskEXIT_CRITICAL();
     ffa:	4b06      	ldr	r3, [pc, #24]	; (1014 <xTaskCheckForTimeOut+0x6c>)
     ffc:	4798      	blx	r3

	return xReturn;
}
     ffe:	1c30      	adds	r0, r6, #0
    1000:	bd70      	pop	{r4, r5, r6, pc}
    1002:	46c0      	nop			; (mov r8, r8)
    1004:	00001175 	.word	0x00001175
    1008:	20000290 	.word	0x20000290
    100c:	2000033c 	.word	0x2000033c
    1010:	00000f89 	.word	0x00000f89
    1014:	0000118d 	.word	0x0000118d

00001018 <vTaskMissedYield>:
/*-----------------------------------------------------------*/

void vTaskMissedYield( void )
{
	xMissedYield = pdTRUE;
    1018:	2201      	movs	r2, #1
    101a:	4b01      	ldr	r3, [pc, #4]	; (1020 <vTaskMissedYield+0x8>)
    101c:	601a      	str	r2, [r3, #0]
}
    101e:	4770      	bx	lr
    1020:	20000360 	.word	0x20000360

00001024 <xTaskGetCurrentTaskHandle>:
	xTaskHandle xReturn;

		/* A critical section is not required as this is not called from
		an interrupt and the current TCB will always be the same for any
		individual execution thread. */
		xReturn = pxCurrentTCB;
    1024:	4b01      	ldr	r3, [pc, #4]	; (102c <xTaskGetCurrentTaskHandle+0x8>)
    1026:	6818      	ldr	r0, [r3, #0]

		return xReturn;
	}
    1028:	4770      	bx	lr
    102a:	46c0      	nop			; (mov r8, r8)
    102c:	20000324 	.word	0x20000324

00001030 <vTaskPriorityInherit>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	void vTaskPriorityInherit( xTaskHandle * const pxMutexHolder )
	{
    1030:	b538      	push	{r3, r4, r5, lr}
	tskTCB * const pxTCB = ( tskTCB * ) pxMutexHolder;

		/* If the mutex was given back by an interrupt while the queue was
		locked then the mutex holder might now be NULL. */
		if( pxMutexHolder != NULL )
    1032:	2800      	cmp	r0, #0
    1034:	d02f      	beq.n	1096 <vTaskPriorityInherit+0x66>
		{
			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
    1036:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    1038:	4a17      	ldr	r2, [pc, #92]	; (1098 <vTaskPriorityInherit+0x68>)
    103a:	6812      	ldr	r2, [r2, #0]
    103c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
    103e:	4293      	cmp	r3, r2
    1040:	d229      	bcs.n	1096 <vTaskPriorityInherit+0x66>
			{
				/* Adjust the mutex holder state to account for its new priority. */
				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) pxCurrentTCB->uxPriority );
    1042:	4a15      	ldr	r2, [pc, #84]	; (1098 <vTaskPriorityInherit+0x68>)
    1044:	6812      	ldr	r2, [r2, #0]
    1046:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
    1048:	2206      	movs	r2, #6
    104a:	1a52      	subs	r2, r2, r1
    104c:	6182      	str	r2, [r0, #24]

				/* If the task being modified is in the ready state it will need to
				be moved into a new list. */
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xGenericListItem ) ) != pdFALSE )
    104e:	009a      	lsls	r2, r3, #2
    1050:	18d3      	adds	r3, r2, r3
    1052:	009b      	lsls	r3, r3, #2
    1054:	4a11      	ldr	r2, [pc, #68]	; (109c <vTaskPriorityInherit+0x6c>)
    1056:	18d3      	adds	r3, r2, r3
    1058:	6942      	ldr	r2, [r0, #20]
    105a:	429a      	cmp	r2, r3
    105c:	d117      	bne.n	108e <vTaskPriorityInherit+0x5e>
    105e:	1c05      	adds	r5, r0, #0
				{
					if( uxListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) ) == 0 )
    1060:	1d04      	adds	r4, r0, #4
    1062:	1c20      	adds	r0, r4, #0
    1064:	4b0e      	ldr	r3, [pc, #56]	; (10a0 <vTaskPriorityInherit+0x70>)
    1066:	4798      	blx	r3
					{
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
					}

					/* Inherit the priority before being moved into the new list. */
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
    1068:	4b0b      	ldr	r3, [pc, #44]	; (1098 <vTaskPriorityInherit+0x68>)
    106a:	681b      	ldr	r3, [r3, #0]
    106c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    106e:	62eb      	str	r3, [r5, #44]	; 0x2c
					prvAddTaskToReadyQueue( pxTCB );
    1070:	4a0c      	ldr	r2, [pc, #48]	; (10a4 <vTaskPriorityInherit+0x74>)
    1072:	6812      	ldr	r2, [r2, #0]
    1074:	4293      	cmp	r3, r2
    1076:	d901      	bls.n	107c <vTaskPriorityInherit+0x4c>
    1078:	4a0a      	ldr	r2, [pc, #40]	; (10a4 <vTaskPriorityInherit+0x74>)
    107a:	6013      	str	r3, [r2, #0]
    107c:	0098      	lsls	r0, r3, #2
    107e:	18c0      	adds	r0, r0, r3
    1080:	0083      	lsls	r3, r0, #2
    1082:	4806      	ldr	r0, [pc, #24]	; (109c <vTaskPriorityInherit+0x6c>)
    1084:	18c0      	adds	r0, r0, r3
    1086:	1c21      	adds	r1, r4, #0
    1088:	4b07      	ldr	r3, [pc, #28]	; (10a8 <vTaskPriorityInherit+0x78>)
    108a:	4798      	blx	r3
    108c:	e003      	b.n	1096 <vTaskPriorityInherit+0x66>
				}
				else
				{
					/* Just inherit the priority. */
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
    108e:	4b02      	ldr	r3, [pc, #8]	; (1098 <vTaskPriorityInherit+0x68>)
    1090:	681b      	ldr	r3, [r3, #0]
    1092:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    1094:	62c3      	str	r3, [r0, #44]	; 0x2c
				}

				traceTASK_PRIORITY_INHERIT( pxTCB, pxCurrentTCB->uxPriority );
			}
		}
	}
    1096:	bd38      	pop	{r3, r4, r5, pc}
    1098:	20000324 	.word	0x20000324
    109c:	200002a8 	.word	0x200002a8
    10a0:	000008ed 	.word	0x000008ed
    10a4:	20000344 	.word	0x20000344
    10a8:	00000899 	.word	0x00000899

000010ac <vTaskPriorityDisinherit>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	void vTaskPriorityDisinherit( xTaskHandle * const pxMutexHolder )
	{
    10ac:	b538      	push	{r3, r4, r5, lr}
	tskTCB * const pxTCB = ( tskTCB * ) pxMutexHolder;

		if( pxMutexHolder != NULL )
    10ae:	2800      	cmp	r0, #0
    10b0:	d01b      	beq.n	10ea <vTaskPriorityDisinherit+0x3e>
		{
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    10b2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    10b4:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
    10b6:	4293      	cmp	r3, r2
    10b8:	d017      	beq.n	10ea <vTaskPriorityDisinherit+0x3e>
    10ba:	1c04      	adds	r4, r0, #0
			{
				/* We must be the running task to be able to give the mutex back.
				Remove ourselves from the ready list we currently appear in. */
				if( uxListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) ) == 0 )
    10bc:	1d05      	adds	r5, r0, #4
    10be:	1c28      	adds	r0, r5, #0
    10c0:	4b0a      	ldr	r3, [pc, #40]	; (10ec <vTaskPriorityDisinherit+0x40>)
    10c2:	4798      	blx	r3
				}

				/* Disinherit the priority before adding the task into the new
				ready list. */
				traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
				pxTCB->uxPriority = pxTCB->uxBasePriority;
    10c4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    10c6:	62e3      	str	r3, [r4, #44]	; 0x2c
				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) pxTCB->uxPriority );
    10c8:	2206      	movs	r2, #6
    10ca:	1ad2      	subs	r2, r2, r3
    10cc:	61a2      	str	r2, [r4, #24]
				prvAddTaskToReadyQueue( pxTCB );
    10ce:	4a08      	ldr	r2, [pc, #32]	; (10f0 <vTaskPriorityDisinherit+0x44>)
    10d0:	6812      	ldr	r2, [r2, #0]
    10d2:	4293      	cmp	r3, r2
    10d4:	d901      	bls.n	10da <vTaskPriorityDisinherit+0x2e>
    10d6:	4a06      	ldr	r2, [pc, #24]	; (10f0 <vTaskPriorityDisinherit+0x44>)
    10d8:	6013      	str	r3, [r2, #0]
    10da:	0098      	lsls	r0, r3, #2
    10dc:	18c0      	adds	r0, r0, r3
    10de:	0083      	lsls	r3, r0, #2
    10e0:	4804      	ldr	r0, [pc, #16]	; (10f4 <vTaskPriorityDisinherit+0x48>)
    10e2:	18c0      	adds	r0, r0, r3
    10e4:	1c29      	adds	r1, r5, #0
    10e6:	4b04      	ldr	r3, [pc, #16]	; (10f8 <vTaskPriorityDisinherit+0x4c>)
    10e8:	4798      	blx	r3
			}
		}
	}
    10ea:	bd38      	pop	{r3, r4, r5, pc}
    10ec:	000008ed 	.word	0x000008ed
    10f0:	20000344 	.word	0x20000344
    10f4:	200002a8 	.word	0x200002a8
    10f8:	00000899 	.word	0x00000899

000010fc <vPortStartFirstTask>:
void vPortStartFirstTask( void )
{
	/* The MSP stack is not reset as, unlike on M3/4 parts, there is no vector
	table offset register that can be used to locate the initial stack value.
	Not all M0 parts have the application vector table at address 0. */
	__asm volatile(
    10fc:	4a06      	ldr	r2, [pc, #24]	; (1118 <pxCurrentTCBConst3>)
    10fe:	6813      	ldr	r3, [r2, #0]
    1100:	6818      	ldr	r0, [r3, #0]
    1102:	3020      	adds	r0, #32
    1104:	f380 8809 	msr	PSP, r0
    1108:	2002      	movs	r0, #2
    110a:	f380 8814 	msr	CONTROL, r0
    110e:	bc3f      	pop	{r0, r1, r2, r3, r4, r5}
    1110:	46ae      	mov	lr, r5
    1112:	b662      	cpsie	i
    1114:	bd00      	pop	{pc}
    1116:	46c0      	nop			; (mov r8, r8)

00001118 <pxCurrentTCBConst3>:
    1118:	20000324 	.word	0x20000324

0000111c <pxPortInitialiseStack>:

/*
 * See header file for description.
 */
portSTACK_TYPE *pxPortInitialiseStack( portSTACK_TYPE *pxTopOfStack, pdTASK_CODE pxCode, void *pvParameters )
{
    111c:	b510      	push	{r4, lr}
	/* Simulate the stack frame as it would be created by a context switch
	interrupt. */
	pxTopOfStack--; /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
    111e:	1f03      	subs	r3, r0, #4
    1120:	2480      	movs	r4, #128	; 0x80
    1122:	0464      	lsls	r4, r4, #17
    1124:	601c      	str	r4, [r3, #0]
	pxTopOfStack--;
	*pxTopOfStack = ( portSTACK_TYPE ) pxCode;	/* PC */
    1126:	3b04      	subs	r3, #4
    1128:	6019      	str	r1, [r3, #0]
	pxTopOfStack -= 6;	/* LR, R12, R3..R1 */
	*pxTopOfStack = ( portSTACK_TYPE ) pvParameters;	/* R0 */
    112a:	3b18      	subs	r3, #24
    112c:	601a      	str	r2, [r3, #0]
	pxTopOfStack -= 8; /* R11..R4. */
    112e:	3840      	subs	r0, #64	; 0x40

	return pxTopOfStack;
}
    1130:	bd10      	pop	{r4, pc}
    1132:	46c0      	nop			; (mov r8, r8)

00001134 <SVC_Handler>:
/*-----------------------------------------------------------*/

void vPortSVCHandler( void )
{
	__asm volatile (
    1134:	4b08      	ldr	r3, [pc, #32]	; (1158 <pxCurrentTCBConst2>)
    1136:	6819      	ldr	r1, [r3, #0]
    1138:	6808      	ldr	r0, [r1, #0]
    113a:	3010      	adds	r0, #16
    113c:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
    113e:	46a0      	mov	r8, r4
    1140:	46a9      	mov	r9, r5
    1142:	46b2      	mov	sl, r6
    1144:	46bb      	mov	fp, r7
    1146:	f380 8809 	msr	PSP, r0
    114a:	3820      	subs	r0, #32
    114c:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
    114e:	4671      	mov	r1, lr
    1150:	200d      	movs	r0, #13
    1152:	4301      	orrs	r1, r0
    1154:	4708      	bx	r1
    1156:	46c0      	nop			; (mov r8, r8)

00001158 <pxCurrentTCBConst2>:
    1158:	20000324 	.word	0x20000324

0000115c <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield( void )
{
	/* Set a PendSV to request a context switch. */
	*( portNVIC_INT_CTRL ) = portNVIC_PENDSVSET;
    115c:	2280      	movs	r2, #128	; 0x80
    115e:	0552      	lsls	r2, r2, #21
    1160:	4b03      	ldr	r3, [pc, #12]	; (1170 <vPortYield+0x14>)
    1162:	601a      	str	r2, [r3, #0]

	/* Barriers are normally not required but do ensure the code is completely
	within the specified behaviour for the architecture. */
	__asm volatile( "dsb" );
    1164:	f3bf 8f4f 	dsb	sy
	__asm volatile( "isb" );
    1168:	f3bf 8f6f 	isb	sy
}
    116c:	4770      	bx	lr
    116e:	46c0      	nop			; (mov r8, r8)
    1170:	e000ed04 	.word	0xe000ed04

00001174 <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical( void )
{
    portDISABLE_INTERRUPTS();
    1174:	b672      	cpsid	i
    uxCriticalNesting++;
    1176:	4a04      	ldr	r2, [pc, #16]	; (1188 <vPortEnterCritical+0x14>)
    1178:	6813      	ldr	r3, [r2, #0]
    117a:	3301      	adds	r3, #1
    117c:	6013      	str	r3, [r2, #0]
	__asm volatile( "dsb" );
    117e:	f3bf 8f4f 	dsb	sy
	__asm volatile( "isb" );
    1182:	f3bf 8f6f 	isb	sy
}
    1186:	4770      	bx	lr
    1188:	200000b8 	.word	0x200000b8

0000118c <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
    uxCriticalNesting--;
    118c:	4a03      	ldr	r2, [pc, #12]	; (119c <vPortExitCritical+0x10>)
    118e:	6813      	ldr	r3, [r2, #0]
    1190:	3b01      	subs	r3, #1
    1192:	6013      	str	r3, [r2, #0]
    if( uxCriticalNesting == 0 )
    1194:	2b00      	cmp	r3, #0
    1196:	d100      	bne.n	119a <vPortExitCritical+0xe>
    {
        portENABLE_INTERRUPTS();
    1198:	b662      	cpsie	i
    }
}
    119a:	4770      	bx	lr
    119c:	200000b8 	.word	0x200000b8

000011a0 <PendSV_Handler>:

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
    11a0:	f3ef 8009 	mrs	r0, PSP
    11a4:	4b0e      	ldr	r3, [pc, #56]	; (11e0 <pxCurrentTCBConst>)
    11a6:	681a      	ldr	r2, [r3, #0]
    11a8:	3820      	subs	r0, #32
    11aa:	6010      	str	r0, [r2, #0]
    11ac:	c0f0      	stmia	r0!, {r4, r5, r6, r7}
    11ae:	4644      	mov	r4, r8
    11b0:	464d      	mov	r5, r9
    11b2:	4656      	mov	r6, sl
    11b4:	465f      	mov	r7, fp
    11b6:	c0f0      	stmia	r0!, {r4, r5, r6, r7}
    11b8:	b508      	push	{r3, lr}
    11ba:	b672      	cpsid	i
    11bc:	f7ff fe32 	bl	e24 <vTaskSwitchContext>
    11c0:	b662      	cpsie	i
    11c2:	bc0c      	pop	{r2, r3}
    11c4:	6811      	ldr	r1, [r2, #0]
    11c6:	6808      	ldr	r0, [r1, #0]
    11c8:	3010      	adds	r0, #16
    11ca:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
    11cc:	46a0      	mov	r8, r4
    11ce:	46a9      	mov	r9, r5
    11d0:	46b2      	mov	sl, r6
    11d2:	46bb      	mov	fp, r7
    11d4:	f380 8809 	msr	PSP, r0
    11d8:	3820      	subs	r0, #32
    11da:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
    11dc:	4718      	bx	r3
    11de:	46c0      	nop			; (mov r8, r8)

000011e0 <pxCurrentTCBConst>:
    11e0:	20000324 	.word	0x20000324

000011e4 <SysTick_Handler>:
	);
}
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
    11e4:	b508      	push	{r3, lr}
unsigned long ulDummy;

	/* If using preemption, also force a context switch. */
	#if configUSE_PREEMPTION == 1
		*(portNVIC_INT_CTRL) = portNVIC_PENDSVSET;
    11e6:	2280      	movs	r2, #128	; 0x80
    11e8:	0552      	lsls	r2, r2, #21
    11ea:	4b03      	ldr	r3, [pc, #12]	; (11f8 <SysTick_Handler+0x14>)
    11ec:	601a      	str	r2, [r3, #0]
	#endif

	ulDummy = portSET_INTERRUPT_MASK_FROM_ISR();
    11ee:	b672      	cpsid	i
	{
		vTaskIncrementTick();
    11f0:	4b02      	ldr	r3, [pc, #8]	; (11fc <SysTick_Handler+0x18>)
    11f2:	4798      	blx	r3
	}
	portCLEAR_INTERRUPT_MASK_FROM_ISR( ulDummy );
    11f4:	b662      	cpsie	i
}
    11f6:	bd08      	pop	{r3, pc}
    11f8:	e000ed04 	.word	0xe000ed04
    11fc:	00000bc5 	.word	0x00000bc5

00001200 <vPortSetupTimerInterrupt>:
/*
 * Setup the systick timer to generate the tick interrupts at the required
 * frequency.
 */
__attribute__(( weak )) void vPortSetupTimerInterrupt( void )
{
    1200:	b508      	push	{r3, lr}
	/* Configure SysTick to interrupt at the requested rate. */
	*(portNVIC_SYSTICK_VAL)  = 0; /* Load the SysTick Counter Value */
    1202:	2200      	movs	r2, #0
    1204:	4b07      	ldr	r3, [pc, #28]	; (1224 <vPortSetupTimerInterrupt+0x24>)
    1206:	601a      	str	r2, [r3, #0]
	*(portNVIC_SYSTICK_LOAD) = ( configCPU_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
    1208:	2000      	movs	r0, #0
    120a:	4b07      	ldr	r3, [pc, #28]	; (1228 <vPortSetupTimerInterrupt+0x28>)
    120c:	4798      	blx	r3
    120e:	21fa      	movs	r1, #250	; 0xfa
    1210:	0089      	lsls	r1, r1, #2
    1212:	4b06      	ldr	r3, [pc, #24]	; (122c <vPortSetupTimerInterrupt+0x2c>)
    1214:	4798      	blx	r3
    1216:	3801      	subs	r0, #1
    1218:	4b05      	ldr	r3, [pc, #20]	; (1230 <vPortSetupTimerInterrupt+0x30>)
    121a:	6018      	str	r0, [r3, #0]
	*(portNVIC_SYSTICK_CTRL) = portNVIC_SYSTICK_CLK | portNVIC_SYSTICK_INT | portNVIC_SYSTICK_ENABLE;
    121c:	2207      	movs	r2, #7
    121e:	4b05      	ldr	r3, [pc, #20]	; (1234 <vPortSetupTimerInterrupt+0x34>)
    1220:	601a      	str	r2, [r3, #0]
}
    1222:	bd08      	pop	{r3, pc}
    1224:	e000e018 	.word	0xe000e018
    1228:	00002d41 	.word	0x00002d41
    122c:	000058e1 	.word	0x000058e1
    1230:	e000e014 	.word	0xe000e014
    1234:	e000e010 	.word	0xe000e010

00001238 <xPortStartScheduler>:

/*
 * See header file for description.
 */
portBASE_TYPE xPortStartScheduler( void )
{
    1238:	b508      	push	{r3, lr}
	/* Make PendSV, CallSV and SysTick the same priroity as the kernel. */
	*(portNVIC_SYSPRI2) |= portNVIC_PENDSV_PRI;
    123a:	4b0a      	ldr	r3, [pc, #40]	; (1264 <xPortStartScheduler+0x2c>)
    123c:	681a      	ldr	r2, [r3, #0]
    123e:	21ff      	movs	r1, #255	; 0xff
    1240:	0409      	lsls	r1, r1, #16
    1242:	430a      	orrs	r2, r1
    1244:	601a      	str	r2, [r3, #0]
	*(portNVIC_SYSPRI2) |= portNVIC_SYSTICK_PRI;
    1246:	681a      	ldr	r2, [r3, #0]
    1248:	21ff      	movs	r1, #255	; 0xff
    124a:	0609      	lsls	r1, r1, #24
    124c:	430a      	orrs	r2, r1
    124e:	601a      	str	r2, [r3, #0]

	/* Start the timer that generates the tick ISR.  Interrupts are disabled
	here already. */
	vPortSetupTimerInterrupt();
    1250:	4b05      	ldr	r3, [pc, #20]	; (1268 <xPortStartScheduler+0x30>)
    1252:	4798      	blx	r3

	/* Initialise the critical nesting count ready for the first task. */
	uxCriticalNesting = 0;
    1254:	2200      	movs	r2, #0
    1256:	4b05      	ldr	r3, [pc, #20]	; (126c <xPortStartScheduler+0x34>)
    1258:	601a      	str	r2, [r3, #0]

	/* Start the first task. */
	vPortStartFirstTask();
    125a:	4b05      	ldr	r3, [pc, #20]	; (1270 <xPortStartScheduler+0x38>)
    125c:	4798      	blx	r3

	/* Should not get here! */
	return 0;
}
    125e:	2000      	movs	r0, #0
    1260:	bd08      	pop	{r3, pc}
    1262:	46c0      	nop			; (mov r8, r8)
    1264:	e000ed20 	.word	0xe000ed20
    1268:	00001201 	.word	0x00001201
    126c:	200000b8 	.word	0x200000b8
    1270:	000010fd 	.word	0x000010fd

00001274 <pvPortMalloc>:
static size_t xNextFreeByte = ( size_t ) 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
    1274:	b538      	push	{r3, r4, r5, lr}
    1276:	1c04      	adds	r4, r0, #0
void *pvReturn = NULL;
static unsigned char *pucAlignedHeap = NULL;

	/* Ensure that blocks are always aligned to the required number of bytes. */
	#if portBYTE_ALIGNMENT != 1
		if( xWantedSize & portBYTE_ALIGNMENT_MASK )
    1278:	0743      	lsls	r3, r0, #29
    127a:	d002      	beq.n	1282 <pvPortMalloc+0xe>
		{
			/* Byte alignment required. */
			xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
    127c:	2307      	movs	r3, #7
    127e:	439c      	bics	r4, r3
    1280:	3408      	adds	r4, #8
		}
	#endif

	vTaskSuspendAll();
    1282:	4b10      	ldr	r3, [pc, #64]	; (12c4 <pvPortMalloc+0x50>)
    1284:	4798      	blx	r3
	{
		if( pucAlignedHeap == NULL )
    1286:	4b10      	ldr	r3, [pc, #64]	; (12c8 <pvPortMalloc+0x54>)
    1288:	681b      	ldr	r3, [r3, #0]
    128a:	2b00      	cmp	r3, #0
    128c:	d105      	bne.n	129a <pvPortMalloc+0x26>
		{
			/* Ensure the heap starts on a correctly aligned boundary. */
			pucAlignedHeap = ( unsigned char * ) ( ( ( portPOINTER_SIZE_TYPE ) &ucHeap[ portBYTE_ALIGNMENT ] ) & ( ( portPOINTER_SIZE_TYPE ) ~portBYTE_ALIGNMENT_MASK ) );
    128e:	2207      	movs	r2, #7
    1290:	4b0e      	ldr	r3, [pc, #56]	; (12cc <pvPortMalloc+0x58>)
    1292:	3308      	adds	r3, #8
    1294:	4393      	bics	r3, r2
    1296:	4a0c      	ldr	r2, [pc, #48]	; (12c8 <pvPortMalloc+0x54>)
    1298:	6013      	str	r3, [r2, #0]
		}

		/* Check there is enough room left for the allocation. */
		if( ( ( xNextFreeByte + xWantedSize ) < configADJUSTED_HEAP_SIZE ) &&
    129a:	4b0d      	ldr	r3, [pc, #52]	; (12d0 <pvPortMalloc+0x5c>)
    129c:	681b      	ldr	r3, [r3, #0]
    129e:	18e4      	adds	r4, r4, r3
    12a0:	4a0c      	ldr	r2, [pc, #48]	; (12d4 <pvPortMalloc+0x60>)
    12a2:	4294      	cmp	r4, r2
    12a4:	d807      	bhi.n	12b6 <pvPortMalloc+0x42>
    12a6:	42a3      	cmp	r3, r4
    12a8:	d207      	bcs.n	12ba <pvPortMalloc+0x46>
			( ( xNextFreeByte + xWantedSize ) > xNextFreeByte )	)/* Check for overflow. */
		{
			/* Return the next free byte then increment the index past this
			block. */
			pvReturn = pucAlignedHeap + xNextFreeByte;
    12aa:	4a07      	ldr	r2, [pc, #28]	; (12c8 <pvPortMalloc+0x54>)
    12ac:	6815      	ldr	r5, [r2, #0]
    12ae:	18ed      	adds	r5, r5, r3
			xNextFreeByte += xWantedSize;
    12b0:	4b07      	ldr	r3, [pc, #28]	; (12d0 <pvPortMalloc+0x5c>)
    12b2:	601c      	str	r4, [r3, #0]
    12b4:	e002      	b.n	12bc <pvPortMalloc+0x48>

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
void *pvReturn = NULL;
    12b6:	2500      	movs	r5, #0
    12b8:	e000      	b.n	12bc <pvPortMalloc+0x48>
    12ba:	2500      	movs	r5, #0
			block. */
			pvReturn = pucAlignedHeap + xNextFreeByte;
			xNextFreeByte += xWantedSize;
		}
	}
	xTaskResumeAll();
    12bc:	4b06      	ldr	r3, [pc, #24]	; (12d8 <pvPortMalloc+0x64>)
    12be:	4798      	blx	r3
		}
	}
	#endif

	return pvReturn;
}
    12c0:	1c28      	adds	r0, r5, #0
    12c2:	bd38      	pop	{r3, r4, r5, pc}
    12c4:	00000bb5 	.word	0x00000bb5
    12c8:	20003e08 	.word	0x20003e08
    12cc:	20000370 	.word	0x20000370
    12d0:	2000036c 	.word	0x2000036c
    12d4:	00003a8f 	.word	0x00003a8f
    12d8:	00000ce1 	.word	0x00000ce1

000012dc <vPortFree>:
	heap_4.c for alternative implementations, and the memory management pages of
	http://www.FreeRTOS.org for more information. */
	( void ) pv;

	/* Force an assert as it is invalid to call this function. */
	configASSERT( pv == NULL );
    12dc:	2800      	cmp	r0, #0
    12de:	d001      	beq.n	12e4 <vPortFree+0x8>
    12e0:	b672      	cpsid	i
    12e2:	e7fe      	b.n	12e2 <vPortFree+0x6>
}
    12e4:	4770      	bx	lr
    12e6:	46c0      	nop			; (mov r8, r8)

000012e8 <main>:




int main()
{
    12e8:	b570      	push	{r4, r5, r6, lr}
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    12ea:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
    12ec:	f3bf 8f5f 	dmb	sy
 * Disabled global interrupts in the device, preventing any enabled interrupt
 * handlers from executing.
 */
static inline void system_interrupt_disable_global(void)
{
    cpu_irq_disable();
    12f0:	4c13      	ldr	r4, [pc, #76]	; (1340 <main+0x58>)
    12f2:	2300      	movs	r3, #0
    12f4:	7023      	strb	r3, [r4, #0]
	system_interrupt_disable_global();
	//configureHMI 
	configureHMI();
    12f6:	4b13      	ldr	r3, [pc, #76]	; (1344 <main+0x5c>)
    12f8:	4798      	blx	r3
    //create your task
    kernelConfig();
    12fa:	4b13      	ldr	r3, [pc, #76]	; (1348 <main+0x60>)
    12fc:	4798      	blx	r3
 *
 * Enables global interrupts in the device to fire any enabled interrupt handlers.
 */
static inline void system_interrupt_enable_global(void)
{
    cpu_irq_enable();
    12fe:	2301      	movs	r3, #1
    1300:	7023      	strb	r3, [r4, #0]
    1302:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    1306:	b662      	cpsie	i
    //demask global interrupt
    system_interrupt_enable_global();
    hmi.printf("\r\n\r\n**********************************************************************\r\n");
    1308:	4d10      	ldr	r5, [pc, #64]	; (134c <main+0x64>)
    130a:	1c28      	adds	r0, r5, #0
    130c:	4910      	ldr	r1, [pc, #64]	; (1350 <main+0x68>)
    130e:	4c11      	ldr	r4, [pc, #68]	; (1354 <main+0x6c>)
    1310:	47a0      	blx	r4
    hmi.printf("tick time: %lu ms\r\n",portTICK_RATE_MS);   
    1312:	1c28      	adds	r0, r5, #0
    1314:	4910      	ldr	r1, [pc, #64]	; (1358 <main+0x70>)
    1316:	2201      	movs	r2, #1
    1318:	47a0      	blx	r4
    #ifdef MASTERMODE
        hmi.printf("Master clock\r\n");
    #else
        hmi.printf("Slave Clock \r\n");
    131a:	1c28      	adds	r0, r5, #0
    131c:	490f      	ldr	r1, [pc, #60]	; (135c <main+0x74>)
    131e:	47a0      	blx	r4
    #endif
    hmi.printf("end config application begin\r\n");
    1320:	1c28      	adds	r0, r5, #0
    1322:	490f      	ldr	r1, [pc, #60]	; (1360 <main+0x78>)
    1324:	47a0      	blx	r4
    hmi.printf("\r\n**********************************************************************\r\n\r\n");
    1326:	1c28      	adds	r0, r5, #0
    1328:	490e      	ldr	r1, [pc, #56]	; (1364 <main+0x7c>)
    132a:	47a0      	blx	r4
    //start the scheduler
    vTaskStartScheduler();
    132c:	4b0e      	ldr	r3, [pc, #56]	; (1368 <main+0x80>)
    132e:	4798      	blx	r3
    while(1){//trap
		hmi.printf("trap!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n");
    1330:	4e06      	ldr	r6, [pc, #24]	; (134c <main+0x64>)
    1332:	4d0e      	ldr	r5, [pc, #56]	; (136c <main+0x84>)
    1334:	4c07      	ldr	r4, [pc, #28]	; (1354 <main+0x6c>)
    1336:	1c30      	adds	r0, r6, #0
    1338:	1c29      	adds	r1, r5, #0
    133a:	47a0      	blx	r4





int main()
    133c:	e7fb      	b.n	1336 <main+0x4e>
    133e:	46c0      	nop			; (mov r8, r8)
    1340:	200000d0 	.word	0x200000d0
    1344:	00000171 	.word	0x00000171
    1348:	00000351 	.word	0x00000351
    134c:	2000026c 	.word	0x2000026c
    1350:	0000d150 	.word	0x0000d150
    1354:	00003f61 	.word	0x00003f61
    1358:	0000d1a0 	.word	0x0000d1a0
    135c:	0000d1b4 	.word	0x0000d1b4
    1360:	0000d1c4 	.word	0x0000d1c4
    1364:	0000d1e4 	.word	0x0000d1e4
    1368:	00000b5d 	.word	0x00000b5d
    136c:	0000d234 	.word	0x0000d234

00001370 <_ZN8cMxRadio23zr_attach_receive_frameEMS_FPhhS0_hahE>:
{
	user_radio_irq = funct;
}

void cMxRadio::zr_attach_receive_frame(uint8_t* (cMxRadio::*funct)(uint8_t, uint8_t*, uint8_t, int8_t, uint8_t))
{
    1370:	b082      	sub	sp, #8
    1372:	466b      	mov	r3, sp
    1374:	9100      	str	r1, [sp, #0]
    1376:	9201      	str	r2, [sp, #4]
	user_radio_receive_frame = funct;
    1378:	22c1      	movs	r2, #193	; 0xc1
    137a:	0092      	lsls	r2, r2, #2
    137c:	4694      	mov	ip, r2
    137e:	4460      	add	r0, ip
    1380:	cb06      	ldmia	r3!, {r1, r2}
    1382:	c006      	stmia	r0!, {r1, r2}
}
    1384:	b002      	add	sp, #8
    1386:	4770      	bx	lr

00001388 <_ZN8cMxRadio17zr_attach_tx_doneEMS_Fv15radio_tx_done_tE>:

void cMxRadio::zr_attach_tx_done(void (cMxRadio::*funct)(radio_tx_done_t))
{
    1388:	b082      	sub	sp, #8
    138a:	466b      	mov	r3, sp
    138c:	9100      	str	r1, [sp, #0]
    138e:	9201      	str	r2, [sp, #4]
	user_radio_tx_done = funct;
    1390:	22c3      	movs	r2, #195	; 0xc3
    1392:	0092      	lsls	r2, r2, #2
    1394:	4694      	mov	ip, r2
    1396:	4460      	add	r0, ip
    1398:	cb06      	ldmia	r3!, {r1, r2}
    139a:	c006      	stmia	r0!, {r1, r2}
}
    139c:	b002      	add	sp, #8
    139e:	4770      	bx	lr

000013a0 <_ZN8cMxRadio15usr_radio_errorE13radio_error_t>:
void cMxRadio::usr_radio_error(radio_error_t err)
{
    13a0:	b508      	push	{r3, lr}
	if (user_radio_error) user_radio_error(err);
    13a2:	23bf      	movs	r3, #191	; 0xbf
    13a4:	009b      	lsls	r3, r3, #2
    13a6:	58c3      	ldr	r3, [r0, r3]
    13a8:	2b00      	cmp	r3, #0
    13aa:	d001      	beq.n	13b0 <_ZN8cMxRadio15usr_radio_errorE13radio_error_t+0x10>
    13ac:	1c08      	adds	r0, r1, #0
    13ae:	4798      	blx	r3
}
    13b0:	bd08      	pop	{r3, pc}
    13b2:	46c0      	nop			; (mov r8, r8)

000013b4 <_ZN8cMxRadio13usr_radio_irqEh>:

void cMxRadio::usr_radio_irq(uint8_t cause)
{
    13b4:	b508      	push	{r3, lr}
	if (user_radio_irq) user_radio_irq(cause);
    13b6:	23c0      	movs	r3, #192	; 0xc0
    13b8:	009b      	lsls	r3, r3, #2
    13ba:	58c3      	ldr	r3, [r0, r3]
    13bc:	2b00      	cmp	r3, #0
    13be:	d001      	beq.n	13c4 <_ZN8cMxRadio13usr_radio_irqEh+0x10>
    13c0:	1c08      	adds	r0, r1, #0
    13c2:	4798      	blx	r3
}
    13c4:	bd08      	pop	{r3, pc}
    13c6:	46c0      	nop			; (mov r8, r8)

000013c8 <_ZN8cMxRadio23usr_radio_receive_frameEhPhhah>:

uint8_t* cMxRadio::usr_radio_receive_frame(uint8_t len, uint8_t *frm, uint8_t lqi, int8_t ed,uint8_t crc_fail)
{
    13c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    13ca:	b085      	sub	sp, #20
    13cc:	9303      	str	r3, [sp, #12]
    13ce:	ac0a      	add	r4, sp, #40	; 0x28
    13d0:	2700      	movs	r7, #0
    13d2:	57e7      	ldrsb	r7, [r4, r7]
    13d4:	ac0b      	add	r4, sp, #44	; 0x2c
    13d6:	7826      	ldrb	r6, [r4, #0]
	if (user_radio_receive_frame)
    13d8:	24c1      	movs	r4, #193	; 0xc1
    13da:	00a4      	lsls	r4, r4, #2
    13dc:	5905      	ldr	r5, [r0, r4]
    13de:	2d00      	cmp	r5, #0
    13e0:	d105      	bne.n	13ee <_ZN8cMxRadio23usr_radio_receive_frameEhPhhah+0x26>
    13e2:	3404      	adds	r4, #4
    13e4:	5904      	ldr	r4, [r0, r4]
    13e6:	07e3      	lsls	r3, r4, #31
    13e8:	d406      	bmi.n	13f8 <_ZN8cMxRadio23usr_radio_receive_frameEhPhhah+0x30>
		return (this->*user_radio_receive_frame)(len, frm, lqi,ed, crc_fail);
	else return frm;
    13ea:	1c10      	adds	r0, r2, #0
    13ec:	e00d      	b.n	140a <_ZN8cMxRadio23usr_radio_receive_frameEhPhhah+0x42>
}

uint8_t* cMxRadio::usr_radio_receive_frame(uint8_t len, uint8_t *frm, uint8_t lqi, int8_t ed,uint8_t crc_fail)
{
	if (user_radio_receive_frame)
		return (this->*user_radio_receive_frame)(len, frm, lqi,ed, crc_fail);
    13ee:	24c2      	movs	r4, #194	; 0xc2
    13f0:	00a4      	lsls	r4, r4, #2
    13f2:	5904      	ldr	r4, [r0, r4]
    13f4:	07e3      	lsls	r3, r4, #31
    13f6:	d502      	bpl.n	13fe <_ZN8cMxRadio23usr_radio_receive_frameEhPhhah+0x36>
    13f8:	1063      	asrs	r3, r4, #1
    13fa:	58c3      	ldr	r3, [r0, r3]
    13fc:	595d      	ldr	r5, [r3, r5]
    13fe:	9b03      	ldr	r3, [sp, #12]
    1400:	1064      	asrs	r4, r4, #1
    1402:	1900      	adds	r0, r0, r4
    1404:	9700      	str	r7, [sp, #0]
    1406:	9601      	str	r6, [sp, #4]
    1408:	47a8      	blx	r5
	else return frm;
}
    140a:	b005      	add	sp, #20
    140c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    140e:	46c0      	nop			; (mov r8, r8)

00001410 <_ZN8cMxRadio17usr_radio_tx_doneE15radio_tx_done_t>:

void cMxRadio::usr_radio_tx_done(radio_tx_done_t status)
{
    1410:	b510      	push	{r4, lr}
	if (user_radio_tx_done) (this->*user_radio_tx_done)(status);
    1412:	23c3      	movs	r3, #195	; 0xc3
    1414:	009b      	lsls	r3, r3, #2
    1416:	58c2      	ldr	r2, [r0, r3]
    1418:	2a00      	cmp	r2, #0
    141a:	d104      	bne.n	1426 <_ZN8cMxRadio17usr_radio_tx_doneE15radio_tx_done_t+0x16>
    141c:	3304      	adds	r3, #4
    141e:	58c3      	ldr	r3, [r0, r3]
    1420:	07dc      	lsls	r4, r3, #31
    1422:	d405      	bmi.n	1430 <_ZN8cMxRadio17usr_radio_tx_doneE15radio_tx_done_t+0x20>
    1424:	e00a      	b.n	143c <_ZN8cMxRadio17usr_radio_tx_doneE15radio_tx_done_t+0x2c>
    1426:	23c4      	movs	r3, #196	; 0xc4
    1428:	009b      	lsls	r3, r3, #2
    142a:	58c3      	ldr	r3, [r0, r3]
    142c:	07dc      	lsls	r4, r3, #31
    142e:	d502      	bpl.n	1436 <_ZN8cMxRadio17usr_radio_tx_doneE15radio_tx_done_t+0x26>
    1430:	105c      	asrs	r4, r3, #1
    1432:	5904      	ldr	r4, [r0, r4]
    1434:	58a2      	ldr	r2, [r4, r2]
    1436:	105b      	asrs	r3, r3, #1
    1438:	18c0      	adds	r0, r0, r3
    143a:	4790      	blx	r2
}
    143c:	bd10      	pop	{r4, pc}
    143e:	46c0      	nop			; (mov r8, r8)

00001440 <_ZN8cMxRadio14onReceiveFrameEhPhhah>:
 * @param frm array containing frame data
 * @param lqi link quality indicator
 * @param crc_fail boolean indicating whether the received frame failed FCS verification, not used
 */
uint8_t* cMxRadio::onReceiveFrame(uint8_t len, uint8_t* frm, uint8_t lqi, int8_t ed,uint8_t crc_fail)
{
    1440:	b5f0      	push	{r4, r5, r6, r7, lr}
    1442:	4657      	mov	r7, sl
    1444:	464e      	mov	r6, r9
    1446:	4645      	mov	r5, r8
    1448:	b4e0      	push	{r5, r6, r7}
    144a:	b082      	sub	sp, #8
    144c:	ac0a      	add	r4, sp, #40	; 0x28
    144e:	2500      	movs	r5, #0
    1450:	5765      	ldrsb	r5, [r4, r5]
    1452:	ac0b      	add	r4, sp, #44	; 0x2c
    1454:	7824      	ldrb	r4, [r4, #0]
	if (crc_fail)
    1456:	2c00      	cmp	r4, #0
    1458:	d002      	beq.n	1460 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x20>
		return rxRingBuffer;
    145a:	30e8      	adds	r0, #232	; 0xe8
    145c:	30ff      	adds	r0, #255	; 0xff
    145e:	e067      	b.n	1530 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xf0>
	lastLqi = lqi;
    1460:	4c36      	ldr	r4, [pc, #216]	; (153c <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xfc>)
    1462:	5503      	strb	r3, [r0, r4]
	//lastRssi=ed;
	if (hasAttachedRxEvent == 0)
    1464:	4c36      	ldr	r4, [pc, #216]	; (1540 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x100>)
    1466:	5d04      	ldrb	r4, [r0, r4]
    1468:	2c00      	cmp	r4, #0
    146a:	d157      	bne.n	151c <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xdc>
	{
		// no event handler, so write it into the FIFO

		if (len >= HeadSize-1)
    146c:	2907      	cmp	r1, #7
    146e:	d815      	bhi.n	149c <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x5c>
		else
		{
			// frame header does not exist
			// copy everything

			for (uint8_t i = 0; i < len; i++)
    1470:	2900      	cmp	r1, #0
    1472:	d050      	beq.n	1516 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xd6>
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    1474:	4b33      	ldr	r3, [pc, #204]	; (1544 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x104>)
    1476:	5cc3      	ldrb	r3, [r0, r3]
    1478:	1c5c      	adds	r4, r3, #1
    147a:	257f      	movs	r5, #127	; 0x7f
    147c:	402c      	ands	r4, r5
				if (j != rxRingBufferTail)
    147e:	35ea      	adds	r5, #234	; 0xea
    1480:	35ff      	adds	r5, #255	; 0xff
    1482:	5d45      	ldrb	r5, [r0, r5]
    1484:	42a5      	cmp	r5, r4
    1486:	d046      	beq.n	1516 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xd6>
    1488:	1c17      	adds	r7, r2, #0
    148a:	3901      	subs	r1, #1
    148c:	b2c9      	uxtb	r1, r1
    148e:	1852      	adds	r2, r2, r1
				{
					// push into FIFO
					rxRingBuffer[rxRingBufferHead] = frm[i];
					rxRingBufferHead = j;
    1490:	492c      	ldr	r1, [pc, #176]	; (1544 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x104>)
			// frame header does not exist
			// copy everything

			for (uint8_t i = 0; i < len; i++)
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    1492:	257f      	movs	r5, #127	; 0x7f
    1494:	46ac      	mov	ip, r5
				if (j != rxRingBufferTail)
    1496:	269a      	movs	r6, #154	; 0x9a
    1498:	00b6      	lsls	r6, r6, #2
    149a:	e033      	b.n	1504 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xc4>
		if (len >= HeadSize-1)
		{
			// frame header exists
			// copy only payload

			for (uint8_t i = HeadSize; i < len - 2; i++)
    149c:	1e8e      	subs	r6, r1, #2
    149e:	2e09      	cmp	r6, #9
    14a0:	dd39      	ble.n	1516 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xd6>
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    14a2:	4b28      	ldr	r3, [pc, #160]	; (1544 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x104>)
    14a4:	5cc4      	ldrb	r4, [r0, r3]
    14a6:	1c63      	adds	r3, r4, #1
    14a8:	217f      	movs	r1, #127	; 0x7f
    14aa:	400b      	ands	r3, r1
				if (j != rxRingBufferTail)
    14ac:	31ea      	adds	r1, #234	; 0xea
    14ae:	31ff      	adds	r1, #255	; 0xff
    14b0:	5c41      	ldrb	r1, [r0, r1]
    14b2:	2509      	movs	r5, #9
    14b4:	4299      	cmp	r1, r3
    14b6:	d10a      	bne.n	14ce <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x8e>
    14b8:	e02d      	b.n	1516 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xd6>
			// frame header exists
			// copy only payload

			for (uint8_t i = HeadSize; i < len - 2; i++)
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    14ba:	4647      	mov	r7, r8
    14bc:	403b      	ands	r3, r7
    14be:	3301      	adds	r3, #1
    14c0:	4667      	mov	r7, ip
    14c2:	403b      	ands	r3, r7
				if (j != rxRingBufferTail)
    14c4:	4657      	mov	r7, sl
    14c6:	5dc7      	ldrb	r7, [r0, r7]
    14c8:	429f      	cmp	r7, r3
    14ca:	d108      	bne.n	14de <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x9e>
    14cc:	e023      	b.n	1516 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xd6>
				{
					// push into FIFO
					rxRingBuffer[rxRingBufferHead] = frm[i];
					rxRingBufferHead = j;
    14ce:	491d      	ldr	r1, [pc, #116]	; (1544 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x104>)
			// frame header exists
			// copy only payload

			for (uint8_t i = HeadSize; i < len - 2; i++)
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    14d0:	27ff      	movs	r7, #255	; 0xff
    14d2:	46b8      	mov	r8, r7
    14d4:	3f80      	subs	r7, #128	; 0x80
    14d6:	46bc      	mov	ip, r7
				if (j != rxRingBufferTail)
    14d8:	37ea      	adds	r7, #234	; 0xea
    14da:	37ff      	adds	r7, #255	; 0xff
    14dc:	46ba      	mov	sl, r7
				{
					// push into FIFO
					rxRingBuffer[rxRingBufferHead] = frm[i];
    14de:	5d57      	ldrb	r7, [r2, r5]
    14e0:	1904      	adds	r4, r0, r4
    14e2:	34e1      	adds	r4, #225	; 0xe1
    14e4:	34ff      	adds	r4, #255	; 0xff
    14e6:	71e7      	strb	r7, [r4, #7]
					rxRingBufferHead = j;
    14e8:	b2dc      	uxtb	r4, r3
    14ea:	5444      	strb	r4, [r0, r1]
		if (len >= HeadSize-1)
		{
			// frame header exists
			// copy only payload

			for (uint8_t i = HeadSize; i < len - 2; i++)
    14ec:	3501      	adds	r5, #1
    14ee:	b2ed      	uxtb	r5, r5
    14f0:	42b5      	cmp	r5, r6
    14f2:	dbe2      	blt.n	14ba <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x7a>
    14f4:	e00f      	b.n	1516 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xd6>
			// frame header does not exist
			// copy everything

			for (uint8_t i = 0; i < len; i++)
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    14f6:	3401      	adds	r4, #1
    14f8:	4665      	mov	r5, ip
    14fa:	402c      	ands	r4, r5
    14fc:	3701      	adds	r7, #1
				if (j != rxRingBufferTail)
    14fe:	5d85      	ldrb	r5, [r0, r6]
    1500:	42a5      	cmp	r5, r4
    1502:	d008      	beq.n	1516 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xd6>
				{
					// push into FIFO
					rxRingBuffer[rxRingBufferHead] = frm[i];
    1504:	783d      	ldrb	r5, [r7, #0]
    1506:	18c3      	adds	r3, r0, r3
    1508:	33e1      	adds	r3, #225	; 0xe1
    150a:	33ff      	adds	r3, #255	; 0xff
    150c:	71dd      	strb	r5, [r3, #7]
					rxRingBufferHead = j;
    150e:	b2e3      	uxtb	r3, r4
    1510:	5443      	strb	r3, [r0, r1]
		else
		{
			// frame header does not exist
			// copy everything

			for (uint8_t i = 0; i < len; i++)
    1512:	4297      	cmp	r7, r2
    1514:	d1ef      	bne.n	14f6 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xb6>
					break;
				}
			}
		}

		return rxRingBuffer;
    1516:	30e8      	adds	r0, #232	; 0xe8
    1518:	30ff      	adds	r0, #255	; 0xff
    151a:	e009      	b.n	1530 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xf0>
	}
	else
	{
		// user event is attached so call it
		return zrEventReceiveFrame(len, frm, lqi, ed,crc_fail);
    151c:	2400      	movs	r4, #0
    151e:	9400      	str	r4, [sp, #0]
    1520:	24bc      	movs	r4, #188	; 0xbc
    1522:	00a4      	lsls	r4, r4, #2
    1524:	5904      	ldr	r4, [r0, r4]
    1526:	1c08      	adds	r0, r1, #0
    1528:	1c11      	adds	r1, r2, #0
    152a:	1c1a      	adds	r2, r3, #0
    152c:	1c2b      	adds	r3, r5, #0
    152e:	47a0      	blx	r4
	}
}
    1530:	b002      	add	sp, #8
    1532:	bc1c      	pop	{r2, r3, r4}
    1534:	4690      	mov	r8, r2
    1536:	4699      	mov	r9, r3
    1538:	46a2      	mov	sl, r4
    153a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    153c:	000002e9 	.word	0x000002e9
    1540:	000002eb 	.word	0x000002eb
    1544:	00000267 	.word	0x00000267

00001548 <_ZN8cMxRadio8onTxDoneE15radio_tx_done_t>:
 * this should not be called by the user
 *
 * @param x one of the radio_tx_done_t enumerations indicating transmission success
 */
void cMxRadio::onTxDone(radio_tx_done_t x)
{
    1548:	b510      	push	{r4, lr}
    154a:	1c04      	adds	r4, r0, #0
	if (hasAttachedTxEvent)
    154c:	23bb      	movs	r3, #187	; 0xbb
    154e:	009b      	lsls	r3, r3, #2
    1550:	5cc3      	ldrb	r3, [r0, r3]
    1552:	2b00      	cmp	r3, #0
    1554:	d004      	beq.n	1560 <_ZN8cMxRadio8onTxDoneE15radio_tx_done_t+0x18>
	{
		zrEventTxDone(x);
    1556:	23bd      	movs	r3, #189	; 0xbd
    1558:	009b      	lsls	r3, r3, #2
    155a:	58c3      	ldr	r3, [r0, r3]
    155c:	1c08      	adds	r0, r1, #0
    155e:	4798      	blx	r3
	}

	txIsBusy = 0;
    1560:	2200      	movs	r2, #0
    1562:	4b01      	ldr	r3, [pc, #4]	; (1568 <_ZN8cMxRadio8onTxDoneE15radio_tx_done_t+0x20>)
    1564:	54e2      	strb	r2, [r4, r3]
}
    1566:	bd10      	pop	{r4, pc}
    1568:	000002ee 	.word	0x000002ee

0000156c <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_>:

cMxRadio::~cMxRadio()
{
}
// empty constructor, should not be called by user
cMxRadio::cMxRadio(PinName mosi, PinName miso, PinName sclk, PinName cs, PinName rst, PinName slp, PinName irq)
    156c:	b5f0      	push	{r4, r5, r6, r7, lr}
    156e:	464f      	mov	r7, r9
    1570:	4646      	mov	r6, r8
    1572:	b4c0      	push	{r6, r7}
    1574:	b087      	sub	sp, #28
    1576:	1c05      	adds	r5, r0, #0
    1578:	a80e      	add	r0, sp, #56	; 0x38
    157a:	2600      	movs	r6, #0
    157c:	5786      	ldrsb	r6, [r0, r6]
    157e:	a80f      	add	r0, sp, #60	; 0x3c
    1580:	7800      	ldrb	r0, [r0, #0]
    1582:	b240      	sxtb	r0, r0
    1584:	4681      	mov	r9, r0
    1586:	a810      	add	r0, sp, #64	; 0x40
    1588:	7800      	ldrb	r0, [r0, #0]
    158a:	b240      	sxtb	r0, r0
    158c:	4680      	mov	r8, r0
    158e:	a811      	add	r0, sp, #68	; 0x44
    1590:	2700      	movs	r7, #0
    1592:	57c7      	ldrsb	r7, [r0, r7]
:m_spi(mosi, miso, sclk), m_cs(cs), reset_pin(rst), sleep_pin(slp),irq_pin(irq)
    1594:	1c28      	adds	r0, r5, #0
    1596:	3014      	adds	r0, #20
    1598:	2401      	movs	r4, #1
    159a:	4264      	negs	r4, r4
    159c:	9400      	str	r4, [sp, #0]
    159e:	4c2f      	ldr	r4, [pc, #188]	; (165c <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xf0>)
    15a0:	47a0      	blx	r4
public:
    /** Create a DigitalOut connected to the specified pin
     *
     *  @param pin DigitalOut pin to connect to
     */
    DigitalOut(PinName pin) : gpio() {
    15a2:	2400      	movs	r4, #0
    15a4:	23a8      	movs	r3, #168	; 0xa8
    15a6:	54ec      	strb	r4, [r5, r3]
    15a8:	1c28      	adds	r0, r5, #0
    15aa:	30a8      	adds	r0, #168	; 0xa8
    15ac:	6044      	str	r4, [r0, #4]
    15ae:	7204      	strb	r4, [r0, #8]
    15b0:	7244      	strb	r4, [r0, #9]
    15b2:	7284      	strb	r4, [r0, #10]
    15b4:	60c4      	str	r4, [r0, #12]
    15b6:	6104      	str	r4, [r0, #16]
    15b8:	6144      	str	r4, [r0, #20]
    15ba:	6184      	str	r4, [r0, #24]
        gpio_init_out(&gpio, pin);
    15bc:	1c31      	adds	r1, r6, #0
    15be:	4e28      	ldr	r6, [pc, #160]	; (1660 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xf4>)
    15c0:	47b0      	blx	r6
public:
    /** Create a DigitalOut connected to the specified pin
     *
     *  @param pin DigitalOut pin to connect to
     */
    DigitalOut(PinName pin) : gpio() {
    15c2:	23c4      	movs	r3, #196	; 0xc4
    15c4:	54ec      	strb	r4, [r5, r3]
    15c6:	1c28      	adds	r0, r5, #0
    15c8:	30c4      	adds	r0, #196	; 0xc4
    15ca:	6044      	str	r4, [r0, #4]
    15cc:	7204      	strb	r4, [r0, #8]
    15ce:	7244      	strb	r4, [r0, #9]
    15d0:	7284      	strb	r4, [r0, #10]
    15d2:	60c4      	str	r4, [r0, #12]
    15d4:	6104      	str	r4, [r0, #16]
    15d6:	6144      	str	r4, [r0, #20]
    15d8:	6184      	str	r4, [r0, #24]
        gpio_init_out(&gpio, pin);
    15da:	4649      	mov	r1, r9
    15dc:	47b0      	blx	r6
public:
    /** Create a DigitalOut connected to the specified pin
     *
     *  @param pin DigitalOut pin to connect to
     */
    DigitalOut(PinName pin) : gpio() {
    15de:	23e0      	movs	r3, #224	; 0xe0
    15e0:	54ec      	strb	r4, [r5, r3]
    15e2:	1c28      	adds	r0, r5, #0
    15e4:	30e0      	adds	r0, #224	; 0xe0
    15e6:	6044      	str	r4, [r0, #4]
    15e8:	7204      	strb	r4, [r0, #8]
    15ea:	7244      	strb	r4, [r0, #9]
    15ec:	7284      	strb	r4, [r0, #10]
    15ee:	60c4      	str	r4, [r0, #12]
    15f0:	6104      	str	r4, [r0, #16]
    15f2:	6144      	str	r4, [r0, #20]
    15f4:	6184      	str	r4, [r0, #24]
        gpio_init_out(&gpio, pin);
    15f6:	4641      	mov	r1, r8
    15f8:	47b0      	blx	r6
    15fa:	1c28      	adds	r0, r5, #0
    15fc:	30fc      	adds	r0, #252	; 0xfc
    15fe:	1c39      	adds	r1, r7, #0
    1600:	4b18      	ldr	r3, [pc, #96]	; (1664 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xf8>)
    1602:	4798      	blx	r3
{
	// default event handlers
	
	zrEventTxDone=0;
    1604:	23bd      	movs	r3, #189	; 0xbd
    1606:	009b      	lsls	r3, r3, #2
    1608:	50ec      	str	r4, [r5, r3]
	zrEventReceiveFrame=0;
    160a:	3b04      	subs	r3, #4
    160c:	50ec      	str	r4, [r5, r3]
	temprssi=0;
    160e:	702c      	strb	r4, [r5, #0]
	setautotx=false;
    1610:	3308      	adds	r3, #8
    1612:	54ec      	strb	r4, [r5, r3]
	setautorx=false;
    1614:	4b14      	ldr	r3, [pc, #80]	; (1668 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xfc>)
    1616:	54ec      	strb	r4, [r5, r3]
	needack=false;
    1618:	4b14      	ldr	r3, [pc, #80]	; (166c <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0x100>)
    161a:	54ec      	strb	r4, [r5, r3]
	usedBeginTransmission = 0;
    161c:	4b14      	ldr	r3, [pc, #80]	; (1670 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0x104>)
    161e:	54ec      	strb	r4, [r5, r3]
	hasAttachedTxEvent = 0;
    1620:	3b01      	subs	r3, #1
    1622:	54ec      	strb	r4, [r5, r3]
	hasAttachedRxEvent = 0;
    1624:	4b13      	ldr	r3, [pc, #76]	; (1674 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0x108>)
    1626:	54ec      	strb	r4, [r5, r3]
	lastLqi = 0;
    1628:	4b13      	ldr	r3, [pc, #76]	; (1678 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0x10c>)
    162a:	54ec      	strb	r4, [r5, r3]
	lastRssi = 0;
    162c:	4b13      	ldr	r3, [pc, #76]	; (167c <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0x110>)
    162e:	54ec      	strb	r4, [r5, r3]
	txTmpBufferLength = 0;
    1630:	3b02      	subs	r3, #2
    1632:	54ec      	strb	r4, [r5, r3]
	rxRingBufferHead = 0;
    1634:	4b12      	ldr	r3, [pc, #72]	; (1680 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0x114>)
    1636:	54ec      	strb	r4, [r5, r3]
	rxRingBufferTail = 0;
    1638:	3301      	adds	r3, #1
    163a:	54ec      	strb	r4, [r5, r3]
	user_radio_tx_done=0;
	user_radio_receive_frame=0;
	user_radio_irq=0;
	user_radio_error=0;
	*/
	zr_attach_receive_frame(&cMxRadio::onReceiveFrame);
    163c:	1c28      	adds	r0, r5, #0
    163e:	4911      	ldr	r1, [pc, #68]	; (1684 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0x118>)
    1640:	2200      	movs	r2, #0
    1642:	4b11      	ldr	r3, [pc, #68]	; (1688 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0x11c>)
    1644:	4798      	blx	r3
	zr_attach_tx_done(&cMxRadio::onTxDone);
    1646:	1c28      	adds	r0, r5, #0
    1648:	4910      	ldr	r1, [pc, #64]	; (168c <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0x120>)
    164a:	2200      	movs	r2, #0
    164c:	4b10      	ldr	r3, [pc, #64]	; (1690 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0x124>)
    164e:	4798      	blx	r3

}
    1650:	1c28      	adds	r0, r5, #0
    1652:	b007      	add	sp, #28
    1654:	bc0c      	pop	{r2, r3}
    1656:	4690      	mov	r8, r2
    1658:	4699      	mov	r9, r3
    165a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    165c:	00003b8d 	.word	0x00003b8d
    1660:	00003fcd 	.word	0x00003fcd
    1664:	00003aed 	.word	0x00003aed
    1668:	000002f9 	.word	0x000002f9
    166c:	000002fa 	.word	0x000002fa
    1670:	000002ed 	.word	0x000002ed
    1674:	000002eb 	.word	0x000002eb
    1678:	000002e9 	.word	0x000002e9
    167c:	000002ea 	.word	0x000002ea
    1680:	00000267 	.word	0x00000267
    1684:	00001441 	.word	0x00001441
    1688:	00001371 	.word	0x00001371
    168c:	00001549 	.word	0x00001549
    1690:	00001389 	.word	0x00001389

00001694 <_ZN8cMxRadio5beginEaPh>:
 *
 * @param chan channel number for the radio to use, 11 to 26
 * @param frameHeader HeadSize byte custom frame header
 */
void cMxRadio::begin(channel_t chan, uint8_t* frameHeader)
{
    1694:	b570      	push	{r4, r5, r6, lr}
    1696:	1c06      	adds	r6, r0, #0
    1698:	1c0d      	adds	r5, r1, #0
    169a:	1c14      	adds	r4, r2, #0
	radio_init(rxFrameBuffer, MAX_FRAME_SIZE);
    169c:	1c01      	adds	r1, r0, #0
    169e:	3169      	adds	r1, #105	; 0x69
    16a0:	31ff      	adds	r1, #255	; 0xff
    16a2:	227f      	movs	r2, #127	; 0x7f
    16a4:	4b1e      	ldr	r3, [pc, #120]	; (1720 <_ZN8cMxRadio5beginEaPh+0x8c>)
    16a6:	4798      	blx	r3

	if (frameHeader)
    16a8:	2c00      	cmp	r4, #0
    16aa:	d00b      	beq.n	16c4 <_ZN8cMxRadio5beginEaPh+0x30>
    16ac:	1c22      	adds	r2, r4, #0
    16ae:	4b1d      	ldr	r3, [pc, #116]	; (1724 <_ZN8cMxRadio5beginEaPh+0x90>)
    16b0:	18f3      	adds	r3, r6, r3
    16b2:	491d      	ldr	r1, [pc, #116]	; (1728 <_ZN8cMxRadio5beginEaPh+0x94>)
    16b4:	1870      	adds	r0, r6, r1
	{
		// copy custom frame header
		int i;
		for (i = 0; i < HeadSize; i++)
			txTmpBuffer[i] = frameHeader[i];
    16b6:	7811      	ldrb	r1, [r2, #0]
    16b8:	7019      	strb	r1, [r3, #0]
    16ba:	3201      	adds	r2, #1
    16bc:	3301      	adds	r3, #1

	if (frameHeader)
	{
		// copy custom frame header
		int i;
		for (i = 0; i < HeadSize; i++)
    16be:	4283      	cmp	r3, r0
    16c0:	d1f9      	bne.n	16b6 <_ZN8cMxRadio5beginEaPh+0x22>
    16c2:	e01a      	b.n	16fa <_ZN8cMxRadio5beginEaPh+0x66>
			txTmpBuffer[i] = frameHeader[i];
	}
	else
	{
		txTmpBuffer[0] = 0x41;
    16c4:	2241      	movs	r2, #65	; 0x41
    16c6:	4b17      	ldr	r3, [pc, #92]	; (1724 <_ZN8cMxRadio5beginEaPh+0x90>)
    16c8:	54f2      	strb	r2, [r6, r3]
		txTmpBuffer[1] = 0x88;
    16ca:	3247      	adds	r2, #71	; 0x47
    16cc:	4b17      	ldr	r3, [pc, #92]	; (172c <_ZN8cMxRadio5beginEaPh+0x98>)
    16ce:	54f2      	strb	r2, [r6, r3]
		txTmpBuffer[2] =  0;
    16d0:	2300      	movs	r3, #0
    16d2:	4a17      	ldr	r2, [pc, #92]	; (1730 <_ZN8cMxRadio5beginEaPh+0x9c>)
    16d4:	54b3      	strb	r3, [r6, r2]
		txTmpBuffer[3]=0xCD;
    16d6:	21cd      	movs	r1, #205	; 0xcd
    16d8:	3201      	adds	r2, #1
    16da:	54b1      	strb	r1, [r6, r2]
		txTmpBuffer[4]=0xAB;
    16dc:	3922      	subs	r1, #34	; 0x22
    16de:	4a15      	ldr	r2, [pc, #84]	; (1734 <_ZN8cMxRadio5beginEaPh+0xa0>)
    16e0:	54b1      	strb	r1, [r6, r2]
		txTmpBuffer[5] = 0xFF; //dest address low byte
    16e2:	3a6f      	subs	r2, #111	; 0x6f
    16e4:	3aff      	subs	r2, #255	; 0xff
    16e6:	4914      	ldr	r1, [pc, #80]	; (1738 <_ZN8cMxRadio5beginEaPh+0xa4>)
    16e8:	5472      	strb	r2, [r6, r1]
		txTmpBuffer[6] = 0xFF; //dest address hight byte
    16ea:	4914      	ldr	r1, [pc, #80]	; (173c <_ZN8cMxRadio5beginEaPh+0xa8>)
    16ec:	5472      	strb	r2, [r6, r1]
		txTmpBuffer[7] = 0x01;;
    16ee:	2101      	movs	r1, #1
    16f0:	3272      	adds	r2, #114	; 0x72
    16f2:	32ff      	adds	r2, #255	; 0xff
    16f4:	54b1      	strb	r1, [r6, r2]
		txTmpBuffer[8] = 0x00;;
    16f6:	4a12      	ldr	r2, [pc, #72]	; (1740 <_ZN8cMxRadio5beginEaPh+0xac>)
    16f8:	54b3      	strb	r3, [r6, r2]
 */
typedef union radio_param_t
{
#if defined __cplusplus
public:
    radio_param_t(int8_t c) { channel = c; } /* also used for txpwr_t */
    16fa:	b2ea      	uxtb	r2, r5
	}

	// set the channel
	radio_set_param(RP_CHANNEL(chan));
    16fc:	1c30      	adds	r0, r6, #0
    16fe:	2100      	movs	r1, #0
    1700:	4b10      	ldr	r3, [pc, #64]	; (1744 <_ZN8cMxRadio5beginEaPh+0xb0>)
    1702:	4798      	blx	r3

	// default to receiver
	if (setautorx)
    1704:	4b10      	ldr	r3, [pc, #64]	; (1748 <_ZN8cMxRadio5beginEaPh+0xb4>)
    1706:	5cf3      	ldrb	r3, [r6, r3]
    1708:	2b00      	cmp	r3, #0
    170a:	d004      	beq.n	1716 <_ZN8cMxRadio5beginEaPh+0x82>
		radio_set_state(STATE_RXAUTO);
    170c:	1c30      	adds	r0, r6, #0
    170e:	2104      	movs	r1, #4
    1710:	4b0e      	ldr	r3, [pc, #56]	; (174c <_ZN8cMxRadio5beginEaPh+0xb8>)
    1712:	4798      	blx	r3
    1714:	e003      	b.n	171e <_ZN8cMxRadio5beginEaPh+0x8a>
	else
		radio_set_state(STATE_RX);
    1716:	1c30      	adds	r0, r6, #0
    1718:	2102      	movs	r1, #2
    171a:	4b0c      	ldr	r3, [pc, #48]	; (174c <_ZN8cMxRadio5beginEaPh+0xb8>)
    171c:	4798      	blx	r3

#ifdef ENABLE_DIG3_DIG4
	trx_bit_write(SR_PA_EXT_EN, 1);
#endif

}
    171e:	bd70      	pop	{r4, r5, r6, pc}
    1720:	00001bfd 	.word	0x00001bfd
    1724:	00000269 	.word	0x00000269
    1728:	00000272 	.word	0x00000272
    172c:	0000026a 	.word	0x0000026a
    1730:	0000026b 	.word	0x0000026b
    1734:	0000026d 	.word	0x0000026d
    1738:	0000026e 	.word	0x0000026e
    173c:	0000026f 	.word	0x0000026f
    1740:	00000271 	.word	0x00000271
    1744:	00001f3d 	.word	0x00001f3d
    1748:	000002f9 	.word	0x000002f9
    174c:	00001ced 	.word	0x00001ced

00001750 <_ZN8cMxRadio5beginEa>:
 * Then it sets the channel number and defaults to RX state.
 *
 * @param chan the channel number for the radio to use, 11 to 26
 */
void cMxRadio::begin(channel_t chan)
{
    1750:	b508      	push	{r3, lr}
	begin(chan, 0);
    1752:	2200      	movs	r2, #0
    1754:	4b01      	ldr	r3, [pc, #4]	; (175c <_ZN8cMxRadio5beginEa+0xc>)
    1756:	4798      	blx	r3
}
    1758:	bd08      	pop	{r3, pc}
    175a:	46c0      	nop			; (mov r8, r8)
    175c:	00001695 	.word	0x00001695

00001760 <_ZN8cMxRadio11attachErrorEPFv13radio_error_tE>:
 *
 * @param funct the function pointer to the event handler
 */
void cMxRadio::attachError(void (*funct)(radio_error_t))
{
	user_radio_error = funct;
    1760:	23bf      	movs	r3, #191	; 0xbf
    1762:	009b      	lsls	r3, r3, #2
    1764:	50c1      	str	r1, [r0, r3]
}
    1766:	4770      	bx	lr

00001768 <_ZN8cMxRadio9attachIrqEPFvhE>:
 *
 * @param funct the function pointer to the event handler
 */
void cMxRadio::attachIrq(void (*funct)(uint8_t))
{
	user_radio_irq = funct;
    1768:	23c0      	movs	r3, #192	; 0xc0
    176a:	009b      	lsls	r3, r3, #2
    176c:	50c1      	str	r1, [r0, r3]
}
    176e:	4770      	bx	lr

00001770 <_ZN8cMxRadio5flushEv>:
 *
 * Flush the RX FIFO ring buffer
 */
void cMxRadio::flush()
{
	rxRingBufferHead = rxRingBufferTail;
    1770:	239a      	movs	r3, #154	; 0x9a
    1772:	009b      	lsls	r3, r3, #2
    1774:	5cc2      	ldrb	r2, [r0, r3]
    1776:	4b01      	ldr	r3, [pc, #4]	; (177c <_ZN8cMxRadio5flushEv+0xc>)
    1778:	54c2      	strb	r2, [r0, r3]
}
    177a:	4770      	bx	lr
    177c:	00000267 	.word	0x00000267

00001780 <_ZN8cMxRadio4readEv>:
 * @return the next byte, or -1 if buffer is empty
 */
int16_t cMxRadio::read()
{
	// if the head isn't ahead of the tail, we don't have any characters
	if (rxRingBufferHead == rxRingBufferTail)
    1780:	239a      	movs	r3, #154	; 0x9a
    1782:	009b      	lsls	r3, r3, #2
    1784:	5cc3      	ldrb	r3, [r0, r3]
    1786:	4a09      	ldr	r2, [pc, #36]	; (17ac <_ZN8cMxRadio4readEv+0x2c>)
    1788:	5c82      	ldrb	r2, [r0, r2]
    178a:	429a      	cmp	r2, r3
    178c:	d00b      	beq.n	17a6 <_ZN8cMxRadio4readEv+0x26>
	{
		return -1;
	}
	else
	{
		uint8_t c = rxRingBuffer[rxRingBufferTail];
    178e:	18c2      	adds	r2, r0, r3
    1790:	32e1      	adds	r2, #225	; 0xe1
    1792:	32ff      	adds	r2, #255	; 0xff
    1794:	79d2      	ldrb	r2, [r2, #7]
		rxRingBufferTail = (rxRingBufferTail + 1) % ZR_FIFO_SIZE; // pop
    1796:	3301      	adds	r3, #1
    1798:	217f      	movs	r1, #127	; 0x7f
    179a:	400b      	ands	r3, r1
    179c:	31ea      	adds	r1, #234	; 0xea
    179e:	31ff      	adds	r1, #255	; 0xff
    17a0:	5443      	strb	r3, [r0, r1]
		return c;
    17a2:	b290      	uxth	r0, r2
    17a4:	e000      	b.n	17a8 <_ZN8cMxRadio4readEv+0x28>
int16_t cMxRadio::read()
{
	// if the head isn't ahead of the tail, we don't have any characters
	if (rxRingBufferHead == rxRingBufferTail)
	{
		return -1;
    17a6:	4802      	ldr	r0, [pc, #8]	; (17b0 <_ZN8cMxRadio4readEv+0x30>)
    17a8:	b200      	sxth	r0, r0
	{
		uint8_t c = rxRingBuffer[rxRingBufferTail];
		rxRingBufferTail = (rxRingBufferTail + 1) % ZR_FIFO_SIZE; // pop
		return c;
	}
}
    17aa:	4770      	bx	lr
    17ac:	00000267 	.word	0x00000267
    17b0:	0000ffff 	.word	0x0000ffff

000017b4 <_ZN8cMxRadio9availableEv>:
 *
 * @return how many bytes are in the RX FIFO ring buffer
 */
int8_t cMxRadio::available()
{
	return ((int16_t)((int16_t)ZR_FIFO_SIZE + (int16_t)rxRingBufferHead - (int16_t)rxRingBufferTail)) % ZR_FIFO_SIZE;
    17b4:	4b07      	ldr	r3, [pc, #28]	; (17d4 <_ZN8cMxRadio9availableEv+0x20>)
    17b6:	5cc3      	ldrb	r3, [r0, r3]
    17b8:	3380      	adds	r3, #128	; 0x80
    17ba:	229a      	movs	r2, #154	; 0x9a
    17bc:	0092      	lsls	r2, r2, #2
    17be:	5c80      	ldrb	r0, [r0, r2]
    17c0:	1a1b      	subs	r3, r3, r0
    17c2:	17d8      	asrs	r0, r3, #31
    17c4:	0e42      	lsrs	r2, r0, #25
    17c6:	189b      	adds	r3, r3, r2
    17c8:	207f      	movs	r0, #127	; 0x7f
    17ca:	4003      	ands	r3, r0
    17cc:	1a98      	subs	r0, r3, r2
    17ce:	b240      	sxtb	r0, r0
}
    17d0:	4770      	bx	lr
    17d2:	46c0      	nop			; (mov r8, r8)
    17d4:	00000267 	.word	0x00000267

000017d8 <_ZN8cMxRadio17beginTransmissionEv>:
 * Non-immediate mode sends multiple bytes per frame
 *
 */
void cMxRadio::beginTransmission()
{
	usedBeginTransmission = 1;
    17d8:	2201      	movs	r2, #1
    17da:	4b06      	ldr	r3, [pc, #24]	; (17f4 <_ZN8cMxRadio17beginTransmissionEv+0x1c>)
    17dc:	54c2      	strb	r2, [r0, r3]
	txTmpBuffer[5]= 0xFF;
    17de:	3bef      	subs	r3, #239	; 0xef
    17e0:	3bff      	subs	r3, #255	; 0xff
    17e2:	4a05      	ldr	r2, [pc, #20]	; (17f8 <_ZN8cMxRadio17beginTransmissionEv+0x20>)
    17e4:	5483      	strb	r3, [r0, r2]
	txTmpBuffer[6]= 0XFF;
    17e6:	4a05      	ldr	r2, [pc, #20]	; (17fc <_ZN8cMxRadio17beginTransmissionEv+0x24>)
    17e8:	5483      	strb	r3, [r0, r2]
	// add frame header
	txTmpBufferLength = HeadSize;
    17ea:	2209      	movs	r2, #9
    17ec:	33ea      	adds	r3, #234	; 0xea
    17ee:	33ff      	adds	r3, #255	; 0xff
    17f0:	54c2      	strb	r2, [r0, r3]
}
    17f2:	4770      	bx	lr
    17f4:	000002ed 	.word	0x000002ed
    17f8:	0000026e 	.word	0x0000026e
    17fc:	0000026f 	.word	0x0000026f

00001800 <_ZN8cMxRadio10waitTxDoneEt>:
 * waits until the last transmission is complete, or timed out
 *
 * @param timeout iterations to countdown before timeout
 */
void cMxRadio::waitTxDone(uint16_t timeout)
{
    1800:	b510      	push	{r4, lr}
    1802:	b082      	sub	sp, #8
	volatile uint16_t cnt = timeout;
    1804:	466b      	mov	r3, sp
    1806:	80d9      	strh	r1, [r3, #6]
	while (txIsBusy && cnt--);
    1808:	4c07      	ldr	r4, [pc, #28]	; (1828 <_ZN8cMxRadio10waitTxDoneEt+0x28>)
    180a:	466b      	mov	r3, sp
    180c:	1d99      	adds	r1, r3, #6
    180e:	5d03      	ldrb	r3, [r0, r4]
    1810:	2b00      	cmp	r3, #0
    1812:	d006      	beq.n	1822 <_ZN8cMxRadio10waitTxDoneEt+0x22>
    1814:	880b      	ldrh	r3, [r1, #0]
    1816:	b29b      	uxth	r3, r3
    1818:	1e5a      	subs	r2, r3, #1
    181a:	b292      	uxth	r2, r2
    181c:	800a      	strh	r2, [r1, #0]
    181e:	2b00      	cmp	r3, #0
    1820:	d1f5      	bne.n	180e <_ZN8cMxRadio10waitTxDoneEt+0xe>
}
    1822:	b002      	add	sp, #8
    1824:	bd10      	pop	{r4, pc}
    1826:	46c0      	nop			; (mov r8, r8)
    1828:	000002ee 	.word	0x000002ee

0000182c <_ZN8cMxRadio15endTransmissionEv>:
 *
 * Finalize the payload and transmits it when ready
 *
 */
void cMxRadio::endTransmission()
{
    182c:	b538      	push	{r3, r4, r5, lr}
    182e:	1c04      	adds	r4, r0, #0
	usedBeginTransmission = 0;
    1830:	2200      	movs	r2, #0
    1832:	4b26      	ldr	r3, [pc, #152]	; (18cc <_ZN8cMxRadio15endTransmissionEv+0xa0>)
    1834:	54c2      	strb	r2, [r0, r3]

	// empty FCS field
	txTmpBufferLength += 2;
    1836:	22ba      	movs	r2, #186	; 0xba
    1838:	0092      	lsls	r2, r2, #2
    183a:	5c83      	ldrb	r3, [r0, r2]
    183c:	3302      	adds	r3, #2
    183e:	5483      	strb	r3, [r0, r2]

#ifdef ZR_TXWAIT_BEFORE
	waitTxDone(0xFFFF);
    1840:	4923      	ldr	r1, [pc, #140]	; (18d0 <_ZN8cMxRadio15endTransmissionEv+0xa4>)
    1842:	4b24      	ldr	r3, [pc, #144]	; (18d4 <_ZN8cMxRadio15endTransmissionEv+0xa8>)
    1844:	4798      	blx	r3
#endif
	txIsBusy = 1;
    1846:	2201      	movs	r2, #1
    1848:	4b23      	ldr	r3, [pc, #140]	; (18d8 <_ZN8cMxRadio15endTransmissionEv+0xac>)
    184a:	54e2      	strb	r2, [r4, r3]
	if (setautotx)
    184c:	330a      	adds	r3, #10
    184e:	5ce3      	ldrb	r3, [r4, r3]
    1850:	2b00      	cmp	r3, #0
    1852:	d004      	beq.n	185e <_ZN8cMxRadio15endTransmissionEv+0x32>
		radio_set_state(STATE_TXAUTO);
    1854:	1c20      	adds	r0, r4, #0
    1856:	2103      	movs	r1, #3
    1858:	4b20      	ldr	r3, [pc, #128]	; (18dc <_ZN8cMxRadio15endTransmissionEv+0xb0>)
    185a:	4798      	blx	r3
    185c:	e003      	b.n	1866 <_ZN8cMxRadio15endTransmissionEv+0x3a>
	else
		radio_set_state(STATE_TX);
    185e:	1c20      	adds	r0, r4, #0
    1860:	2101      	movs	r1, #1
    1862:	4b1e      	ldr	r3, [pc, #120]	; (18dc <_ZN8cMxRadio15endTransmissionEv+0xb0>)
    1864:	4798      	blx	r3
	ZR_RFTX_LED_ON();
	//if broadcase ,cant need ack
	if(txTmpBuffer[5]==0xff && txTmpBuffer[5]==0xff)
    1866:	4b1e      	ldr	r3, [pc, #120]	; (18e0 <_ZN8cMxRadio15endTransmissionEv+0xb4>)
    1868:	5ce3      	ldrb	r3, [r4, r3]
    186a:	2bff      	cmp	r3, #255	; 0xff
    186c:	d105      	bne.n	187a <_ZN8cMxRadio15endTransmissionEv+0x4e>
		txTmpBuffer[0]=txTmpBuffer[0]&0xdf;
    186e:	4a1d      	ldr	r2, [pc, #116]	; (18e4 <_ZN8cMxRadio15endTransmissionEv+0xb8>)
    1870:	5ca3      	ldrb	r3, [r4, r2]
    1872:	2120      	movs	r1, #32
    1874:	438b      	bics	r3, r1
    1876:	54a3      	strb	r3, [r4, r2]
    1878:	e00a      	b.n	1890 <_ZN8cMxRadio15endTransmissionEv+0x64>
	else
	{
		if(!needack)
    187a:	4b1b      	ldr	r3, [pc, #108]	; (18e8 <_ZN8cMxRadio15endTransmissionEv+0xbc>)
    187c:	5ce3      	ldrb	r3, [r4, r3]
    187e:	2b00      	cmp	r3, #0
    1880:	d103      	bne.n	188a <_ZN8cMxRadio15endTransmissionEv+0x5e>
			txTmpBuffer[0] = 0x41;
    1882:	2241      	movs	r2, #65	; 0x41
    1884:	4b17      	ldr	r3, [pc, #92]	; (18e4 <_ZN8cMxRadio15endTransmissionEv+0xb8>)
    1886:	54e2      	strb	r2, [r4, r3]
    1888:	e002      	b.n	1890 <_ZN8cMxRadio15endTransmissionEv+0x64>
		else
			txTmpBuffer[0] = 0x61; //ack required
    188a:	2261      	movs	r2, #97	; 0x61
    188c:	4b15      	ldr	r3, [pc, #84]	; (18e4 <_ZN8cMxRadio15endTransmissionEv+0xb8>)
    188e:	54e2      	strb	r2, [r4, r3]
	}
	radio_send_frame(txTmpBufferLength, txTmpBuffer, 0);
    1890:	23ba      	movs	r3, #186	; 0xba
    1892:	009b      	lsls	r3, r3, #2
    1894:	5ce1      	ldrb	r1, [r4, r3]
    1896:	1c20      	adds	r0, r4, #0
    1898:	4b12      	ldr	r3, [pc, #72]	; (18e4 <_ZN8cMxRadio15endTransmissionEv+0xb8>)
    189a:	18e2      	adds	r2, r4, r3
    189c:	2300      	movs	r3, #0
    189e:	4d13      	ldr	r5, [pc, #76]	; (18ec <_ZN8cMxRadio15endTransmissionEv+0xc0>)
    18a0:	47a8      	blx	r5
#ifdef ZR_TXWAIT_AFTER
	waitTxDone(0xFFFF);
    18a2:	1c20      	adds	r0, r4, #0
    18a4:	490a      	ldr	r1, [pc, #40]	; (18d0 <_ZN8cMxRadio15endTransmissionEv+0xa4>)
    18a6:	4b0b      	ldr	r3, [pc, #44]	; (18d4 <_ZN8cMxRadio15endTransmissionEv+0xa8>)
    18a8:	4798      	blx	r3
	if (setautorx)
    18aa:	4b11      	ldr	r3, [pc, #68]	; (18f0 <_ZN8cMxRadio15endTransmissionEv+0xc4>)
    18ac:	5ce3      	ldrb	r3, [r4, r3]
    18ae:	2b00      	cmp	r3, #0
    18b0:	d004      	beq.n	18bc <_ZN8cMxRadio15endTransmissionEv+0x90>
		radio_set_state(STATE_RXAUTO);
    18b2:	1c20      	adds	r0, r4, #0
    18b4:	2104      	movs	r1, #4
    18b6:	4b09      	ldr	r3, [pc, #36]	; (18dc <_ZN8cMxRadio15endTransmissionEv+0xb0>)
    18b8:	4798      	blx	r3
    18ba:	e003      	b.n	18c4 <_ZN8cMxRadio15endTransmissionEv+0x98>
	else
		radio_set_state(STATE_RX);
    18bc:	1c20      	adds	r0, r4, #0
    18be:	2102      	movs	r1, #2
    18c0:	4b06      	ldr	r3, [pc, #24]	; (18dc <_ZN8cMxRadio15endTransmissionEv+0xb0>)
    18c2:	4798      	blx	r3
	txIsBusy = 0;
    18c4:	2200      	movs	r2, #0
    18c6:	4b04      	ldr	r3, [pc, #16]	; (18d8 <_ZN8cMxRadio15endTransmissionEv+0xac>)
    18c8:	54e2      	strb	r2, [r4, r3]
#endif
}
    18ca:	bd38      	pop	{r3, r4, r5, pc}
    18cc:	000002ed 	.word	0x000002ed
    18d0:	0000ffff 	.word	0x0000ffff
    18d4:	00001801 	.word	0x00001801
    18d8:	000002ee 	.word	0x000002ee
    18dc:	00001ced 	.word	0x00001ced
    18e0:	0000026e 	.word	0x0000026e
    18e4:	00000269 	.word	0x00000269
    18e8:	000002fa 	.word	0x000002fa
    18ec:	00002041 	.word	0x00002041
    18f0:	000002f9 	.word	0x000002f9

000018f4 <_ZN8cMxRadio5writeEh>:
 * If "beginTrasmission" was not used, then it transmits the single byte immediately (slower for multiple bytes)
 *
 * @param c character to be sent
 */
void cMxRadio::write(uint8_t c)
{
    18f4:	b538      	push	{r3, r4, r5, lr}
    18f6:	1c04      	adds	r4, r0, #0
	if (usedBeginTransmission)
    18f8:	4b2e      	ldr	r3, [pc, #184]	; (19b4 <_ZN8cMxRadio5writeEh+0xc0>)
    18fa:	5cc3      	ldrb	r3, [r0, r3]
    18fc:	2b00      	cmp	r3, #0
    18fe:	d022      	beq.n	1946 <_ZN8cMxRadio5writeEh+0x52>
	{
		if (txTmpBufferLength < ZR_TXTMPBUFF_SIZE - 2)
    1900:	23ba      	movs	r3, #186	; 0xba
    1902:	009b      	lsls	r3, r3, #2
    1904:	5cc3      	ldrb	r3, [r0, r3]
    1906:	2b7c      	cmp	r3, #124	; 0x7c
    1908:	d852      	bhi.n	19b0 <_ZN8cMxRadio5writeEh+0xbc>
		{
			txTmpBuffer[txTmpBufferLength] = c;
    190a:	18c2      	adds	r2, r0, r3
    190c:	209a      	movs	r0, #154	; 0x9a
    190e:	0080      	lsls	r0, r0, #2
    1910:	4684      	mov	ip, r0
    1912:	4462      	add	r2, ip
    1914:	7051      	strb	r1, [r2, #1]
			txTmpBufferLength++;
    1916:	3301      	adds	r3, #1
    1918:	b2db      	uxtb	r3, r3
    191a:	22ba      	movs	r2, #186	; 0xba
    191c:	0092      	lsls	r2, r2, #2
    191e:	54a3      	strb	r3, [r4, r2]

			if (txTmpBufferLength >= ZR_TXTMPBUFF_SIZE - 2)
    1920:	2b7c      	cmp	r3, #124	; 0x7c
    1922:	d945      	bls.n	19b0 <_ZN8cMxRadio5writeEh+0xbc>
			{
				// buffer is now full
				// just send it all out so we have more room
				endTransmission();
    1924:	1c20      	adds	r0, r4, #0
    1926:	4b24      	ldr	r3, [pc, #144]	; (19b8 <_ZN8cMxRadio5writeEh+0xc4>)
    1928:	4798      	blx	r3
 * Non-immediate mode sends multiple bytes per frame
 *
 */
void cMxRadio::beginTransmission()
{
	usedBeginTransmission = 1;
    192a:	2201      	movs	r2, #1
    192c:	4b21      	ldr	r3, [pc, #132]	; (19b4 <_ZN8cMxRadio5writeEh+0xc0>)
    192e:	54e2      	strb	r2, [r4, r3]
	txTmpBuffer[5]= 0xFF;
    1930:	3bef      	subs	r3, #239	; 0xef
    1932:	3bff      	subs	r3, #255	; 0xff
    1934:	4a21      	ldr	r2, [pc, #132]	; (19bc <_ZN8cMxRadio5writeEh+0xc8>)
    1936:	54a3      	strb	r3, [r4, r2]
	txTmpBuffer[6]= 0XFF;
    1938:	4a21      	ldr	r2, [pc, #132]	; (19c0 <_ZN8cMxRadio5writeEh+0xcc>)
    193a:	54a3      	strb	r3, [r4, r2]
	// add frame header
	txTmpBufferLength = HeadSize;
    193c:	2209      	movs	r2, #9
    193e:	33ea      	adds	r3, #234	; 0xea
    1940:	33ff      	adds	r3, #255	; 0xff
    1942:	54e2      	strb	r2, [r4, r3]
    1944:	e034      	b.n	19b0 <_ZN8cMxRadio5writeEh+0xbc>
			}
		}
	}
	else
	{
		txTmpBuffer[HeadSize] = c; // set payload
    1946:	4b1f      	ldr	r3, [pc, #124]	; (19c4 <_ZN8cMxRadio5writeEh+0xd0>)
    1948:	54c1      	strb	r1, [r0, r3]
		txTmpBuffer[HeadSize+1] = 0; // empty FCS
    194a:	2300      	movs	r3, #0
    194c:	4a1e      	ldr	r2, [pc, #120]	; (19c8 <_ZN8cMxRadio5writeEh+0xd4>)
    194e:	5483      	strb	r3, [r0, r2]
		txTmpBuffer[HeadSize+2] = 0; // empty FCS
    1950:	3201      	adds	r2, #1
    1952:	5483      	strb	r3, [r0, r2]

#ifdef ZR_TXWAIT_BEFORE
		waitTxDone(0xFFFF);
    1954:	491d      	ldr	r1, [pc, #116]	; (19cc <_ZN8cMxRadio5writeEh+0xd8>)
    1956:	4b1e      	ldr	r3, [pc, #120]	; (19d0 <_ZN8cMxRadio5writeEh+0xdc>)
    1958:	4798      	blx	r3
#endif
		txIsBusy = 1;
    195a:	2201      	movs	r2, #1
    195c:	4b1d      	ldr	r3, [pc, #116]	; (19d4 <_ZN8cMxRadio5writeEh+0xe0>)
    195e:	54e2      	strb	r2, [r4, r3]
		if (setautotx)
    1960:	330a      	adds	r3, #10
    1962:	5ce3      	ldrb	r3, [r4, r3]
    1964:	2b00      	cmp	r3, #0
    1966:	d004      	beq.n	1972 <_ZN8cMxRadio5writeEh+0x7e>
			radio_set_state(STATE_TXAUTO);
    1968:	1c20      	adds	r0, r4, #0
    196a:	2103      	movs	r1, #3
    196c:	4b1a      	ldr	r3, [pc, #104]	; (19d8 <_ZN8cMxRadio5writeEh+0xe4>)
    196e:	4798      	blx	r3
    1970:	e003      	b.n	197a <_ZN8cMxRadio5writeEh+0x86>
		else
			radio_set_state(STATE_TX);
    1972:	1c20      	adds	r0, r4, #0
    1974:	2101      	movs	r1, #1
    1976:	4b18      	ldr	r3, [pc, #96]	; (19d8 <_ZN8cMxRadio5writeEh+0xe4>)
    1978:	4798      	blx	r3
		ZR_RFTX_LED_ON();
		radio_send_frame(10, txTmpBuffer, 0);
    197a:	1c20      	adds	r0, r4, #0
    197c:	210a      	movs	r1, #10
    197e:	4b17      	ldr	r3, [pc, #92]	; (19dc <_ZN8cMxRadio5writeEh+0xe8>)
    1980:	18e2      	adds	r2, r4, r3
    1982:	2300      	movs	r3, #0
    1984:	4d16      	ldr	r5, [pc, #88]	; (19e0 <_ZN8cMxRadio5writeEh+0xec>)
    1986:	47a8      	blx	r5
#ifdef ZR_TXWAIT_AFTER
		waitTxDone(0xFFFF);
    1988:	1c20      	adds	r0, r4, #0
    198a:	4910      	ldr	r1, [pc, #64]	; (19cc <_ZN8cMxRadio5writeEh+0xd8>)
    198c:	4b10      	ldr	r3, [pc, #64]	; (19d0 <_ZN8cMxRadio5writeEh+0xdc>)
    198e:	4798      	blx	r3
		if (setautorx)
    1990:	4b14      	ldr	r3, [pc, #80]	; (19e4 <_ZN8cMxRadio5writeEh+0xf0>)
    1992:	5ce3      	ldrb	r3, [r4, r3]
    1994:	2b00      	cmp	r3, #0
    1996:	d004      	beq.n	19a2 <_ZN8cMxRadio5writeEh+0xae>
			radio_set_state(STATE_RXAUTO);
    1998:	1c20      	adds	r0, r4, #0
    199a:	2104      	movs	r1, #4
    199c:	4b0e      	ldr	r3, [pc, #56]	; (19d8 <_ZN8cMxRadio5writeEh+0xe4>)
    199e:	4798      	blx	r3
    19a0:	e003      	b.n	19aa <_ZN8cMxRadio5writeEh+0xb6>
		else
			radio_set_state(STATE_RX);
    19a2:	1c20      	adds	r0, r4, #0
    19a4:	2102      	movs	r1, #2
    19a6:	4b0c      	ldr	r3, [pc, #48]	; (19d8 <_ZN8cMxRadio5writeEh+0xe4>)
    19a8:	4798      	blx	r3
		txIsBusy = 0;
    19aa:	2200      	movs	r2, #0
    19ac:	4b09      	ldr	r3, [pc, #36]	; (19d4 <_ZN8cMxRadio5writeEh+0xe0>)
    19ae:	54e2      	strb	r2, [r4, r3]
#endif
	}
}
    19b0:	bd38      	pop	{r3, r4, r5, pc}
    19b2:	46c0      	nop			; (mov r8, r8)
    19b4:	000002ed 	.word	0x000002ed
    19b8:	0000182d 	.word	0x0000182d
    19bc:	0000026e 	.word	0x0000026e
    19c0:	0000026f 	.word	0x0000026f
    19c4:	00000272 	.word	0x00000272
    19c8:	00000273 	.word	0x00000273
    19cc:	0000ffff 	.word	0x0000ffff
    19d0:	00001801 	.word	0x00001801
    19d4:	000002ee 	.word	0x000002ee
    19d8:	00001ced 	.word	0x00001ced
    19dc:	00000269 	.word	0x00000269
    19e0:	00002041 	.word	0x00002041
    19e4:	000002f9 	.word	0x000002f9

000019e8 <_ZN8cMxRadio5writeEPhh>:
 *
 * @param arr data array to be sent
 * @param len length of data array
 */
void cMxRadio::write(uint8_t* arr, uint8_t len)
{
    19e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint8_t i;
	for (i = 0; i < len; i++)
    19ea:	2a00      	cmp	r2, #0
    19ec:	d00c      	beq.n	1a08 <_ZN8cMxRadio5writeEPhh+0x20>
    19ee:	1c06      	adds	r6, r0, #0
    19f0:	1c0c      	adds	r4, r1, #0
    19f2:	1e55      	subs	r5, r2, #1
    19f4:	b2ed      	uxtb	r5, r5
    19f6:	3501      	adds	r5, #1
    19f8:	194d      	adds	r5, r1, r5
		write(arr[i]);
    19fa:	4f04      	ldr	r7, [pc, #16]	; (1a0c <_ZN8cMxRadio5writeEPhh+0x24>)
    19fc:	7821      	ldrb	r1, [r4, #0]
    19fe:	1c30      	adds	r0, r6, #0
    1a00:	47b8      	blx	r7
    1a02:	3401      	adds	r4, #1
 * @param len length of data array
 */
void cMxRadio::write(uint8_t* arr, uint8_t len)
{
	uint8_t i;
	for (i = 0; i < len; i++)
    1a04:	42ac      	cmp	r4, r5
    1a06:	d1f9      	bne.n	19fc <_ZN8cMxRadio5writeEPhh+0x14>
		write(arr[i]);
}
    1a08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1a0a:	46c0      	nop			; (mov r8, r8)
    1a0c:	000018f5 	.word	0x000018f5

00001a10 <_ZN8cMxRadioD1Ev>:

// a busy indicator so transmit functions can wait until the last transmission has finished
volatile uint8_t txIsBusy = 0;


cMxRadio::~cMxRadio()
    1a10:	b510      	push	{r4, lr}
    1a12:	1c04      	adds	r4, r0, #0
    1a14:	30fc      	adds	r0, #252	; 0xfc
    1a16:	4b02      	ldr	r3, [pc, #8]	; (1a20 <_ZN8cMxRadioD1Ev+0x10>)
    1a18:	4798      	blx	r3
{
}
    1a1a:	1c20      	adds	r0, r4, #0
    1a1c:	bd10      	pop	{r4, pc}
    1a1e:	46c0      	nop			; (mov r8, r8)
    1a20:	00003a69 	.word	0x00003a69

00001a24 <_ZN4mbed19FunctionPointerArg1IvvE12membercallerI8cMxRadioEEvPvPj>:
    }
#endif

private:
    template<typename T>
    static R membercaller(void *object, uintptr_t *member) {
    1a24:	b510      	push	{r4, lr}
        T* o = static_cast<T*>(object);
        R (T::**m)(void) = reinterpret_cast<R (T::**)(void)>(member);
        return (o->**m)();
    1a26:	684b      	ldr	r3, [r1, #4]
    1a28:	07da      	lsls	r2, r3, #31
    1a2a:	d401      	bmi.n	1a30 <_ZN4mbed19FunctionPointerArg1IvvE12membercallerI8cMxRadioEEvPvPj+0xc>
    1a2c:	680a      	ldr	r2, [r1, #0]
    1a2e:	e003      	b.n	1a38 <_ZN4mbed19FunctionPointerArg1IvvE12membercallerI8cMxRadioEEvPvPj+0x14>
    1a30:	105a      	asrs	r2, r3, #1
    1a32:	5884      	ldr	r4, [r0, r2]
    1a34:	680a      	ldr	r2, [r1, #0]
    1a36:	58a2      	ldr	r2, [r4, r2]
    1a38:	105b      	asrs	r3, r3, #1
    1a3a:	18c0      	adds	r0, r0, r3
    1a3c:	4790      	blx	r2
    }
    1a3e:	bd10      	pop	{r4, pc}

00001a40 <_ZN8cMxRadio11trx_io_initEi>:
#include <MxRadio.h>


/* === external functions =================================================== */
void cMxRadio::trx_io_init (int spirate)
{
    1a40:	b570      	push	{r4, r5, r6, lr}
    1a42:	1c04      	adds	r4, r0, #0
    1a44:	1c0e      	adds	r6, r1, #0
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    1a46:	23a8      	movs	r3, #168	; 0xa8
    1a48:	56c3      	ldrsb	r3, [r0, r3]
    1a4a:	3301      	adds	r3, #1
    1a4c:	d104      	bne.n	1a58 <_ZN8cMxRadio11trx_io_initEi+0x18>
    1a4e:	4815      	ldr	r0, [pc, #84]	; (1aa4 <_ZN8cMxRadio11trx_io_initEi+0x64>)
    1a50:	4915      	ldr	r1, [pc, #84]	; (1aa8 <_ZN8cMxRadio11trx_io_initEi+0x68>)
    1a52:	2228      	movs	r2, #40	; 0x28
    1a54:	4b15      	ldr	r3, [pc, #84]	; (1aac <_ZN8cMxRadio11trx_io_initEi+0x6c>)
    1a56:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    1a58:	1c23      	adds	r3, r4, #0
    1a5a:	33a8      	adds	r3, #168	; 0xa8
    1a5c:	691a      	ldr	r2, [r3, #16]
    1a5e:	685b      	ldr	r3, [r3, #4]
    1a60:	6013      	str	r3, [r2, #0]
	m_cs = 1;
	m_spi.format(8, 0);
    1a62:	1c25      	adds	r5, r4, #0
    1a64:	3514      	adds	r5, #20
    1a66:	1c28      	adds	r0, r5, #0
    1a68:	2108      	movs	r1, #8
    1a6a:	2200      	movs	r2, #0
    1a6c:	4b10      	ldr	r3, [pc, #64]	; (1ab0 <_ZN8cMxRadio11trx_io_initEi+0x70>)
    1a6e:	4798      	blx	r3
	m_spi.frequency(spirate);
    1a70:	1c28      	adds	r0, r5, #0
    1a72:	1c31      	adds	r1, r6, #0
    1a74:	4b0f      	ldr	r3, [pc, #60]	; (1ab4 <_ZN8cMxRadio11trx_io_initEi+0x74>)
    1a76:	4798      	blx	r3
     *  @param object The object pointer to invoke the member function on (i.e. the this pointer)
     *  @param function The address of the void member function to attach
     */
    template<typename T>
    void attach(T *object, R (T::*member)(void)) {
        _p.object = static_cast<void*>(object);
    1a78:	239c      	movs	r3, #156	; 0x9c
    1a7a:	005b      	lsls	r3, r3, #1
    1a7c:	50e4      	str	r4, [r4, r3]
        *reinterpret_cast<R (T::**)(void)>(_member) = member;
    1a7e:	4a0e      	ldr	r2, [pc, #56]	; (1ab8 <_ZN8cMxRadio11trx_io_initEi+0x78>)
    1a80:	3304      	adds	r3, #4
    1a82:	50e2      	str	r2, [r4, r3]
    1a84:	2200      	movs	r2, #0
    1a86:	3304      	adds	r3, #4
    1a88:	50e2      	str	r2, [r4, r3]
        _membercaller = &FunctionPointerArg1::membercaller<T>;
    1a8a:	1c23      	adds	r3, r4, #0
    1a8c:	3339      	adds	r3, #57	; 0x39
    1a8e:	33ff      	adds	r3, #255	; 0xff
    1a90:	4a0a      	ldr	r2, [pc, #40]	; (1abc <_ZN8cMxRadio11trx_io_initEi+0x7c>)
    1a92:	615a      	str	r2, [r3, #20]
     *  @param mptr pointer to the member function to be called
     */
    template<typename T>
    void rise(T* tptr, void (T::*mptr)(void)) {
        _rise.attach(tptr, mptr);
        gpio_irq_set(&gpio_irq, IRQ_RISE, 1);
    1a94:	1c20      	adds	r0, r4, #0
    1a96:	301d      	adds	r0, #29
    1a98:	30ff      	adds	r0, #255	; 0xff
    1a9a:	2101      	movs	r1, #1
    1a9c:	2201      	movs	r2, #1
    1a9e:	4b08      	ldr	r3, [pc, #32]	; (1ac0 <_ZN8cMxRadio11trx_io_initEi+0x80>)
    1aa0:	4798      	blx	r3
	TRX_SLPTR_INIT();
	SPI_INIT(spirate);
	TRX_IRQ_INIT();
	EI_TRX_IRQ();
	*/
}
    1aa2:	bd70      	pop	{r4, r5, r6, pc}
    1aa4:	0000d268 	.word	0x0000d268
    1aa8:	0000d280 	.word	0x0000d280
    1aac:	00003f89 	.word	0x00003f89
    1ab0:	00003c8d 	.word	0x00003c8d
    1ab4:	00003ca9 	.word	0x00003ca9
    1ab8:	00002119 	.word	0x00002119
    1abc:	00001a25 	.word	0x00001a25
    1ac0:	00002ff5 	.word	0x00002ff5

00001ac4 <_ZN8cMxRadio13trx_reg_writeEhh>:

void cMxRadio::trx_reg_write(uint8_t addr, trx_regval_t val)
{
    1ac4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1ac6:	1c04      	adds	r4, r0, #0
    1ac8:	1c17      	adds	r7, r2, #0

	addr = TRX_CMD_RW | (TRX_CMD_RADDR_MASK & addr);
    1aca:	23c0      	movs	r3, #192	; 0xc0
    1acc:	4319      	orrs	r1, r3
    1ace:	1c0d      	adds	r5, r1, #0
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    1ad0:	3b18      	subs	r3, #24
    1ad2:	56c3      	ldrsb	r3, [r0, r3]
    1ad4:	3301      	adds	r3, #1
    1ad6:	d104      	bne.n	1ae2 <_ZN8cMxRadio13trx_reg_writeEhh+0x1e>
    1ad8:	4810      	ldr	r0, [pc, #64]	; (1b1c <_ZN8cMxRadio13trx_reg_writeEhh+0x58>)
    1ada:	4911      	ldr	r1, [pc, #68]	; (1b20 <_ZN8cMxRadio13trx_reg_writeEhh+0x5c>)
    1adc:	2228      	movs	r2, #40	; 0x28
    1ade:	4b11      	ldr	r3, [pc, #68]	; (1b24 <_ZN8cMxRadio13trx_reg_writeEhh+0x60>)
    1ae0:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    1ae2:	1c23      	adds	r3, r4, #0
    1ae4:	33a8      	adds	r3, #168	; 0xa8
    1ae6:	68da      	ldr	r2, [r3, #12]
    1ae8:	685b      	ldr	r3, [r3, #4]
    1aea:	6013      	str	r3, [r2, #0]

	m_cs = 0;//SPI_SELN_LOW();
	m_spi.write(addr);//SPI_DATA_REG = addr;
    1aec:	1c26      	adds	r6, r4, #0
    1aee:	3614      	adds	r6, #20
    1af0:	1c30      	adds	r0, r6, #0
    1af2:	1c29      	adds	r1, r5, #0
    1af4:	4d0c      	ldr	r5, [pc, #48]	; (1b28 <_ZN8cMxRadio13trx_reg_writeEhh+0x64>)
    1af6:	47a8      	blx	r5
	//SPI_WAITFOR();
	m_spi.write(val);//SPI_DATA_REG = val;
    1af8:	1c30      	adds	r0, r6, #0
    1afa:	1c39      	adds	r1, r7, #0
    1afc:	47a8      	blx	r5
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    1afe:	23a8      	movs	r3, #168	; 0xa8
    1b00:	56e3      	ldrsb	r3, [r4, r3]
    1b02:	3301      	adds	r3, #1
    1b04:	d104      	bne.n	1b10 <_ZN8cMxRadio13trx_reg_writeEhh+0x4c>
    1b06:	4805      	ldr	r0, [pc, #20]	; (1b1c <_ZN8cMxRadio13trx_reg_writeEhh+0x58>)
    1b08:	4905      	ldr	r1, [pc, #20]	; (1b20 <_ZN8cMxRadio13trx_reg_writeEhh+0x5c>)
    1b0a:	2228      	movs	r2, #40	; 0x28
    1b0c:	4b05      	ldr	r3, [pc, #20]	; (1b24 <_ZN8cMxRadio13trx_reg_writeEhh+0x60>)
    1b0e:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    1b10:	34a8      	adds	r4, #168	; 0xa8
    1b12:	6923      	ldr	r3, [r4, #16]
    1b14:	6862      	ldr	r2, [r4, #4]
    1b16:	601a      	str	r2, [r3, #0]
	//SPI_WAITFOR();
	m_cs = 1;//SPI_SELN_HIGH();
}
    1b18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1b1a:	46c0      	nop			; (mov r8, r8)
    1b1c:	0000d268 	.word	0x0000d268
    1b20:	0000d280 	.word	0x0000d280
    1b24:	00003f89 	.word	0x00003f89
    1b28:	00003cc1 	.word	0x00003cc1

00001b2c <_ZN8cMxRadio12trx_reg_readEh>:

trx_regval_t cMxRadio::trx_reg_read(uint8_t addr)
{
    1b2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1b2e:	1c04      	adds	r4, r0, #0

	uint8_t val;

	addr=TRX_CMD_RR | (TRX_CMD_RADDR_MASK & addr);
    1b30:	253f      	movs	r5, #63	; 0x3f
    1b32:	4029      	ands	r1, r5
    1b34:	3541      	adds	r5, #65	; 0x41
    1b36:	430d      	orrs	r5, r1
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    1b38:	23a8      	movs	r3, #168	; 0xa8
    1b3a:	56c3      	ldrsb	r3, [r0, r3]
    1b3c:	3301      	adds	r3, #1
    1b3e:	d104      	bne.n	1b4a <_ZN8cMxRadio12trx_reg_readEh+0x1e>
    1b40:	4811      	ldr	r0, [pc, #68]	; (1b88 <_ZN8cMxRadio12trx_reg_readEh+0x5c>)
    1b42:	4912      	ldr	r1, [pc, #72]	; (1b8c <_ZN8cMxRadio12trx_reg_readEh+0x60>)
    1b44:	2228      	movs	r2, #40	; 0x28
    1b46:	4b12      	ldr	r3, [pc, #72]	; (1b90 <_ZN8cMxRadio12trx_reg_readEh+0x64>)
    1b48:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    1b4a:	1c23      	adds	r3, r4, #0
    1b4c:	33a8      	adds	r3, #168	; 0xa8
    1b4e:	68da      	ldr	r2, [r3, #12]
    1b50:	685b      	ldr	r3, [r3, #4]
    1b52:	6013      	str	r3, [r2, #0]

	// Select transceiver
	m_cs = 0;//SPI_SELN_LOW();

	m_spi.write(addr);//SPI_DATA_REG = addr;
    1b54:	1c27      	adds	r7, r4, #0
    1b56:	3714      	adds	r7, #20
    1b58:	1c38      	adds	r0, r7, #0
    1b5a:	1c29      	adds	r1, r5, #0
    1b5c:	4e0d      	ldr	r6, [pc, #52]	; (1b94 <_ZN8cMxRadio12trx_reg_readEh+0x68>)
    1b5e:	47b0      	blx	r6
	//SPI_WAITFOR();
	val=m_spi.write(addr);//SPI_DATA_REG = addr;        /* dummy out */
    1b60:	1c38      	adds	r0, r7, #0
    1b62:	1c29      	adds	r1, r5, #0
    1b64:	47b0      	blx	r6
    1b66:	b2c5      	uxtb	r5, r0
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    1b68:	23a8      	movs	r3, #168	; 0xa8
    1b6a:	56e3      	ldrsb	r3, [r4, r3]
    1b6c:	3301      	adds	r3, #1
    1b6e:	d104      	bne.n	1b7a <_ZN8cMxRadio12trx_reg_readEh+0x4e>
    1b70:	4805      	ldr	r0, [pc, #20]	; (1b88 <_ZN8cMxRadio12trx_reg_readEh+0x5c>)
    1b72:	4906      	ldr	r1, [pc, #24]	; (1b8c <_ZN8cMxRadio12trx_reg_readEh+0x60>)
    1b74:	2228      	movs	r2, #40	; 0x28
    1b76:	4b06      	ldr	r3, [pc, #24]	; (1b90 <_ZN8cMxRadio12trx_reg_readEh+0x64>)
    1b78:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    1b7a:	34a8      	adds	r4, #168	; 0xa8
    1b7c:	6923      	ldr	r3, [r4, #16]
    1b7e:	6862      	ldr	r2, [r4, #4]
    1b80:	601a      	str	r2, [r3, #0]
	//val = SPI_DATA_REG;

	m_cs=1;//SPI_SELN_HIGH();

	return (trx_regval_t)val;
}
    1b82:	1c28      	adds	r0, r5, #0
    1b84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1b86:	46c0      	nop			; (mov r8, r8)
    1b88:	0000d268 	.word	0x0000d268
    1b8c:	0000d280 	.word	0x0000d280
    1b90:	00003f89 	.word	0x00003f89
    1b94:	00003cc1 	.word	0x00003cc1

00001b98 <_ZN8cMxRadio19radio_receive_frameEv>:
/**
 * @brief Frame reception
 *
 */
void cMxRadio::radio_receive_frame(void)
{
    1b98:	b5f0      	push	{r4, r5, r6, r7, lr}
    1b9a:	b087      	sub	sp, #28
    1b9c:	1c04      	adds	r4, r0, #0

	uint8_t len, lqi, crc_fail;
	int8_t ed;

	/* @todo add RSSI_BASE_VALUE to get a dBm value */
	ed = (int8_t)trx_reg_read(RG_PHY_ED_LEVEL);
    1b9e:	2107      	movs	r1, #7
    1ba0:	4b12      	ldr	r3, [pc, #72]	; (1bec <_ZN8cMxRadio19radio_receive_frameEv+0x54>)
    1ba2:	4798      	blx	r3
    1ba4:	9003      	str	r0, [sp, #12]
	len = trx_frame_read(radiostatus.rxframe, radiostatus.rxframesz, &lqi);
    1ba6:	7c22      	ldrb	r2, [r4, #16]
    1ba8:	270f      	movs	r7, #15
    1baa:	ab02      	add	r3, sp, #8
    1bac:	469c      	mov	ip, r3
    1bae:	4467      	add	r7, ip
    1bb0:	1c20      	adds	r0, r4, #0
    1bb2:	68e1      	ldr	r1, [r4, #12]
    1bb4:	1c3b      	adds	r3, r7, #0
    1bb6:	4d0e      	ldr	r5, [pc, #56]	; (1bf0 <_ZN8cMxRadio19radio_receive_frameEv+0x58>)
    1bb8:	47a8      	blx	r5
    1bba:	1c05      	adds	r5, r0, #0
	len &= ~0x80;

#if defined(SR_RX_CRC_VALID)
	crc_fail = trx_bit_read(SR_RX_CRC_VALID) ? 0 : 1;
    1bbc:	1c20      	adds	r0, r4, #0
    1bbe:	2106      	movs	r1, #6
    1bc0:	2280      	movs	r2, #128	; 0x80
    1bc2:	2307      	movs	r3, #7
    1bc4:	4e0b      	ldr	r6, [pc, #44]	; (1bf4 <_ZN8cMxRadio19radio_receive_frameEv+0x5c>)
    1bc6:	47b0      	blx	r6
		crc = CRC_CCITT_UPDATE(crc, *frm++);
	}
	crc_fail = (crc == 0)? 0: 1;
#endif
radiostatus.rxframe = usr_radio_receive_frame(len, radiostatus.rxframe,
		lqi, ed, crc_fail);
    1bc8:	217f      	movs	r1, #127	; 0x7f
    1bca:	4029      	ands	r1, r5
    1bcc:	783b      	ldrb	r3, [r7, #0]
    1bce:	466a      	mov	r2, sp
    1bd0:	260c      	movs	r6, #12
    1bd2:	5796      	ldrsb	r6, [r2, r6]
    1bd4:	9600      	str	r6, [sp, #0]
	ed = (int8_t)trx_reg_read(RG_PHY_ED_LEVEL);
	len = trx_frame_read(radiostatus.rxframe, radiostatus.rxframesz, &lqi);
	len &= ~0x80;

#if defined(SR_RX_CRC_VALID)
	crc_fail = trx_bit_read(SR_RX_CRC_VALID) ? 0 : 1;
    1bd6:	4242      	negs	r2, r0
    1bd8:	4142      	adcs	r2, r0
		crc = CRC_CCITT_UPDATE(crc, *frm++);
	}
	crc_fail = (crc == 0)? 0: 1;
#endif
radiostatus.rxframe = usr_radio_receive_frame(len, radiostatus.rxframe,
		lqi, ed, crc_fail);
    1bda:	9201      	str	r2, [sp, #4]
    1bdc:	1c20      	adds	r0, r4, #0
    1bde:	68e2      	ldr	r2, [r4, #12]
    1be0:	4d05      	ldr	r5, [pc, #20]	; (1bf8 <_ZN8cMxRadio19radio_receive_frameEv+0x60>)
    1be2:	47a8      	blx	r5
    1be4:	60e0      	str	r0, [r4, #12]
}
    1be6:	b007      	add	sp, #28
    1be8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1bea:	46c0      	nop			; (mov r8, r8)
    1bec:	00001b2d 	.word	0x00001b2d
    1bf0:	00002215 	.word	0x00002215
    1bf4:	000020a5 	.word	0x000020a5
    1bf8:	000013c9 	.word	0x000013c9

00001bfc <_ZN8cMxRadio10radio_initEPhh>:


/* === external functions ====================================================*/

void cMxRadio::radio_init(uint8_t * rxbuf, uint8_t rxbufsz)
{
    1bfc:	b530      	push	{r4, r5, lr}
    1bfe:	b083      	sub	sp, #12
    1c00:	1c04      	adds	r4, r0, #0
	trx_regval_t status;
	/* init cpu peripherals and global IRQ enable */
	radiostatus.rxframe = rxbuf;
    1c02:	60c1      	str	r1, [r0, #12]
	radiostatus.rxframesz = rxbufsz;
    1c04:	7402      	strb	r2, [r0, #16]
	trx_io_init(1000000);
    1c06:	492f      	ldr	r1, [pc, #188]	; (1cc4 <_ZN8cMxRadio10radio_initEPhh+0xc8>)
    1c08:	4b2f      	ldr	r3, [pc, #188]	; (1cc8 <_ZN8cMxRadio10radio_initEPhh+0xcc>)
    1c0a:	4798      	blx	r3
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    1c0c:	23c4      	movs	r3, #196	; 0xc4
    1c0e:	56e3      	ldrsb	r3, [r4, r3]
    1c10:	3301      	adds	r3, #1
    1c12:	d104      	bne.n	1c1e <_ZN8cMxRadio10radio_initEPhh+0x22>
    1c14:	482d      	ldr	r0, [pc, #180]	; (1ccc <_ZN8cMxRadio10radio_initEPhh+0xd0>)
    1c16:	492e      	ldr	r1, [pc, #184]	; (1cd0 <_ZN8cMxRadio10radio_initEPhh+0xd4>)
    1c18:	2228      	movs	r2, #40	; 0x28
    1c1a:	4b2e      	ldr	r3, [pc, #184]	; (1cd4 <_ZN8cMxRadio10radio_initEPhh+0xd8>)
    1c1c:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    1c1e:	1c23      	adds	r3, r4, #0
    1c20:	33c4      	adds	r3, #196	; 0xc4
    1c22:	68da      	ldr	r2, [r3, #12]
    1c24:	685b      	ldr	r3, [r3, #4]
    1c26:	6013      	str	r3, [r2, #0]
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    1c28:	23e0      	movs	r3, #224	; 0xe0
    1c2a:	56e3      	ldrsb	r3, [r4, r3]
    1c2c:	3301      	adds	r3, #1
    1c2e:	d104      	bne.n	1c3a <_ZN8cMxRadio10radio_initEPhh+0x3e>
    1c30:	4826      	ldr	r0, [pc, #152]	; (1ccc <_ZN8cMxRadio10radio_initEPhh+0xd0>)
    1c32:	4927      	ldr	r1, [pc, #156]	; (1cd0 <_ZN8cMxRadio10radio_initEPhh+0xd4>)
    1c34:	2228      	movs	r2, #40	; 0x28
    1c36:	4b27      	ldr	r3, [pc, #156]	; (1cd4 <_ZN8cMxRadio10radio_initEPhh+0xd8>)
    1c38:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    1c3a:	1c23      	adds	r3, r4, #0
    1c3c:	33e0      	adds	r3, #224	; 0xe0
    1c3e:	68da      	ldr	r2, [r3, #12]
    1c40:	685b      	ldr	r3, [r3, #4]
    1c42:	6013      	str	r3, [r2, #0]
	/* transceiver initialization */

	reset_pin=0;//TRX_RESET_LOW();
	sleep_pin=0;//TRX_SLPTR_LOW();
	DELAY_US(TRX_RESET_TIME_US);
    1c44:	2006      	movs	r0, #6
    1c46:	4b24      	ldr	r3, [pc, #144]	; (1cd8 <_ZN8cMxRadio10radio_initEPhh+0xdc>)
    1c48:	4798      	blx	r3
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    1c4a:	23c4      	movs	r3, #196	; 0xc4
    1c4c:	56e3      	ldrsb	r3, [r4, r3]
    1c4e:	3301      	adds	r3, #1
    1c50:	d104      	bne.n	1c5c <_ZN8cMxRadio10radio_initEPhh+0x60>
    1c52:	481e      	ldr	r0, [pc, #120]	; (1ccc <_ZN8cMxRadio10radio_initEPhh+0xd0>)
    1c54:	491e      	ldr	r1, [pc, #120]	; (1cd0 <_ZN8cMxRadio10radio_initEPhh+0xd4>)
    1c56:	2228      	movs	r2, #40	; 0x28
    1c58:	4b1e      	ldr	r3, [pc, #120]	; (1cd4 <_ZN8cMxRadio10radio_initEPhh+0xd8>)
    1c5a:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    1c5c:	1c23      	adds	r3, r4, #0
    1c5e:	33c4      	adds	r3, #196	; 0xc4
    1c60:	691a      	ldr	r2, [r3, #16]
    1c62:	685b      	ldr	r3, [r3, #4]
    1c64:	6013      	str	r3, [r2, #0]


//	if (trx_reg_read(RG_MAN_ID_0)==31) //atmel
//		m_myled=0;
	/* disable IRQ and clear any pending IRQs */
	trx_reg_write(RG_IRQ_MASK, 0);
    1c66:	1c20      	adds	r0, r4, #0
    1c68:	210e      	movs	r1, #14
    1c6a:	2200      	movs	r2, #0
    1c6c:	4b1b      	ldr	r3, [pc, #108]	; (1cdc <_ZN8cMxRadio10radio_initEPhh+0xe0>)
    1c6e:	4798      	blx	r3

	trx_reg_read(RG_IRQ_STATUS);
    1c70:	1c20      	adds	r0, r4, #0
    1c72:	210f      	movs	r1, #15
    1c74:	4b1a      	ldr	r3, [pc, #104]	; (1ce0 <_ZN8cMxRadio10radio_initEPhh+0xe4>)
    1c76:	4798      	blx	r3
	DELAY_US(510);
#endif
	trx_reg_write(RG_TRX_STATE, CMD_FORCE_TRX_OFF);
	DELAY_US(510);
#else
	trx_bit_write(SR_TRX_CMD, CMD_TRX_OFF);
    1c78:	2308      	movs	r3, #8
    1c7a:	9300      	str	r3, [sp, #0]
    1c7c:	1c20      	adds	r0, r4, #0
    1c7e:	2102      	movs	r1, #2
    1c80:	221f      	movs	r2, #31
    1c82:	2300      	movs	r3, #0
    1c84:	4d17      	ldr	r5, [pc, #92]	; (1ce4 <_ZN8cMxRadio10radio_initEPhh+0xe8>)
    1c86:	47a8      	blx	r5
	DELAY_US(510);
    1c88:	20ff      	movs	r0, #255	; 0xff
    1c8a:	0040      	lsls	r0, r0, #1
    1c8c:	4b12      	ldr	r3, [pc, #72]	; (1cd8 <_ZN8cMxRadio10radio_initEPhh+0xdc>)
    1c8e:	4798      	blx	r3
#endif

	do
	{
		status = trx_bit_read(SR_TRX_STATUS);
    1c90:	4d15      	ldr	r5, [pc, #84]	; (1ce8 <_ZN8cMxRadio10radio_initEPhh+0xec>)
    1c92:	1c20      	adds	r0, r4, #0
    1c94:	2101      	movs	r1, #1
    1c96:	221f      	movs	r2, #31
    1c98:	2300      	movs	r3, #0
    1c9a:	47a8      	blx	r5
#else
	trx_bit_write(SR_TRX_CMD, CMD_TRX_OFF);
	DELAY_US(510);
#endif

	do
    1c9c:	2808      	cmp	r0, #8
    1c9e:	d1f8      	bne.n	1c92 <_ZN8cMxRadio10radio_initEPhh+0x96>
	{
		status = trx_bit_read(SR_TRX_STATUS);
	}
	while (status != TRX_OFF);
	trx_bit_write(SR_TX_AUTO_CRC_ON, 1);
    1ca0:	2301      	movs	r3, #1
    1ca2:	9300      	str	r3, [sp, #0]
    1ca4:	1c20      	adds	r0, r4, #0
    1ca6:	2104      	movs	r1, #4
    1ca8:	2220      	movs	r2, #32
    1caa:	3304      	adds	r3, #4
    1cac:	4d0d      	ldr	r5, [pc, #52]	; (1ce4 <_ZN8cMxRadio10radio_initEPhh+0xe8>)
    1cae:	47a8      	blx	r5
	trx_reg_write(RG_IRQ_MASK, TRX_IRQ_RX_START | TRX_IRQ_TRX_END);
    1cb0:	1c20      	adds	r0, r4, #0
    1cb2:	210e      	movs	r1, #14
    1cb4:	220c      	movs	r2, #12
    1cb6:	4b09      	ldr	r3, [pc, #36]	; (1cdc <_ZN8cMxRadio10radio_initEPhh+0xe0>)
    1cb8:	4798      	blx	r3

	radiostatus.state = STATE_OFF;
    1cba:	2300      	movs	r3, #0
    1cbc:	71e3      	strb	r3, [r4, #7]
	radiostatus.idle_state = STATE_OFF;
    1cbe:	7223      	strb	r3, [r4, #8]
}
    1cc0:	b003      	add	sp, #12
    1cc2:	bd30      	pop	{r4, r5, pc}
    1cc4:	000f4240 	.word	0x000f4240
    1cc8:	00001a41 	.word	0x00001a41
    1ccc:	0000d268 	.word	0x0000d268
    1cd0:	0000d280 	.word	0x0000d280
    1cd4:	00003f89 	.word	0x00003f89
    1cd8:	00004089 	.word	0x00004089
    1cdc:	00001ac5 	.word	0x00001ac5
    1ce0:	00001b2d 	.word	0x00001b2d
    1ce4:	00002159 	.word	0x00002159
    1ce8:	000020a5 	.word	0x000020a5

00001cec <_ZN8cMxRadio15radio_set_stateEh>:
	trx_bit_write(SR_TRX_CMD, CMD_FORCE_TRX_OFF);
	radio_set_state(state);
}

void cMxRadio::radio_set_state(volatile radio_state_t state)
{
    1cec:	b5f0      	push	{r4, r5, r6, r7, lr}
    1cee:	464f      	mov	r7, r9
    1cf0:	b480      	push	{r7}
    1cf2:	b086      	sub	sp, #24
    1cf4:	9002      	str	r0, [sp, #8]
    1cf6:	230f      	movs	r3, #15
    1cf8:	446b      	add	r3, sp
    1cfa:	7019      	strb	r1, [r3, #0]
	volatile trx_regval_t cmd, expstatus, currstatus;
	uint8_t retries;
	bool do_sleep = false;

	switch(state)
    1cfc:	781b      	ldrb	r3, [r3, #0]
    1cfe:	b2db      	uxtb	r3, r3
    1d00:	2b05      	cmp	r3, #5
    1d02:	d83b      	bhi.n	1d7c <_ZN8cMxRadio15radio_set_stateEh+0x90>
    1d04:	009b      	lsls	r3, r3, #2
    1d06:	4a65      	ldr	r2, [pc, #404]	; (1e9c <_ZN8cMxRadio15radio_set_stateEh+0x1b0>)
    1d08:	58d3      	ldr	r3, [r2, r3]
    1d0a:	469f      	mov	pc, r3
		TRX_TX_PA_DI();
#endif
#ifdef TRX_RX_LNA_EI
		TRX_RX_LNA_DI();
#endif
		expstatus = TRX_OFF;
    1d0c:	2308      	movs	r3, #8
    1d0e:	2216      	movs	r2, #22
    1d10:	446a      	add	r2, sp
    1d12:	7013      	strb	r3, [r2, #0]
		cmd = CMD_TRX_OFF;
    1d14:	2215      	movs	r2, #21
    1d16:	446a      	add	r2, sp
    1d18:	7013      	strb	r3, [r2, #0]
		break;
    1d1a:	e0b4      	b.n	1e86 <_ZN8cMxRadio15radio_set_stateEh+0x19a>
		if (radiostatus.rx_lna)
		{
			TRX_RX_LNA_EI();
		}
#endif
expstatus = RX_ON;
    1d1c:	2306      	movs	r3, #6
    1d1e:	2216      	movs	r2, #22
    1d20:	446a      	add	r2, sp
    1d22:	7013      	strb	r3, [r2, #0]
cmd = CMD_RX_ON;
    1d24:	2215      	movs	r2, #21
    1d26:	446a      	add	r2, sp
    1d28:	7013      	strb	r3, [r2, #0]
break;
    1d2a:	e0ac      	b.n	1e86 <_ZN8cMxRadio15radio_set_stateEh+0x19a>

	case STATE_TX:
		expstatus = PLL_ON;
    1d2c:	2309      	movs	r3, #9
    1d2e:	2216      	movs	r2, #22
    1d30:	446a      	add	r2, sp
    1d32:	7013      	strb	r3, [r2, #0]
		cmd = CMD_PLL_ON;
    1d34:	2215      	movs	r2, #21
    1d36:	446a      	add	r2, sp
    1d38:	7013      	strb	r3, [r2, #0]
		break;
    1d3a:	e0a4      	b.n	1e86 <_ZN8cMxRadio15radio_set_stateEh+0x19a>
if (radiostatus.rx_lna)
{
	TRX_RX_LNA_EI();
}
#endif
expstatus = RX_AACK_ON;
    1d3c:	2316      	movs	r3, #22
    1d3e:	2216      	movs	r2, #22
    1d40:	446a      	add	r2, sp
    1d42:	7013      	strb	r3, [r2, #0]
cmd = CMD_RX_AACK_ON;
    1d44:	2215      	movs	r2, #21
    1d46:	446a      	add	r2, sp
    1d48:	7013      	strb	r3, [r2, #0]
break;
    1d4a:	e09c      	b.n	1e86 <_ZN8cMxRadio15radio_set_stateEh+0x19a>

	case STATE_TXAUTO:
		expstatus = TX_ARET_ON;
    1d4c:	2319      	movs	r3, #25
    1d4e:	2216      	movs	r2, #22
    1d50:	446a      	add	r2, sp
    1d52:	7013      	strb	r3, [r2, #0]
		cmd = CMD_TX_ARET_ON;
    1d54:	2215      	movs	r2, #21
    1d56:	446a      	add	r2, sp
    1d58:	7013      	strb	r3, [r2, #0]
		break;
    1d5a:	e094      	b.n	1e86 <_ZN8cMxRadio15radio_set_stateEh+0x19a>
		TRX_TX_PA_DI();
#endif
#ifdef TRX_RX_LNA_EI
		TRX_RX_LNA_DI();
#endif
		expstatus = TRX_OFF;
    1d5c:	2208      	movs	r2, #8
    1d5e:	2316      	movs	r3, #22
    1d60:	446b      	add	r3, sp
    1d62:	701a      	strb	r2, [r3, #0]
		cmd = CMD_FORCE_TRX_OFF;
    1d64:	3a05      	subs	r2, #5
    1d66:	2315      	movs	r3, #21
    1d68:	446b      	add	r3, sp
    1d6a:	701a      	strb	r2, [r3, #0]
		cmd = CMD_TRX_OFF;
		break;

	}

	if (STATE_SLEEP == radiostatus.state)
    1d6c:	9b02      	ldr	r3, [sp, #8]
    1d6e:	79db      	ldrb	r3, [r3, #7]
    1d70:	2b05      	cmp	r3, #5
    1d72:	d100      	bne.n	1d76 <_ZN8cMxRadio15radio_set_stateEh+0x8a>
    1d74:	e08e      	b.n	1e94 <_ZN8cMxRadio15radio_set_stateEh+0x1a8>
#ifdef TRX_RX_LNA_EI
		TRX_RX_LNA_DI();
#endif
		expstatus = TRX_OFF;
		cmd = CMD_FORCE_TRX_OFF;
		do_sleep = true;
    1d76:	2301      	movs	r3, #1
    1d78:	4699      	mov	r9, r3
    1d7a:	e03d      	b.n	1df8 <_ZN8cMxRadio15radio_set_stateEh+0x10c>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    1d7c:	9802      	ldr	r0, [sp, #8]
    1d7e:	2104      	movs	r1, #4
    1d80:	4b47      	ldr	r3, [pc, #284]	; (1ea0 <_ZN8cMxRadio15radio_set_stateEh+0x1b4>)
    1d82:	4798      	blx	r3
		do_sleep = true;
		break;

	default:
		radio_error(GENERAL_ERROR);
		expstatus = TRX_OFF;
    1d84:	2308      	movs	r3, #8
    1d86:	2216      	movs	r2, #22
    1d88:	446a      	add	r2, sp
    1d8a:	7013      	strb	r3, [r2, #0]
		cmd = CMD_TRX_OFF;
    1d8c:	2215      	movs	r2, #21
    1d8e:	446a      	add	r2, sp
    1d90:	7013      	strb	r3, [r2, #0]
		break;
    1d92:	e078      	b.n	1e86 <_ZN8cMxRadio15radio_set_stateEh+0x19a>
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    1d94:	23e0      	movs	r3, #224	; 0xe0
    1d96:	9a02      	ldr	r2, [sp, #8]
    1d98:	56d3      	ldrsb	r3, [r2, r3]
    1d9a:	3301      	adds	r3, #1
    1d9c:	d104      	bne.n	1da8 <_ZN8cMxRadio15radio_set_stateEh+0xbc>
    1d9e:	4841      	ldr	r0, [pc, #260]	; (1ea4 <_ZN8cMxRadio15radio_set_stateEh+0x1b8>)
    1da0:	4941      	ldr	r1, [pc, #260]	; (1ea8 <_ZN8cMxRadio15radio_set_stateEh+0x1bc>)
    1da2:	2228      	movs	r2, #40	; 0x28
    1da4:	4b41      	ldr	r3, [pc, #260]	; (1eac <_ZN8cMxRadio15radio_set_stateEh+0x1c0>)
    1da6:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    1da8:	9b02      	ldr	r3, [sp, #8]
    1daa:	33e0      	adds	r3, #224	; 0xe0
    1dac:	68da      	ldr	r2, [r3, #12]
    1dae:	685b      	ldr	r3, [r3, #4]
    1db0:	6013      	str	r3, [r2, #0]
		 * be polled.  The state reads as 0b0011111 ("state transition
		 * in progress") while the transceiver is still in its startup
		 * phase, which does not match any of the "expstatus" values,
		 * so polling just continues.
		 */
		DELAY_US(500);
    1db2:	20fa      	movs	r0, #250	; 0xfa
    1db4:	0040      	lsls	r0, r0, #1
    1db6:	4b3e      	ldr	r3, [pc, #248]	; (1eb0 <_ZN8cMxRadio15radio_set_stateEh+0x1c4>)
    1db8:	4798      	blx	r3
    1dba:	2464      	movs	r4, #100	; 0x64
		 * to be enough under all circumstances.
		 */
		retries = 100;
		do
		{
			currstatus = trx_bit_read(SR_TRX_STATUS);
    1dbc:	4f3d      	ldr	r7, [pc, #244]	; (1eb4 <_ZN8cMxRadio15radio_set_stateEh+0x1c8>)
    1dbe:	2517      	movs	r5, #23
    1dc0:	446d      	add	r5, sp
			 */
			if (TRX_OFF == currstatus)
			{
				break;
			}
			DELAY_US(50);
    1dc2:	4e3b      	ldr	r6, [pc, #236]	; (1eb0 <_ZN8cMxRadio15radio_set_stateEh+0x1c4>)
		 * to be enough under all circumstances.
		 */
		retries = 100;
		do
		{
			currstatus = trx_bit_read(SR_TRX_STATUS);
    1dc4:	9802      	ldr	r0, [sp, #8]
    1dc6:	2101      	movs	r1, #1
    1dc8:	221f      	movs	r2, #31
    1dca:	2300      	movs	r3, #0
    1dcc:	47b8      	blx	r7
    1dce:	7028      	strb	r0, [r5, #0]
			/*
			 * Sleep could only be entered from TRX_OFF, so that's
			 * what is expected again.
			 */
			if (TRX_OFF == currstatus)
    1dd0:	782b      	ldrb	r3, [r5, #0]
    1dd2:	2b08      	cmp	r3, #8
    1dd4:	d005      	beq.n	1de2 <_ZN8cMxRadio15radio_set_stateEh+0xf6>
			{
				break;
			}
			DELAY_US(50);
    1dd6:	2032      	movs	r0, #50	; 0x32
    1dd8:	47b0      	blx	r6
    1dda:	3c01      	subs	r4, #1
    1ddc:	b2e4      	uxtb	r4, r4
		 * to be charged by the voltage regulator.  Give the crystal
		 * oscillator some time to start up.  5 ms (100 * 50 us) ought
		 * to be enough under all circumstances.
		 */
		retries = 100;
		do
    1dde:	2c00      	cmp	r4, #0
    1de0:	d1f0      	bne.n	1dc4 <_ZN8cMxRadio15radio_set_stateEh+0xd8>
			}
			DELAY_US(50);
		}
		while (--retries);

		if (currstatus != TRX_OFF)
    1de2:	2317      	movs	r3, #23
    1de4:	446b      	add	r3, sp
    1de6:	781b      	ldrb	r3, [r3, #0]
    1de8:	2200      	movs	r2, #0
    1dea:	4691      	mov	r9, r2
    1dec:	2b08      	cmp	r3, #8
    1dee:	d003      	beq.n	1df8 <_ZN8cMxRadio15radio_set_stateEh+0x10c>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    1df0:	9802      	ldr	r0, [sp, #8]
    1df2:	2101      	movs	r1, #1
    1df4:	4b2a      	ldr	r3, [pc, #168]	; (1ea0 <_ZN8cMxRadio15radio_set_stateEh+0x1b4>)
    1df6:	4798      	blx	r3
		{
			/* radio didn't wake up */
			radio_error(STATE_SET_FAILED);
		}
	}
	trx_bit_write(SR_TRX_CMD, cmd);
    1df8:	2315      	movs	r3, #21
    1dfa:	446b      	add	r3, sp
    1dfc:	781b      	ldrb	r3, [r3, #0]
    1dfe:	9300      	str	r3, [sp, #0]
    1e00:	9802      	ldr	r0, [sp, #8]
    1e02:	2102      	movs	r1, #2
    1e04:	221f      	movs	r2, #31
    1e06:	2300      	movs	r3, #0
    1e08:	4c2b      	ldr	r4, [pc, #172]	; (1eb8 <_ZN8cMxRadio15radio_set_stateEh+0x1cc>)
    1e0a:	47a0      	blx	r4
    1e0c:	248c      	movs	r4, #140	; 0x8c

	retries = 140;              /* enough to await an ongoing frame
	 * reception */
	do
	{
		currstatus = trx_bit_read(SR_TRX_STATUS);
    1e0e:	4f29      	ldr	r7, [pc, #164]	; (1eb4 <_ZN8cMxRadio15radio_set_stateEh+0x1c8>)
    1e10:	2517      	movs	r5, #23
    1e12:	446d      	add	r5, sp
		if (expstatus == currstatus)
		{
			break;
		}
		/** @todo must wait longer for 790/868/900 MHz radios */
		DELAY_US(32);
    1e14:	4e26      	ldr	r6, [pc, #152]	; (1eb0 <_ZN8cMxRadio15radio_set_stateEh+0x1c4>)

	retries = 140;              /* enough to await an ongoing frame
	 * reception */
	do
	{
		currstatus = trx_bit_read(SR_TRX_STATUS);
    1e16:	9802      	ldr	r0, [sp, #8]
    1e18:	2101      	movs	r1, #1
    1e1a:	221f      	movs	r2, #31
    1e1c:	2300      	movs	r3, #0
    1e1e:	47b8      	blx	r7
    1e20:	7028      	strb	r0, [r5, #0]
		if (expstatus == currstatus)
    1e22:	2316      	movs	r3, #22
    1e24:	446b      	add	r3, sp
    1e26:	781b      	ldrb	r3, [r3, #0]
    1e28:	782a      	ldrb	r2, [r5, #0]
    1e2a:	b2db      	uxtb	r3, r3
    1e2c:	4293      	cmp	r3, r2
    1e2e:	d005      	beq.n	1e3c <_ZN8cMxRadio15radio_set_stateEh+0x150>
		{
			break;
		}
		/** @todo must wait longer for 790/868/900 MHz radios */
		DELAY_US(32);
    1e30:	2020      	movs	r0, #32
    1e32:	47b0      	blx	r6
    1e34:	3c01      	subs	r4, #1
    1e36:	b2e4      	uxtb	r4, r4
	}
	trx_bit_write(SR_TRX_CMD, cmd);

	retries = 140;              /* enough to await an ongoing frame
	 * reception */
	do
    1e38:	2c00      	cmp	r4, #0
    1e3a:	d1ec      	bne.n	1e16 <_ZN8cMxRadio15radio_set_stateEh+0x12a>
		/** @todo must wait longer for 790/868/900 MHz radios */
		DELAY_US(32);
	}
	while (--retries);

	if (expstatus != currstatus)
    1e3c:	2316      	movs	r3, #22
    1e3e:	446b      	add	r3, sp
    1e40:	781b      	ldrb	r3, [r3, #0]
    1e42:	2217      	movs	r2, #23
    1e44:	446a      	add	r2, sp
    1e46:	7812      	ldrb	r2, [r2, #0]
    1e48:	b2db      	uxtb	r3, r3
    1e4a:	4293      	cmp	r3, r2
    1e4c:	d003      	beq.n	1e56 <_ZN8cMxRadio15radio_set_stateEh+0x16a>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    1e4e:	9802      	ldr	r0, [sp, #8]
    1e50:	2101      	movs	r1, #1
    1e52:	4b13      	ldr	r3, [pc, #76]	; (1ea0 <_ZN8cMxRadio15radio_set_stateEh+0x1b4>)
    1e54:	4798      	blx	r3
	if (expstatus != currstatus)
	{
		radio_error(STATE_SET_FAILED);
	}

	if (do_sleep)
    1e56:	464b      	mov	r3, r9
    1e58:	2b00      	cmp	r3, #0
    1e5a:	d00e      	beq.n	1e7a <_ZN8cMxRadio15radio_set_stateEh+0x18e>
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    1e5c:	23e0      	movs	r3, #224	; 0xe0
    1e5e:	9a02      	ldr	r2, [sp, #8]
    1e60:	56d3      	ldrsb	r3, [r2, r3]
    1e62:	3301      	adds	r3, #1
    1e64:	d104      	bne.n	1e70 <_ZN8cMxRadio15radio_set_stateEh+0x184>
    1e66:	480f      	ldr	r0, [pc, #60]	; (1ea4 <_ZN8cMxRadio15radio_set_stateEh+0x1b8>)
    1e68:	490f      	ldr	r1, [pc, #60]	; (1ea8 <_ZN8cMxRadio15radio_set_stateEh+0x1bc>)
    1e6a:	2228      	movs	r2, #40	; 0x28
    1e6c:	4b0f      	ldr	r3, [pc, #60]	; (1eac <_ZN8cMxRadio15radio_set_stateEh+0x1c0>)
    1e6e:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    1e70:	9b02      	ldr	r3, [sp, #8]
    1e72:	33e0      	adds	r3, #224	; 0xe0
    1e74:	691a      	ldr	r2, [r3, #16]
    1e76:	685b      	ldr	r3, [r3, #4]
    1e78:	6013      	str	r3, [r2, #0]
	{
		sleep_pin=1;//TRX_SLPTR_HIGH();
	}

	radiostatus.state = state;
    1e7a:	230f      	movs	r3, #15
    1e7c:	446b      	add	r3, sp
    1e7e:	781b      	ldrb	r3, [r3, #0]
    1e80:	9a02      	ldr	r2, [sp, #8]
    1e82:	71d3      	strb	r3, [r2, #7]
    1e84:	e006      	b.n	1e94 <_ZN8cMxRadio15radio_set_stateEh+0x1a8>
		cmd = CMD_TRX_OFF;
		break;

	}

	if (STATE_SLEEP == radiostatus.state)
    1e86:	9b02      	ldr	r3, [sp, #8]
    1e88:	79db      	ldrb	r3, [r3, #7]
    1e8a:	2b05      	cmp	r3, #5
    1e8c:	d082      	beq.n	1d94 <_ZN8cMxRadio15radio_set_stateEh+0xa8>
    1e8e:	2300      	movs	r3, #0
    1e90:	4699      	mov	r9, r3
    1e92:	e7b1      	b.n	1df8 <_ZN8cMxRadio15radio_set_stateEh+0x10c>
	{
		sleep_pin=1;//TRX_SLPTR_HIGH();
	}

	radiostatus.state = state;
}
    1e94:	b006      	add	sp, #24
    1e96:	bc04      	pop	{r2}
    1e98:	4691      	mov	r9, r2
    1e9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1e9c:	0000d2cc 	.word	0x0000d2cc
    1ea0:	000013a1 	.word	0x000013a1
    1ea4:	0000d268 	.word	0x0000d268
    1ea8:	0000d280 	.word	0x0000d280
    1eac:	00003f89 	.word	0x00003f89
    1eb0:	00004089 	.word	0x00004089
    1eb4:	000020a5 	.word	0x000020a5
    1eb8:	00002159 	.word	0x00002159

00001ebc <_ZN8cMxRadio17radio_irq_handlerEh>:
 *
 * @parm cause  value of the interrupt status register
 *
 */
void cMxRadio::radio_irq_handler(uint8_t cause)
{
    1ebc:	b570      	push	{r4, r5, r6, lr}
    1ebe:	1c04      	adds	r4, r0, #0
    1ec0:	1c0d      	adds	r5, r1, #0
	if (cause & TRX_IRQ_TRX_END)
    1ec2:	070b      	lsls	r3, r1, #28
    1ec4:	d52b      	bpl.n	1f1e <_ZN8cMxRadio17radio_irq_handlerEh+0x62>
	{
		if (STATE_RX == radiostatus.state ||
    1ec6:	79c3      	ldrb	r3, [r0, #7]
    1ec8:	1e99      	subs	r1, r3, #2
    1eca:	22fd      	movs	r2, #253	; 0xfd
    1ecc:	4211      	tst	r1, r2
    1ece:	d102      	bne.n	1ed6 <_ZN8cMxRadio17radio_irq_handlerEh+0x1a>
				STATE_RXAUTO == radiostatus.state)
		{
			radio_receive_frame();
    1ed0:	4b15      	ldr	r3, [pc, #84]	; (1f28 <_ZN8cMxRadio17radio_irq_handlerEh+0x6c>)
    1ed2:	4798      	blx	r3
    1ed4:	e023      	b.n	1f1e <_ZN8cMxRadio17radio_irq_handlerEh+0x62>
		}
		else if (STATE_TX == radiostatus.state)
    1ed6:	2b01      	cmp	r3, #1
    1ed8:	d107      	bne.n	1eea <_ZN8cMxRadio17radio_irq_handlerEh+0x2e>
		{
#ifdef TRX_TX_PA_EI
TRX_TX_PA_DI();
#endif
usr_radio_tx_done(TX_OK);
    1eda:	2100      	movs	r1, #0
    1edc:	4b13      	ldr	r3, [pc, #76]	; (1f2c <_ZN8cMxRadio17radio_irq_handlerEh+0x70>)
    1ede:	4798      	blx	r3
radio_set_state(radiostatus.idle_state);
    1ee0:	7a21      	ldrb	r1, [r4, #8]
    1ee2:	1c20      	adds	r0, r4, #0
    1ee4:	4b12      	ldr	r3, [pc, #72]	; (1f30 <_ZN8cMxRadio17radio_irq_handlerEh+0x74>)
    1ee6:	4798      	blx	r3
    1ee8:	e019      	b.n	1f1e <_ZN8cMxRadio17radio_irq_handlerEh+0x62>
		}
		else if (STATE_TXAUTO == radiostatus.state)
    1eea:	2b03      	cmp	r3, #3
    1eec:	d117      	bne.n	1f1e <_ZN8cMxRadio17radio_irq_handlerEh+0x62>
		{
#ifdef TRX_TX_PA_EI
			TRX_TX_PA_DI();
#endif
			uint8_t trac_status = trx_bit_read(SR_TRAC_STATUS);
    1eee:	2102      	movs	r1, #2
    1ef0:	22e0      	movs	r2, #224	; 0xe0
    1ef2:	3302      	adds	r3, #2
    1ef4:	4e0f      	ldr	r6, [pc, #60]	; (1f34 <_ZN8cMxRadio17radio_irq_handlerEh+0x78>)
    1ef6:	47b0      	blx	r6
			radio_tx_done_t result;
			switch (trac_status)
    1ef8:	2803      	cmp	r0, #3
    1efa:	d006      	beq.n	1f0a <_ZN8cMxRadio17radio_irq_handlerEh+0x4e>
    1efc:	d307      	bcc.n	1f0e <_ZN8cMxRadio17radio_irq_handlerEh+0x52>
			case TRAC_NO_ACK:
				result = TX_NO_ACK;
				break;

			default:
				result = TX_FAIL;
    1efe:	3805      	subs	r0, #5
    1f00:	4243      	negs	r3, r0
    1f02:	4143      	adcs	r3, r0
    1f04:	2103      	movs	r1, #3
    1f06:	1ac9      	subs	r1, r1, r3
    1f08:	e002      	b.n	1f10 <_ZN8cMxRadio17radio_irq_handlerEh+0x54>
#endif
				result = TX_OK;
				break;

			case TRAC_CHANNEL_ACCESS_FAILURE:
				result = TX_CCA_FAIL;
    1f0a:	2101      	movs	r1, #1
    1f0c:	e000      	b.n	1f10 <_ZN8cMxRadio17radio_irq_handlerEh+0x54>
			case TRAC_SUCCESS_DATA_PENDING:
#endif
#if defined TRAC_SUCCESS_WAIT_FOR_ACK
			case TRAC_SUCCESS_WAIT_FOR_ACK:
#endif
				result = TX_OK;
    1f0e:	2100      	movs	r1, #0
				break;

			default:
				result = TX_FAIL;
			}
			usr_radio_tx_done(result);
    1f10:	1c20      	adds	r0, r4, #0
    1f12:	4b06      	ldr	r3, [pc, #24]	; (1f2c <_ZN8cMxRadio17radio_irq_handlerEh+0x70>)
    1f14:	4798      	blx	r3
			radio_set_state(radiostatus.idle_state);
    1f16:	7a21      	ldrb	r1, [r4, #8]
    1f18:	1c20      	adds	r0, r4, #0
    1f1a:	4b05      	ldr	r3, [pc, #20]	; (1f30 <_ZN8cMxRadio17radio_irq_handlerEh+0x74>)
    1f1c:	4798      	blx	r3
		}
	}
	usr_radio_irq(cause);
    1f1e:	1c20      	adds	r0, r4, #0
    1f20:	1c29      	adds	r1, r5, #0
    1f22:	4b05      	ldr	r3, [pc, #20]	; (1f38 <_ZN8cMxRadio17radio_irq_handlerEh+0x7c>)
    1f24:	4798      	blx	r3
}
    1f26:	bd70      	pop	{r4, r5, r6, pc}
    1f28:	00001b99 	.word	0x00001b99
    1f2c:	00001411 	.word	0x00001411
    1f30:	00001ced 	.word	0x00001ced
    1f34:	000020a5 	.word	0x000020a5
    1f38:	000013b5 	.word	0x000013b5

00001f3c <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t>:

	radiostatus.state = state;
}

void cMxRadio::radio_set_param(radio_attribute_t attr, radio_param_t parm)
{
    1f3c:	b5f0      	push	{r4, r5, r6, r7, lr}
    1f3e:	4647      	mov	r7, r8
    1f40:	b480      	push	{r7}
    1f42:	b082      	sub	sp, #8
    1f44:	1c05      	adds	r5, r0, #0
	switch (attr)
    1f46:	2908      	cmp	r1, #8
    1f48:	d864      	bhi.n	2014 <STACK_SIZE+0x14>
    1f4a:	0089      	lsls	r1, r1, #2
    1f4c:	4b35      	ldr	r3, [pc, #212]	; (2024 <STACK_SIZE+0x24>)
    1f4e:	585b      	ldr	r3, [r3, r1]
    1f50:	469f      	mov	pc, r3
	{
	case phyCurrentChannel:
		if (((int)parm.channel >= TRX_MIN_CHANNEL) &&
    1f52:	b2d4      	uxtb	r4, r2
    1f54:	1c23      	adds	r3, r4, #0
    1f56:	3b0b      	subs	r3, #11
    1f58:	2b0f      	cmp	r3, #15
    1f5a:	d807      	bhi.n	1f6c <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0x30>
		{
#ifdef CHINABAND
			trx_reg_write(RG_CC_CTRL_1, CCBAND);
			trx_reg_write(RG_CC_CTRL_0, parm.channel*2+CCNUMBER);
#else
			trx_bit_write(SR_CHANNEL, parm.channel);
    1f5c:	9400      	str	r4, [sp, #0]
    1f5e:	2108      	movs	r1, #8
    1f60:	221f      	movs	r2, #31
    1f62:	2300      	movs	r3, #0
    1f64:	4e30      	ldr	r6, [pc, #192]	; (2028 <STACK_SIZE+0x28>)
    1f66:	47b0      	blx	r6
#endif
			radiostatus.channel = parm.channel;
    1f68:	712c      	strb	r4, [r5, #4]
    1f6a:	e056      	b.n	201a <STACK_SIZE+0x1a>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    1f6c:	2102      	movs	r1, #2
    1f6e:	4b2f      	ldr	r3, [pc, #188]	; (202c <STACK_SIZE+0x2c>)
    1f70:	4798      	blx	r3
    1f72:	e052      	b.n	201a <STACK_SIZE+0x1a>
		{
			radio_error(SET_PARM_FAILED);
		}
#endif//chinaband
#else
		if (parm.tx_pwr >= -17 && parm.tx_pwr <= 3)
    1f74:	b2d2      	uxtb	r2, r2
    1f76:	1c13      	adds	r3, r2, #0
    1f78:	3311      	adds	r3, #17
    1f7a:	b2db      	uxtb	r3, r3
    1f7c:	2b14      	cmp	r3, #20
    1f7e:	d809      	bhi.n	1f94 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0x58>
					0x06,                         /* 0 dBm */
					0x04,                         /* 1 dBm */
					0x02,                         /* 2 dBm */
					0x00                          /* 3 dBm */
			};
			radiostatus.tx_pwr = parm.tx_pwr;
    1f80:	7142      	strb	r2, [r0, #5]
			uint8_t idx = parm.tx_pwr + 17;
			uint8_t pwrval = pwrtable[idx];
    1f82:	4a2b      	ldr	r2, [pc, #172]	; (2030 <STACK_SIZE+0x30>)
			trx_bit_write(SR_TX_PWR, pwrval);
    1f84:	5cd3      	ldrb	r3, [r2, r3]
    1f86:	9300      	str	r3, [sp, #0]
    1f88:	2105      	movs	r1, #5
    1f8a:	220f      	movs	r2, #15
    1f8c:	2300      	movs	r3, #0
    1f8e:	4c26      	ldr	r4, [pc, #152]	; (2028 <STACK_SIZE+0x28>)
    1f90:	47a0      	blx	r4
    1f92:	e042      	b.n	201a <STACK_SIZE+0x1a>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    1f94:	2102      	movs	r1, #2
    1f96:	4b25      	ldr	r3, [pc, #148]	; (202c <STACK_SIZE+0x2c>)
    1f98:	4798      	blx	r3
    1f9a:	e03e      	b.n	201a <STACK_SIZE+0x1a>
		}

#endif//rf212
		break;
	case phyCCAMode:
		if (parm.cca_mode <= 3)
    1f9c:	b2d2      	uxtb	r2, r2
    1f9e:	2a03      	cmp	r2, #3
    1fa0:	d807      	bhi.n	1fb2 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0x76>
		{
			radiostatus.cca_mode = parm.cca_mode;
    1fa2:	7182      	strb	r2, [r0, #6]
			trx_bit_write(SR_CCA_MODE, radiostatus.cca_mode);
    1fa4:	9200      	str	r2, [sp, #0]
    1fa6:	2108      	movs	r1, #8
    1fa8:	2260      	movs	r2, #96	; 0x60
    1faa:	2305      	movs	r3, #5
    1fac:	4c1e      	ldr	r4, [pc, #120]	; (2028 <STACK_SIZE+0x28>)
    1fae:	47a0      	blx	r4
    1fb0:	e033      	b.n	201a <STACK_SIZE+0x1a>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    1fb2:	2102      	movs	r1, #2
    1fb4:	4b1d      	ldr	r3, [pc, #116]	; (202c <STACK_SIZE+0x2c>)
    1fb6:	4798      	blx	r3
    1fb8:	e02f      	b.n	201a <STACK_SIZE+0x1a>
			radio_error(SET_PARM_FAILED);
		}
		break;

	case phyIdleState:
		radiostatus.idle_state = parm.idle_state;
    1fba:	b2d1      	uxtb	r1, r2
    1fbc:	7201      	strb	r1, [r0, #8]
		radio_set_state(parm.idle_state);
    1fbe:	4b1d      	ldr	r3, [pc, #116]	; (2034 <STACK_SIZE+0x34>)
    1fc0:	4798      	blx	r3
		break;
    1fc2:	e02a      	b.n	201a <STACK_SIZE+0x1a>

	case phyChannelsSupported:
		break;

	case phyPanId:
		trx_set_panid(parm.pan_id);
    1fc4:	b294      	uxth	r4, r2
	/**
	 * @brief Write the PANID to the address filter registers
	 */
	 inline void trx_set_panid(uint16_t panid)
	{
	    trx_reg_write(RG_PAN_ID_0,(panid&0xff));
    1fc6:	b2e2      	uxtb	r2, r4
    1fc8:	2122      	movs	r1, #34	; 0x22
    1fca:	4e1b      	ldr	r6, [pc, #108]	; (2038 <STACK_SIZE+0x38>)
    1fcc:	47b0      	blx	r6
	    trx_reg_write(RG_PAN_ID_1,(panid>>8));
    1fce:	0a22      	lsrs	r2, r4, #8
    1fd0:	1c28      	adds	r0, r5, #0
    1fd2:	2123      	movs	r1, #35	; 0x23
    1fd4:	47b0      	blx	r6
    1fd6:	e020      	b.n	201a <STACK_SIZE+0x1a>
		break;

	case phyShortAddr:
		trx_set_shortaddr(parm.short_addr);
    1fd8:	b294      	uxth	r4, r2
	 * @brief Write the 16 bit short address to the
	 * address filter registers
	 */
	 inline void trx_set_shortaddr(uint16_t shortaddr)
	{
	    trx_reg_write(RG_SHORT_ADDR_0,(shortaddr&0xff));
    1fda:	b2e2      	uxtb	r2, r4
    1fdc:	2120      	movs	r1, #32
    1fde:	4e16      	ldr	r6, [pc, #88]	; (2038 <STACK_SIZE+0x38>)
    1fe0:	47b0      	blx	r6
	    trx_reg_write(RG_SHORT_ADDR_1,(shortaddr>>8));
    1fe2:	0a22      	lsrs	r2, r4, #8
    1fe4:	1c28      	adds	r0, r5, #0
    1fe6:	2121      	movs	r1, #33	; 0x21
    1fe8:	47b0      	blx	r6
    1fea:	e016      	b.n	201a <STACK_SIZE+0x1a>
		break;

	case phyLongAddr:
	{
		uint8_t regno, *ap;
		for (regno = RG_IEEE_ADDR_0, ap = (uint8_t *)parm.long_addr;
    1fec:	1c17      	adds	r7, r2, #0
    1fee:	3208      	adds	r2, #8
    1ff0:	1c14      	adds	r4, r2, #0
    1ff2:	2624      	movs	r6, #36	; 0x24
				regno <= RG_IEEE_ADDR_7;
				regno++, ap++)
			trx_reg_write(regno, *ap);
    1ff4:	4b10      	ldr	r3, [pc, #64]	; (2038 <STACK_SIZE+0x38>)
    1ff6:	4698      	mov	r8, r3
    1ff8:	783a      	ldrb	r2, [r7, #0]
    1ffa:	1c28      	adds	r0, r5, #0
    1ffc:	1c31      	adds	r1, r6, #0
    1ffe:	47c0      	blx	r8
		break;

	case phyLongAddr:
	{
		uint8_t regno, *ap;
		for (regno = RG_IEEE_ADDR_0, ap = (uint8_t *)parm.long_addr;
    2000:	3601      	adds	r6, #1
    2002:	b2f6      	uxtb	r6, r6
    2004:	3701      	adds	r7, #1
    2006:	42a7      	cmp	r7, r4
    2008:	d1f6      	bne.n	1ff8 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xbc>
    200a:	e006      	b.n	201a <STACK_SIZE+0x1a>
			trx_reg_write(regno, *ap);
		break;
	}

	case phyDataRate:
		trx_set_datarate(parm.data_rate);
    200c:	b2d1      	uxtb	r1, r2
    200e:	4b0b      	ldr	r3, [pc, #44]	; (203c <STACK_SIZE+0x3c>)
    2010:	4798      	blx	r3
		break;
    2012:	e002      	b.n	201a <STACK_SIZE+0x1a>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    2014:	2102      	movs	r1, #2
    2016:	4b05      	ldr	r3, [pc, #20]	; (202c <STACK_SIZE+0x2c>)
    2018:	4798      	blx	r3

	default:
		radio_error(SET_PARM_FAILED);
		break;
	}
}
    201a:	b002      	add	sp, #8
    201c:	bc04      	pop	{r2}
    201e:	4690      	mov	r8, r2
    2020:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2022:	46c0      	nop			; (mov r8, r8)
    2024:	0000d2e4 	.word	0x0000d2e4
    2028:	00002159 	.word	0x00002159
    202c:	000013a1 	.word	0x000013a1
    2030:	0000d308 	.word	0x0000d308
    2034:	00001ced 	.word	0x00001ced
    2038:	00001ac5 	.word	0x00001ac5
    203c:	000020bd 	.word	0x000020bd

00002040 <_ZN8cMxRadio16radio_send_frameEhPhh>:


void cMxRadio::radio_send_frame(uint8_t len, uint8_t *frm, uint8_t compcrc)
{
    2040:	b570      	push	{r4, r5, r6, lr}
    2042:	1c04      	adds	r4, r0, #0
    2044:	1c0e      	adds	r6, r1, #0
    2046:	1c15      	adds	r5, r2, #0
	{
		TRX_TX_PA_EI();
	}
#endif
/* this block should be made atomic */
	frm[2]++;
    2048:	7893      	ldrb	r3, [r2, #2]
    204a:	3301      	adds	r3, #1
    204c:	7093      	strb	r3, [r2, #2]
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    204e:	23e0      	movs	r3, #224	; 0xe0
    2050:	56c3      	ldrsb	r3, [r0, r3]
    2052:	3301      	adds	r3, #1
    2054:	d104      	bne.n	2060 <_ZN8cMxRadio16radio_send_frameEhPhh+0x20>
    2056:	480f      	ldr	r0, [pc, #60]	; (2094 <_ZN8cMxRadio16radio_send_frameEhPhh+0x54>)
    2058:	490f      	ldr	r1, [pc, #60]	; (2098 <_ZN8cMxRadio16radio_send_frameEhPhh+0x58>)
    205a:	2228      	movs	r2, #40	; 0x28
    205c:	4b0f      	ldr	r3, [pc, #60]	; (209c <_ZN8cMxRadio16radio_send_frameEhPhh+0x5c>)
    205e:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    2060:	1c23      	adds	r3, r4, #0
    2062:	33e0      	adds	r3, #224	; 0xe0
    2064:	691a      	ldr	r2, [r3, #16]
    2066:	685b      	ldr	r3, [r3, #4]
    2068:	6013      	str	r3, [r2, #0]
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    206a:	23e0      	movs	r3, #224	; 0xe0
    206c:	56e3      	ldrsb	r3, [r4, r3]
    206e:	3301      	adds	r3, #1
    2070:	d104      	bne.n	207c <_ZN8cMxRadio16radio_send_frameEhPhh+0x3c>
    2072:	4808      	ldr	r0, [pc, #32]	; (2094 <_ZN8cMxRadio16radio_send_frameEhPhh+0x54>)
    2074:	4908      	ldr	r1, [pc, #32]	; (2098 <_ZN8cMxRadio16radio_send_frameEhPhh+0x58>)
    2076:	2228      	movs	r2, #40	; 0x28
    2078:	4b08      	ldr	r3, [pc, #32]	; (209c <_ZN8cMxRadio16radio_send_frameEhPhh+0x5c>)
    207a:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    207c:	1c23      	adds	r3, r4, #0
    207e:	33e0      	adds	r3, #224	; 0xe0
    2080:	68da      	ldr	r2, [r3, #12]
    2082:	685b      	ldr	r3, [r3, #4]
    2084:	6013      	str	r3, [r2, #0]
	sleep_pin=1;//TRX_SLPTR_HIGH();
	sleep_pin=0;//TRX_SLPTR_LOW();
	trx_frame_write(len, frm);
    2086:	1c20      	adds	r0, r4, #0
    2088:	1c31      	adds	r1, r6, #0
    208a:	1c2a      	adds	r2, r5, #0
    208c:	4b04      	ldr	r3, [pc, #16]	; (20a0 <_ZN8cMxRadio16radio_send_frameEhPhh+0x60>)
    208e:	4798      	blx	r3
	/***********************************/
}
    2090:	bd70      	pop	{r4, r5, r6, pc}
    2092:	46c0      	nop			; (mov r8, r8)
    2094:	0000d268 	.word	0x0000d268
    2098:	0000d280 	.word	0x0000d280
    209c:	00003f89 	.word	0x00003f89
    20a0:	0000218d 	.word	0x0000218d

000020a4 <_ZN8cMxRadio12trx_bit_readEhhh>:
#include <MxRadio.h>


/* === functions ========================================= */
trx_regval_t cMxRadio::trx_bit_read(uint8_t addr, trx_regval_t mask, uint8_t pos)
{
    20a4:	b538      	push	{r3, r4, r5, lr}
    20a6:	1c15      	adds	r5, r2, #0
    20a8:	1c1c      	adds	r4, r3, #0
trx_regval_t data;
    data = trx_reg_read(addr);
    20aa:	4b03      	ldr	r3, [pc, #12]	; (20b8 <_ZN8cMxRadio12trx_bit_readEhhh+0x14>)
    20ac:	4798      	blx	r3
    data &= mask;
    data >>= pos;
    20ae:	4028      	ands	r0, r5
    20b0:	4120      	asrs	r0, r4
    return data;
    20b2:	b2c0      	uxtb	r0, r0
}
    20b4:	bd38      	pop	{r3, r4, r5, pc}
    20b6:	46c0      	nop			; (mov r8, r8)
    20b8:	00001b2d 	.word	0x00001b2d

000020bc <_ZN8cMxRadio16trx_set_datarateEh>:
}

#elif RADIO_TYPE == RADIO_AT86RF231

uint8_t cMxRadio::trx_set_datarate(uint8_t rate_type)
{
    20bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    20be:	1c06      	adds	r6, r0, #0
    20c0:	1e0c      	subs	r4, r1, #0
trx_regval_t regval = TRX_NONE;

    switch(rate_type)
    20c2:	2c34      	cmp	r4, #52	; 0x34
    20c4:	d00f      	beq.n	20e6 <_ZN8cMxRadio16trx_set_datarateEh+0x2a>
    20c6:	2934      	cmp	r1, #52	; 0x34
    20c8:	d803      	bhi.n	20d2 <_ZN8cMxRadio16trx_set_datarateEh+0x16>
    {
        case OQPSK250: regval = TRX_OQPSK250; break;
    20ca:	2500      	movs	r5, #0

uint8_t cMxRadio::trx_set_datarate(uint8_t rate_type)
{
trx_regval_t regval = TRX_NONE;

    switch(rate_type)
    20cc:	2933      	cmp	r1, #51	; 0x33
    20ce:	d00b      	beq.n	20e8 <_ZN8cMxRadio16trx_set_datarateEh+0x2c>
    20d0:	e007      	b.n	20e2 <_ZN8cMxRadio16trx_set_datarateEh+0x26>
    20d2:	2954      	cmp	r1, #84	; 0x54
    20d4:	d003      	beq.n	20de <_ZN8cMxRadio16trx_set_datarateEh+0x22>
    {
        case OQPSK250: regval = TRX_OQPSK250; break;
        case OQPSK500: regval = TRX_OQPSK500; break;
    20d6:	2501      	movs	r5, #1

uint8_t cMxRadio::trx_set_datarate(uint8_t rate_type)
{
trx_regval_t regval = TRX_NONE;

    switch(rate_type)
    20d8:	2994      	cmp	r1, #148	; 0x94
    20da:	d005      	beq.n	20e8 <_ZN8cMxRadio16trx_set_datarateEh+0x2c>
    20dc:	e001      	b.n	20e2 <_ZN8cMxRadio16trx_set_datarateEh+0x26>
    {
        case OQPSK250: regval = TRX_OQPSK250; break;
        case OQPSK500: regval = TRX_OQPSK500; break;
        case OQPSK1000: regval = TRX_OQPSK1000; break;
        case OQPSK2000: regval = TRX_OQPSK2000; break;
    20de:	2503      	movs	r5, #3
    20e0:	e002      	b.n	20e8 <_ZN8cMxRadio16trx_set_datarateEh+0x2c>
        regval |=  trx_reg_read(RG_TRX_CTRL_2) & 0xfc ;
        trx_reg_write(RG_TRX_CTRL_2, regval);
    }
    else
    {
        rate_type = TRX_NONE;
    20e2:	24ff      	movs	r4, #255	; 0xff
    20e4:	e011      	b.n	210a <_ZN8cMxRadio16trx_set_datarateEh+0x4e>

    switch(rate_type)
    {
        case OQPSK250: regval = TRX_OQPSK250; break;
        case OQPSK500: regval = TRX_OQPSK500; break;
        case OQPSK1000: regval = TRX_OQPSK1000; break;
    20e6:	2502      	movs	r5, #2
        case OQPSK2000: regval = TRX_OQPSK2000; break;
        default: break;
    }
    if (regval != TRX_NONE)
    {
        trx_reg_write(RG_TRX_STATE, CMD_FORCE_TRX_OFF);
    20e8:	1c30      	adds	r0, r6, #0
    20ea:	2102      	movs	r1, #2
    20ec:	2203      	movs	r2, #3
    20ee:	4f08      	ldr	r7, [pc, #32]	; (2110 <_ZN8cMxRadio16trx_set_datarateEh+0x54>)
    20f0:	47b8      	blx	r7
        regval |=  trx_reg_read(RG_TRX_CTRL_2) & 0xfc ;
    20f2:	1c30      	adds	r0, r6, #0
    20f4:	210c      	movs	r1, #12
    20f6:	4b07      	ldr	r3, [pc, #28]	; (2114 <_ZN8cMxRadio16trx_set_datarateEh+0x58>)
    20f8:	4798      	blx	r3
    20fa:	2303      	movs	r3, #3
    20fc:	1c02      	adds	r2, r0, #0
    20fe:	439a      	bics	r2, r3
    2100:	4315      	orrs	r5, r2
        trx_reg_write(RG_TRX_CTRL_2, regval);
    2102:	b2ea      	uxtb	r2, r5
    2104:	1c30      	adds	r0, r6, #0
    2106:	210c      	movs	r1, #12
    2108:	47b8      	blx	r7
    else
    {
        rate_type = TRX_NONE;
    }
    return rate_type;
}
    210a:	1c20      	adds	r0, r4, #0
    210c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    210e:	46c0      	nop			; (mov r8, r8)
    2110:	00001ac5 	.word	0x00001ac5
    2114:	00001b2d 	.word	0x00001b2d

00002118 <_ZN8cMxRadio15rf_irq_callbackEv>:


/* === globals ============================================================= */

void cMxRadio::rf_irq_callback()
{
    2118:	b538      	push	{r3, r4, r5, lr}
    211a:	1c04      	adds	r4, r0, #0

uint8_t cause;
    //DI_TRX_IRQ();
    //sei();
    cause = trx_reg_read(RG_IRQ_STATUS);
    211c:	210f      	movs	r1, #15
    211e:	4b0c      	ldr	r3, [pc, #48]	; (2150 <_ZN8cMxRadio15rf_irq_callbackEv+0x38>)
    2120:	4798      	blx	r3
    2122:	1c05      	adds	r5, r0, #0

    if (cause & TRX_IRQ_RX_START)
    2124:	0743      	lsls	r3, r0, #29
    2126:	d504      	bpl.n	2132 <_ZN8cMxRadio15rf_irq_callbackEv+0x1a>
    {
    	temprssi = trx_reg_read(RG_PHY_RSSI);
    2128:	1c20      	adds	r0, r4, #0
    212a:	2106      	movs	r1, #6
    212c:	4b08      	ldr	r3, [pc, #32]	; (2150 <_ZN8cMxRadio15rf_irq_callbackEv+0x38>)
    212e:	4798      	blx	r3
    2130:	7020      	strb	r0, [r4, #0]
    	//temped = trx_reg_read(RG_PHY_ED_LEVEL);
    }

    if (cause & TRX_IRQ_TRX_END)
    2132:	072b      	lsls	r3, r5, #28
    2134:	d507      	bpl.n	2146 <_ZN8cMxRadio15rf_irq_callbackEv+0x2e>
    {
    	if (temprssi==0)
    2136:	7823      	ldrb	r3, [r4, #0]
    2138:	2b00      	cmp	r3, #0
    213a:	d104      	bne.n	2146 <_ZN8cMxRadio15rf_irq_callbackEv+0x2e>
    		temprssi = trx_reg_read(RG_PHY_RSSI);
    213c:	1c20      	adds	r0, r4, #0
    213e:	2106      	movs	r1, #6
    2140:	4b03      	ldr	r3, [pc, #12]	; (2150 <_ZN8cMxRadio15rf_irq_callbackEv+0x38>)
    2142:	4798      	blx	r3
    2144:	7020      	strb	r0, [r4, #0]
    	//temped = trx_reg_read(RG_PHY_ED_LEVEL);
    }
    radio_irq_handler(cause);
    2146:	1c20      	adds	r0, r4, #0
    2148:	1c29      	adds	r1, r5, #0
    214a:	4b02      	ldr	r3, [pc, #8]	; (2154 <_ZN8cMxRadio15rf_irq_callbackEv+0x3c>)
    214c:	4798      	blx	r3
    //cli();
    //EI_TRX_IRQ();
}
    214e:	bd38      	pop	{r3, r4, r5, pc}
    2150:	00001b2d 	.word	0x00001b2d
    2154:	00001ebd 	.word	0x00001ebd

00002158 <_ZN8cMxRadio13trx_bit_writeEhhhh>:

#include <MxRadio.h>

/* === functions ========================================= */
void cMxRadio::trx_bit_write(uint8_t addr, trx_regval_t mask, uint8_t pos, trx_regval_t value)
{
    2158:	b5f0      	push	{r4, r5, r6, r7, lr}
    215a:	b083      	sub	sp, #12
    215c:	1c05      	adds	r5, r0, #0
    215e:	1c16      	adds	r6, r2, #0
    2160:	1c1c      	adds	r4, r3, #0
    2162:	ab08      	add	r3, sp, #32
    2164:	781f      	ldrb	r7, [r3, #0]

trx_regval_t tmp;
    tmp = trx_reg_read(addr);
    2166:	9101      	str	r1, [sp, #4]
    2168:	4b06      	ldr	r3, [pc, #24]	; (2184 <_ZN8cMxRadio13trx_bit_writeEhhhh+0x2c>)
    216a:	4798      	blx	r3
    tmp &= ~mask;
    216c:	43b0      	bics	r0, r6
    216e:	b2c0      	uxtb	r0, r0
    value <<= pos;
    2170:	1c3a      	adds	r2, r7, #0
    2172:	40a2      	lsls	r2, r4
    value &=mask;
    2174:	4032      	ands	r2, r6
    value |= tmp;
    trx_reg_write(addr, value);
    2176:	4302      	orrs	r2, r0
    2178:	1c28      	adds	r0, r5, #0
    217a:	9901      	ldr	r1, [sp, #4]
    217c:	4b02      	ldr	r3, [pc, #8]	; (2188 <_ZN8cMxRadio13trx_bit_writeEhhhh+0x30>)
    217e:	4798      	blx	r3
    return;
}
    2180:	b003      	add	sp, #12
    2182:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2184:	00001b2d 	.word	0x00001b2d
    2188:	00001ac5 	.word	0x00001ac5

0000218c <_ZN8cMxRadio15trx_frame_writeEhPh>:
#include <MxRadio.h>

/* === functions ========================================= */

void cMxRadio::trx_frame_write(uint8_t length, uint8_t *data)
{
    218c:	b5f0      	push	{r4, r5, r6, r7, lr}
    218e:	b083      	sub	sp, #12
    2190:	1c06      	adds	r6, r0, #0
    2192:	1c0f      	adds	r7, r1, #0
    2194:	1c15      	adds	r5, r2, #0
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    2196:	23a8      	movs	r3, #168	; 0xa8
    2198:	56c3      	ldrsb	r3, [r0, r3]
    219a:	3301      	adds	r3, #1
    219c:	d104      	bne.n	21a8 <_ZN8cMxRadio15trx_frame_writeEhPh+0x1c>
    219e:	4819      	ldr	r0, [pc, #100]	; (2204 <_ZN8cMxRadio15trx_frame_writeEhPh+0x78>)
    21a0:	4919      	ldr	r1, [pc, #100]	; (2208 <_ZN8cMxRadio15trx_frame_writeEhPh+0x7c>)
    21a2:	2228      	movs	r2, #40	; 0x28
    21a4:	4b19      	ldr	r3, [pc, #100]	; (220c <_ZN8cMxRadio15trx_frame_writeEhPh+0x80>)
    21a6:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    21a8:	1c33      	adds	r3, r6, #0
    21aa:	33a8      	adds	r3, #168	; 0xa8
    21ac:	68da      	ldr	r2, [r3, #12]
    21ae:	685b      	ldr	r3, [r3, #4]
    21b0:	6013      	str	r3, [r2, #0]

    // Select transceiver
    m_cs=0;//SPI_SELN_LOW();

    m_spi.write(TRX_CMD_FW);//SPI_DATA_REG = TRX_CMD_FW;
    21b2:	2314      	movs	r3, #20
    21b4:	469c      	mov	ip, r3
    21b6:	44b4      	add	ip, r6
    21b8:	4663      	mov	r3, ip
    21ba:	9301      	str	r3, [sp, #4]
    21bc:	4660      	mov	r0, ip
    21be:	2160      	movs	r1, #96	; 0x60
    21c0:	4c13      	ldr	r4, [pc, #76]	; (2210 <_ZN8cMxRadio15trx_frame_writeEhPh+0x84>)
    21c2:	47a0      	blx	r4
    //SPI_WAITFOR();
    m_spi.write(length);//SPI_DATA_REG = length;
    21c4:	9801      	ldr	r0, [sp, #4]
    21c6:	1c39      	adds	r1, r7, #0
    21c8:	47a0      	blx	r4
    21ca:	1c2c      	adds	r4, r5, #0
    21cc:	3f01      	subs	r7, #1
    21ce:	b2ff      	uxtb	r7, r7
    21d0:	3701      	adds	r7, #1
    21d2:	19ed      	adds	r5, r5, r7

    do
    {
        //SPI_WAITFOR();
    	m_spi.write(*data++);//SPI_DATA_REG = *data++;
    21d4:	4f0e      	ldr	r7, [pc, #56]	; (2210 <_ZN8cMxRadio15trx_frame_writeEhPh+0x84>)
    21d6:	7821      	ldrb	r1, [r4, #0]
    21d8:	9801      	ldr	r0, [sp, #4]
    21da:	47b8      	blx	r7
    21dc:	3401      	adds	r4, #1

    m_spi.write(TRX_CMD_FW);//SPI_DATA_REG = TRX_CMD_FW;
    //SPI_WAITFOR();
    m_spi.write(length);//SPI_DATA_REG = length;

    do
    21de:	42ac      	cmp	r4, r5
    21e0:	d1f9      	bne.n	21d6 <_ZN8cMxRadio15trx_frame_writeEhPh+0x4a>
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    21e2:	23a8      	movs	r3, #168	; 0xa8
    21e4:	56f3      	ldrsb	r3, [r6, r3]
    21e6:	3301      	adds	r3, #1
    21e8:	d104      	bne.n	21f4 <_ZN8cMxRadio15trx_frame_writeEhPh+0x68>
    21ea:	4806      	ldr	r0, [pc, #24]	; (2204 <_ZN8cMxRadio15trx_frame_writeEhPh+0x78>)
    21ec:	4906      	ldr	r1, [pc, #24]	; (2208 <_ZN8cMxRadio15trx_frame_writeEhPh+0x7c>)
    21ee:	2228      	movs	r2, #40	; 0x28
    21f0:	4b06      	ldr	r3, [pc, #24]	; (220c <_ZN8cMxRadio15trx_frame_writeEhPh+0x80>)
    21f2:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    21f4:	1c33      	adds	r3, r6, #0
    21f6:	33a8      	adds	r3, #168	; 0xa8
    21f8:	691a      	ldr	r2, [r3, #16]
    21fa:	685b      	ldr	r3, [r3, #4]
    21fc:	6013      	str	r3, [r2, #0]

    //SPI_WAITFOR(); /* wait here until last byte is out otherwise underrun irq */

    // Deselect Slave
    m_cs=1;//SPI_SELN_HIGH();
}
    21fe:	b003      	add	sp, #12
    2200:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2202:	46c0      	nop			; (mov r8, r8)
    2204:	0000d268 	.word	0x0000d268
    2208:	0000d280 	.word	0x0000d280
    220c:	00003f89 	.word	0x00003f89
    2210:	00003cc1 	.word	0x00003cc1

00002214 <_ZN8cMxRadio14trx_frame_readEPhhS0_>:

uint8_t cMxRadio::trx_frame_read(uint8_t *data, uint8_t datasz, uint8_t *lqi)
{
    2214:	b5f0      	push	{r4, r5, r6, r7, lr}
    2216:	4657      	mov	r7, sl
    2218:	464e      	mov	r6, r9
    221a:	b4c0      	push	{r6, r7}
    221c:	b083      	sub	sp, #12
    221e:	1c07      	adds	r7, r0, #0
    2220:	9101      	str	r1, [sp, #4]
    2222:	1c15      	adds	r5, r2, #0
    2224:	4699      	mov	r9, r3
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    2226:	23a8      	movs	r3, #168	; 0xa8
    2228:	56c3      	ldrsb	r3, [r0, r3]
    222a:	3301      	adds	r3, #1
    222c:	d104      	bne.n	2238 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x24>
    222e:	4824      	ldr	r0, [pc, #144]	; (22c0 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xac>)
    2230:	4924      	ldr	r1, [pc, #144]	; (22c4 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb0>)
    2232:	2228      	movs	r2, #40	; 0x28
    2234:	4b24      	ldr	r3, [pc, #144]	; (22c8 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb4>)
    2236:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    2238:	1c3b      	adds	r3, r7, #0
    223a:	33a8      	adds	r3, #168	; 0xa8
    223c:	68da      	ldr	r2, [r3, #12]
    223e:	685b      	ldr	r3, [r3, #4]
    2240:	6013      	str	r3, [r2, #0]

    /* Select transceiver */
    m_cs=0;//SPI_SELN_LOW();

    /* start frame read */
    m_spi.write(TRX_CMD_FR);//SPI_DATA_REG = TRX_CMD_FR;
    2242:	2314      	movs	r3, #20
    2244:	469c      	mov	ip, r3
    2246:	44bc      	add	ip, r7
    2248:	4663      	mov	r3, ip
    224a:	4666      	mov	r6, ip
    224c:	9300      	str	r3, [sp, #0]
    224e:	1c18      	adds	r0, r3, #0
    2250:	2120      	movs	r1, #32
    2252:	4c1e      	ldr	r4, [pc, #120]	; (22cc <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb8>)
    2254:	47a0      	blx	r4
    //SPI_WAITFOR();

    /* read length */
    length= m_spi.write(0);//SPI_DATA_REG = 0;
    2256:	1c30      	adds	r0, r6, #0
    2258:	2100      	movs	r1, #0
    225a:	47a0      	blx	r4
    225c:	b2c6      	uxtb	r6, r0
    //SPI_WAITFOR();
    //length = SPI_DATA_REG;

    if (length <= datasz)
    225e:	42ae      	cmp	r6, r5
    2260:	d818      	bhi.n	2294 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x80>
    2262:	9a01      	ldr	r2, [sp, #4]
    2264:	1c14      	adds	r4, r2, #0
    2266:	1e73      	subs	r3, r6, #1
    2268:	b2db      	uxtb	r3, r3
    226a:	3301      	adds	r3, #1
    226c:	18d5      	adds	r5, r2, r3
        i = length;
        do
        {
            //SPI_DATA_REG = 0;   /* dummy out */
            //SPI_WAITFOR();
            *data++ = m_spi.write(0);//SPI_DATA_REG;
    226e:	4b17      	ldr	r3, [pc, #92]	; (22cc <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb8>)
    2270:	469a      	mov	sl, r3
    2272:	9800      	ldr	r0, [sp, #0]
    2274:	2100      	movs	r1, #0
    2276:	47d0      	blx	sl
    2278:	7020      	strb	r0, [r4, #0]
    227a:	3401      	adds	r4, #1
    //length = SPI_DATA_REG;

    if (length <= datasz)
    {
        i = length;
        do
    227c:	42ac      	cmp	r4, r5
    227e:	d1f8      	bne.n	2272 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x5e>
            //SPI_WAITFOR();
            *data++ = m_spi.write(0);//SPI_DATA_REG;
        }
        while(--i);

        if (lqi!= NULL)
    2280:	464b      	mov	r3, r9
    2282:	2b00      	cmp	r3, #0
    2284:	d008      	beq.n	2298 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x84>
        {
            //SPI_DATA_REG = 0;   /* dummy out */
            //SPI_WAITFOR();
            *lqi = m_spi.write(0);//SPI_DATA_REG;
    2286:	9800      	ldr	r0, [sp, #0]
    2288:	2100      	movs	r1, #0
    228a:	4b10      	ldr	r3, [pc, #64]	; (22cc <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb8>)
    228c:	4798      	blx	r3
    228e:	464b      	mov	r3, r9
    2290:	7018      	strb	r0, [r3, #0]
    2292:	e001      	b.n	2298 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x84>
        }
    }
    else
    {
        /* we drop the frame */
        length = 0x80 | length;
    2294:	2380      	movs	r3, #128	; 0x80
    2296:	431e      	orrs	r6, r3
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    2298:	23a8      	movs	r3, #168	; 0xa8
    229a:	56fb      	ldrsb	r3, [r7, r3]
    229c:	3301      	adds	r3, #1
    229e:	d104      	bne.n	22aa <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x96>
    22a0:	4807      	ldr	r0, [pc, #28]	; (22c0 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xac>)
    22a2:	4908      	ldr	r1, [pc, #32]	; (22c4 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb0>)
    22a4:	2228      	movs	r2, #40	; 0x28
    22a6:	4b08      	ldr	r3, [pc, #32]	; (22c8 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb4>)
    22a8:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    22aa:	37a8      	adds	r7, #168	; 0xa8
    22ac:	693b      	ldr	r3, [r7, #16]
    22ae:	687a      	ldr	r2, [r7, #4]
    22b0:	601a      	str	r2, [r3, #0]
    }
    m_cs=1;//SPI_SELN_HIGH();
    return length;
}
    22b2:	1c30      	adds	r0, r6, #0
    22b4:	b003      	add	sp, #12
    22b6:	bc0c      	pop	{r2, r3}
    22b8:	4691      	mov	r9, r2
    22ba:	469a      	mov	sl, r3
    22bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    22be:	46c0      	nop			; (mov r8, r8)
    22c0:	0000d268 	.word	0x0000d268
    22c4:	0000d280 	.word	0x0000d280
    22c8:	00003f89 	.word	0x00003f89
    22cc:	00003cc1 	.word	0x00003cc1

000022d0 <_ZN7Channel11SetCallbackEP15ChannelCallback>:
	virtual void putc(uint8_t)=0;
	virtual uint8_t getc()=0;
	
	virtual void SetCallback(ChannelCallback* c)
	{
		call = c;
    22d0:	6041      	str	r1, [r0, #4]
	}
    22d2:	4770      	bx	lr

000022d4 <_ZN12ChannelRadio4getcEv>:
	vTaskDelay(2/portTICK_RATE_MS);
//	while(transmit){}
}

uint8_t ChannelRadio::getc()
{	
    22d4:	1c02      	adds	r2, r0, #0
	uint8_t c = buffer[buffer_pos++];
    22d6:	20d5      	movs	r0, #213	; 0xd5
    22d8:	0080      	lsls	r0, r0, #2
    22da:	5813      	ldr	r3, [r2, r0]
    22dc:	1c59      	adds	r1, r3, #1
    22de:	5011      	str	r1, [r2, r0]
    22e0:	18d3      	adds	r3, r2, r3
    22e2:	383c      	subs	r0, #60	; 0x3c
    22e4:	4684      	mov	ip, r0
    22e6:	4463      	add	r3, ip
    22e8:	7998      	ldrb	r0, [r3, #6]
	
	if(buffer_pos >= buffer_end)
    22ea:	23d4      	movs	r3, #212	; 0xd4
    22ec:	009b      	lsls	r3, r3, #2
    22ee:	58d3      	ldr	r3, [r2, r3]
    22f0:	4299      	cmp	r1, r3
    22f2:	d303      	bcc.n	22fc <_ZN12ChannelRadio4getcEv+0x28>
	{
		buffer_pos = buffer_end;
    22f4:	21d5      	movs	r1, #213	; 0xd5
    22f6:	0089      	lsls	r1, r1, #2
    22f8:	5053      	str	r3, [r2, r1]
    22fa:	e005      	b.n	2308 <_ZN12ChannelRadio4getcEv+0x34>
	}
	else if(buffer_pos >= 50)
    22fc:	2931      	cmp	r1, #49	; 0x31
    22fe:	d903      	bls.n	2308 <_ZN12ChannelRadio4getcEv+0x34>
	{
		buffer_pos = 0;
    2300:	2100      	movs	r1, #0
    2302:	23d5      	movs	r3, #213	; 0xd5
    2304:	009b      	lsls	r3, r3, #2
    2306:	50d1      	str	r1, [r2, r3]
	}
	
	return c;
}
    2308:	4770      	bx	lr
    230a:	46c0      	nop			; (mov r8, r8)

0000230c <_ZN12ChannelRadio10OnTransmitEv>:
		call->OnReceive(this);
	}
}

void ChannelRadio::OnTransmit()
{
    230c:	b508      	push	{r3, lr}
	if(call)
    230e:	6843      	ldr	r3, [r0, #4]
    2310:	2b00      	cmp	r3, #0
    2312:	d004      	beq.n	231e <_ZN12ChannelRadio10OnTransmitEv+0x12>
    2314:	1c01      	adds	r1, r0, #0
	{
		call->OnTransmit(this);
    2316:	681a      	ldr	r2, [r3, #0]
    2318:	68d2      	ldr	r2, [r2, #12]
    231a:	1c18      	adds	r0, r3, #0
    231c:	4790      	blx	r2
	}
}
    231e:	bd08      	pop	{r3, pc}

00002320 <_ZN12ChannelRadio7OnErrorEi>:

void ChannelRadio::OnError(int e)
{
    2320:	b510      	push	{r4, lr}
	if(call)
    2322:	6843      	ldr	r3, [r0, #4]
    2324:	2b00      	cmp	r3, #0
    2326:	d005      	beq.n	2334 <_ZN12ChannelRadio7OnErrorEi+0x14>
    2328:	1c0a      	adds	r2, r1, #0
    232a:	1c01      	adds	r1, r0, #0
	{
		call->OnError(this,e);
    232c:	6818      	ldr	r0, [r3, #0]
    232e:	6944      	ldr	r4, [r0, #20]
    2330:	1c18      	adds	r0, r3, #0
    2332:	47a0      	blx	r4
	}
}
    2334:	bd10      	pop	{r4, pc}
    2336:	46c0      	nop			; (mov r8, r8)

00002338 <_ZN12ChannelRadio9OnSpecialEi>:

void ChannelRadio::OnSpecial(int e)
{
    2338:	b510      	push	{r4, lr}
	if(call)
    233a:	6843      	ldr	r3, [r0, #4]
    233c:	2b00      	cmp	r3, #0
    233e:	d005      	beq.n	234c <_ZN12ChannelRadio9OnSpecialEi+0x14>
    2340:	1c0a      	adds	r2, r1, #0
    2342:	1c01      	adds	r1, r0, #0
	{
		call->OnSpecial(this,e);
    2344:	6818      	ldr	r0, [r3, #0]
    2346:	6904      	ldr	r4, [r0, #16]
    2348:	1c18      	adds	r0, r3, #0
    234a:	47a0      	blx	r4
	}
}
    234c:	bd10      	pop	{r4, pc}
    234e:	46c0      	nop			; (mov r8, r8)

00002350 <_ZN12ChannelRadioD1Ev>:
{
	radio.attachIrq(&RadioOnEvent);
	radio.attachError(&RadioOnError);
}

ChannelRadio::~ChannelRadio()
    2350:	b510      	push	{r4, lr}
    2352:	1c04      	adds	r4, r0, #0
    2354:	4b03      	ldr	r3, [pc, #12]	; (2364 <_ZN12ChannelRadioD1Ev+0x14>)
    2356:	3308      	adds	r3, #8
    2358:	6003      	str	r3, [r0, #0]
    235a:	3008      	adds	r0, #8
    235c:	4b02      	ldr	r3, [pc, #8]	; (2368 <_ZN12ChannelRadioD1Ev+0x18>)
    235e:	4798      	blx	r3
{
	
}
    2360:	1c20      	adds	r0, r4, #0
    2362:	bd10      	pop	{r4, pc}
    2364:	0000d320 	.word	0x0000d320
    2368:	00001a11 	.word	0x00001a11

0000236c <_ZN12ChannelRadioD0Ev>:
{
	radio.attachIrq(&RadioOnEvent);
	radio.attachError(&RadioOnError);
}

ChannelRadio::~ChannelRadio()
    236c:	b510      	push	{r4, lr}
    236e:	1c04      	adds	r4, r0, #0
{
	
}
    2370:	4b03      	ldr	r3, [pc, #12]	; (2380 <_ZN12ChannelRadioD0Ev+0x14>)
    2372:	4798      	blx	r3
    2374:	1c20      	adds	r0, r4, #0
    2376:	4b03      	ldr	r3, [pc, #12]	; (2384 <_ZN12ChannelRadioD0Ev+0x18>)
    2378:	4798      	blx	r3
    237a:	1c20      	adds	r0, r4, #0
    237c:	bd10      	pop	{r4, pc}
    237e:	46c0      	nop			; (mov r8, r8)
    2380:	00002351 	.word	0x00002351
    2384:	000058a7 	.word	0x000058a7

00002388 <_ZN12ChannelRadio4putcEh>:

void ChannelRadio::putc(uint8_t c)
{
    2388:	b538      	push	{r3, r4, r5, lr}
    238a:	1c0d      	adds	r5, r1, #0
	transmit = true;
    238c:	2201      	movs	r2, #1
    238e:	4b08      	ldr	r3, [pc, #32]	; (23b0 <_ZN12ChannelRadio4putcEh+0x28>)
    2390:	54c2      	strb	r2, [r0, r3]
	
	radio.beginTransmission();
    2392:	3008      	adds	r0, #8
    2394:	1c04      	adds	r4, r0, #0
    2396:	4b07      	ldr	r3, [pc, #28]	; (23b4 <_ZN12ChannelRadio4putcEh+0x2c>)
    2398:	4798      	blx	r3
	radio.write(c);
    239a:	1c20      	adds	r0, r4, #0
    239c:	1c29      	adds	r1, r5, #0
    239e:	4b06      	ldr	r3, [pc, #24]	; (23b8 <_ZN12ChannelRadio4putcEh+0x30>)
    23a0:	4798      	blx	r3
	radio.endTransmission();
    23a2:	1c20      	adds	r0, r4, #0
    23a4:	4b05      	ldr	r3, [pc, #20]	; (23bc <_ZN12ChannelRadio4putcEh+0x34>)
    23a6:	4798      	blx	r3
	
	vTaskDelay(2/portTICK_RATE_MS);
    23a8:	2002      	movs	r0, #2
    23aa:	4b05      	ldr	r3, [pc, #20]	; (23c0 <_ZN12ChannelRadio4putcEh+0x38>)
    23ac:	4798      	blx	r3
//	while(transmit){}
}
    23ae:	bd38      	pop	{r3, r4, r5, pc}
    23b0:	0000031d 	.word	0x0000031d
    23b4:	000017d9 	.word	0x000017d9
    23b8:	000018f5 	.word	0x000018f5
    23bc:	0000182d 	.word	0x0000182d
    23c0:	00000dd9 	.word	0x00000dd9

000023c4 <_ZN12ChannelRadio9OnReceiveEv>:
	
	return c;
}

void ChannelRadio::OnReceive()
{
    23c4:	b5f0      	push	{r4, r5, r6, r7, lr}
    23c6:	4647      	mov	r7, r8
    23c8:	b480      	push	{r7}
    23ca:	b082      	sub	sp, #8
    23cc:	1c06      	adds	r6, r0, #0
	while(radio.available())
    23ce:	2308      	movs	r3, #8
    23d0:	469c      	mov	ip, r3
    23d2:	4484      	add	ip, r0
    23d4:	4663      	mov	r3, ip
    23d6:	9301      	str	r3, [sp, #4]
    23d8:	4f14      	ldr	r7, [pc, #80]	; (242c <_ZN12ChannelRadio9OnReceiveEv+0x68>)
	{
		buffer[buffer_end++] = radio.read();
    23da:	4b15      	ldr	r3, [pc, #84]	; (2430 <_ZN12ChannelRadio9OnReceiveEv+0x6c>)
    23dc:	4698      	mov	r8, r3
	return c;
}

void ChannelRadio::OnReceive()
{
	while(radio.available())
    23de:	e011      	b.n	2404 <_ZN12ChannelRadio9OnReceiveEv+0x40>
	{
		buffer[buffer_end++] = radio.read();
    23e0:	25d4      	movs	r5, #212	; 0xd4
    23e2:	00ad      	lsls	r5, r5, #2
    23e4:	5974      	ldr	r4, [r6, r5]
    23e6:	1c63      	adds	r3, r4, #1
    23e8:	5173      	str	r3, [r6, r5]
    23ea:	9801      	ldr	r0, [sp, #4]
    23ec:	47c0      	blx	r8
    23ee:	1934      	adds	r4, r6, r4
    23f0:	23c6      	movs	r3, #198	; 0xc6
    23f2:	009b      	lsls	r3, r3, #2
    23f4:	469c      	mov	ip, r3
    23f6:	4464      	add	r4, ip
    23f8:	71a0      	strb	r0, [r4, #6]
		
		if(buffer_end >= 50)
    23fa:	5973      	ldr	r3, [r6, r5]
    23fc:	2b31      	cmp	r3, #49	; 0x31
    23fe:	d901      	bls.n	2404 <_ZN12ChannelRadio9OnReceiveEv+0x40>
		{
			buffer_end = 0;
    2400:	2200      	movs	r2, #0
    2402:	5172      	str	r2, [r6, r5]
	return c;
}

void ChannelRadio::OnReceive()
{
	while(radio.available())
    2404:	9801      	ldr	r0, [sp, #4]
    2406:	1c04      	adds	r4, r0, #0
    2408:	47b8      	blx	r7
    240a:	2800      	cmp	r0, #0
    240c:	d1e8      	bne.n	23e0 <_ZN12ChannelRadio9OnReceiveEv+0x1c>
		{
			buffer_end = 0;
		}
	}
	
	radio.flush();
    240e:	1c20      	adds	r0, r4, #0
    2410:	4b08      	ldr	r3, [pc, #32]	; (2434 <_ZN12ChannelRadio9OnReceiveEv+0x70>)
    2412:	4798      	blx	r3
	
	if(call)
    2414:	6870      	ldr	r0, [r6, #4]
    2416:	2800      	cmp	r0, #0
    2418:	d003      	beq.n	2422 <_ZN12ChannelRadio9OnReceiveEv+0x5e>
	{
		call->OnReceive(this);
    241a:	6803      	ldr	r3, [r0, #0]
    241c:	689b      	ldr	r3, [r3, #8]
    241e:	1c31      	adds	r1, r6, #0
    2420:	4798      	blx	r3
	}
}
    2422:	b002      	add	sp, #8
    2424:	bc04      	pop	{r2}
    2426:	4690      	mov	r8, r2
    2428:	bdf0      	pop	{r4, r5, r6, r7, pc}
    242a:	46c0      	nop			; (mov r8, r8)
    242c:	000017b5 	.word	0x000017b5
    2430:	00001781 	.word	0x00001781
    2434:	00001771 	.word	0x00001771

00002438 <_ZN12ChannelRadio5writeEPhh>:
{
	return transmit;
}

void ChannelRadio::write(uint8_t* buffer, uint8_t size)
{
    2438:	b570      	push	{r4, r5, r6, lr}
	if(buffer && (size >= 0))
    243a:	2900      	cmp	r1, #0
    243c:	d00d      	beq.n	245a <_ZN12ChannelRadio5writeEPhh+0x22>
    243e:	1c16      	adds	r6, r2, #0
    2440:	1c0d      	adds	r5, r1, #0
	{
		radio.beginTransmission();
    2442:	3008      	adds	r0, #8
    2444:	1c04      	adds	r4, r0, #0
    2446:	4b05      	ldr	r3, [pc, #20]	; (245c <_ZN12ChannelRadio5writeEPhh+0x24>)
    2448:	4798      	blx	r3
		radio.write(buffer, size);
    244a:	1c20      	adds	r0, r4, #0
    244c:	1c29      	adds	r1, r5, #0
    244e:	1c32      	adds	r2, r6, #0
    2450:	4b03      	ldr	r3, [pc, #12]	; (2460 <_ZN12ChannelRadio5writeEPhh+0x28>)
    2452:	4798      	blx	r3
		radio.endTransmission();
    2454:	1c20      	adds	r0, r4, #0
    2456:	4b03      	ldr	r3, [pc, #12]	; (2464 <_ZN12ChannelRadio5writeEPhh+0x2c>)
    2458:	4798      	blx	r3
	}
    245a:	bd70      	pop	{r4, r5, r6, pc}
    245c:	000017d9 	.word	0x000017d9
    2460:	000019e9 	.word	0x000019e9
    2464:	0000182d 	.word	0x0000182d

00002468 <_ZN12ChannelRadio8GetRadioEv>:
	return inst;
}

cMxRadio* ChannelRadio::GetRadio()
{
	return &radio;
    2468:	3008      	adds	r0, #8
}
    246a:	4770      	bx	lr

0000246c <_ZN12ChannelRadioC1Ev>:

ChannelRadio::ChannelRadio()
    246c:	b5f0      	push	{r4, r5, r6, r7, lr}
    246e:	b085      	sub	sp, #20
    2470:	1c04      	adds	r4, r0, #0
{
protected:
	ChannelCallback* call;
	
public:
    Channel() : call(0) {}
    2472:	2500      	movs	r5, #0
    2474:	6045      	str	r5, [r0, #4]
  : radio(PB30,PC19,PC18,PB31,PB15,PA20,PB00), receiving(false), transmit(false), buffer_end(0), buffer_pos(0)
    2476:	4b13      	ldr	r3, [pc, #76]	; (24c4 <_ZN12ChannelRadioC1Ev+0x58>)
    2478:	3308      	adds	r3, #8
    247a:	6003      	str	r3, [r0, #0]
    247c:	1c06      	adds	r6, r0, #0
    247e:	3608      	adds	r6, #8
    2480:	233f      	movs	r3, #63	; 0x3f
    2482:	9300      	str	r3, [sp, #0]
    2484:	3b10      	subs	r3, #16
    2486:	9301      	str	r3, [sp, #4]
    2488:	3b1b      	subs	r3, #27
    248a:	9302      	str	r3, [sp, #8]
    248c:	330c      	adds	r3, #12
    248e:	9303      	str	r3, [sp, #12]
    2490:	1c30      	adds	r0, r6, #0
    2492:	213e      	movs	r1, #62	; 0x3e
    2494:	2253      	movs	r2, #83	; 0x53
    2496:	3332      	adds	r3, #50	; 0x32
    2498:	4f0b      	ldr	r7, [pc, #44]	; (24c8 <_ZN12ChannelRadioC1Ev+0x5c>)
    249a:	47b8      	blx	r7
    249c:	23c7      	movs	r3, #199	; 0xc7
    249e:	009b      	lsls	r3, r3, #2
    24a0:	54e5      	strb	r5, [r4, r3]
    24a2:	4b0a      	ldr	r3, [pc, #40]	; (24cc <_ZN12ChannelRadioC1Ev+0x60>)
    24a4:	54e5      	strb	r5, [r4, r3]
    24a6:	3333      	adds	r3, #51	; 0x33
    24a8:	50e5      	str	r5, [r4, r3]
    24aa:	3304      	adds	r3, #4
    24ac:	50e5      	str	r5, [r4, r3]
{
	radio.attachIrq(&RadioOnEvent);
    24ae:	1c30      	adds	r0, r6, #0
    24b0:	4907      	ldr	r1, [pc, #28]	; (24d0 <_ZN12ChannelRadioC1Ev+0x64>)
    24b2:	4b08      	ldr	r3, [pc, #32]	; (24d4 <_ZN12ChannelRadioC1Ev+0x68>)
    24b4:	4798      	blx	r3
	radio.attachError(&RadioOnError);
    24b6:	1c30      	adds	r0, r6, #0
    24b8:	4907      	ldr	r1, [pc, #28]	; (24d8 <_ZN12ChannelRadioC1Ev+0x6c>)
    24ba:	4b08      	ldr	r3, [pc, #32]	; (24dc <_ZN12ChannelRadioC1Ev+0x70>)
    24bc:	4798      	blx	r3
}
    24be:	1c20      	adds	r0, r4, #0
    24c0:	b005      	add	sp, #20
    24c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    24c4:	0000d320 	.word	0x0000d320
    24c8:	0000156d 	.word	0x0000156d
    24cc:	0000031d 	.word	0x0000031d
    24d0:	00002529 	.word	0x00002529
    24d4:	00001769 	.word	0x00001769
    24d8:	00002511 	.word	0x00002511
    24dc:	00001761 	.word	0x00001761

000024e0 <_ZN12ChannelRadio10GetChannelEv>:
}

ChannelRadio* ChannelRadio::inst = 0;

ChannelRadio* ChannelRadio::GetChannel()
{
    24e0:	b510      	push	{r4, lr}
	if(inst==0)
    24e2:	4b08      	ldr	r3, [pc, #32]	; (2504 <_ZN12ChannelRadio10GetChannelEv+0x24>)
    24e4:	681b      	ldr	r3, [r3, #0]
    24e6:	2b00      	cmp	r3, #0
    24e8:	d108      	bne.n	24fc <_ZN12ChannelRadio10GetChannelEv+0x1c>
	{
		inst = new ChannelRadio;
    24ea:	20d6      	movs	r0, #214	; 0xd6
    24ec:	0080      	lsls	r0, r0, #2
    24ee:	4b06      	ldr	r3, [pc, #24]	; (2508 <_ZN12ChannelRadio10GetChannelEv+0x28>)
    24f0:	4798      	blx	r3
    24f2:	1c04      	adds	r4, r0, #0
    24f4:	4b05      	ldr	r3, [pc, #20]	; (250c <_ZN12ChannelRadio10GetChannelEv+0x2c>)
    24f6:	4798      	blx	r3
    24f8:	4b02      	ldr	r3, [pc, #8]	; (2504 <_ZN12ChannelRadio10GetChannelEv+0x24>)
    24fa:	601c      	str	r4, [r3, #0]
	}
	
	return inst;
    24fc:	4b01      	ldr	r3, [pc, #4]	; (2504 <_ZN12ChannelRadio10GetChannelEv+0x24>)
    24fe:	6818      	ldr	r0, [r3, #0]
}
    2500:	bd10      	pop	{r4, pc}
    2502:	46c0      	nop			; (mov r8, r8)
    2504:	20003e0c 	.word	0x20003e0c
    2508:	000058af 	.word	0x000058af
    250c:	0000246d 	.word	0x0000246d

00002510 <_Z12RadioOnError13radio_error_t>:
		}
	}
}

void RadioOnError(radio_error_t e)
{
    2510:	b510      	push	{r4, lr}
    2512:	1c04      	adds	r4, r0, #0
	ChannelRadio::GetChannel()->OnError(e);
    2514:	4b03      	ldr	r3, [pc, #12]	; (2524 <_Z12RadioOnError13radio_error_t+0x14>)
    2516:	4798      	blx	r3
    2518:	6803      	ldr	r3, [r0, #0]
    251a:	6a1b      	ldr	r3, [r3, #32]
    251c:	1c21      	adds	r1, r4, #0
    251e:	4798      	blx	r3
}
    2520:	bd10      	pop	{r4, pc}
    2522:	46c0      	nop			; (mov r8, r8)
    2524:	000024e1 	.word	0x000024e1

00002528 <_Z12RadioOnEventh>:

//extern Channel* pc;
//extern void PrintBuffer(Channel* c, char* buffer, size_t length);

void RadioOnEvent(uint8_t e)
{
    2528:	b538      	push	{r3, r4, r5, lr}
    252a:	1c04      	adds	r4, r0, #0
	ChannelRadio* r = ChannelRadio::GetChannel();
    252c:	4b11      	ldr	r3, [pc, #68]	; (2574 <_Z12RadioOnEventh+0x4c>)
    252e:	4798      	blx	r3
    2530:	1c05      	adds	r5, r0, #0
//	memset(buffer,0,20);
//	sprintf(buffer,"RADIO EVENT: %d,%d\r\n",int(e),r->IsReceive());
//	PrintBuffer(pc,buffer,18);
//	wait_ms(1);
	
	if((e & TRX_IRQ_RX_START) == TRX_IRQ_RX_START)
    2532:	0763      	lsls	r3, r4, #29
    2534:	d506      	bpl.n	2544 <_Z12RadioOnEventh+0x1c>
	}
}

void ChannelRadio::SetReceive(bool set)
{
	receiving = set;
    2536:	2201      	movs	r2, #1
    2538:	23c7      	movs	r3, #199	; 0xc7
    253a:	009b      	lsls	r3, r3, #2
    253c:	54c2      	strb	r2, [r0, r3]
	
	if((e & TRX_IRQ_RX_START) == TRX_IRQ_RX_START)
	{
		r->SetReceive(true);
	}
	if((e & TRX_IRQ_TRX_END) == TRX_IRQ_TRX_END)
    253e:	0723      	lsls	r3, r4, #28
    2540:	d407      	bmi.n	2552 <_Z12RadioOnEventh+0x2a>
    2542:	e015      	b.n	2570 <_Z12RadioOnEventh+0x48>
    2544:	0723      	lsls	r3, r4, #28
    2546:	d513      	bpl.n	2570 <_Z12RadioOnEventh+0x48>
	receiving = set;
}

bool ChannelRadio::IsReceive()
{
	return receiving;
    2548:	23c7      	movs	r3, #199	; 0xc7
    254a:	009b      	lsls	r3, r3, #2
		r->SetReceive(true);
	}
	if((e & TRX_IRQ_TRX_END) == TRX_IRQ_TRX_END)
	{
		// Received data for correct address
		if(r->IsReceive()) //&& ((e & TRX_IRQ_AMI) == TRX_IRQ_AMI))
    254c:	5cc3      	ldrb	r3, [r0, r3]
    254e:	2b00      	cmp	r3, #0
    2550:	d008      	beq.n	2564 <_Z12RadioOnEventh+0x3c>
		{
			r->OnReceive();
    2552:	682b      	ldr	r3, [r5, #0]
    2554:	699b      	ldr	r3, [r3, #24]
    2556:	1c28      	adds	r0, r5, #0
    2558:	4798      	blx	r3
	}
}

void ChannelRadio::SetReceive(bool set)
{
	receiving = set;
    255a:	2200      	movs	r2, #0
    255c:	23c7      	movs	r3, #199	; 0xc7
    255e:	009b      	lsls	r3, r3, #2
    2560:	54ea      	strb	r2, [r5, r3]
    2562:	e005      	b.n	2570 <_Z12RadioOnEventh+0x48>
			r->SetReceive(false);
		}
		// Transmitted data
		else if(!r->IsReceive())
		{
			r->OnTransmit();
    2564:	6803      	ldr	r3, [r0, #0]
    2566:	69db      	ldr	r3, [r3, #28]
    2568:	4798      	blx	r3
	return receiving;
}

void ChannelRadio::SetTransmit(bool set)
{
	transmit = set;
    256a:	2200      	movs	r2, #0
    256c:	4b02      	ldr	r3, [pc, #8]	; (2578 <_Z12RadioOnEventh+0x50>)
    256e:	54ea      	strb	r2, [r5, r3]
		{
			r->OnTransmit();
			r->SetTransmit(false);
		}
	}
}
    2570:	bd38      	pop	{r3, r4, r5, pc}
    2572:	46c0      	nop			; (mov r8, r8)
    2574:	000024e1 	.word	0x000024e1
    2578:	0000031d 	.word	0x0000031d

0000257c <_ZN13ChannelSerial9OnReceiveEv>:
	s.attach(this,&ChannelSerial::OnReceive,Serial::RxIrq);
//	s.attach(this,&ChannelSerial::OnTransmit,Serial::TxIrq);
}

void ChannelSerial::OnReceive()
{
    257c:	b508      	push	{r3, lr}
	if(call)
    257e:	6843      	ldr	r3, [r0, #4]
    2580:	2b00      	cmp	r3, #0
    2582:	d004      	beq.n	258e <_ZN13ChannelSerial9OnReceiveEv+0x12>
    2584:	1c01      	adds	r1, r0, #0
	{
		call->OnReceive(this);
    2586:	681a      	ldr	r2, [r3, #0]
    2588:	6892      	ldr	r2, [r2, #8]
    258a:	1c18      	adds	r0, r3, #0
    258c:	4790      	blx	r2
	}
}
    258e:	bd08      	pop	{r3, pc}

00002590 <_ZN4mbed19FunctionPointerArg1IvvE12membercallerI13ChannelSerialEEvPvPj>:
    }
#endif

private:
    template<typename T>
    static R membercaller(void *object, uintptr_t *member) {
    2590:	b510      	push	{r4, lr}
        T* o = static_cast<T*>(object);
        R (T::**m)(void) = reinterpret_cast<R (T::**)(void)>(member);
        return (o->**m)();
    2592:	684b      	ldr	r3, [r1, #4]
    2594:	07da      	lsls	r2, r3, #31
    2596:	d401      	bmi.n	259c <_ZN4mbed19FunctionPointerArg1IvvE12membercallerI13ChannelSerialEEvPvPj+0xc>
    2598:	680a      	ldr	r2, [r1, #0]
    259a:	e003      	b.n	25a4 <_ZN4mbed19FunctionPointerArg1IvvE12membercallerI13ChannelSerialEEvPvPj+0x14>
    259c:	105a      	asrs	r2, r3, #1
    259e:	5884      	ldr	r4, [r0, r2]
    25a0:	680a      	ldr	r2, [r1, #0]
    25a2:	58a2      	ldr	r2, [r4, r2]
    25a4:	105b      	asrs	r3, r3, #1
    25a6:	18c0      	adds	r0, r0, r3
    25a8:	4790      	blx	r2
    }
    25aa:	bd10      	pop	{r4, pc}

000025ac <_ZN13ChannelSerialD1Ev>:
  : s(tx, rx), n_rx_int(0)
{
	
}

ChannelSerial::~ChannelSerial()
    25ac:	b510      	push	{r4, lr}
    25ae:	1c04      	adds	r4, r0, #0
    25b0:	4b08      	ldr	r3, [pc, #32]	; (25d4 <_ZN13ChannelSerialD1Ev+0x28>)
    25b2:	3308      	adds	r3, #8
    25b4:	6003      	str	r3, [r0, #0]
    25b6:	4b08      	ldr	r3, [pc, #32]	; (25d8 <_ZN13ChannelSerialD1Ev+0x2c>)
    25b8:	6083      	str	r3, [r0, #8]
    25ba:	1c19      	adds	r1, r3, #0
    25bc:	3118      	adds	r1, #24
    25be:	22e4      	movs	r2, #228	; 0xe4
    25c0:	5081      	str	r1, [r0, r2]
    25c2:	334c      	adds	r3, #76	; 0x4c
    25c4:	3204      	adds	r2, #4
    25c6:	5083      	str	r3, [r0, r2]
    25c8:	30e4      	adds	r0, #228	; 0xe4
    25ca:	4b04      	ldr	r3, [pc, #16]	; (25dc <_ZN13ChannelSerialD1Ev+0x30>)
    25cc:	4798      	blx	r3
{
	
}
    25ce:	1c20      	adds	r0, r4, #0
    25d0:	bd10      	pop	{r4, pc}
    25d2:	46c0      	nop			; (mov r8, r8)
    25d4:	0000d350 	.word	0x0000d350
    25d8:	0000d778 	.word	0x0000d778
    25dc:	00003f11 	.word	0x00003f11

000025e0 <_ZN13ChannelSerialD0Ev>:
  : s(tx, rx), n_rx_int(0)
{
	
}

ChannelSerial::~ChannelSerial()
    25e0:	b510      	push	{r4, lr}
    25e2:	1c04      	adds	r4, r0, #0
{
	
}
    25e4:	4b03      	ldr	r3, [pc, #12]	; (25f4 <_ZN13ChannelSerialD0Ev+0x14>)
    25e6:	4798      	blx	r3
    25e8:	1c20      	adds	r0, r4, #0
    25ea:	4b03      	ldr	r3, [pc, #12]	; (25f8 <_ZN13ChannelSerialD0Ev+0x18>)
    25ec:	4798      	blx	r3
    25ee:	1c20      	adds	r0, r4, #0
    25f0:	bd10      	pop	{r4, pc}
    25f2:	46c0      	nop			; (mov r8, r8)
    25f4:	000025ad 	.word	0x000025ad
    25f8:	000058a7 	.word	0x000058a7

000025fc <_ZN13ChannelSerial4putcEh>:

extern Channel* pc;
extern void PrintBuffer(Channel* c, char* buffer, size_t length);

void ChannelSerial::putc(uint8_t c)
{
    25fc:	b508      	push	{r3, lr}
		memset(buf,0,14);
		sprintf(buf,"Num Int: %d\r\n",n_rx_int);
		PrintBuffer(pc,buf,14);
		n_rx_int=0;
	}*/
	s.putc(c);
    25fe:	30e4      	adds	r0, #228	; 0xe4
    2600:	4b01      	ldr	r3, [pc, #4]	; (2608 <_ZN13ChannelSerial4putcEh+0xc>)
    2602:	4798      	blx	r3
}
    2604:	bd08      	pop	{r3, pc}
    2606:	46c0      	nop			; (mov r8, r8)
    2608:	00003f35 	.word	0x00003f35

0000260c <_ZN13ChannelSerial4getcEv>:

uint8_t ChannelSerial::getc()
{
    260c:	b508      	push	{r3, lr}
	return s.getc();
    260e:	30e4      	adds	r0, #228	; 0xe4
    2610:	4b01      	ldr	r3, [pc, #4]	; (2618 <_ZN13ChannelSerial4getcEv+0xc>)
    2612:	4798      	blx	r3
    2614:	b2c0      	uxtb	r0, r0
}
    2616:	bd08      	pop	{r3, pc}
    2618:	00003f4d 	.word	0x00003f4d

0000261c <_ZN13ChannelSerial11SetCallbackEP15ChannelCallback>:

void ChannelSerial::SetCallback(ChannelCallback* c)
{
    261c:	b508      	push	{r3, lr}
	virtual void putc(uint8_t)=0;
	virtual uint8_t getc()=0;
	
	virtual void SetCallback(ChannelCallback* c)
	{
		call = c;
    261e:	6041      	str	r1, [r0, #4]
     *  @param mptr pointer to the member function to be called
     *  @param type Which serial interrupt to attach the member function to (Seriall::RxIrq for receive, TxIrq for transmit buffer empty)
     */
    template<typename T>
    void attach(T* tptr, void (T::*mptr)(void), IrqType type=RxIrq) {
        if((mptr != NULL) && (tptr != NULL)) {
    2620:	2800      	cmp	r0, #0
    2622:	d010      	beq.n	2646 <_ZN13ChannelSerial11SetCallbackEP15ChannelCallback+0x2a>
     *  @param object The object pointer to invoke the member function on (i.e. the this pointer)
     *  @param function The address of the void member function to attach
     */
    template<typename T>
    void attach(T *object, R (T::*member)(void)) {
        _p.object = static_cast<void*>(object);
    2624:	23b0      	movs	r3, #176	; 0xb0
    2626:	50c0      	str	r0, [r0, r3]
        *reinterpret_cast<R (T::**)(void)>(_member) = member;
    2628:	4a0a      	ldr	r2, [pc, #40]	; (2654 <_ZN13ChannelSerial11SetCallbackEP15ChannelCallback+0x38>)
    262a:	3304      	adds	r3, #4
    262c:	50c2      	str	r2, [r0, r3]
    262e:	2200      	movs	r2, #0
    2630:	3304      	adds	r3, #4
    2632:	50c2      	str	r2, [r0, r3]
        _membercaller = &FunctionPointerArg1::membercaller<T>;
    2634:	4a08      	ldr	r2, [pc, #32]	; (2658 <_ZN13ChannelSerial11SetCallbackEP15ChannelCallback+0x3c>)
    2636:	330c      	adds	r3, #12
    2638:	50c2      	str	r2, [r0, r3]
            _irq[type].attach(tptr, mptr);
            serial_irq_set(&_serial, (SerialIrq)type, 1);
    263a:	3068      	adds	r0, #104	; 0x68
    263c:	2100      	movs	r1, #0
    263e:	2201      	movs	r2, #1
    2640:	4b06      	ldr	r3, [pc, #24]	; (265c <_ZN13ChannelSerial11SetCallbackEP15ChannelCallback+0x40>)
    2642:	4798      	blx	r3
    2644:	e004      	b.n	2650 <_ZN13ChannelSerial11SetCallbackEP15ChannelCallback+0x34>
        } else {
            serial_irq_set(&_serial, (SerialIrq)type, 0);
    2646:	2068      	movs	r0, #104	; 0x68
    2648:	2100      	movs	r1, #0
    264a:	2200      	movs	r2, #0
    264c:	4b03      	ldr	r3, [pc, #12]	; (265c <_ZN13ChannelSerial11SetCallbackEP15ChannelCallback+0x40>)
    264e:	4798      	blx	r3
	Channel::SetCallback(c);
	
	s.attach(this,&ChannelSerial::OnReceive,Serial::RxIrq);
//	s.attach(this,&ChannelSerial::OnTransmit,Serial::TxIrq);
}
    2650:	bd08      	pop	{r3, pc}
    2652:	46c0      	nop			; (mov r8, r8)
    2654:	0000257d 	.word	0x0000257d
    2658:	00002591 	.word	0x00002591
    265c:	0000383d 	.word	0x0000383d

00002660 <_ZN13ChannelSerialC1E7PinNameS0_>:
 * Created: 04/07/2016 13:27:59
 *  Author: Silve
 */ 
#include "channelserial.h"

ChannelSerial::ChannelSerial(PinName tx, PinName rx)
    2660:	b570      	push	{r4, r5, r6, lr}
    2662:	1c04      	adds	r4, r0, #0
{
protected:
	ChannelCallback* call;
	
public:
    Channel() : call(0) {}
    2664:	2500      	movs	r5, #0
    2666:	6045      	str	r5, [r0, #4]
  : s(tx, rx), n_rx_int(0)
    2668:	4b05      	ldr	r3, [pc, #20]	; (2680 <_ZN13ChannelSerialC1E7PinNameS0_+0x20>)
    266a:	3308      	adds	r3, #8
    266c:	6003      	str	r3, [r0, #0]
    266e:	3008      	adds	r0, #8
    2670:	2300      	movs	r3, #0
    2672:	4e04      	ldr	r6, [pc, #16]	; (2684 <_ZN13ChannelSerialC1E7PinNameS0_+0x24>)
    2674:	47b0      	blx	r6
    2676:	23fc      	movs	r3, #252	; 0xfc
    2678:	50e5      	str	r5, [r4, r3]
{
	
}
    267a:	1c20      	adds	r0, r4, #0
    267c:	bd70      	pop	{r4, r5, r6, pc}
    267e:	46c0      	nop			; (mov r8, r8)
    2680:	0000d350 	.word	0x0000d350
    2684:	00003d05 	.word	0x00003d05

00002688 <_ZN15ChannelCallback10OnTransmitEP7Channel>:
	virtual ~ChannelCallback(){}
	
	// When data is received
	virtual void OnReceive(Channel* c){}
	// When data is sent
	virtual void OnTransmit(Channel* c){}
    2688:	4770      	bx	lr
    268a:	46c0      	nop			; (mov r8, r8)

0000268c <_ZN15ChannelCallback9OnSpecialEP7Channeli>:
	// When a special event for channel occurs
	virtual void OnSpecial(Channel* c, int e){}
    268c:	4770      	bx	lr
    268e:	46c0      	nop			; (mov r8, r8)

00002690 <_ZN15ChannelCallback7OnErrorEP7Channeli>:
	// When an error occurs
	virtual void OnError(Channel* c, int e){}
    2690:	4770      	bx	lr
    2692:	46c0      	nop			; (mov r8, r8)

00002694 <_ZN5RelayD1Ev>:
}

Relay::~Relay()
{
	
}
    2694:	4770      	bx	lr
    2696:	46c0      	nop			; (mov r8, r8)

00002698 <_ZN5Relay9OnReceiveEP7Channel>:
	
void Relay::OnReceive(Channel* c)
{
    2698:	b538      	push	{r3, r4, r5, lr}
	if(output)
    269a:	6844      	ldr	r4, [r0, #4]
    269c:	2c00      	cmp	r4, #0
    269e:	d008      	beq.n	26b2 <_ZN5Relay9OnReceiveEP7Channel+0x1a>
    26a0:	1c08      	adds	r0, r1, #0
	{
		output->putc(c->getc());
    26a2:	6823      	ldr	r3, [r4, #0]
    26a4:	689d      	ldr	r5, [r3, #8]
    26a6:	680b      	ldr	r3, [r1, #0]
    26a8:	68db      	ldr	r3, [r3, #12]
    26aa:	4798      	blx	r3
    26ac:	1c01      	adds	r1, r0, #0
    26ae:	1c20      	adds	r0, r4, #0
    26b0:	47a8      	blx	r5
	}
}
    26b2:	bd38      	pop	{r3, r4, r5, pc}

000026b4 <_ZN13RelayBuffered9OnReceiveEP7Channel>:
{
		
}
	
void RelayBuffered::OnReceive(Channel* c)
{
    26b4:	b510      	push	{r4, lr}
    26b6:	1c03      	adds	r3, r0, #0
	if(c)
    26b8:	2900      	cmp	r1, #0
    26ba:	d01c      	beq.n	26f6 <_ZN13RelayBuffered9OnReceiveEP7Channel+0x42>
    26bc:	1c08      	adds	r0, r1, #0
    26be:	1c1c      	adds	r4, r3, #0
	{
		uint8_t ch = c->getc();
    26c0:	680b      	ldr	r3, [r1, #0]
    26c2:	68db      	ldr	r3, [r3, #12]
    26c4:	4798      	blx	r3
			
		buffer[buffer_end++] = ch;
    26c6:	219a      	movs	r1, #154	; 0x9a
    26c8:	0049      	lsls	r1, r1, #1
    26ca:	5863      	ldr	r3, [r4, r1]
    26cc:	1c5a      	adds	r2, r3, #1
    26ce:	5062      	str	r2, [r4, r1]
    26d0:	18e3      	adds	r3, r4, r3
    26d2:	7218      	strb	r0, [r3, #8]
			
		if(ch == endchar)
    26d4:	233e      	movs	r3, #62	; 0x3e
    26d6:	33ff      	adds	r3, #255	; 0xff
    26d8:	5ce3      	ldrb	r3, [r4, r3]
    26da:	4283      	cmp	r3, r0
    26dc:	d104      	bne.n	26e8 <_ZN13RelayBuffered9OnReceiveEP7Channel+0x34>
		{
			newdata = true;
    26de:	3934      	subs	r1, #52	; 0x34
    26e0:	39ff      	subs	r1, #255	; 0xff
    26e2:	239e      	movs	r3, #158	; 0x9e
    26e4:	005b      	lsls	r3, r3, #1
    26e6:	54e1      	strb	r1, [r4, r3]
		}
			
		if(buffer_end >= RELAY_BUFFER_SIZE)
    26e8:	232c      	movs	r3, #44	; 0x2c
    26ea:	33ff      	adds	r3, #255	; 0xff
    26ec:	429a      	cmp	r2, r3
    26ee:	d902      	bls.n	26f6 <_ZN13RelayBuffered9OnReceiveEP7Channel+0x42>
		{
			buffer_end = 0;
    26f0:	2200      	movs	r2, #0
    26f2:	3309      	adds	r3, #9
    26f4:	50e2      	str	r2, [r4, r3]
		}
	}
}
    26f6:	bd10      	pop	{r4, pc}

000026f8 <_ZN13RelayBuffered8PushDataEv>:
	
void RelayBuffered::PushData()
{
    26f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if(output)
    26fa:	6843      	ldr	r3, [r0, #4]
    26fc:	2b00      	cmp	r3, #0
    26fe:	d024      	beq.n	274a <_ZN13RelayBuffered8PushDataEv+0x52>
	{
		while(newdata)
    2700:	239e      	movs	r3, #158	; 0x9e
    2702:	005b      	lsls	r3, r3, #1
    2704:	5cc3      	ldrb	r3, [r0, r3]
    2706:	2b00      	cmp	r3, #0
    2708:	d01f      	beq.n	274a <_ZN13RelayBuffered8PushDataEv+0x52>
    270a:	1c04      	adds	r4, r0, #0
		{
			uint8_t ch = buffer[buffer_pos++];
    270c:	259c      	movs	r5, #156	; 0x9c
    270e:	006d      	lsls	r5, r5, #1
				
			if(buffer_pos >= RELAY_BUFFER_SIZE)
    2710:	262c      	movs	r6, #44	; 0x2c
    2712:	36ff      	adds	r6, #255	; 0xff
			{
				buffer_pos = 0;
    2714:	2700      	movs	r7, #0
{
	if(output)
	{
		while(newdata)
		{
			uint8_t ch = buffer[buffer_pos++];
    2716:	5963      	ldr	r3, [r4, r5]
    2718:	1c5a      	adds	r2, r3, #1
    271a:	5162      	str	r2, [r4, r5]
    271c:	18e3      	adds	r3, r4, r3
    271e:	7a19      	ldrb	r1, [r3, #8]
				
			if(buffer_pos >= RELAY_BUFFER_SIZE)
    2720:	42b2      	cmp	r2, r6
    2722:	d900      	bls.n	2726 <_ZN13RelayBuffered8PushDataEv+0x2e>
			{
				buffer_pos = 0;
    2724:	5167      	str	r7, [r4, r5]
			}
				
			if(buffer_pos == buffer_end)
    2726:	239a      	movs	r3, #154	; 0x9a
    2728:	005b      	lsls	r3, r3, #1
    272a:	58e3      	ldr	r3, [r4, r3]
    272c:	5962      	ldr	r2, [r4, r5]
    272e:	429a      	cmp	r2, r3
    2730:	d102      	bne.n	2738 <_ZN13RelayBuffered8PushDataEv+0x40>
			{
				newdata = false;
    2732:	239e      	movs	r3, #158	; 0x9e
    2734:	005b      	lsls	r3, r3, #1
    2736:	54e7      	strb	r7, [r4, r3]
			}
			
			output->putc(ch);
    2738:	6860      	ldr	r0, [r4, #4]
    273a:	6803      	ldr	r3, [r0, #0]
    273c:	689b      	ldr	r3, [r3, #8]
    273e:	4798      	blx	r3
	
void RelayBuffered::PushData()
{
	if(output)
	{
		while(newdata)
    2740:	239e      	movs	r3, #158	; 0x9e
    2742:	005b      	lsls	r3, r3, #1
    2744:	5ce3      	ldrb	r3, [r4, r3]
    2746:	2b00      	cmp	r3, #0
    2748:	d1e5      	bne.n	2716 <_ZN13RelayBuffered8PushDataEv+0x1e>
			}
			
			output->putc(ch);
		}
	}
}
    274a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000274c <_ZN13RelayBuffered10HasNewDataEv>:
	
bool RelayBuffered::HasNewData()
{
	return newdata;
    274c:	239e      	movs	r3, #158	; 0x9e
    274e:	005b      	lsls	r3, r3, #1
    2750:	5cc0      	ldrb	r0, [r0, r3]
}
    2752:	4770      	bx	lr

00002754 <_ZN17RelayBufferedTask9OnReceiveEP7Channel>:
{
		
}

void RelayBufferedTask::OnReceive(Channel* c)
{
    2754:	b538      	push	{r3, r4, r5, lr}
    2756:	1c03      	adds	r3, r0, #0
	if(c)
    2758:	2900      	cmp	r1, #0
    275a:	d028      	beq.n	27ae <_ZN17RelayBufferedTask9OnReceiveEP7Channel+0x5a>
    275c:	1c08      	adds	r0, r1, #0
    275e:	1c1c      	adds	r4, r3, #0
	{
		uint8_t ch = c->getc();
    2760:	680b      	ldr	r3, [r1, #0]
    2762:	68db      	ldr	r3, [r3, #12]
    2764:	4798      	blx	r3
			
		buffer[buffer_end++] = ch;
    2766:	229a      	movs	r2, #154	; 0x9a
    2768:	0052      	lsls	r2, r2, #1
    276a:	58a3      	ldr	r3, [r4, r2]
    276c:	1c59      	adds	r1, r3, #1
    276e:	50a1      	str	r1, [r4, r2]
    2770:	18e3      	adds	r3, r4, r3
    2772:	7218      	strb	r0, [r3, #8]
			
		if(ch == endchar)
    2774:	233e      	movs	r3, #62	; 0x3e
    2776:	33ff      	adds	r3, #255	; 0xff
    2778:	5ce3      	ldrb	r3, [r4, r3]
    277a:	4283      	cmp	r3, r0
    277c:	d10d      	bne.n	279a <_ZN17RelayBufferedTask9OnReceiveEP7Channel+0x46>
		{
			newdata = true;
    277e:	3a34      	subs	r2, #52	; 0x34
    2780:	3aff      	subs	r2, #255	; 0xff
    2782:	239e      	movs	r3, #158	; 0x9e
    2784:	005b      	lsls	r3, r3, #1
    2786:	54e2      	strb	r2, [r4, r3]
			if(synchroRelay!=NULL)
    2788:	3304      	adds	r3, #4
    278a:	58e0      	ldr	r0, [r4, r3]
    278c:	2800      	cmp	r0, #0
    278e:	d004      	beq.n	279a <_ZN17RelayBufferedTask9OnReceiveEP7Channel+0x46>
			{
				xSemaphoreGiveFromISR(synchroRelay,NULL);
    2790:	2100      	movs	r1, #0
    2792:	2200      	movs	r2, #0
    2794:	2300      	movs	r3, #0
    2796:	4d06      	ldr	r5, [pc, #24]	; (27b0 <_ZN17RelayBufferedTask9OnReceiveEP7Channel+0x5c>)
    2798:	47a8      	blx	r5
			}
		}
			
		if(buffer_end >= RELAY_BUFFER_SIZE)
    279a:	239a      	movs	r3, #154	; 0x9a
    279c:	005b      	lsls	r3, r3, #1
    279e:	58e2      	ldr	r2, [r4, r3]
    27a0:	232c      	movs	r3, #44	; 0x2c
    27a2:	33ff      	adds	r3, #255	; 0xff
    27a4:	429a      	cmp	r2, r3
    27a6:	d902      	bls.n	27ae <_ZN17RelayBufferedTask9OnReceiveEP7Channel+0x5a>
		{
			buffer_end = 0;
    27a8:	2200      	movs	r2, #0
    27aa:	3309      	adds	r3, #9
    27ac:	50e2      	str	r2, [r4, r3]
		}
	}
    27ae:	bd38      	pop	{r3, r4, r5, pc}
    27b0:	0000069d 	.word	0x0000069d

000027b4 <_ZN13RelayBufferedD1Ev>:
}
	
RelayBuffered::~RelayBuffered()
{
		
}
    27b4:	4770      	bx	lr
    27b6:	46c0      	nop			; (mov r8, r8)

000027b8 <_ZN5RelayD0Ev>:
  : output(out)
{
	
}

Relay::~Relay()
    27b8:	b510      	push	{r4, lr}
    27ba:	1c04      	adds	r4, r0, #0
{
	
}
    27bc:	4b01      	ldr	r3, [pc, #4]	; (27c4 <_ZN5RelayD0Ev+0xc>)
    27be:	4798      	blx	r3
    27c0:	1c20      	adds	r0, r4, #0
    27c2:	bd10      	pop	{r4, pc}
    27c4:	000058a7 	.word	0x000058a7

000027c8 <_ZN17RelayBufferedTaskD1Ev>:
}
	
RelayBufferedTask::~RelayBufferedTask()
{
		
}
    27c8:	4770      	bx	lr
    27ca:	46c0      	nop			; (mov r8, r8)

000027cc <_ZN17RelayBufferedTaskD0Ev>:
  : RelayBuffered(out, end), synchroRelay(synchro)
{

}
	
RelayBufferedTask::~RelayBufferedTask()
    27cc:	b510      	push	{r4, lr}
    27ce:	1c04      	adds	r4, r0, #0
{
		
}
    27d0:	4b01      	ldr	r3, [pc, #4]	; (27d8 <_ZN17RelayBufferedTaskD0Ev+0xc>)
    27d2:	4798      	blx	r3
    27d4:	1c20      	adds	r0, r4, #0
    27d6:	bd10      	pop	{r4, pc}
    27d8:	000058a7 	.word	0x000058a7

000027dc <_ZN13RelayBufferedD0Ev>:
  : Relay(out), buffer_end(0), buffer_pos(0), newdata(false), endchar(end)
{
	memset(buffer,0,RELAY_BUFFER_SIZE);
}
	
RelayBuffered::~RelayBuffered()
    27dc:	b510      	push	{r4, lr}
    27de:	1c04      	adds	r4, r0, #0
{
		
}
    27e0:	4b01      	ldr	r3, [pc, #4]	; (27e8 <_ZN13RelayBufferedD0Ev+0xc>)
    27e2:	4798      	blx	r3
    27e4:	1c20      	adds	r0, r4, #0
    27e6:	bd10      	pop	{r4, pc}
    27e8:	000058a7 	.word	0x000058a7

000027ec <_ZN5RelayC1EP7Channel>:

#include "relay.h"
#include "mbed.h"

Relay::Relay(Channel* out)
  : output(out)
    27ec:	4b02      	ldr	r3, [pc, #8]	; (27f8 <_ZN5RelayC1EP7Channel+0xc>)
    27ee:	3308      	adds	r3, #8
    27f0:	6003      	str	r3, [r0, #0]
    27f2:	6041      	str	r1, [r0, #4]
{
	
}
    27f4:	4770      	bx	lr
    27f6:	46c0      	nop			; (mov r8, r8)
    27f8:	0000d398 	.word	0x0000d398

000027fc <_ZN13RelayBufferedC1EP7Channelh>:
	{
		output->putc(c->getc());
	}
}

RelayBuffered::RelayBuffered(Channel* out, uint8_t end)
    27fc:	b510      	push	{r4, lr}
    27fe:	1c04      	adds	r4, r0, #0

#include "relay.h"
#include "mbed.h"

Relay::Relay(Channel* out)
  : output(out)
    2800:	6041      	str	r1, [r0, #4]
		output->putc(c->getc());
	}
}

RelayBuffered::RelayBuffered(Channel* out, uint8_t end)
  : Relay(out), buffer_end(0), buffer_pos(0), newdata(false), endchar(end)
    2802:	4b0b      	ldr	r3, [pc, #44]	; (2830 <_ZN13RelayBufferedC1EP7Channelh+0x34>)
    2804:	3308      	adds	r3, #8
    2806:	6003      	str	r3, [r0, #0]
    2808:	2300      	movs	r3, #0
    280a:	219a      	movs	r1, #154	; 0x9a
    280c:	0049      	lsls	r1, r1, #1
    280e:	5043      	str	r3, [r0, r1]
    2810:	3104      	adds	r1, #4
    2812:	5043      	str	r3, [r0, r1]
    2814:	3104      	adds	r1, #4
    2816:	5443      	strb	r3, [r0, r1]
    2818:	233e      	movs	r3, #62	; 0x3e
    281a:	33ff      	adds	r3, #255	; 0xff
    281c:	54c2      	strb	r2, [r0, r3]
{
	memset(buffer,0,RELAY_BUFFER_SIZE);
    281e:	3008      	adds	r0, #8
    2820:	2100      	movs	r1, #0
    2822:	2296      	movs	r2, #150	; 0x96
    2824:	0052      	lsls	r2, r2, #1
    2826:	4b03      	ldr	r3, [pc, #12]	; (2834 <_ZN13RelayBufferedC1EP7Channelh+0x38>)
    2828:	4798      	blx	r3
}
    282a:	1c20      	adds	r0, r4, #0
    282c:	bd10      	pop	{r4, pc}
    282e:	46c0      	nop			; (mov r8, r8)
    2830:	0000d3b8 	.word	0x0000d3b8
    2834:	00006501 	.word	0x00006501

00002838 <_ZN17RelayBufferedTaskC1EP7ChannelPvh>:
bool RelayBuffered::HasNewData()
{
	return newdata;
}

RelayBufferedTask::RelayBufferedTask(Channel* out, xSemaphoreHandle synchro, uint8_t end)
    2838:	b538      	push	{r3, r4, r5, lr}
    283a:	1c04      	adds	r4, r0, #0
    283c:	1c15      	adds	r5, r2, #0
  : RelayBuffered(out, end), synchroRelay(synchro)
    283e:	1c1a      	adds	r2, r3, #0
    2840:	4b04      	ldr	r3, [pc, #16]	; (2854 <_ZN17RelayBufferedTaskC1EP7ChannelPvh+0x1c>)
    2842:	4798      	blx	r3
    2844:	4b04      	ldr	r3, [pc, #16]	; (2858 <_ZN17RelayBufferedTaskC1EP7ChannelPvh+0x20>)
    2846:	3308      	adds	r3, #8
    2848:	6023      	str	r3, [r4, #0]
    284a:	23a0      	movs	r3, #160	; 0xa0
    284c:	005b      	lsls	r3, r3, #1
    284e:	50e5      	str	r5, [r4, r3]
{

}
    2850:	1c20      	adds	r0, r4, #0
    2852:	bd38      	pop	{r3, r4, r5, pc}
    2854:	000027fd 	.word	0x000027fd
    2858:	0000d370 	.word	0x0000d370

0000285c <mbed_die>:
    285c:	b508      	push	{r3, lr}
    285e:	b672      	cpsid	i
    2860:	2096      	movs	r0, #150	; 0x96
    2862:	f001 fc1d 	bl	40a0 <wait_ms>
    2866:	2096      	movs	r0, #150	; 0x96
    2868:	f001 fc1a 	bl	40a0 <wait_ms>
    286c:	e7f8      	b.n	2860 <mbed_die+0x4>
    286e:	46c0      	nop			; (mov r8, r8)

00002870 <NVIC_SetVector>:
    2870:	4a0b      	ldr	r2, [pc, #44]	; (28a0 <NVIC_SetVector+0x30>)
    2872:	b530      	push	{r4, r5, lr}
    2874:	6894      	ldr	r4, [r2, #8]
    2876:	6892      	ldr	r2, [r2, #8]
    2878:	1c23      	adds	r3, r4, #0
    287a:	2a00      	cmp	r2, #0
    287c:	d10c      	bne.n	2898 <NVIC_SetVector+0x28>
    287e:	2300      	movs	r3, #0
    2880:	2280      	movs	r2, #128	; 0x80
    2882:	591d      	ldr	r5, [r3, r4]
    2884:	0592      	lsls	r2, r2, #22
    2886:	189a      	adds	r2, r3, r2
    2888:	3304      	adds	r3, #4
    288a:	6015      	str	r5, [r2, #0]
    288c:	2bb0      	cmp	r3, #176	; 0xb0
    288e:	d1f7      	bne.n	2880 <NVIC_SetVector+0x10>
    2890:	2380      	movs	r3, #128	; 0x80
    2892:	4a03      	ldr	r2, [pc, #12]	; (28a0 <NVIC_SetVector+0x30>)
    2894:	059b      	lsls	r3, r3, #22
    2896:	6093      	str	r3, [r2, #8]
    2898:	3010      	adds	r0, #16
    289a:	0080      	lsls	r0, r0, #2
    289c:	50c1      	str	r1, [r0, r3]
    289e:	bd30      	pop	{r4, r5, pc}
    28a0:	e000ed00 	.word	0xe000ed00

000028a4 <mbed_sdk_init>:
    28a4:	b508      	push	{r3, lr}
    28a6:	4b04      	ldr	r3, [pc, #16]	; (28b8 <mbed_sdk_init+0x14>)
    28a8:	781a      	ldrb	r2, [r3, #0]
    28aa:	2a00      	cmp	r2, #0
    28ac:	d103      	bne.n	28b6 <mbed_sdk_init+0x12>
    28ae:	3201      	adds	r2, #1
    28b0:	701a      	strb	r2, [r3, #0]
    28b2:	f000 fae1 	bl	2e78 <system_init>
    28b6:	bd08      	pop	{r3, pc}
    28b8:	20003e10 	.word	0x20003e10

000028bc <_ZN4mbed10FileHandle4flenEv>:
    28bc:	6803      	ldr	r3, [r0, #0]
    28be:	b570      	push	{r4, r5, r6, lr}
    28c0:	691b      	ldr	r3, [r3, #16]
    28c2:	2100      	movs	r1, #0
    28c4:	2201      	movs	r2, #1
    28c6:	1c04      	adds	r4, r0, #0
    28c8:	4798      	blx	r3
    28ca:	1c06      	adds	r6, r0, #0
    28cc:	1c43      	adds	r3, r0, #1
    28ce:	d00e      	beq.n	28ee <_ZN4mbed10FileHandle4flenEv+0x32>
    28d0:	6823      	ldr	r3, [r4, #0]
    28d2:	2100      	movs	r1, #0
    28d4:	691b      	ldr	r3, [r3, #16]
    28d6:	2202      	movs	r2, #2
    28d8:	1c20      	adds	r0, r4, #0
    28da:	4798      	blx	r3
    28dc:	1c05      	adds	r5, r0, #0
    28de:	6823      	ldr	r3, [r4, #0]
    28e0:	1c20      	adds	r0, r4, #0
    28e2:	691b      	ldr	r3, [r3, #16]
    28e4:	1c31      	adds	r1, r6, #0
    28e6:	2200      	movs	r2, #0
    28e8:	4798      	blx	r3
    28ea:	1c28      	adds	r0, r5, #0
    28ec:	bd70      	pop	{r4, r5, r6, pc}
    28ee:	e7fd      	b.n	28ec <_ZN4mbed10FileHandle4flenEv+0x30>

000028f0 <_ZL11init_serialv.part.0>:
    28f0:	b508      	push	{r3, lr}
    28f2:	4803      	ldr	r0, [pc, #12]	; (2900 <_ZL11init_serialv.part.0+0x10>)
    28f4:	2104      	movs	r1, #4
    28f6:	2205      	movs	r2, #5
    28f8:	f000 fdea 	bl	34d0 <serial_init>
    28fc:	bd08      	pop	{r3, pc}
    28fe:	46c0      	nop			; (mov r8, r8)
    2900:	20003fbc 	.word	0x20003fbc

00002904 <_ZN4mbed10FileHandleD1Ev>:
    2904:	4b09      	ldr	r3, [pc, #36]	; (292c <_ZN4mbed10FileHandleD1Ev+0x28>)
    2906:	b510      	push	{r4, lr}
    2908:	3308      	adds	r3, #8
    290a:	6003      	str	r3, [r0, #0]
    290c:	4b08      	ldr	r3, [pc, #32]	; (2930 <_ZN4mbed10FileHandleD1Ev+0x2c>)
    290e:	2100      	movs	r1, #0
    2910:	1c5a      	adds	r2, r3, #1
    2912:	32ff      	adds	r2, #255	; 0xff
    2914:	e002      	b.n	291c <_ZN4mbed10FileHandleD1Ev+0x18>
    2916:	3304      	adds	r3, #4
    2918:	4293      	cmp	r3, r2
    291a:	d006      	beq.n	292a <_ZN4mbed10FileHandleD1Ev+0x26>
    291c:	681c      	ldr	r4, [r3, #0]
    291e:	4284      	cmp	r4, r0
    2920:	d1f9      	bne.n	2916 <_ZN4mbed10FileHandleD1Ev+0x12>
    2922:	6019      	str	r1, [r3, #0]
    2924:	3304      	adds	r3, #4
    2926:	4293      	cmp	r3, r2
    2928:	d1f8      	bne.n	291c <_ZN4mbed10FileHandleD1Ev+0x18>
    292a:	bd10      	pop	{r4, pc}
    292c:	0000d3f8 	.word	0x0000d3f8
    2930:	20003e14 	.word	0x20003e14

00002934 <_open>:
    2934:	b5f0      	push	{r4, r5, r6, r7, lr}
    2936:	4647      	mov	r7, r8
    2938:	b480      	push	{r7}
    293a:	1c0e      	adds	r6, r1, #0
    293c:	b082      	sub	sp, #8
    293e:	4934      	ldr	r1, [pc, #208]	; (2a10 <_open+0xdc>)
    2940:	1c05      	adds	r5, r0, #0
    2942:	f005 fa63 	bl	7e0c <strcmp>
    2946:	1e04      	subs	r4, r0, #0
    2948:	d108      	bne.n	295c <_open+0x28>
    294a:	4b32      	ldr	r3, [pc, #200]	; (2a14 <_open+0xe0>)
    294c:	681b      	ldr	r3, [r3, #0]
    294e:	2b00      	cmp	r3, #0
    2950:	d00f      	beq.n	2972 <_open+0x3e>
    2952:	1c20      	adds	r0, r4, #0
    2954:	b002      	add	sp, #8
    2956:	bc04      	pop	{r2}
    2958:	4690      	mov	r8, r2
    295a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    295c:	1c28      	adds	r0, r5, #0
    295e:	492e      	ldr	r1, [pc, #184]	; (2a18 <_open+0xe4>)
    2960:	f005 fa54 	bl	7e0c <strcmp>
    2964:	2800      	cmp	r0, #0
    2966:	d107      	bne.n	2978 <_open+0x44>
    2968:	4b2a      	ldr	r3, [pc, #168]	; (2a14 <_open+0xe0>)
    296a:	2401      	movs	r4, #1
    296c:	681b      	ldr	r3, [r3, #0]
    296e:	2b00      	cmp	r3, #0
    2970:	d1ef      	bne.n	2952 <_open+0x1e>
    2972:	f7ff ffbd 	bl	28f0 <_ZL11init_serialv.part.0>
    2976:	e7ec      	b.n	2952 <_open+0x1e>
    2978:	1c28      	adds	r0, r5, #0
    297a:	4928      	ldr	r1, [pc, #160]	; (2a1c <_open+0xe8>)
    297c:	f005 fa46 	bl	7e0c <strcmp>
    2980:	2800      	cmp	r0, #0
    2982:	d024      	beq.n	29ce <_open+0x9a>
    2984:	4f26      	ldr	r7, [pc, #152]	; (2a20 <_open+0xec>)
    2986:	2400      	movs	r4, #0
    2988:	1c3b      	adds	r3, r7, #0
    298a:	e003      	b.n	2994 <_open+0x60>
    298c:	3401      	adds	r4, #1
    298e:	3304      	adds	r3, #4
    2990:	2c40      	cmp	r4, #64	; 0x40
    2992:	d022      	beq.n	29da <_open+0xa6>
    2994:	681a      	ldr	r2, [r3, #0]
    2996:	2a00      	cmp	r2, #0
    2998:	d1f8      	bne.n	298c <_open+0x58>
    299a:	782b      	ldrb	r3, [r5, #0]
    299c:	2b3a      	cmp	r3, #58	; 0x3a
    299e:	d030      	beq.n	2a02 <_open+0xce>
    29a0:	4668      	mov	r0, sp
    29a2:	1c29      	adds	r1, r5, #0
    29a4:	f001 f800 	bl	39a8 <_ZN4mbed8FilePathC1EPKc>
    29a8:	4668      	mov	r0, sp
    29aa:	f001 f857 	bl	3a5c <_ZN4mbed8FilePath6existsEv>
    29ae:	2800      	cmp	r0, #0
    29b0:	d013      	beq.n	29da <_open+0xa6>
    29b2:	4668      	mov	r0, sp
    29b4:	f001 f834 	bl	3a20 <_ZN4mbed8FilePath6isFileEv>
    29b8:	2800      	cmp	r0, #0
    29ba:	d011      	beq.n	29e0 <_open+0xac>
    29bc:	4668      	mov	r0, sp
    29be:	f001 f83b 	bl	3a38 <_ZN4mbed8FilePath4fileEv>
    29c2:	2800      	cmp	r0, #0
    29c4:	d009      	beq.n	29da <_open+0xa6>
    29c6:	00a3      	lsls	r3, r4, #2
    29c8:	50f8      	str	r0, [r7, r3]
    29ca:	3403      	adds	r4, #3
    29cc:	e7c1      	b.n	2952 <_open+0x1e>
    29ce:	4b11      	ldr	r3, [pc, #68]	; (2a14 <_open+0xe0>)
    29d0:	2402      	movs	r4, #2
    29d2:	681b      	ldr	r3, [r3, #0]
    29d4:	2b00      	cmp	r3, #0
    29d6:	d1bc      	bne.n	2952 <_open+0x1e>
    29d8:	e7cb      	b.n	2972 <_open+0x3e>
    29da:	2401      	movs	r4, #1
    29dc:	4264      	negs	r4, r4
    29de:	e7b8      	b.n	2952 <_open+0x1e>
    29e0:	4668      	mov	r0, sp
    29e2:	f001 f80f 	bl	3a04 <_ZN4mbed8FilePath10fileSystemEv>
    29e6:	1e05      	subs	r5, r0, #0
    29e8:	d0f7      	beq.n	29da <_open+0xa6>
    29ea:	6803      	ldr	r3, [r0, #0]
    29ec:	4668      	mov	r0, sp
    29ee:	689b      	ldr	r3, [r3, #8]
    29f0:	4698      	mov	r8, r3
    29f2:	f001 f805 	bl	3a00 <_ZN4mbed8FilePath8fileNameEv>
    29f6:	4a0b      	ldr	r2, [pc, #44]	; (2a24 <_open+0xf0>)
    29f8:	1c01      	adds	r1, r0, #0
    29fa:	4032      	ands	r2, r6
    29fc:	1c28      	adds	r0, r5, #0
    29fe:	47c0      	blx	r8
    2a00:	e7df      	b.n	29c2 <_open+0x8e>
    2a02:	1c28      	adds	r0, r5, #0
    2a04:	4908      	ldr	r1, [pc, #32]	; (2a28 <_open+0xf4>)
    2a06:	466a      	mov	r2, sp
    2a08:	f005 f98a 	bl	7d20 <siscanf>
    2a0c:	9800      	ldr	r0, [sp, #0]
    2a0e:	e7d8      	b.n	29c2 <_open+0x8e>
    2a10:	0000d3e0 	.word	0x0000d3e0
    2a14:	20003f60 	.word	0x20003f60
    2a18:	0000d3f0 	.word	0x0000d3f0
    2a1c:	0000d3e8 	.word	0x0000d3e8
    2a20:	20003e14 	.word	0x20003e14
    2a24:	fffeffff 	.word	0xfffeffff
    2a28:	0000d424 	.word	0x0000d424

00002a2c <_close>:
    2a2c:	b508      	push	{r3, lr}
    2a2e:	1c03      	adds	r3, r0, #0
    2a30:	2000      	movs	r0, #0
    2a32:	2b02      	cmp	r3, #2
    2a34:	dd0a      	ble.n	2a4c <_close+0x20>
    2a36:	4907      	ldr	r1, [pc, #28]	; (2a54 <_close+0x28>)
    2a38:	3b03      	subs	r3, #3
    2a3a:	009b      	lsls	r3, r3, #2
    2a3c:	585a      	ldr	r2, [r3, r1]
    2a3e:	5058      	str	r0, [r3, r1]
    2a40:	2a00      	cmp	r2, #0
    2a42:	d004      	beq.n	2a4e <_close+0x22>
    2a44:	6813      	ldr	r3, [r2, #0]
    2a46:	1c10      	adds	r0, r2, #0
    2a48:	685b      	ldr	r3, [r3, #4]
    2a4a:	4798      	blx	r3
    2a4c:	bd08      	pop	{r3, pc}
    2a4e:	2001      	movs	r0, #1
    2a50:	4240      	negs	r0, r0
    2a52:	e7fb      	b.n	2a4c <_close+0x20>
    2a54:	20003e14 	.word	0x20003e14

00002a58 <_write>:
    2a58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2a5a:	1c0c      	adds	r4, r1, #0
    2a5c:	1c17      	adds	r7, r2, #0
    2a5e:	2802      	cmp	r0, #2
    2a60:	dc12      	bgt.n	2a88 <_write+0x30>
    2a62:	4b10      	ldr	r3, [pc, #64]	; (2aa4 <_write+0x4c>)
    2a64:	681b      	ldr	r3, [r3, #0]
    2a66:	2b00      	cmp	r3, #0
    2a68:	d101      	bne.n	2a6e <_write+0x16>
    2a6a:	f7ff ff41 	bl	28f0 <_ZL11init_serialv.part.0>
    2a6e:	2f00      	cmp	r7, #0
    2a70:	d008      	beq.n	2a84 <_write+0x2c>
    2a72:	4d0d      	ldr	r5, [pc, #52]	; (2aa8 <_write+0x50>)
    2a74:	19e6      	adds	r6, r4, r7
    2a76:	7821      	ldrb	r1, [r4, #0]
    2a78:	1c28      	adds	r0, r5, #0
    2a7a:	3401      	adds	r4, #1
    2a7c:	f000 ff74 	bl	3968 <serial_putc>
    2a80:	42b4      	cmp	r4, r6
    2a82:	d1f8      	bne.n	2a76 <_write+0x1e>
    2a84:	1c38      	adds	r0, r7, #0
    2a86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2a88:	3803      	subs	r0, #3
    2a8a:	4b08      	ldr	r3, [pc, #32]	; (2aac <_write+0x54>)
    2a8c:	0080      	lsls	r0, r0, #2
    2a8e:	58c0      	ldr	r0, [r0, r3]
    2a90:	2800      	cmp	r0, #0
    2a92:	d003      	beq.n	2a9c <_write+0x44>
    2a94:	6803      	ldr	r3, [r0, #0]
    2a96:	681b      	ldr	r3, [r3, #0]
    2a98:	4798      	blx	r3
    2a9a:	e7f4      	b.n	2a86 <_write+0x2e>
    2a9c:	2001      	movs	r0, #1
    2a9e:	4240      	negs	r0, r0
    2aa0:	e7f1      	b.n	2a86 <_write+0x2e>
    2aa2:	46c0      	nop			; (mov r8, r8)
    2aa4:	20003f60 	.word	0x20003f60
    2aa8:	20003fbc 	.word	0x20003fbc
    2aac:	20003e14 	.word	0x20003e14

00002ab0 <_read>:
    2ab0:	b510      	push	{r4, lr}
    2ab2:	1c0c      	adds	r4, r1, #0
    2ab4:	2802      	cmp	r0, #2
    2ab6:	dc09      	bgt.n	2acc <_read+0x1c>
    2ab8:	4b0c      	ldr	r3, [pc, #48]	; (2aec <_read+0x3c>)
    2aba:	681b      	ldr	r3, [r3, #0]
    2abc:	2b00      	cmp	r3, #0
    2abe:	d00f      	beq.n	2ae0 <_read+0x30>
    2ac0:	480b      	ldr	r0, [pc, #44]	; (2af0 <_read+0x40>)
    2ac2:	f000 ff25 	bl	3910 <serial_getc>
    2ac6:	7020      	strb	r0, [r4, #0]
    2ac8:	2001      	movs	r0, #1
    2aca:	bd10      	pop	{r4, pc}
    2acc:	3803      	subs	r0, #3
    2ace:	4b09      	ldr	r3, [pc, #36]	; (2af4 <_read+0x44>)
    2ad0:	0080      	lsls	r0, r0, #2
    2ad2:	58c0      	ldr	r0, [r0, r3]
    2ad4:	2800      	cmp	r0, #0
    2ad6:	d006      	beq.n	2ae6 <_read+0x36>
    2ad8:	6803      	ldr	r3, [r0, #0]
    2ada:	689b      	ldr	r3, [r3, #8]
    2adc:	4798      	blx	r3
    2ade:	e7f4      	b.n	2aca <_read+0x1a>
    2ae0:	f7ff ff06 	bl	28f0 <_ZL11init_serialv.part.0>
    2ae4:	e7ec      	b.n	2ac0 <_read+0x10>
    2ae6:	2001      	movs	r0, #1
    2ae8:	4240      	negs	r0, r0
    2aea:	e7ee      	b.n	2aca <_read+0x1a>
    2aec:	20003f60 	.word	0x20003f60
    2af0:	20003fbc 	.word	0x20003fbc
    2af4:	20003e14 	.word	0x20003e14

00002af8 <_isatty>:
    2af8:	b508      	push	{r3, lr}
    2afa:	1c03      	adds	r3, r0, #0
    2afc:	2001      	movs	r0, #1
    2afe:	2b02      	cmp	r3, #2
    2b00:	dd08      	ble.n	2b14 <_isatty+0x1c>
    2b02:	3b03      	subs	r3, #3
    2b04:	4a05      	ldr	r2, [pc, #20]	; (2b1c <_isatty+0x24>)
    2b06:	009b      	lsls	r3, r3, #2
    2b08:	5898      	ldr	r0, [r3, r2]
    2b0a:	2800      	cmp	r0, #0
    2b0c:	d003      	beq.n	2b16 <_isatty+0x1e>
    2b0e:	6803      	ldr	r3, [r0, #0]
    2b10:	68db      	ldr	r3, [r3, #12]
    2b12:	4798      	blx	r3
    2b14:	bd08      	pop	{r3, pc}
    2b16:	2001      	movs	r0, #1
    2b18:	4240      	negs	r0, r0
    2b1a:	e7fb      	b.n	2b14 <_isatty+0x1c>
    2b1c:	20003e14 	.word	0x20003e14

00002b20 <_lseek>:
    2b20:	b508      	push	{r3, lr}
    2b22:	1c03      	adds	r3, r0, #0
    2b24:	2000      	movs	r0, #0
    2b26:	2b02      	cmp	r3, #2
    2b28:	dd08      	ble.n	2b3c <_lseek+0x1c>
    2b2a:	3b03      	subs	r3, #3
    2b2c:	4805      	ldr	r0, [pc, #20]	; (2b44 <_lseek+0x24>)
    2b2e:	009b      	lsls	r3, r3, #2
    2b30:	5818      	ldr	r0, [r3, r0]
    2b32:	2800      	cmp	r0, #0
    2b34:	d003      	beq.n	2b3e <_lseek+0x1e>
    2b36:	6803      	ldr	r3, [r0, #0]
    2b38:	691b      	ldr	r3, [r3, #16]
    2b3a:	4798      	blx	r3
    2b3c:	bd08      	pop	{r3, pc}
    2b3e:	2001      	movs	r0, #1
    2b40:	4240      	negs	r0, r0
    2b42:	e7fb      	b.n	2b3c <_lseek+0x1c>
    2b44:	20003e14 	.word	0x20003e14

00002b48 <_fstat>:
    2b48:	b508      	push	{r3, lr}
    2b4a:	2802      	cmp	r0, #2
    2b4c:	d804      	bhi.n	2b58 <_fstat+0x10>
    2b4e:	2380      	movs	r3, #128	; 0x80
    2b50:	2000      	movs	r0, #0
    2b52:	019b      	lsls	r3, r3, #6
    2b54:	604b      	str	r3, [r1, #4]
    2b56:	bd08      	pop	{r3, pc}
    2b58:	f003 f8a2 	bl	5ca0 <__errno>
    2b5c:	2309      	movs	r3, #9
    2b5e:	6003      	str	r3, [r0, #0]
    2b60:	2001      	movs	r0, #1
    2b62:	4240      	negs	r0, r0
    2b64:	e7f7      	b.n	2b56 <_fstat+0xe>
    2b66:	46c0      	nop			; (mov r8, r8)

00002b68 <__cxa_pure_virtual>:
    2b68:	b508      	push	{r3, lr}
    2b6a:	2001      	movs	r0, #1
    2b6c:	f003 f89e 	bl	5cac <exit>

00002b70 <mbed_main>:
    2b70:	4770      	bx	lr
    2b72:	46c0      	nop			; (mov r8, r8)

00002b74 <__wrap_main>:
    2b74:	b508      	push	{r3, lr}
    2b76:	f7ff fe95 	bl	28a4 <mbed_sdk_init>
    2b7a:	f7ff fff9 	bl	2b70 <mbed_main>
    2b7e:	f7fe fbb3 	bl	12e8 <main>
    2b82:	bd08      	pop	{r3, pc}

00002b84 <_sbrk>:
    2b84:	4a07      	ldr	r2, [pc, #28]	; (2ba4 <_sbrk+0x20>)
    2b86:	6813      	ldr	r3, [r2, #0]
    2b88:	1818      	adds	r0, r3, r0
    2b8a:	f3ef 8108 	mrs	r1, MSP
    2b8e:	4288      	cmp	r0, r1
    2b90:	d202      	bcs.n	2b98 <_sbrk+0x14>
    2b92:	6010      	str	r0, [r2, #0]
    2b94:	1c18      	adds	r0, r3, #0
    2b96:	4770      	bx	lr
    2b98:	220c      	movs	r2, #12
    2b9a:	2001      	movs	r0, #1
    2b9c:	4b02      	ldr	r3, [pc, #8]	; (2ba8 <_sbrk+0x24>)
    2b9e:	4240      	negs	r0, r0
    2ba0:	601a      	str	r2, [r3, #0]
    2ba2:	e7f8      	b.n	2b96 <_sbrk+0x12>
    2ba4:	200000bc 	.word	0x200000bc
    2ba8:	2000406c 	.word	0x2000406c

00002bac <_exit>:
    2bac:	b508      	push	{r3, lr}
    2bae:	2800      	cmp	r0, #0
    2bb0:	d100      	bne.n	2bb4 <_exit+0x8>
    2bb2:	e7fe      	b.n	2bb2 <_exit+0x6>
    2bb4:	f7ff fe52 	bl	285c <mbed_die>
    2bb8:	e7fb      	b.n	2bb2 <_exit+0x6>
    2bba:	46c0      	nop			; (mov r8, r8)

00002bbc <_ZN4mbed26mbed_set_unbuffered_streamEP7__sFILE>:
    2bbc:	b508      	push	{r3, lr}
    2bbe:	2100      	movs	r1, #0
    2bc0:	f004 ffaf 	bl	7b22 <setbuf>
    2bc4:	bd08      	pop	{r3, pc}
    2bc6:	46c0      	nop			; (mov r8, r8)

00002bc8 <_ZN4mbed9mbed_getcEP7__sFILE>:
    2bc8:	b508      	push	{r3, lr}
    2bca:	f003 f9df 	bl	5f8c <fgetc>
    2bce:	bd08      	pop	{r3, pc}

00002bd0 <Dummy_Handler>:
    2bd0:	e7fe      	b.n	2bd0 <Dummy_Handler>
    2bd2:	46c0      	nop			; (mov r8, r8)

00002bd4 <Reset_Handler>:
    2bd4:	4816      	ldr	r0, [pc, #88]	; (2c30 <Reset_Handler+0x5c>)
    2bd6:	4917      	ldr	r1, [pc, #92]	; (2c34 <Reset_Handler+0x60>)
    2bd8:	b510      	push	{r4, lr}
    2bda:	4288      	cmp	r0, r1
    2bdc:	d00d      	beq.n	2bfa <Reset_Handler+0x26>
    2bde:	4b16      	ldr	r3, [pc, #88]	; (2c38 <Reset_Handler+0x64>)
    2be0:	4299      	cmp	r1, r3
    2be2:	d20a      	bcs.n	2bfa <Reset_Handler+0x26>
    2be4:	43ca      	mvns	r2, r1
    2be6:	18d3      	adds	r3, r2, r3
    2be8:	2200      	movs	r2, #0
    2bea:	089b      	lsrs	r3, r3, #2
    2bec:	3301      	adds	r3, #1
    2bee:	009b      	lsls	r3, r3, #2
    2bf0:	5884      	ldr	r4, [r0, r2]
    2bf2:	508c      	str	r4, [r1, r2]
    2bf4:	3204      	adds	r2, #4
    2bf6:	429a      	cmp	r2, r3
    2bf8:	d1fa      	bne.n	2bf0 <Reset_Handler+0x1c>
    2bfa:	4910      	ldr	r1, [pc, #64]	; (2c3c <Reset_Handler+0x68>)
    2bfc:	4b10      	ldr	r3, [pc, #64]	; (2c40 <Reset_Handler+0x6c>)
    2bfe:	4299      	cmp	r1, r3
    2c00:	d20b      	bcs.n	2c1a <Reset_Handler+0x46>
    2c02:	43ca      	mvns	r2, r1
    2c04:	2000      	movs	r0, #0
    2c06:	18d3      	adds	r3, r2, r3
    2c08:	2200      	movs	r2, #0
    2c0a:	089b      	lsrs	r3, r3, #2
    2c0c:	3301      	adds	r3, #1
    2c0e:	009b      	lsls	r3, r3, #2
    2c10:	188c      	adds	r4, r1, r2
    2c12:	3204      	adds	r2, #4
    2c14:	6020      	str	r0, [r4, #0]
    2c16:	429a      	cmp	r2, r3
    2c18:	d1fa      	bne.n	2c10 <Reset_Handler+0x3c>
    2c1a:	21ff      	movs	r1, #255	; 0xff
    2c1c:	4b09      	ldr	r3, [pc, #36]	; (2c44 <Reset_Handler+0x70>)
    2c1e:	4a0a      	ldr	r2, [pc, #40]	; (2c48 <Reset_Handler+0x74>)
    2c20:	438b      	bics	r3, r1
    2c22:	6093      	str	r3, [r2, #8]
    2c24:	f003 fbc6 	bl	63b4 <__libc_init_array>
    2c28:	f7ff ffa4 	bl	2b74 <__wrap_main>
    2c2c:	e7fe      	b.n	2c2c <Reset_Handler+0x58>
    2c2e:	46c0      	nop			; (mov r8, r8)
    2c30:	0000e3f8 	.word	0x0000e3f8
    2c34:	200000b0 	.word	0x200000b0
    2c38:	20000174 	.word	0x20000174
    2c3c:	20000174 	.word	0x20000174
    2c40:	20004070 	.word	0x20004070
    2c44:	00000000 	.word	0x00000000
    2c48:	e000ed00 	.word	0xe000ed00

00002c4c <system_gclk_init>:
    2c4c:	2308      	movs	r3, #8
    2c4e:	4a06      	ldr	r2, [pc, #24]	; (2c68 <system_gclk_init+0x1c>)
    2c50:	6991      	ldr	r1, [r2, #24]
    2c52:	430b      	orrs	r3, r1
    2c54:	6193      	str	r3, [r2, #24]
    2c56:	2301      	movs	r3, #1
    2c58:	2101      	movs	r1, #1
    2c5a:	4a04      	ldr	r2, [pc, #16]	; (2c6c <system_gclk_init+0x20>)
    2c5c:	7013      	strb	r3, [r2, #0]
    2c5e:	7813      	ldrb	r3, [r2, #0]
    2c60:	4219      	tst	r1, r3
    2c62:	d1fc      	bne.n	2c5e <system_gclk_init+0x12>
    2c64:	4770      	bx	lr
    2c66:	46c0      	nop			; (mov r8, r8)
    2c68:	40000400 	.word	0x40000400
    2c6c:	40000c00 	.word	0x40000c00

00002c70 <system_gclk_gen_set_config>:
    2c70:	b570      	push	{r4, r5, r6, lr}
    2c72:	780d      	ldrb	r5, [r1, #0]
    2c74:	784b      	ldrb	r3, [r1, #1]
    2c76:	022d      	lsls	r5, r5, #8
    2c78:	1c04      	adds	r4, r0, #0
    2c7a:	4305      	orrs	r5, r0
    2c7c:	2b00      	cmp	r3, #0
    2c7e:	d002      	beq.n	2c86 <system_gclk_gen_set_config+0x16>
    2c80:	2380      	movs	r3, #128	; 0x80
    2c82:	02db      	lsls	r3, r3, #11
    2c84:	431d      	orrs	r5, r3
    2c86:	7a4b      	ldrb	r3, [r1, #9]
    2c88:	2b00      	cmp	r3, #0
    2c8a:	d002      	beq.n	2c92 <system_gclk_gen_set_config+0x22>
    2c8c:	2380      	movs	r3, #128	; 0x80
    2c8e:	031b      	lsls	r3, r3, #12
    2c90:	431d      	orrs	r5, r3
    2c92:	684e      	ldr	r6, [r1, #4]
    2c94:	2e01      	cmp	r6, #1
    2c96:	d90f      	bls.n	2cb8 <system_gclk_gen_set_config+0x48>
    2c98:	1e73      	subs	r3, r6, #1
    2c9a:	4033      	ands	r3, r6
    2c9c:	d129      	bne.n	2cf2 <system_gclk_gen_set_config+0x82>
    2c9e:	2e02      	cmp	r6, #2
    2ca0:	d005      	beq.n	2cae <system_gclk_gen_set_config+0x3e>
    2ca2:	2202      	movs	r2, #2
    2ca4:	3301      	adds	r3, #1
    2ca6:	0052      	lsls	r2, r2, #1
    2ca8:	4296      	cmp	r6, r2
    2caa:	d8fb      	bhi.n	2ca4 <system_gclk_gen_set_config+0x34>
    2cac:	021b      	lsls	r3, r3, #8
    2cae:	4318      	orrs	r0, r3
    2cb0:	2380      	movs	r3, #128	; 0x80
    2cb2:	1c04      	adds	r4, r0, #0
    2cb4:	035b      	lsls	r3, r3, #13
    2cb6:	431d      	orrs	r5, r3
    2cb8:	7a0b      	ldrb	r3, [r1, #8]
    2cba:	2b00      	cmp	r3, #0
    2cbc:	d002      	beq.n	2cc4 <system_gclk_gen_set_config+0x54>
    2cbe:	2380      	movs	r3, #128	; 0x80
    2cc0:	039b      	lsls	r3, r3, #14
    2cc2:	431d      	orrs	r5, r3
    2cc4:	4a0e      	ldr	r2, [pc, #56]	; (2d00 <system_gclk_gen_set_config+0x90>)
    2cc6:	7853      	ldrb	r3, [r2, #1]
    2cc8:	4e0d      	ldr	r6, [pc, #52]	; (2d00 <system_gclk_gen_set_config+0x90>)
    2cca:	b25b      	sxtb	r3, r3
    2ccc:	2b00      	cmp	r3, #0
    2cce:	dbfa      	blt.n	2cc6 <system_gclk_gen_set_config+0x56>
    2cd0:	f000 f9dc 	bl	308c <cpu_irq_enter_critical>
    2cd4:	60b4      	str	r4, [r6, #8]
    2cd6:	7873      	ldrb	r3, [r6, #1]
    2cd8:	4a09      	ldr	r2, [pc, #36]	; (2d00 <system_gclk_gen_set_config+0x90>)
    2cda:	b25b      	sxtb	r3, r3
    2cdc:	2b00      	cmp	r3, #0
    2cde:	dbfa      	blt.n	2cd6 <system_gclk_gen_set_config+0x66>
    2ce0:	2380      	movs	r3, #128	; 0x80
    2ce2:	6851      	ldr	r1, [r2, #4]
    2ce4:	025b      	lsls	r3, r3, #9
    2ce6:	400b      	ands	r3, r1
    2ce8:	431d      	orrs	r5, r3
    2cea:	6055      	str	r5, [r2, #4]
    2cec:	f000 f9ec 	bl	30c8 <cpu_irq_leave_critical>
    2cf0:	bd70      	pop	{r4, r5, r6, pc}
    2cf2:	2380      	movs	r3, #128	; 0x80
    2cf4:	0234      	lsls	r4, r6, #8
    2cf6:	029b      	lsls	r3, r3, #10
    2cf8:	4304      	orrs	r4, r0
    2cfa:	431d      	orrs	r5, r3
    2cfc:	e7dc      	b.n	2cb8 <system_gclk_gen_set_config+0x48>
    2cfe:	46c0      	nop			; (mov r8, r8)
    2d00:	40000c00 	.word	0x40000c00

00002d04 <system_gclk_gen_enable>:
    2d04:	b510      	push	{r4, lr}
    2d06:	1c04      	adds	r4, r0, #0
    2d08:	4a0b      	ldr	r2, [pc, #44]	; (2d38 <system_gclk_gen_enable+0x34>)
    2d0a:	7853      	ldrb	r3, [r2, #1]
    2d0c:	b25b      	sxtb	r3, r3
    2d0e:	2b00      	cmp	r3, #0
    2d10:	dbfb      	blt.n	2d0a <system_gclk_gen_enable+0x6>
    2d12:	f000 f9bb 	bl	308c <cpu_irq_enter_critical>
    2d16:	4b09      	ldr	r3, [pc, #36]	; (2d3c <system_gclk_gen_enable+0x38>)
    2d18:	4907      	ldr	r1, [pc, #28]	; (2d38 <system_gclk_gen_enable+0x34>)
    2d1a:	701c      	strb	r4, [r3, #0]
    2d1c:	784b      	ldrb	r3, [r1, #1]
    2d1e:	4a06      	ldr	r2, [pc, #24]	; (2d38 <system_gclk_gen_enable+0x34>)
    2d20:	b25b      	sxtb	r3, r3
    2d22:	2b00      	cmp	r3, #0
    2d24:	dbfa      	blt.n	2d1c <system_gclk_gen_enable+0x18>
    2d26:	2180      	movs	r1, #128	; 0x80
    2d28:	6853      	ldr	r3, [r2, #4]
    2d2a:	0249      	lsls	r1, r1, #9
    2d2c:	430b      	orrs	r3, r1
    2d2e:	6053      	str	r3, [r2, #4]
    2d30:	f000 f9ca 	bl	30c8 <cpu_irq_leave_critical>
    2d34:	bd10      	pop	{r4, pc}
    2d36:	46c0      	nop			; (mov r8, r8)
    2d38:	40000c00 	.word	0x40000c00
    2d3c:	40000c04 	.word	0x40000c04

00002d40 <system_gclk_gen_get_hz>:
    2d40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2d42:	1c07      	adds	r7, r0, #0
    2d44:	4a19      	ldr	r2, [pc, #100]	; (2dac <system_gclk_gen_get_hz+0x6c>)
    2d46:	7853      	ldrb	r3, [r2, #1]
    2d48:	b25b      	sxtb	r3, r3
    2d4a:	2b00      	cmp	r3, #0
    2d4c:	dbfb      	blt.n	2d46 <system_gclk_gen_get_hz+0x6>
    2d4e:	f000 f99d 	bl	308c <cpu_irq_enter_critical>
    2d52:	4b17      	ldr	r3, [pc, #92]	; (2db0 <system_gclk_gen_get_hz+0x70>)
    2d54:	4a15      	ldr	r2, [pc, #84]	; (2dac <system_gclk_gen_get_hz+0x6c>)
    2d56:	701f      	strb	r7, [r3, #0]
    2d58:	7853      	ldrb	r3, [r2, #1]
    2d5a:	4c14      	ldr	r4, [pc, #80]	; (2dac <system_gclk_gen_get_hz+0x6c>)
    2d5c:	b25b      	sxtb	r3, r3
    2d5e:	2b00      	cmp	r3, #0
    2d60:	dbfa      	blt.n	2d58 <system_gclk_gen_get_hz+0x18>
    2d62:	6860      	ldr	r0, [r4, #4]
    2d64:	04c0      	lsls	r0, r0, #19
    2d66:	0ec0      	lsrs	r0, r0, #27
    2d68:	f001 fb36 	bl	43d8 <system_clock_source_get_hz>
    2d6c:	1c06      	adds	r6, r0, #0
    2d6e:	4b10      	ldr	r3, [pc, #64]	; (2db0 <system_gclk_gen_get_hz+0x70>)
    2d70:	701f      	strb	r7, [r3, #0]
    2d72:	6865      	ldr	r5, [r4, #4]
    2d74:	4b0f      	ldr	r3, [pc, #60]	; (2db4 <system_gclk_gen_get_hz+0x74>)
    2d76:	02ed      	lsls	r5, r5, #11
    2d78:	0fed      	lsrs	r5, r5, #31
    2d7a:	701f      	strb	r7, [r3, #0]
    2d7c:	7863      	ldrb	r3, [r4, #1]
    2d7e:	b25b      	sxtb	r3, r3
    2d80:	2b00      	cmp	r3, #0
    2d82:	dbfb      	blt.n	2d7c <system_gclk_gen_get_hz+0x3c>
    2d84:	4b09      	ldr	r3, [pc, #36]	; (2dac <system_gclk_gen_get_hz+0x6c>)
    2d86:	6899      	ldr	r1, [r3, #8]
    2d88:	0a09      	lsrs	r1, r1, #8
    2d8a:	b28c      	uxth	r4, r1
    2d8c:	f000 f99c 	bl	30c8 <cpu_irq_leave_critical>
    2d90:	2d00      	cmp	r5, #0
    2d92:	d003      	beq.n	2d9c <system_gclk_gen_get_hz+0x5c>
    2d94:	1c61      	adds	r1, r4, #1
    2d96:	40ce      	lsrs	r6, r1
    2d98:	1c30      	adds	r0, r6, #0
    2d9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2d9c:	2c01      	cmp	r4, #1
    2d9e:	d9fb      	bls.n	2d98 <system_gclk_gen_get_hz+0x58>
    2da0:	1c30      	adds	r0, r6, #0
    2da2:	1c21      	adds	r1, r4, #0
    2da4:	f002 fd9c 	bl	58e0 <__aeabi_uidiv>
    2da8:	1c06      	adds	r6, r0, #0
    2daa:	e7f5      	b.n	2d98 <system_gclk_gen_get_hz+0x58>
    2dac:	40000c00 	.word	0x40000c00
    2db0:	40000c04 	.word	0x40000c04
    2db4:	40000c08 	.word	0x40000c08

00002db8 <system_gclk_chan_enable>:
    2db8:	b510      	push	{r4, lr}
    2dba:	1c04      	adds	r4, r0, #0
    2dbc:	f000 f966 	bl	308c <cpu_irq_enter_critical>
    2dc0:	2180      	movs	r1, #128	; 0x80
    2dc2:	4b05      	ldr	r3, [pc, #20]	; (2dd8 <system_gclk_chan_enable+0x20>)
    2dc4:	4a05      	ldr	r2, [pc, #20]	; (2ddc <system_gclk_chan_enable+0x24>)
    2dc6:	701c      	strb	r4, [r3, #0]
    2dc8:	8853      	ldrh	r3, [r2, #2]
    2dca:	01c9      	lsls	r1, r1, #7
    2dcc:	430b      	orrs	r3, r1
    2dce:	8053      	strh	r3, [r2, #2]
    2dd0:	f000 f97a 	bl	30c8 <cpu_irq_leave_critical>
    2dd4:	bd10      	pop	{r4, pc}
    2dd6:	46c0      	nop			; (mov r8, r8)
    2dd8:	40000c02 	.word	0x40000c02
    2ddc:	40000c00 	.word	0x40000c00

00002de0 <system_gclk_chan_disable>:
    2de0:	b510      	push	{r4, lr}
    2de2:	1c04      	adds	r4, r0, #0
    2de4:	f000 f952 	bl	308c <cpu_irq_enter_critical>
    2de8:	2080      	movs	r0, #128	; 0x80
    2dea:	4b0e      	ldr	r3, [pc, #56]	; (2e24 <system_gclk_chan_disable+0x44>)
    2dec:	4a0e      	ldr	r2, [pc, #56]	; (2e28 <system_gclk_chan_disable+0x48>)
    2dee:	701c      	strb	r4, [r3, #0]
    2df0:	8854      	ldrh	r4, [r2, #2]
    2df2:	4b0e      	ldr	r3, [pc, #56]	; (2e2c <system_gclk_chan_disable+0x4c>)
    2df4:	8851      	ldrh	r1, [r2, #2]
    2df6:	0524      	lsls	r4, r4, #20
    2df8:	400b      	ands	r3, r1
    2dfa:	8053      	strh	r3, [r2, #2]
    2dfc:	8851      	ldrh	r1, [r2, #2]
    2dfe:	4b0c      	ldr	r3, [pc, #48]	; (2e30 <system_gclk_chan_disable+0x50>)
    2e00:	0f24      	lsrs	r4, r4, #28
    2e02:	400b      	ands	r3, r1
    2e04:	8053      	strh	r3, [r2, #2]
    2e06:	01c0      	lsls	r0, r0, #7
    2e08:	8853      	ldrh	r3, [r2, #2]
    2e0a:	4907      	ldr	r1, [pc, #28]	; (2e28 <system_gclk_chan_disable+0x48>)
    2e0c:	4203      	tst	r3, r0
    2e0e:	d1fb      	bne.n	2e08 <system_gclk_chan_disable+0x28>
    2e10:	8848      	ldrh	r0, [r1, #2]
    2e12:	4b06      	ldr	r3, [pc, #24]	; (2e2c <system_gclk_chan_disable+0x4c>)
    2e14:	0222      	lsls	r2, r4, #8
    2e16:	4003      	ands	r3, r0
    2e18:	4313      	orrs	r3, r2
    2e1a:	804b      	strh	r3, [r1, #2]
    2e1c:	f000 f954 	bl	30c8 <cpu_irq_leave_critical>
    2e20:	bd10      	pop	{r4, pc}
    2e22:	46c0      	nop			; (mov r8, r8)
    2e24:	40000c02 	.word	0x40000c02
    2e28:	40000c00 	.word	0x40000c00
    2e2c:	fffff0ff 	.word	0xfffff0ff
    2e30:	ffffbfff 	.word	0xffffbfff

00002e34 <system_gclk_chan_set_config>:
    2e34:	b510      	push	{r4, lr}
    2e36:	780c      	ldrb	r4, [r1, #0]
    2e38:	0224      	lsls	r4, r4, #8
    2e3a:	4304      	orrs	r4, r0
    2e3c:	f7ff ffd0 	bl	2de0 <system_gclk_chan_disable>
    2e40:	4b01      	ldr	r3, [pc, #4]	; (2e48 <system_gclk_chan_set_config+0x14>)
    2e42:	b2a4      	uxth	r4, r4
    2e44:	805c      	strh	r4, [r3, #2]
    2e46:	bd10      	pop	{r4, pc}
    2e48:	40000c00 	.word	0x40000c00

00002e4c <system_gclk_chan_get_hz>:
    2e4c:	b510      	push	{r4, lr}
    2e4e:	1c04      	adds	r4, r0, #0
    2e50:	f000 f91c 	bl	308c <cpu_irq_enter_critical>
    2e54:	4b05      	ldr	r3, [pc, #20]	; (2e6c <system_gclk_chan_get_hz+0x20>)
    2e56:	701c      	strb	r4, [r3, #0]
    2e58:	4b05      	ldr	r3, [pc, #20]	; (2e70 <system_gclk_chan_get_hz+0x24>)
    2e5a:	885c      	ldrh	r4, [r3, #2]
    2e5c:	f000 f934 	bl	30c8 <cpu_irq_leave_critical>
    2e60:	0524      	lsls	r4, r4, #20
    2e62:	0f24      	lsrs	r4, r4, #28
    2e64:	1c20      	adds	r0, r4, #0
    2e66:	f7ff ff6b 	bl	2d40 <system_gclk_gen_get_hz>
    2e6a:	bd10      	pop	{r4, pc}
    2e6c:	40000c02 	.word	0x40000c02
    2e70:	40000c00 	.word	0x40000c00

00002e74 <_system_dummy_init>:
    2e74:	4770      	bx	lr
    2e76:	46c0      	nop			; (mov r8, r8)

00002e78 <system_init>:
    2e78:	b508      	push	{r3, lr}
    2e7a:	f001 fb41 	bl	4500 <system_clock_init>
    2e7e:	f7ff fff9 	bl	2e74 <_system_dummy_init>
    2e82:	f7ff fff7 	bl	2e74 <_system_dummy_init>
    2e86:	f001 f91f 	bl	40c8 <_system_extint_init>
    2e8a:	f7ff fff3 	bl	2e74 <_system_dummy_init>
    2e8e:	bd08      	pop	{r3, pc}

00002e90 <gpio_irq>:
    2e90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2e92:	4646      	mov	r6, r8
    2e94:	464f      	mov	r7, r9
    2e96:	4b18      	ldr	r3, [pc, #96]	; (2ef8 <gpio_irq+0x68>)
    2e98:	b4c0      	push	{r6, r7}
    2e9a:	2400      	movs	r4, #0
    2e9c:	2601      	movs	r6, #1
    2e9e:	4698      	mov	r8, r3
    2ea0:	4d16      	ldr	r5, [pc, #88]	; (2efc <gpio_irq+0x6c>)
    2ea2:	4f17      	ldr	r7, [pc, #92]	; (2f00 <gpio_irq+0x70>)
    2ea4:	1c32      	adds	r2, r6, #0
    2ea6:	40a2      	lsls	r2, r4
    2ea8:	4b16      	ldr	r3, [pc, #88]	; (2f04 <gpio_irq+0x74>)
    2eaa:	6919      	ldr	r1, [r3, #16]
    2eac:	4211      	tst	r1, r2
    2eae:	d01a      	beq.n	2ee6 <gpio_irq+0x56>
    2eb0:	611a      	str	r2, [r3, #16]
    2eb2:	4643      	mov	r3, r8
    2eb4:	2200      	movs	r2, #0
    2eb6:	5ce0      	ldrb	r0, [r4, r3]
    2eb8:	4691      	mov	r9, r2
    2eba:	09c3      	lsrs	r3, r0, #7
    2ebc:	d104      	bne.n	2ec8 <gpio_irq+0x38>
    2ebe:	4a12      	ldr	r2, [pc, #72]	; (2f08 <gpio_irq+0x78>)
    2ec0:	0943      	lsrs	r3, r0, #5
    2ec2:	4691      	mov	r9, r2
    2ec4:	01db      	lsls	r3, r3, #7
    2ec6:	4499      	add	r9, r3
    2ec8:	b240      	sxtb	r0, r0
    2eca:	f001 fbfd 	bl	46c8 <gpio_set>
    2ece:	464b      	mov	r3, r9
    2ed0:	6a19      	ldr	r1, [r3, #32]
    2ed2:	683b      	ldr	r3, [r7, #0]
    2ed4:	4008      	ands	r0, r1
    2ed6:	1e41      	subs	r1, r0, #1
    2ed8:	4188      	sbcs	r0, r1
    2eda:	2102      	movs	r1, #2
    2edc:	1a09      	subs	r1, r1, r0
    2ede:	2b00      	cmp	r3, #0
    2ee0:	d001      	beq.n	2ee6 <gpio_irq+0x56>
    2ee2:	6828      	ldr	r0, [r5, #0]
    2ee4:	4798      	blx	r3
    2ee6:	3401      	adds	r4, #1
    2ee8:	3504      	adds	r5, #4
    2eea:	2c10      	cmp	r4, #16
    2eec:	d1da      	bne.n	2ea4 <gpio_irq+0x14>
    2eee:	bc0c      	pop	{r2, r3}
    2ef0:	4690      	mov	r8, r2
    2ef2:	4699      	mov	r9, r3
    2ef4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2ef6:	46c0      	nop			; (mov r8, r8)
    2ef8:	200000c0 	.word	0x200000c0
    2efc:	20003f18 	.word	0x20003f18
    2f00:	20003f14 	.word	0x20003f14
    2f04:	40001800 	.word	0x40001800
    2f08:	41004400 	.word	0x41004400

00002f0c <gpio_irq_init>:
    2f0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2f0e:	464f      	mov	r7, r9
    2f10:	4646      	mov	r6, r8
    2f12:	1c04      	adds	r4, r0, #0
    2f14:	b4c0      	push	{r6, r7}
    2f16:	1c15      	adds	r5, r2, #0
    2f18:	1c0e      	adds	r6, r1, #0
    2f1a:	4699      	mov	r9, r3
    2f1c:	2800      	cmp	r0, #0
    2f1e:	d032      	beq.n	2f86 <gpio_irq_init+0x7a>
    2f20:	1c73      	adds	r3, r6, #1
    2f22:	d02d      	beq.n	2f80 <gpio_irq_init+0x74>
    2f24:	4b1b      	ldr	r3, [pc, #108]	; (2f94 <gpio_irq_init+0x88>)
    2f26:	60a6      	str	r6, [r4, #8]
    2f28:	601d      	str	r5, [r3, #0]
    2f2a:	2310      	movs	r3, #16
    2f2c:	4698      	mov	r8, r3
    2f2e:	44a0      	add	r8, r4
    2f30:	4640      	mov	r0, r8
    2f32:	f001 f8f9 	bl	4128 <extint_chan_get_config_defaults>
    2f36:	2700      	movs	r7, #0
    2f38:	2301      	movs	r3, #1
    2f3a:	6126      	str	r6, [r4, #16]
    2f3c:	6167      	str	r7, [r4, #20]
    2f3e:	7623      	strb	r3, [r4, #24]
    2f40:	76e7      	strb	r7, [r4, #27]
    2f42:	1c30      	adds	r0, r6, #0
    2f44:	4914      	ldr	r1, [pc, #80]	; (2f98 <gpio_irq_init+0x8c>)
    2f46:	f001 f863 	bl	4010 <pinmap_find_peripheral>
    2f4a:	1c05      	adds	r5, r0, #0
    2f4c:	1c43      	adds	r3, r0, #1
    2f4e:	d017      	beq.n	2f80 <gpio_irq_init+0x74>
    2f50:	b2c0      	uxtb	r0, r0
    2f52:	4641      	mov	r1, r8
    2f54:	f001 f8f2 	bl	413c <extint_chan_set_config>
    2f58:	4b10      	ldr	r3, [pc, #64]	; (2f9c <gpio_irq_init+0x90>)
    2f5a:	2004      	movs	r0, #4
    2f5c:	4910      	ldr	r1, [pc, #64]	; (2fa0 <gpio_irq_init+0x94>)
    2f5e:	555e      	strb	r6, [r3, r5]
    2f60:	f7ff fc86 	bl	2870 <NVIC_SetVector>
    2f64:	2210      	movs	r2, #16
    2f66:	4b0f      	ldr	r3, [pc, #60]	; (2fa4 <gpio_irq_init+0x98>)
    2f68:	2000      	movs	r0, #0
    2f6a:	601a      	str	r2, [r3, #0]
    2f6c:	464a      	mov	r2, r9
    2f6e:	4b0e      	ldr	r3, [pc, #56]	; (2fa8 <gpio_irq_init+0x9c>)
    2f70:	60e5      	str	r5, [r4, #12]
    2f72:	00ad      	lsls	r5, r5, #2
    2f74:	50ea      	str	r2, [r5, r3]
    2f76:	7027      	strb	r7, [r4, #0]
    2f78:	bc0c      	pop	{r2, r3}
    2f7a:	4690      	mov	r8, r2
    2f7c:	4699      	mov	r9, r3
    2f7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2f80:	2001      	movs	r0, #1
    2f82:	4240      	negs	r0, r0
    2f84:	e7f8      	b.n	2f78 <gpio_irq_init+0x6c>
    2f86:	4809      	ldr	r0, [pc, #36]	; (2fac <gpio_irq_init+0xa0>)
    2f88:	4909      	ldr	r1, [pc, #36]	; (2fb0 <gpio_irq_init+0xa4>)
    2f8a:	223d      	movs	r2, #61	; 0x3d
    2f8c:	f000 fffc 	bl	3f88 <mbed_assert_internal>
    2f90:	e7c6      	b.n	2f20 <gpio_irq_init+0x14>
    2f92:	46c0      	nop			; (mov r8, r8)
    2f94:	20003f14 	.word	0x20003f14
    2f98:	0000db4c 	.word	0x0000db4c
    2f9c:	200000c0 	.word	0x200000c0
    2fa0:	00002e91 	.word	0x00002e91
    2fa4:	e000e100 	.word	0xe000e100
    2fa8:	20003f18 	.word	0x20003f18
    2fac:	0000d434 	.word	0x0000d434
    2fb0:	0000d438 	.word	0x0000d438

00002fb4 <gpio_irq_free>:
    2fb4:	b510      	push	{r4, lr}
    2fb6:	1e04      	subs	r4, r0, #0
    2fb8:	d00e      	beq.n	2fd8 <gpio_irq_free+0x24>
    2fba:	68e3      	ldr	r3, [r4, #12]
    2fbc:	2200      	movs	r2, #0
    2fbe:	b2d9      	uxtb	r1, r3
    2fc0:	291f      	cmp	r1, #31
    2fc2:	d800      	bhi.n	2fc6 <gpio_irq_free+0x12>
    2fc4:	4a07      	ldr	r2, [pc, #28]	; (2fe4 <gpio_irq_free+0x30>)
    2fc6:	2000      	movs	r0, #0
    2fc8:	4907      	ldr	r1, [pc, #28]	; (2fe8 <gpio_irq_free+0x34>)
    2fca:	009b      	lsls	r3, r3, #2
    2fcc:	5058      	str	r0, [r3, r1]
    2fce:	2301      	movs	r3, #1
    2fd0:	68e1      	ldr	r1, [r4, #12]
    2fd2:	408b      	lsls	r3, r1
    2fd4:	6093      	str	r3, [r2, #8]
    2fd6:	bd10      	pop	{r4, pc}
    2fd8:	4804      	ldr	r0, [pc, #16]	; (2fec <gpio_irq_free+0x38>)
    2fda:	4905      	ldr	r1, [pc, #20]	; (2ff0 <gpio_irq_free+0x3c>)
    2fdc:	2262      	movs	r2, #98	; 0x62
    2fde:	f000 ffd3 	bl	3f88 <mbed_assert_internal>
    2fe2:	e7ea      	b.n	2fba <gpio_irq_free+0x6>
    2fe4:	40001800 	.word	0x40001800
    2fe8:	20003f18 	.word	0x20003f18
    2fec:	0000d434 	.word	0x0000d434
    2ff0:	0000d438 	.word	0x0000d438

00002ff4 <gpio_irq_set>:
    2ff4:	b570      	push	{r4, r5, r6, lr}
    2ff6:	1c04      	adds	r4, r0, #0
    2ff8:	1c0d      	adds	r5, r1, #0
    2ffa:	1c16      	adds	r6, r2, #0
    2ffc:	2800      	cmp	r0, #0
    2ffe:	d038      	beq.n	3072 <gpio_irq_set+0x7e>
    3000:	68e0      	ldr	r0, [r4, #12]
    3002:	2200      	movs	r2, #0
    3004:	b2c3      	uxtb	r3, r0
    3006:	2b1f      	cmp	r3, #31
    3008:	d800      	bhi.n	300c <gpio_irq_set+0x18>
    300a:	4a1d      	ldr	r2, [pc, #116]	; (3080 <gpio_irq_set+0x8c>)
    300c:	2e00      	cmp	r6, #0
    300e:	d00c      	beq.n	302a <gpio_irq_set+0x36>
    3010:	2d01      	cmp	r5, #1
    3012:	d024      	beq.n	305e <gpio_irq_set+0x6a>
    3014:	2d02      	cmp	r5, #2
    3016:	d027      	beq.n	3068 <gpio_irq_set+0x74>
    3018:	2301      	movs	r3, #1
    301a:	4083      	lsls	r3, r0
    301c:	60d3      	str	r3, [r2, #12]
    301e:	7823      	ldrb	r3, [r4, #0]
    3020:	68e0      	ldr	r0, [r4, #12]
    3022:	2b03      	cmp	r3, #3
    3024:	d108      	bne.n	3038 <gpio_irq_set+0x44>
    3026:	76e3      	strb	r3, [r4, #27]
    3028:	e010      	b.n	304c <gpio_irq_set+0x58>
    302a:	7823      	ldrb	r3, [r4, #0]
    302c:	2d01      	cmp	r5, #1
    302e:	d013      	beq.n	3058 <gpio_irq_set+0x64>
    3030:	2d02      	cmp	r5, #2
    3032:	d011      	beq.n	3058 <gpio_irq_set+0x64>
    3034:	2b03      	cmp	r3, #3
    3036:	d0f6      	beq.n	3026 <gpio_irq_set+0x32>
    3038:	2b01      	cmp	r3, #1
    303a:	d0f4      	beq.n	3026 <gpio_irq_set+0x32>
    303c:	2b02      	cmp	r3, #2
    303e:	d0f2      	beq.n	3026 <gpio_irq_set+0x32>
    3040:	2300      	movs	r3, #0
    3042:	76e3      	strb	r3, [r4, #27]
    3044:	3301      	adds	r3, #1
    3046:	4083      	lsls	r3, r0
    3048:	6093      	str	r3, [r2, #8]
    304a:	68e0      	ldr	r0, [r4, #12]
    304c:	1c21      	adds	r1, r4, #0
    304e:	b2c0      	uxtb	r0, r0
    3050:	3110      	adds	r1, #16
    3052:	f001 f873 	bl	413c <extint_chan_set_config>
    3056:	bd70      	pop	{r4, r5, r6, pc}
    3058:	43ab      	bics	r3, r5
    305a:	7023      	strb	r3, [r4, #0]
    305c:	e7ea      	b.n	3034 <gpio_irq_set+0x40>
    305e:	2301      	movs	r3, #1
    3060:	7821      	ldrb	r1, [r4, #0]
    3062:	430b      	orrs	r3, r1
    3064:	7023      	strb	r3, [r4, #0]
    3066:	e7d7      	b.n	3018 <gpio_irq_set+0x24>
    3068:	2302      	movs	r3, #2
    306a:	7821      	ldrb	r1, [r4, #0]
    306c:	430b      	orrs	r3, r1
    306e:	7023      	strb	r3, [r4, #0]
    3070:	e7d2      	b.n	3018 <gpio_irq_set+0x24>
    3072:	4804      	ldr	r0, [pc, #16]	; (3084 <gpio_irq_set+0x90>)
    3074:	4904      	ldr	r1, [pc, #16]	; (3088 <gpio_irq_set+0x94>)
    3076:	226a      	movs	r2, #106	; 0x6a
    3078:	f000 ff86 	bl	3f88 <mbed_assert_internal>
    307c:	e7c0      	b.n	3000 <gpio_irq_set+0xc>
    307e:	46c0      	nop			; (mov r8, r8)
    3080:	40001800 	.word	0x40001800
    3084:	0000d434 	.word	0x0000d434
    3088:	0000d438 	.word	0x0000d438

0000308c <cpu_irq_enter_critical>:
    308c:	4b0b      	ldr	r3, [pc, #44]	; (30bc <cpu_irq_enter_critical+0x30>)
    308e:	681a      	ldr	r2, [r3, #0]
    3090:	2a00      	cmp	r2, #0
    3092:	d105      	bne.n	30a0 <cpu_irq_enter_critical+0x14>
    3094:	f3ef 8110 	mrs	r1, PRIMASK
    3098:	2900      	cmp	r1, #0
    309a:	d005      	beq.n	30a8 <cpu_irq_enter_critical+0x1c>
    309c:	4908      	ldr	r1, [pc, #32]	; (30c0 <cpu_irq_enter_critical+0x34>)
    309e:	700a      	strb	r2, [r1, #0]
    30a0:	681a      	ldr	r2, [r3, #0]
    30a2:	3201      	adds	r2, #1
    30a4:	601a      	str	r2, [r3, #0]
    30a6:	4770      	bx	lr
    30a8:	b672      	cpsid	i
    30aa:	f3bf 8f5f 	dmb	sy
    30ae:	4a05      	ldr	r2, [pc, #20]	; (30c4 <cpu_irq_enter_critical+0x38>)
    30b0:	7011      	strb	r1, [r2, #0]
    30b2:	4a03      	ldr	r2, [pc, #12]	; (30c0 <cpu_irq_enter_critical+0x34>)
    30b4:	3101      	adds	r1, #1
    30b6:	7011      	strb	r1, [r2, #0]
    30b8:	e7f2      	b.n	30a0 <cpu_irq_enter_critical+0x14>
    30ba:	46c0      	nop			; (mov r8, r8)
    30bc:	20003f58 	.word	0x20003f58
    30c0:	20003f5c 	.word	0x20003f5c
    30c4:	200000d0 	.word	0x200000d0

000030c8 <cpu_irq_leave_critical>:
    30c8:	4b08      	ldr	r3, [pc, #32]	; (30ec <cpu_irq_leave_critical+0x24>)
    30ca:	681a      	ldr	r2, [r3, #0]
    30cc:	3a01      	subs	r2, #1
    30ce:	601a      	str	r2, [r3, #0]
    30d0:	681b      	ldr	r3, [r3, #0]
    30d2:	2b00      	cmp	r3, #0
    30d4:	d109      	bne.n	30ea <cpu_irq_leave_critical+0x22>
    30d6:	4b06      	ldr	r3, [pc, #24]	; (30f0 <cpu_irq_leave_critical+0x28>)
    30d8:	781b      	ldrb	r3, [r3, #0]
    30da:	2b00      	cmp	r3, #0
    30dc:	d005      	beq.n	30ea <cpu_irq_leave_critical+0x22>
    30de:	2201      	movs	r2, #1
    30e0:	4b04      	ldr	r3, [pc, #16]	; (30f4 <cpu_irq_leave_critical+0x2c>)
    30e2:	701a      	strb	r2, [r3, #0]
    30e4:	f3bf 8f5f 	dmb	sy
    30e8:	b662      	cpsie	i
    30ea:	4770      	bx	lr
    30ec:	20003f58 	.word	0x20003f58
    30f0:	20003f5c 	.word	0x20003f5c
    30f4:	200000d0 	.word	0x200000d0

000030f8 <uart1_irq>:
    30f8:	b538      	push	{r3, r4, r5, lr}
    30fa:	4a10      	ldr	r2, [pc, #64]	; (313c <uart1_irq+0x44>)
    30fc:	4d10      	ldr	r5, [pc, #64]	; (3140 <uart1_irq+0x48>)
    30fe:	7e14      	ldrb	r4, [r2, #24]
    3100:	6868      	ldr	r0, [r5, #4]
    3102:	7d93      	ldrb	r3, [r2, #22]
    3104:	b2e4      	uxtb	r4, r4
    3106:	b2db      	uxtb	r3, r3
    3108:	2800      	cmp	r0, #0
    310a:	d016      	beq.n	313a <uart1_irq+0x42>
    310c:	401c      	ands	r4, r3
    310e:	2302      	movs	r3, #2
    3110:	4223      	tst	r3, r4
    3112:	d006      	beq.n	3122 <uart1_irq+0x2a>
    3114:	7613      	strb	r3, [r2, #24]
    3116:	4b0b      	ldr	r3, [pc, #44]	; (3144 <uart1_irq+0x4c>)
    3118:	681b      	ldr	r3, [r3, #0]
    311a:	2b00      	cmp	r3, #0
    311c:	d001      	beq.n	3122 <uart1_irq+0x2a>
    311e:	2101      	movs	r1, #1
    3120:	4798      	blx	r3
    3122:	2304      	movs	r3, #4
    3124:	4223      	tst	r3, r4
    3126:	d008      	beq.n	313a <uart1_irq+0x42>
    3128:	4a04      	ldr	r2, [pc, #16]	; (313c <uart1_irq+0x44>)
    312a:	7613      	strb	r3, [r2, #24]
    312c:	4b05      	ldr	r3, [pc, #20]	; (3144 <uart1_irq+0x4c>)
    312e:	681b      	ldr	r3, [r3, #0]
    3130:	2b00      	cmp	r3, #0
    3132:	d002      	beq.n	313a <uart1_irq+0x42>
    3134:	6868      	ldr	r0, [r5, #4]
    3136:	2100      	movs	r1, #0
    3138:	4798      	blx	r3
    313a:	bd38      	pop	{r3, r4, r5, pc}
    313c:	42000c00 	.word	0x42000c00
    3140:	20003f64 	.word	0x20003f64
    3144:	20003f7c 	.word	0x20003f7c

00003148 <uart4_irq>:
    3148:	b538      	push	{r3, r4, r5, lr}
    314a:	4a10      	ldr	r2, [pc, #64]	; (318c <uart4_irq+0x44>)
    314c:	4d10      	ldr	r5, [pc, #64]	; (3190 <uart4_irq+0x48>)
    314e:	7e14      	ldrb	r4, [r2, #24]
    3150:	6928      	ldr	r0, [r5, #16]
    3152:	7d93      	ldrb	r3, [r2, #22]
    3154:	b2e4      	uxtb	r4, r4
    3156:	b2db      	uxtb	r3, r3
    3158:	2800      	cmp	r0, #0
    315a:	d016      	beq.n	318a <uart4_irq+0x42>
    315c:	401c      	ands	r4, r3
    315e:	2302      	movs	r3, #2
    3160:	4223      	tst	r3, r4
    3162:	d006      	beq.n	3172 <uart4_irq+0x2a>
    3164:	7613      	strb	r3, [r2, #24]
    3166:	4b0b      	ldr	r3, [pc, #44]	; (3194 <uart4_irq+0x4c>)
    3168:	681b      	ldr	r3, [r3, #0]
    316a:	2b00      	cmp	r3, #0
    316c:	d001      	beq.n	3172 <uart4_irq+0x2a>
    316e:	2101      	movs	r1, #1
    3170:	4798      	blx	r3
    3172:	2304      	movs	r3, #4
    3174:	4223      	tst	r3, r4
    3176:	d008      	beq.n	318a <uart4_irq+0x42>
    3178:	4a04      	ldr	r2, [pc, #16]	; (318c <uart4_irq+0x44>)
    317a:	7613      	strb	r3, [r2, #24]
    317c:	4b05      	ldr	r3, [pc, #20]	; (3194 <uart4_irq+0x4c>)
    317e:	681b      	ldr	r3, [r3, #0]
    3180:	2b00      	cmp	r3, #0
    3182:	d002      	beq.n	318a <uart4_irq+0x42>
    3184:	6928      	ldr	r0, [r5, #16]
    3186:	2100      	movs	r1, #0
    3188:	4798      	blx	r3
    318a:	bd38      	pop	{r3, r4, r5, pc}
    318c:	42001800 	.word	0x42001800
    3190:	20003f64 	.word	0x20003f64
    3194:	20003f7c 	.word	0x20003f7c

00003198 <uart0_irq>:
    3198:	b538      	push	{r3, r4, r5, lr}
    319a:	4a10      	ldr	r2, [pc, #64]	; (31dc <uart0_irq+0x44>)
    319c:	4d10      	ldr	r5, [pc, #64]	; (31e0 <uart0_irq+0x48>)
    319e:	7e14      	ldrb	r4, [r2, #24]
    31a0:	6828      	ldr	r0, [r5, #0]
    31a2:	7d93      	ldrb	r3, [r2, #22]
    31a4:	b2e4      	uxtb	r4, r4
    31a6:	b2db      	uxtb	r3, r3
    31a8:	2800      	cmp	r0, #0
    31aa:	d016      	beq.n	31da <uart0_irq+0x42>
    31ac:	401c      	ands	r4, r3
    31ae:	2302      	movs	r3, #2
    31b0:	4223      	tst	r3, r4
    31b2:	d006      	beq.n	31c2 <uart0_irq+0x2a>
    31b4:	7613      	strb	r3, [r2, #24]
    31b6:	4b0b      	ldr	r3, [pc, #44]	; (31e4 <uart0_irq+0x4c>)
    31b8:	681b      	ldr	r3, [r3, #0]
    31ba:	2b00      	cmp	r3, #0
    31bc:	d001      	beq.n	31c2 <uart0_irq+0x2a>
    31be:	2101      	movs	r1, #1
    31c0:	4798      	blx	r3
    31c2:	2304      	movs	r3, #4
    31c4:	4223      	tst	r3, r4
    31c6:	d008      	beq.n	31da <uart0_irq+0x42>
    31c8:	4a04      	ldr	r2, [pc, #16]	; (31dc <uart0_irq+0x44>)
    31ca:	7613      	strb	r3, [r2, #24]
    31cc:	4b05      	ldr	r3, [pc, #20]	; (31e4 <uart0_irq+0x4c>)
    31ce:	681b      	ldr	r3, [r3, #0]
    31d0:	2b00      	cmp	r3, #0
    31d2:	d002      	beq.n	31da <uart0_irq+0x42>
    31d4:	6828      	ldr	r0, [r5, #0]
    31d6:	2100      	movs	r1, #0
    31d8:	4798      	blx	r3
    31da:	bd38      	pop	{r3, r4, r5, pc}
    31dc:	42000800 	.word	0x42000800
    31e0:	20003f64 	.word	0x20003f64
    31e4:	20003f7c 	.word	0x20003f7c

000031e8 <uart5_irq>:
    31e8:	b538      	push	{r3, r4, r5, lr}
    31ea:	4a10      	ldr	r2, [pc, #64]	; (322c <uart5_irq+0x44>)
    31ec:	4d10      	ldr	r5, [pc, #64]	; (3230 <uart5_irq+0x48>)
    31ee:	7e14      	ldrb	r4, [r2, #24]
    31f0:	6968      	ldr	r0, [r5, #20]
    31f2:	7d93      	ldrb	r3, [r2, #22]
    31f4:	b2e4      	uxtb	r4, r4
    31f6:	b2db      	uxtb	r3, r3
    31f8:	2800      	cmp	r0, #0
    31fa:	d016      	beq.n	322a <uart5_irq+0x42>
    31fc:	401c      	ands	r4, r3
    31fe:	2302      	movs	r3, #2
    3200:	4223      	tst	r3, r4
    3202:	d006      	beq.n	3212 <uart5_irq+0x2a>
    3204:	7613      	strb	r3, [r2, #24]
    3206:	4b0b      	ldr	r3, [pc, #44]	; (3234 <uart5_irq+0x4c>)
    3208:	681b      	ldr	r3, [r3, #0]
    320a:	2b00      	cmp	r3, #0
    320c:	d001      	beq.n	3212 <uart5_irq+0x2a>
    320e:	2101      	movs	r1, #1
    3210:	4798      	blx	r3
    3212:	2304      	movs	r3, #4
    3214:	4223      	tst	r3, r4
    3216:	d008      	beq.n	322a <uart5_irq+0x42>
    3218:	4a04      	ldr	r2, [pc, #16]	; (322c <uart5_irq+0x44>)
    321a:	7613      	strb	r3, [r2, #24]
    321c:	4b05      	ldr	r3, [pc, #20]	; (3234 <uart5_irq+0x4c>)
    321e:	681b      	ldr	r3, [r3, #0]
    3220:	2b00      	cmp	r3, #0
    3222:	d002      	beq.n	322a <uart5_irq+0x42>
    3224:	6968      	ldr	r0, [r5, #20]
    3226:	2100      	movs	r1, #0
    3228:	4798      	blx	r3
    322a:	bd38      	pop	{r3, r4, r5, pc}
    322c:	42001c00 	.word	0x42001c00
    3230:	20003f64 	.word	0x20003f64
    3234:	20003f7c 	.word	0x20003f7c

00003238 <uart2_irq>:
    3238:	b538      	push	{r3, r4, r5, lr}
    323a:	4a10      	ldr	r2, [pc, #64]	; (327c <uart2_irq+0x44>)
    323c:	4d10      	ldr	r5, [pc, #64]	; (3280 <uart2_irq+0x48>)
    323e:	7e14      	ldrb	r4, [r2, #24]
    3240:	68a8      	ldr	r0, [r5, #8]
    3242:	7d93      	ldrb	r3, [r2, #22]
    3244:	b2e4      	uxtb	r4, r4
    3246:	b2db      	uxtb	r3, r3
    3248:	2800      	cmp	r0, #0
    324a:	d016      	beq.n	327a <uart2_irq+0x42>
    324c:	401c      	ands	r4, r3
    324e:	2302      	movs	r3, #2
    3250:	4223      	tst	r3, r4
    3252:	d006      	beq.n	3262 <uart2_irq+0x2a>
    3254:	7613      	strb	r3, [r2, #24]
    3256:	4b0b      	ldr	r3, [pc, #44]	; (3284 <uart2_irq+0x4c>)
    3258:	681b      	ldr	r3, [r3, #0]
    325a:	2b00      	cmp	r3, #0
    325c:	d001      	beq.n	3262 <uart2_irq+0x2a>
    325e:	2101      	movs	r1, #1
    3260:	4798      	blx	r3
    3262:	2304      	movs	r3, #4
    3264:	4223      	tst	r3, r4
    3266:	d008      	beq.n	327a <uart2_irq+0x42>
    3268:	4a04      	ldr	r2, [pc, #16]	; (327c <uart2_irq+0x44>)
    326a:	7613      	strb	r3, [r2, #24]
    326c:	4b05      	ldr	r3, [pc, #20]	; (3284 <uart2_irq+0x4c>)
    326e:	681b      	ldr	r3, [r3, #0]
    3270:	2b00      	cmp	r3, #0
    3272:	d002      	beq.n	327a <uart2_irq+0x42>
    3274:	68a8      	ldr	r0, [r5, #8]
    3276:	2100      	movs	r1, #0
    3278:	4798      	blx	r3
    327a:	bd38      	pop	{r3, r4, r5, pc}
    327c:	42001000 	.word	0x42001000
    3280:	20003f64 	.word	0x20003f64
    3284:	20003f7c 	.word	0x20003f7c

00003288 <uart3_irq>:
    3288:	b538      	push	{r3, r4, r5, lr}
    328a:	4a10      	ldr	r2, [pc, #64]	; (32cc <uart3_irq+0x44>)
    328c:	4d10      	ldr	r5, [pc, #64]	; (32d0 <uart3_irq+0x48>)
    328e:	7e14      	ldrb	r4, [r2, #24]
    3290:	68e8      	ldr	r0, [r5, #12]
    3292:	7d93      	ldrb	r3, [r2, #22]
    3294:	b2e4      	uxtb	r4, r4
    3296:	b2db      	uxtb	r3, r3
    3298:	2800      	cmp	r0, #0
    329a:	d016      	beq.n	32ca <uart3_irq+0x42>
    329c:	401c      	ands	r4, r3
    329e:	2302      	movs	r3, #2
    32a0:	4223      	tst	r3, r4
    32a2:	d006      	beq.n	32b2 <uart3_irq+0x2a>
    32a4:	7613      	strb	r3, [r2, #24]
    32a6:	4b0b      	ldr	r3, [pc, #44]	; (32d4 <uart3_irq+0x4c>)
    32a8:	681b      	ldr	r3, [r3, #0]
    32aa:	2b00      	cmp	r3, #0
    32ac:	d001      	beq.n	32b2 <uart3_irq+0x2a>
    32ae:	2101      	movs	r1, #1
    32b0:	4798      	blx	r3
    32b2:	2304      	movs	r3, #4
    32b4:	4223      	tst	r3, r4
    32b6:	d008      	beq.n	32ca <uart3_irq+0x42>
    32b8:	4a04      	ldr	r2, [pc, #16]	; (32cc <uart3_irq+0x44>)
    32ba:	7613      	strb	r3, [r2, #24]
    32bc:	4b05      	ldr	r3, [pc, #20]	; (32d4 <uart3_irq+0x4c>)
    32be:	681b      	ldr	r3, [r3, #0]
    32c0:	2b00      	cmp	r3, #0
    32c2:	d002      	beq.n	32ca <uart3_irq+0x42>
    32c4:	68e8      	ldr	r0, [r5, #12]
    32c6:	2100      	movs	r1, #0
    32c8:	4798      	blx	r3
    32ca:	bd38      	pop	{r3, r4, r5, pc}
    32cc:	42001400 	.word	0x42001400
    32d0:	20003f64 	.word	0x20003f64
    32d4:	20003f7c 	.word	0x20003f7c

000032d8 <usart_set_config_default>:
    32d8:	b5f0      	push	{r4, r5, r6, r7, lr}
    32da:	464f      	mov	r7, r9
    32dc:	4646      	mov	r6, r8
    32de:	b4c0      	push	{r6, r7}
    32e0:	1c04      	adds	r4, r0, #0
    32e2:	b085      	sub	sp, #20
    32e4:	2800      	cmp	r0, #0
    32e6:	d05c      	beq.n	33a2 <usart_set_config_default+0xca>
    32e8:	6800      	ldr	r0, [r0, #0]
    32ea:	f001 f85d 	bl	43a8 <_sercom_get_sercom_inst_index>
    32ee:	250e      	movs	r5, #14
    32f0:	2300      	movs	r3, #0
    32f2:	3014      	adds	r0, #20
    32f4:	446d      	add	r5, sp
    32f6:	b2c0      	uxtb	r0, r0
    32f8:	802b      	strh	r3, [r5, #0]
    32fa:	69a7      	ldr	r7, [r4, #24]
    32fc:	6966      	ldr	r6, [r4, #20]
    32fe:	f7ff fda5 	bl	2e4c <system_gclk_chan_get_hz>
    3302:	2310      	movs	r3, #16
    3304:	1c01      	adds	r1, r0, #0
    3306:	9300      	str	r3, [sp, #0]
    3308:	1c38      	adds	r0, r7, #0
    330a:	1c2a      	adds	r2, r5, #0
    330c:	2300      	movs	r3, #0
    330e:	f000 ff63 	bl	41d8 <_sercom_get_async_baud_val>
    3312:	6822      	ldr	r2, [r4, #0]
    3314:	69d3      	ldr	r3, [r2, #28]
    3316:	2b00      	cmp	r3, #0
    3318:	d1fc      	bne.n	3314 <usart_set_config_default+0x3c>
    331a:	882b      	ldrh	r3, [r5, #0]
    331c:	8193      	strh	r3, [r2, #12]
    331e:	68e2      	ldr	r2, [r4, #12]
    3320:	6923      	ldr	r3, [r4, #16]
    3322:	4313      	orrs	r3, r2
    3324:	221d      	movs	r2, #29
    3326:	56a2      	ldrsb	r2, [r4, r2]
    3328:	3201      	adds	r2, #1
    332a:	d028      	beq.n	337e <usart_set_config_default+0xa6>
    332c:	25c0      	movs	r5, #192	; 0xc0
    332e:	02ad      	lsls	r5, r5, #10
    3330:	431d      	orrs	r5, r3
    3332:	231c      	movs	r3, #28
    3334:	56e3      	ldrsb	r3, [r4, r3]
    3336:	3301      	adds	r3, #1
    3338:	d019      	beq.n	336e <usart_set_config_default+0x96>
    333a:	68a2      	ldr	r2, [r4, #8]
    333c:	2aff      	cmp	r2, #255	; 0xff
    333e:	d01b      	beq.n	3378 <usart_set_config_default+0xa0>
    3340:	4b29      	ldr	r3, [pc, #164]	; (33e8 <usart_set_config_default+0x110>)
    3342:	4315      	orrs	r5, r2
    3344:	431e      	orrs	r6, r3
    3346:	2c00      	cmp	r4, #0
    3348:	d025      	beq.n	3396 <usart_set_config_default+0xbe>
    334a:	6822      	ldr	r2, [r4, #0]
    334c:	69d3      	ldr	r3, [r2, #28]
    334e:	2b00      	cmp	r3, #0
    3350:	d1fc      	bne.n	334c <usart_set_config_default+0x74>
    3352:	6055      	str	r5, [r2, #4]
    3354:	2c00      	cmp	r4, #0
    3356:	d018      	beq.n	338a <usart_set_config_default+0xb2>
    3358:	6822      	ldr	r2, [r4, #0]
    335a:	69d3      	ldr	r3, [r2, #28]
    335c:	2b00      	cmp	r3, #0
    335e:	d1fc      	bne.n	335a <usart_set_config_default+0x82>
    3360:	2000      	movs	r0, #0
    3362:	6016      	str	r6, [r2, #0]
    3364:	b005      	add	sp, #20
    3366:	bc0c      	pop	{r2, r3}
    3368:	4690      	mov	r8, r2
    336a:	4699      	mov	r9, r3
    336c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    336e:	4b1f      	ldr	r3, [pc, #124]	; (33ec <usart_set_config_default+0x114>)
    3370:	68a2      	ldr	r2, [r4, #8]
    3372:	401d      	ands	r5, r3
    3374:	2aff      	cmp	r2, #255	; 0xff
    3376:	d1e3      	bne.n	3340 <usart_set_config_default+0x68>
    3378:	4b1d      	ldr	r3, [pc, #116]	; (33f0 <usart_set_config_default+0x118>)
    337a:	431e      	orrs	r6, r3
    337c:	e7e3      	b.n	3346 <usart_set_config_default+0x6e>
    337e:	4d1d      	ldr	r5, [pc, #116]	; (33f4 <usart_set_config_default+0x11c>)
    3380:	401d      	ands	r5, r3
    3382:	2380      	movs	r3, #128	; 0x80
    3384:	025b      	lsls	r3, r3, #9
    3386:	431d      	orrs	r5, r3
    3388:	e7d3      	b.n	3332 <usart_set_config_default+0x5a>
    338a:	481b      	ldr	r0, [pc, #108]	; (33f8 <usart_set_config_default+0x120>)
    338c:	491b      	ldr	r1, [pc, #108]	; (33fc <usart_set_config_default+0x124>)
    338e:	223f      	movs	r2, #63	; 0x3f
    3390:	f000 fdfa 	bl	3f88 <mbed_assert_internal>
    3394:	e7e0      	b.n	3358 <usart_set_config_default+0x80>
    3396:	4818      	ldr	r0, [pc, #96]	; (33f8 <usart_set_config_default+0x120>)
    3398:	4918      	ldr	r1, [pc, #96]	; (33fc <usart_set_config_default+0x124>)
    339a:	223f      	movs	r2, #63	; 0x3f
    339c:	f000 fdf4 	bl	3f88 <mbed_assert_internal>
    33a0:	e7d3      	b.n	334a <usart_set_config_default+0x72>
    33a2:	4b15      	ldr	r3, [pc, #84]	; (33f8 <usart_set_config_default+0x120>)
    33a4:	4f15      	ldr	r7, [pc, #84]	; (33fc <usart_set_config_default+0x124>)
    33a6:	1c18      	adds	r0, r3, #0
    33a8:	1c39      	adds	r1, r7, #0
    33aa:	229c      	movs	r2, #156	; 0x9c
    33ac:	4698      	mov	r8, r3
    33ae:	f000 fdeb 	bl	3f88 <mbed_assert_internal>
    33b2:	6820      	ldr	r0, [r4, #0]
    33b4:	f000 fff8 	bl	43a8 <_sercom_get_sercom_inst_index>
    33b8:	250e      	movs	r5, #14
    33ba:	69a3      	ldr	r3, [r4, #24]
    33bc:	3014      	adds	r0, #20
    33be:	446d      	add	r5, sp
    33c0:	b2c0      	uxtb	r0, r0
    33c2:	4699      	mov	r9, r3
    33c4:	802c      	strh	r4, [r5, #0]
    33c6:	6966      	ldr	r6, [r4, #20]
    33c8:	f7ff fd40 	bl	2e4c <system_gclk_chan_get_hz>
    33cc:	2310      	movs	r3, #16
    33ce:	1c01      	adds	r1, r0, #0
    33d0:	9300      	str	r3, [sp, #0]
    33d2:	1c2a      	adds	r2, r5, #0
    33d4:	4648      	mov	r0, r9
    33d6:	2300      	movs	r3, #0
    33d8:	f000 fefe 	bl	41d8 <_sercom_get_async_baud_val>
    33dc:	4640      	mov	r0, r8
    33de:	1c39      	adds	r1, r7, #0
    33e0:	223f      	movs	r2, #63	; 0x3f
    33e2:	f000 fdd1 	bl	3f88 <mbed_assert_internal>
    33e6:	e794      	b.n	3312 <usart_set_config_default+0x3a>
    33e8:	41000004 	.word	0x41000004
    33ec:	fffeffff 	.word	0xfffeffff
    33f0:	40000004 	.word	0x40000004
    33f4:	fffdffff 	.word	0xfffdffff
    33f8:	0000d434 	.word	0x0000d434
    33fc:	0000d4b0 	.word	0x0000d4b0

00003400 <serial_find_mux_settings>:
    3400:	b570      	push	{r4, r5, r6, lr}
    3402:	1c05      	adds	r5, r0, #0
    3404:	b086      	sub	sp, #24
    3406:	2800      	cmp	r0, #0
    3408:	d03c      	beq.n	3484 <serial_find_mux_settings+0x84>
    340a:	201c      	movs	r0, #28
    340c:	211d      	movs	r1, #29
    340e:	2300      	movs	r3, #0
    3410:	5628      	ldrsb	r0, [r5, r0]
    3412:	5669      	ldrsb	r1, [r5, r1]
    3414:	9302      	str	r3, [sp, #8]
    3416:	9303      	str	r3, [sp, #12]
    3418:	9304      	str	r3, [sp, #16]
    341a:	9305      	str	r3, [sp, #20]
    341c:	f001 faa0 	bl	4960 <pinmap_merge_sercom>
    3420:	2400      	movs	r4, #0
    3422:	1c06      	adds	r6, r0, #0
    3424:	201c      	movs	r0, #28
    3426:	192b      	adds	r3, r5, r4
    3428:	5618      	ldrsb	r0, [r3, r0]
    342a:	1c31      	adds	r1, r6, #0
    342c:	f001 fb28 	bl	4a80 <pinmap_pad_sercom>
    3430:	00a3      	lsls	r3, r4, #2
    3432:	aa02      	add	r2, sp, #8
    3434:	3401      	adds	r4, #1
    3436:	50d0      	str	r0, [r2, r3]
    3438:	2c04      	cmp	r4, #4
    343a:	d1f3      	bne.n	3424 <serial_find_mux_settings+0x24>
    343c:	9b03      	ldr	r3, [sp, #12]
    343e:	2000      	movs	r0, #0
    3440:	9301      	str	r3, [sp, #4]
    3442:	3b01      	subs	r3, #1
    3444:	2b02      	cmp	r3, #2
    3446:	d802      	bhi.n	344e <serial_find_mux_settings+0x4e>
    3448:	4a11      	ldr	r2, [pc, #68]	; (3490 <serial_find_mux_settings+0x90>)
    344a:	009b      	lsls	r3, r3, #2
    344c:	5898      	ldr	r0, [r3, r2]
    344e:	221e      	movs	r2, #30
    3450:	5eab      	ldrsh	r3, [r5, r2]
    3452:	3301      	adds	r3, #1
    3454:	d008      	beq.n	3468 <serial_find_mux_settings+0x68>
    3456:	9b02      	ldr	r3, [sp, #8]
    3458:	2b00      	cmp	r3, #0
    345a:	d103      	bne.n	3464 <serial_find_mux_settings+0x64>
    345c:	9b04      	ldr	r3, [sp, #16]
    345e:	9301      	str	r3, [sp, #4]
    3460:	2b02      	cmp	r3, #2
    3462:	d008      	beq.n	3476 <serial_find_mux_settings+0x76>
    3464:	b006      	add	sp, #24
    3466:	bd70      	pop	{r4, r5, r6, pc}
    3468:	9b02      	ldr	r3, [sp, #8]
    346a:	2b02      	cmp	r3, #2
    346c:	d1fa      	bne.n	3464 <serial_find_mux_settings+0x64>
    346e:	2380      	movs	r3, #128	; 0x80
    3470:	025b      	lsls	r3, r3, #9
    3472:	4318      	orrs	r0, r3
    3474:	e7f6      	b.n	3464 <serial_find_mux_settings+0x64>
    3476:	9b05      	ldr	r3, [sp, #20]
    3478:	2b03      	cmp	r3, #3
    347a:	d1f3      	bne.n	3464 <serial_find_mux_settings+0x64>
    347c:	2380      	movs	r3, #128	; 0x80
    347e:	029b      	lsls	r3, r3, #10
    3480:	4318      	orrs	r0, r3
    3482:	e7ef      	b.n	3464 <serial_find_mux_settings+0x64>
    3484:	4803      	ldr	r0, [pc, #12]	; (3494 <serial_find_mux_settings+0x94>)
    3486:	4904      	ldr	r1, [pc, #16]	; (3498 <serial_find_mux_settings+0x98>)
    3488:	2271      	movs	r2, #113	; 0x71
    348a:	f000 fd7d 	bl	3f88 <mbed_assert_internal>
    348e:	e7bc      	b.n	340a <serial_find_mux_settings+0xa>
    3490:	0000d4a4 	.word	0x0000d4a4
    3494:	0000d434 	.word	0x0000d434
    3498:	0000d4b0 	.word	0x0000d4b0

0000349c <get_default_serial_values>:
    349c:	b510      	push	{r4, lr}
    349e:	1e04      	subs	r4, r0, #0
    34a0:	d00b      	beq.n	34ba <get_default_serial_values+0x1e>
    34a2:	23ff      	movs	r3, #255	; 0xff
    34a4:	60a3      	str	r3, [r4, #8]
    34a6:	2300      	movs	r3, #0
    34a8:	60e3      	str	r3, [r4, #12]
    34aa:	6123      	str	r3, [r4, #16]
    34ac:	2396      	movs	r3, #150	; 0x96
    34ae:	019b      	lsls	r3, r3, #6
    34b0:	61a3      	str	r3, [r4, #24]
    34b2:	2388      	movs	r3, #136	; 0x88
    34b4:	035b      	lsls	r3, r3, #13
    34b6:	6163      	str	r3, [r4, #20]
    34b8:	bd10      	pop	{r4, pc}
    34ba:	4803      	ldr	r0, [pc, #12]	; (34c8 <get_default_serial_values+0x2c>)
    34bc:	4903      	ldr	r1, [pc, #12]	; (34cc <get_default_serial_values+0x30>)
    34be:	22e1      	movs	r2, #225	; 0xe1
    34c0:	f000 fd62 	bl	3f88 <mbed_assert_internal>
    34c4:	e7ed      	b.n	34a2 <get_default_serial_values+0x6>
    34c6:	46c0      	nop			; (mov r8, r8)
    34c8:	0000d434 	.word	0x0000d434
    34cc:	0000d4b0 	.word	0x0000d4b0

000034d0 <serial_init>:
    34d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    34d2:	464e      	mov	r6, r9
    34d4:	4645      	mov	r5, r8
    34d6:	4657      	mov	r7, sl
    34d8:	b4e0      	push	{r5, r6, r7}
    34da:	1c04      	adds	r4, r0, #0
    34dc:	b084      	sub	sp, #16
    34de:	1c0e      	adds	r6, r1, #0
    34e0:	1c15      	adds	r5, r2, #0
    34e2:	2800      	cmp	r0, #0
    34e4:	d100      	bne.n	34e8 <serial_init+0x18>
    34e6:	e09d      	b.n	3624 <serial_init+0x154>
    34e8:	4f60      	ldr	r7, [pc, #384]	; (366c <serial_init+0x19c>)
    34ea:	783b      	ldrb	r3, [r7, #0]
    34ec:	2b00      	cmp	r3, #0
    34ee:	d100      	bne.n	34f2 <serial_init+0x22>
    34f0:	e083      	b.n	35fa <serial_init+0x12a>
    34f2:	1c20      	adds	r0, r4, #0
    34f4:	f7ff ffd2 	bl	349c <get_default_serial_values>
    34f8:	23ff      	movs	r3, #255	; 0xff
    34fa:	7726      	strb	r6, [r4, #28]
    34fc:	77a3      	strb	r3, [r4, #30]
    34fe:	77e3      	strb	r3, [r4, #31]
    3500:	7765      	strb	r5, [r4, #29]
    3502:	1c20      	adds	r0, r4, #0
    3504:	f7ff ff7c 	bl	3400 <serial_find_mux_settings>
    3508:	1c29      	adds	r1, r5, #0
    350a:	1c07      	adds	r7, r0, #0
    350c:	1c30      	adds	r0, r6, #0
    350e:	f001 fa27 	bl	4960 <pinmap_merge_sercom>
    3512:	1c43      	adds	r3, r0, #1
    3514:	d017      	beq.n	3546 <serial_init+0x76>
    3516:	250f      	movs	r5, #15
    3518:	4005      	ands	r5, r0
    351a:	2001      	movs	r0, #1
    351c:	1c29      	adds	r1, r5, #0
    351e:	4240      	negs	r0, r0
    3520:	f001 fad0 	bl	4ac4 <pinmap_peripheral_sercom>
    3524:	1c06      	adds	r6, r0, #0
    3526:	1c02      	adds	r2, r0, #0
    3528:	6020      	str	r0, [r4, #0]
    352a:	2c00      	cmp	r4, #0
    352c:	d06a      	beq.n	3604 <serial_init+0x134>
    352e:	69d3      	ldr	r3, [r2, #28]
    3530:	2b00      	cmp	r3, #0
    3532:	d1fc      	bne.n	352e <serial_init+0x5e>
    3534:	2102      	movs	r1, #2
    3536:	6813      	ldr	r3, [r2, #0]
    3538:	438b      	bics	r3, r1
    353a:	6013      	str	r3, [r2, #0]
    353c:	2201      	movs	r2, #1
    353e:	6823      	ldr	r3, [r4, #0]
    3540:	6818      	ldr	r0, [r3, #0]
    3542:	4202      	tst	r2, r0
    3544:	d005      	beq.n	3552 <serial_init+0x82>
    3546:	b004      	add	sp, #16
    3548:	bc1c      	pop	{r2, r3, r4}
    354a:	4690      	mov	r8, r2
    354c:	4699      	mov	r9, r3
    354e:	46a2      	mov	sl, r4
    3550:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3552:	681b      	ldr	r3, [r3, #0]
    3554:	4019      	ands	r1, r3
    3556:	4688      	mov	r8, r1
    3558:	d1f5      	bne.n	3546 <serial_init+0x76>
    355a:	1ca8      	adds	r0, r5, #2
    355c:	4082      	lsls	r2, r0
    355e:	4944      	ldr	r1, [pc, #272]	; (3670 <serial_init+0x1a0>)
    3560:	6a0b      	ldr	r3, [r1, #32]
    3562:	431a      	orrs	r2, r3
    3564:	620a      	str	r2, [r1, #32]
    3566:	4642      	mov	r2, r8
    3568:	ab02      	add	r3, sp, #8
    356a:	701a      	strb	r2, [r3, #0]
    356c:	2314      	movs	r3, #20
    356e:	4699      	mov	r9, r3
    3570:	44a9      	add	r9, r5
    3572:	a902      	add	r1, sp, #8
    3574:	4648      	mov	r0, r9
    3576:	f7ff fc5d 	bl	2e34 <system_gclk_chan_set_config>
    357a:	4648      	mov	r0, r9
    357c:	f7ff fc1c 	bl	2db8 <system_gclk_chan_enable>
    3580:	2100      	movs	r1, #0
    3582:	2000      	movs	r0, #0
    3584:	f000 fef0 	bl	4368 <sercom_set_gclk_generator>
    3588:	6167      	str	r7, [r4, #20]
    358a:	1c20      	adds	r0, r4, #0
    358c:	f7ff fea4 	bl	32d8 <usart_set_config_default>
    3590:	4642      	mov	r2, r8
    3592:	ab02      	add	r3, sp, #8
    3594:	715a      	strb	r2, [r3, #5]
    3596:	719a      	strb	r2, [r3, #6]
    3598:	71da      	strb	r2, [r3, #7]
    359a:	2320      	movs	r3, #32
    359c:	1c27      	adds	r7, r4, #0
    359e:	469a      	mov	sl, r3
    35a0:	371c      	adds	r7, #28
    35a2:	44a2      	add	sl, r4
    35a4:	2300      	movs	r3, #0
    35a6:	56fb      	ldrsb	r3, [r7, r3]
    35a8:	4699      	mov	r9, r3
    35aa:	3301      	adds	r3, #1
    35ac:	d00f      	beq.n	35ce <serial_init+0xfe>
    35ae:	4648      	mov	r0, r9
    35b0:	1c29      	adds	r1, r5, #0
    35b2:	f001 fa41 	bl	4a38 <pinmap_function_sercom>
    35b6:	ab02      	add	r3, sp, #8
    35b8:	b2c0      	uxtb	r0, r0
    35ba:	7118      	strb	r0, [r3, #4]
    35bc:	28ff      	cmp	r0, #255	; 0xff
    35be:	d006      	beq.n	35ce <serial_init+0xfe>
    35c0:	466a      	mov	r2, sp
    35c2:	464b      	mov	r3, r9
    35c4:	71d3      	strb	r3, [r2, #7]
    35c6:	79d0      	ldrb	r0, [r2, #7]
    35c8:	a903      	add	r1, sp, #12
    35ca:	f001 f867 	bl	469c <system_pinmux_pin_set_config>
    35ce:	3701      	adds	r7, #1
    35d0:	4557      	cmp	r7, sl
    35d2:	d1e7      	bne.n	35a4 <serial_init+0xd4>
    35d4:	4b27      	ldr	r3, [pc, #156]	; (3674 <serial_init+0x1a4>)
    35d6:	429e      	cmp	r6, r3
    35d8:	d030      	beq.n	363c <serial_init+0x16c>
    35da:	2c00      	cmp	r4, #0
    35dc:	d028      	beq.n	3630 <serial_init+0x160>
    35de:	6823      	ldr	r3, [r4, #0]
    35e0:	69da      	ldr	r2, [r3, #28]
    35e2:	2a00      	cmp	r2, #0
    35e4:	d1fc      	bne.n	35e0 <serial_init+0x110>
    35e6:	2c00      	cmp	r4, #0
    35e8:	d031      	beq.n	364e <serial_init+0x17e>
    35ea:	69da      	ldr	r2, [r3, #28]
    35ec:	2a00      	cmp	r2, #0
    35ee:	d1fc      	bne.n	35ea <serial_init+0x11a>
    35f0:	6819      	ldr	r1, [r3, #0]
    35f2:	3202      	adds	r2, #2
    35f4:	430a      	orrs	r2, r1
    35f6:	601a      	str	r2, [r3, #0]
    35f8:	e7a5      	b.n	3546 <serial_init+0x76>
    35fa:	f7ff fc3d 	bl	2e78 <system_init>
    35fe:	2301      	movs	r3, #1
    3600:	703b      	strb	r3, [r7, #0]
    3602:	e776      	b.n	34f2 <serial_init+0x22>
    3604:	4b1c      	ldr	r3, [pc, #112]	; (3678 <serial_init+0x1a8>)
    3606:	2256      	movs	r2, #86	; 0x56
    3608:	4699      	mov	r9, r3
    360a:	4b1c      	ldr	r3, [pc, #112]	; (367c <serial_init+0x1ac>)
    360c:	4648      	mov	r0, r9
    360e:	4698      	mov	r8, r3
    3610:	1c19      	adds	r1, r3, #0
    3612:	f000 fcb9 	bl	3f88 <mbed_assert_internal>
    3616:	223f      	movs	r2, #63	; 0x3f
    3618:	4648      	mov	r0, r9
    361a:	4641      	mov	r1, r8
    361c:	f000 fcb4 	bl	3f88 <mbed_assert_internal>
    3620:	6822      	ldr	r2, [r4, #0]
    3622:	e784      	b.n	352e <serial_init+0x5e>
    3624:	4814      	ldr	r0, [pc, #80]	; (3678 <serial_init+0x1a8>)
    3626:	4915      	ldr	r1, [pc, #84]	; (367c <serial_init+0x1ac>)
    3628:	22ed      	movs	r2, #237	; 0xed
    362a:	f000 fcad 	bl	3f88 <mbed_assert_internal>
    362e:	e75b      	b.n	34e8 <serial_init+0x18>
    3630:	4811      	ldr	r0, [pc, #68]	; (3678 <serial_init+0x1a8>)
    3632:	4912      	ldr	r1, [pc, #72]	; (367c <serial_init+0x1ac>)
    3634:	223f      	movs	r2, #63	; 0x3f
    3636:	f000 fca7 	bl	3f88 <mbed_assert_internal>
    363a:	e7d0      	b.n	35de <serial_init+0x10e>
    363c:	2201      	movs	r2, #1
    363e:	4b10      	ldr	r3, [pc, #64]	; (3680 <serial_init+0x1b0>)
    3640:	1c21      	adds	r1, r4, #0
    3642:	601a      	str	r2, [r3, #0]
    3644:	480f      	ldr	r0, [pc, #60]	; (3684 <serial_init+0x1b4>)
    3646:	3247      	adds	r2, #71	; 0x47
    3648:	f002 ff51 	bl	64ee <memcpy>
    364c:	e7c5      	b.n	35da <serial_init+0x10a>
    364e:	4e0a      	ldr	r6, [pc, #40]	; (3678 <serial_init+0x1a8>)
    3650:	4d0a      	ldr	r5, [pc, #40]	; (367c <serial_init+0x1ac>)
    3652:	1c30      	adds	r0, r6, #0
    3654:	1c29      	adds	r1, r5, #0
    3656:	324a      	adds	r2, #74	; 0x4a
    3658:	f000 fc96 	bl	3f88 <mbed_assert_internal>
    365c:	1c30      	adds	r0, r6, #0
    365e:	1c29      	adds	r1, r5, #0
    3660:	223f      	movs	r2, #63	; 0x3f
    3662:	f000 fc91 	bl	3f88 <mbed_assert_internal>
    3666:	6823      	ldr	r3, [r4, #0]
    3668:	e7bf      	b.n	35ea <serial_init+0x11a>
    366a:	46c0      	nop			; (mov r8, r8)
    366c:	20003e10 	.word	0x20003e10
    3670:	40000400 	.word	0x40000400
    3674:	42000800 	.word	0x42000800
    3678:	0000d434 	.word	0x0000d434
    367c:	0000d4b0 	.word	0x0000d4b0
    3680:	20003f60 	.word	0x20003f60
    3684:	20003fbc 	.word	0x20003fbc

00003688 <get_serial_vector>:
    3688:	b510      	push	{r4, lr}
    368a:	1e04      	subs	r4, r0, #0
    368c:	d021      	beq.n	36d2 <get_serial_vector+0x4a>
    368e:	6823      	ldr	r3, [r4, #0]
    3690:	4a13      	ldr	r2, [pc, #76]	; (36e0 <get_serial_vector+0x58>)
    3692:	4293      	cmp	r3, r2
    3694:	d01b      	beq.n	36ce <get_serial_vector+0x46>
    3696:	dd0a      	ble.n	36ae <get_serial_vector+0x26>
    3698:	4a12      	ldr	r2, [pc, #72]	; (36e4 <get_serial_vector+0x5c>)
    369a:	4293      	cmp	r3, r2
    369c:	d00f      	beq.n	36be <get_serial_vector+0x36>
    369e:	4a12      	ldr	r2, [pc, #72]	; (36e8 <get_serial_vector+0x60>)
    36a0:	4293      	cmp	r3, r2
    36a2:	d012      	beq.n	36ca <get_serial_vector+0x42>
    36a4:	4a11      	ldr	r2, [pc, #68]	; (36ec <get_serial_vector+0x64>)
    36a6:	4293      	cmp	r3, r2
    36a8:	d00b      	beq.n	36c2 <get_serial_vector+0x3a>
    36aa:	2000      	movs	r0, #0
    36ac:	e006      	b.n	36bc <get_serial_vector+0x34>
    36ae:	4a10      	ldr	r2, [pc, #64]	; (36f0 <get_serial_vector+0x68>)
    36b0:	4293      	cmp	r3, r2
    36b2:	d008      	beq.n	36c6 <get_serial_vector+0x3e>
    36b4:	4a0f      	ldr	r2, [pc, #60]	; (36f4 <get_serial_vector+0x6c>)
    36b6:	4293      	cmp	r3, r2
    36b8:	d1f7      	bne.n	36aa <get_serial_vector+0x22>
    36ba:	480f      	ldr	r0, [pc, #60]	; (36f8 <get_serial_vector+0x70>)
    36bc:	bd10      	pop	{r4, pc}
    36be:	480f      	ldr	r0, [pc, #60]	; (36fc <get_serial_vector+0x74>)
    36c0:	e7fc      	b.n	36bc <get_serial_vector+0x34>
    36c2:	480f      	ldr	r0, [pc, #60]	; (3700 <get_serial_vector+0x78>)
    36c4:	e7fa      	b.n	36bc <get_serial_vector+0x34>
    36c6:	480f      	ldr	r0, [pc, #60]	; (3704 <get_serial_vector+0x7c>)
    36c8:	e7f8      	b.n	36bc <get_serial_vector+0x34>
    36ca:	480f      	ldr	r0, [pc, #60]	; (3708 <get_serial_vector+0x80>)
    36cc:	e7f6      	b.n	36bc <get_serial_vector+0x34>
    36ce:	480f      	ldr	r0, [pc, #60]	; (370c <get_serial_vector+0x84>)
    36d0:	e7f4      	b.n	36bc <get_serial_vector+0x34>
    36d2:	22ac      	movs	r2, #172	; 0xac
    36d4:	480e      	ldr	r0, [pc, #56]	; (3710 <get_serial_vector+0x88>)
    36d6:	490f      	ldr	r1, [pc, #60]	; (3714 <get_serial_vector+0x8c>)
    36d8:	0092      	lsls	r2, r2, #2
    36da:	f000 fc55 	bl	3f88 <mbed_assert_internal>
    36de:	e7d6      	b.n	368e <get_serial_vector+0x6>
    36e0:	42001000 	.word	0x42001000
    36e4:	42001800 	.word	0x42001800
    36e8:	42001c00 	.word	0x42001c00
    36ec:	42001400 	.word	0x42001400
    36f0:	42000800 	.word	0x42000800
    36f4:	42000c00 	.word	0x42000c00
    36f8:	000030f9 	.word	0x000030f9
    36fc:	00003149 	.word	0x00003149
    3700:	00003289 	.word	0x00003289
    3704:	00003199 	.word	0x00003199
    3708:	000031e9 	.word	0x000031e9
    370c:	00003239 	.word	0x00003239
    3710:	0000d434 	.word	0x0000d434
    3714:	0000d4b0 	.word	0x0000d4b0

00003718 <serial_irq_handler>:
    3718:	b5f0      	push	{r4, r5, r6, r7, lr}
    371a:	4647      	mov	r7, r8
    371c:	1c04      	adds	r4, r0, #0
    371e:	b480      	push	{r7}
    3720:	1c0e      	adds	r6, r1, #0
    3722:	1c15      	adds	r5, r2, #0
    3724:	2800      	cmp	r0, #0
    3726:	d020      	beq.n	376a <serial_irq_handler+0x52>
    3728:	4b18      	ldr	r3, [pc, #96]	; (378c <serial_irq_handler+0x74>)
    372a:	6019      	str	r1, [r3, #0]
    372c:	6822      	ldr	r2, [r4, #0]
    372e:	4b18      	ldr	r3, [pc, #96]	; (3790 <serial_irq_handler+0x78>)
    3730:	429a      	cmp	r2, r3
    3732:	d018      	beq.n	3766 <serial_irq_handler+0x4e>
    3734:	dc0d      	bgt.n	3752 <serial_irq_handler+0x3a>
    3736:	4917      	ldr	r1, [pc, #92]	; (3794 <serial_irq_handler+0x7c>)
    3738:	2301      	movs	r3, #1
    373a:	428a      	cmp	r2, r1
    373c:	d003      	beq.n	3746 <serial_irq_handler+0x2e>
    373e:	4916      	ldr	r1, [pc, #88]	; (3798 <serial_irq_handler+0x80>)
    3740:	3301      	adds	r3, #1
    3742:	428a      	cmp	r2, r1
    3744:	d10d      	bne.n	3762 <serial_irq_handler+0x4a>
    3746:	4a15      	ldr	r2, [pc, #84]	; (379c <serial_irq_handler+0x84>)
    3748:	009b      	lsls	r3, r3, #2
    374a:	509d      	str	r5, [r3, r2]
    374c:	bc04      	pop	{r2}
    374e:	4690      	mov	r8, r2
    3750:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3752:	4913      	ldr	r1, [pc, #76]	; (37a0 <serial_irq_handler+0x88>)
    3754:	2304      	movs	r3, #4
    3756:	428a      	cmp	r2, r1
    3758:	d0f5      	beq.n	3746 <serial_irq_handler+0x2e>
    375a:	4912      	ldr	r1, [pc, #72]	; (37a4 <serial_irq_handler+0x8c>)
    375c:	3301      	adds	r3, #1
    375e:	428a      	cmp	r2, r1
    3760:	d0f1      	beq.n	3746 <serial_irq_handler+0x2e>
    3762:	2300      	movs	r3, #0
    3764:	e7ef      	b.n	3746 <serial_irq_handler+0x2e>
    3766:	2303      	movs	r3, #3
    3768:	e7ed      	b.n	3746 <serial_irq_handler+0x2e>
    376a:	4b0f      	ldr	r3, [pc, #60]	; (37a8 <serial_irq_handler+0x90>)
    376c:	22b3      	movs	r2, #179	; 0xb3
    376e:	4698      	mov	r8, r3
    3770:	4f0e      	ldr	r7, [pc, #56]	; (37ac <serial_irq_handler+0x94>)
    3772:	1c18      	adds	r0, r3, #0
    3774:	1c39      	adds	r1, r7, #0
    3776:	0092      	lsls	r2, r2, #2
    3778:	f000 fc06 	bl	3f88 <mbed_assert_internal>
    377c:	4b03      	ldr	r3, [pc, #12]	; (378c <serial_irq_handler+0x74>)
    377e:	4640      	mov	r0, r8
    3780:	1c39      	adds	r1, r7, #0
    3782:	4a0b      	ldr	r2, [pc, #44]	; (37b0 <serial_irq_handler+0x98>)
    3784:	601e      	str	r6, [r3, #0]
    3786:	f000 fbff 	bl	3f88 <mbed_assert_internal>
    378a:	e7cf      	b.n	372c <serial_irq_handler+0x14>
    378c:	20003f7c 	.word	0x20003f7c
    3790:	42001400 	.word	0x42001400
    3794:	42000c00 	.word	0x42000c00
    3798:	42001000 	.word	0x42001000
    379c:	20003f64 	.word	0x20003f64
    37a0:	42001800 	.word	0x42001800
    37a4:	42001c00 	.word	0x42001c00
    37a8:	0000d434 	.word	0x0000d434
    37ac:	0000d4b0 	.word	0x0000d4b0
    37b0:	00000266 	.word	0x00000266

000037b4 <get_serial_irq_num>:
    37b4:	b510      	push	{r4, lr}
    37b6:	1e04      	subs	r4, r0, #0
    37b8:	d024      	beq.n	3804 <get_serial_irq_num+0x50>
    37ba:	6823      	ldr	r3, [r4, #0]
    37bc:	4a15      	ldr	r2, [pc, #84]	; (3814 <get_serial_irq_num+0x60>)
    37be:	4293      	cmp	r3, r2
    37c0:	d01e      	beq.n	3800 <get_serial_irq_num+0x4c>
    37c2:	dd12      	ble.n	37ea <get_serial_irq_num+0x36>
    37c4:	4a14      	ldr	r2, [pc, #80]	; (3818 <get_serial_irq_num+0x64>)
    37c6:	4293      	cmp	r3, r2
    37c8:	d018      	beq.n	37fc <get_serial_irq_num+0x48>
    37ca:	4a14      	ldr	r2, [pc, #80]	; (381c <get_serial_irq_num+0x68>)
    37cc:	200e      	movs	r0, #14
    37ce:	4293      	cmp	r3, r2
    37d0:	d009      	beq.n	37e6 <get_serial_irq_num+0x32>
    37d2:	4a13      	ldr	r2, [pc, #76]	; (3820 <get_serial_irq_num+0x6c>)
    37d4:	3802      	subs	r0, #2
    37d6:	4293      	cmp	r3, r2
    37d8:	d005      	beq.n	37e6 <get_serial_irq_num+0x32>
    37da:	4812      	ldr	r0, [pc, #72]	; (3824 <get_serial_irq_num+0x70>)
    37dc:	4912      	ldr	r1, [pc, #72]	; (3828 <get_serial_irq_num+0x74>)
    37de:	4a13      	ldr	r2, [pc, #76]	; (382c <get_serial_irq_num+0x78>)
    37e0:	f000 fbd2 	bl	3f88 <mbed_assert_internal>
    37e4:	2009      	movs	r0, #9
    37e6:	b240      	sxtb	r0, r0
    37e8:	bd10      	pop	{r4, pc}
    37ea:	4a11      	ldr	r2, [pc, #68]	; (3830 <get_serial_irq_num+0x7c>)
    37ec:	2009      	movs	r0, #9
    37ee:	4293      	cmp	r3, r2
    37f0:	d0f9      	beq.n	37e6 <get_serial_irq_num+0x32>
    37f2:	4a10      	ldr	r2, [pc, #64]	; (3834 <get_serial_irq_num+0x80>)
    37f4:	3001      	adds	r0, #1
    37f6:	4293      	cmp	r3, r2
    37f8:	d0f5      	beq.n	37e6 <get_serial_irq_num+0x32>
    37fa:	e7ee      	b.n	37da <get_serial_irq_num+0x26>
    37fc:	200d      	movs	r0, #13
    37fe:	e7f2      	b.n	37e6 <get_serial_irq_num+0x32>
    3800:	200b      	movs	r0, #11
    3802:	e7f0      	b.n	37e6 <get_serial_irq_num+0x32>
    3804:	22b5      	movs	r2, #181	; 0xb5
    3806:	480c      	ldr	r0, [pc, #48]	; (3838 <get_serial_irq_num+0x84>)
    3808:	4907      	ldr	r1, [pc, #28]	; (3828 <get_serial_irq_num+0x74>)
    380a:	0092      	lsls	r2, r2, #2
    380c:	f000 fbbc 	bl	3f88 <mbed_assert_internal>
    3810:	e7d3      	b.n	37ba <get_serial_irq_num+0x6>
    3812:	46c0      	nop			; (mov r8, r8)
    3814:	42001000 	.word	0x42001000
    3818:	42001800 	.word	0x42001800
    381c:	42001c00 	.word	0x42001c00
    3820:	42001400 	.word	0x42001400
    3824:	0000dea0 	.word	0x0000dea0
    3828:	0000d4b0 	.word	0x0000d4b0
    382c:	000002e3 	.word	0x000002e3
    3830:	42000800 	.word	0x42000800
    3834:	42000c00 	.word	0x42000c00
    3838:	0000d434 	.word	0x0000d434

0000383c <serial_irq_set>:
    383c:	b5f0      	push	{r4, r5, r6, r7, lr}
    383e:	4647      	mov	r7, r8
    3840:	1c04      	adds	r4, r0, #0
    3842:	b480      	push	{r7}
    3844:	1c0e      	adds	r6, r1, #0
    3846:	1c17      	adds	r7, r2, #0
    3848:	2800      	cmp	r0, #0
    384a:	d03f      	beq.n	38cc <serial_irq_set+0x90>
    384c:	1c20      	adds	r0, r4, #0
    384e:	f7ff ff1b 	bl	3688 <get_serial_vector>
    3852:	4680      	mov	r8, r0
    3854:	1c20      	adds	r0, r4, #0
    3856:	f7ff ffad 	bl	37b4 <get_serial_irq_num>
    385a:	1c05      	adds	r5, r0, #0
    385c:	2f00      	cmp	r7, #0
    385e:	d011      	beq.n	3884 <serial_irq_set+0x48>
    3860:	2e00      	cmp	r6, #0
    3862:	d023      	beq.n	38ac <serial_irq_set+0x70>
    3864:	2e01      	cmp	r6, #1
    3866:	d01d      	beq.n	38a4 <serial_irq_set+0x68>
    3868:	1c28      	adds	r0, r5, #0
    386a:	4641      	mov	r1, r8
    386c:	f7ff f800 	bl	2870 <NVIC_SetVector>
    3870:	231f      	movs	r3, #31
    3872:	401d      	ands	r5, r3
    3874:	3b1e      	subs	r3, #30
    3876:	40ab      	lsls	r3, r5
    3878:	1c1d      	adds	r5, r3, #0
    387a:	4b17      	ldr	r3, [pc, #92]	; (38d8 <serial_irq_set+0x9c>)
    387c:	601d      	str	r5, [r3, #0]
    387e:	bc04      	pop	{r2}
    3880:	4690      	mov	r8, r2
    3882:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3884:	2e00      	cmp	r6, #0
    3886:	d015      	beq.n	38b4 <serial_irq_set+0x78>
    3888:	2e01      	cmp	r6, #1
    388a:	d102      	bne.n	3892 <serial_irq_set+0x56>
    388c:	2202      	movs	r2, #2
    388e:	6823      	ldr	r3, [r4, #0]
    3890:	751a      	strb	r2, [r3, #20]
    3892:	231f      	movs	r3, #31
    3894:	401d      	ands	r5, r3
    3896:	3b1e      	subs	r3, #30
    3898:	40ab      	lsls	r3, r5
    389a:	1c1d      	adds	r5, r3, #0
    389c:	2380      	movs	r3, #128	; 0x80
    389e:	4a0e      	ldr	r2, [pc, #56]	; (38d8 <serial_irq_set+0x9c>)
    38a0:	50d5      	str	r5, [r2, r3]
    38a2:	e7ec      	b.n	387e <serial_irq_set+0x42>
    38a4:	2202      	movs	r2, #2
    38a6:	6823      	ldr	r3, [r4, #0]
    38a8:	759a      	strb	r2, [r3, #22]
    38aa:	e7dd      	b.n	3868 <serial_irq_set+0x2c>
    38ac:	2204      	movs	r2, #4
    38ae:	6823      	ldr	r3, [r4, #0]
    38b0:	759a      	strb	r2, [r3, #22]
    38b2:	e7d9      	b.n	3868 <serial_irq_set+0x2c>
    38b4:	2204      	movs	r2, #4
    38b6:	6823      	ldr	r3, [r4, #0]
    38b8:	751a      	strb	r2, [r3, #20]
    38ba:	231f      	movs	r3, #31
    38bc:	401d      	ands	r5, r3
    38be:	3b1e      	subs	r3, #30
    38c0:	40ab      	lsls	r3, r5
    38c2:	1c1d      	adds	r5, r3, #0
    38c4:	2380      	movs	r3, #128	; 0x80
    38c6:	4a04      	ldr	r2, [pc, #16]	; (38d8 <serial_irq_set+0x9c>)
    38c8:	50d5      	str	r5, [r2, r3]
    38ca:	e7d8      	b.n	387e <serial_irq_set+0x42>
    38cc:	4803      	ldr	r0, [pc, #12]	; (38dc <serial_irq_set+0xa0>)
    38ce:	4904      	ldr	r1, [pc, #16]	; (38e0 <serial_irq_set+0xa4>)
    38d0:	4a04      	ldr	r2, [pc, #16]	; (38e4 <serial_irq_set+0xa8>)
    38d2:	f000 fb59 	bl	3f88 <mbed_assert_internal>
    38d6:	e7b9      	b.n	384c <serial_irq_set+0x10>
    38d8:	e000e100 	.word	0xe000e100
    38dc:	0000d434 	.word	0x0000d434
    38e0:	0000d4b0 	.word	0x0000d4b0
    38e4:	000002eb 	.word	0x000002eb

000038e8 <serial_readable>:
    38e8:	b510      	push	{r4, lr}
    38ea:	1e04      	subs	r4, r0, #0
    38ec:	d004      	beq.n	38f8 <serial_readable+0x10>
    38ee:	6823      	ldr	r3, [r4, #0]
    38f0:	7e18      	ldrb	r0, [r3, #24]
    38f2:	0740      	lsls	r0, r0, #29
    38f4:	0fc0      	lsrs	r0, r0, #31
    38f6:	bd10      	pop	{r4, pc}
    38f8:	4802      	ldr	r0, [pc, #8]	; (3904 <serial_readable+0x1c>)
    38fa:	4903      	ldr	r1, [pc, #12]	; (3908 <serial_readable+0x20>)
    38fc:	4a03      	ldr	r2, [pc, #12]	; (390c <serial_readable+0x24>)
    38fe:	f000 fb43 	bl	3f88 <mbed_assert_internal>
    3902:	e7f4      	b.n	38ee <serial_readable+0x6>
    3904:	0000d434 	.word	0x0000d434
    3908:	0000d4b0 	.word	0x0000d4b0
    390c:	00000323 	.word	0x00000323

00003910 <serial_getc>:
    3910:	b510      	push	{r4, lr}
    3912:	1e04      	subs	r4, r0, #0
    3914:	d008      	beq.n	3928 <serial_getc+0x18>
    3916:	1c20      	adds	r0, r4, #0
    3918:	f7ff ffe6 	bl	38e8 <serial_readable>
    391c:	2800      	cmp	r0, #0
    391e:	d0fa      	beq.n	3916 <serial_getc+0x6>
    3920:	6823      	ldr	r3, [r4, #0]
    3922:	8d18      	ldrh	r0, [r3, #40]	; 0x28
    3924:	b280      	uxth	r0, r0
    3926:	bd10      	pop	{r4, pc}
    3928:	4802      	ldr	r0, [pc, #8]	; (3934 <serial_getc+0x24>)
    392a:	4903      	ldr	r1, [pc, #12]	; (3938 <serial_getc+0x28>)
    392c:	4a03      	ldr	r2, [pc, #12]	; (393c <serial_getc+0x2c>)
    392e:	f000 fb2b 	bl	3f88 <mbed_assert_internal>
    3932:	e7f0      	b.n	3916 <serial_getc+0x6>
    3934:	0000d434 	.word	0x0000d434
    3938:	0000d4b0 	.word	0x0000d4b0
    393c:	00000311 	.word	0x00000311

00003940 <serial_writable>:
    3940:	b510      	push	{r4, lr}
    3942:	1e04      	subs	r4, r0, #0
    3944:	d004      	beq.n	3950 <serial_writable+0x10>
    3946:	2001      	movs	r0, #1
    3948:	6823      	ldr	r3, [r4, #0]
    394a:	7e1b      	ldrb	r3, [r3, #24]
    394c:	4018      	ands	r0, r3
    394e:	bd10      	pop	{r4, pc}
    3950:	22cc      	movs	r2, #204	; 0xcc
    3952:	4803      	ldr	r0, [pc, #12]	; (3960 <serial_writable+0x20>)
    3954:	4903      	ldr	r1, [pc, #12]	; (3964 <serial_writable+0x24>)
    3956:	0092      	lsls	r2, r2, #2
    3958:	f000 fb16 	bl	3f88 <mbed_assert_internal>
    395c:	e7f3      	b.n	3946 <serial_writable+0x6>
    395e:	46c0      	nop			; (mov r8, r8)
    3960:	0000d434 	.word	0x0000d434
    3964:	0000d4b0 	.word	0x0000d4b0

00003968 <serial_putc>:
    3968:	b538      	push	{r3, r4, r5, lr}
    396a:	1c04      	adds	r4, r0, #0
    396c:	1c0d      	adds	r5, r1, #0
    396e:	2800      	cmp	r0, #0
    3970:	d00e      	beq.n	3990 <serial_putc+0x28>
    3972:	05ed      	lsls	r5, r5, #23
    3974:	0ded      	lsrs	r5, r5, #23
    3976:	1c20      	adds	r0, r4, #0
    3978:	f7ff ffe2 	bl	3940 <serial_writable>
    397c:	2800      	cmp	r0, #0
    397e:	d0fa      	beq.n	3976 <serial_putc+0xe>
    3980:	2202      	movs	r2, #2
    3982:	6823      	ldr	r3, [r4, #0]
    3984:	851d      	strh	r5, [r3, #40]	; 0x28
    3986:	6821      	ldr	r1, [r4, #0]
    3988:	7e0b      	ldrb	r3, [r1, #24]
    398a:	421a      	tst	r2, r3
    398c:	d0fc      	beq.n	3988 <serial_putc+0x20>
    398e:	bd38      	pop	{r3, r4, r5, pc}
    3990:	4802      	ldr	r0, [pc, #8]	; (399c <serial_putc+0x34>)
    3992:	4903      	ldr	r1, [pc, #12]	; (39a0 <serial_putc+0x38>)
    3994:	4a03      	ldr	r2, [pc, #12]	; (39a4 <serial_putc+0x3c>)
    3996:	f000 faf7 	bl	3f88 <mbed_assert_internal>
    399a:	e7ea      	b.n	3972 <serial_putc+0xa>
    399c:	0000d434 	.word	0x0000d434
    39a0:	0000d4b0 	.word	0x0000d4b0
    39a4:	00000319 	.word	0x00000319

000039a8 <_ZN4mbed8FilePathC1EPKc>:
    39a8:	b538      	push	{r3, r4, r5, lr}
    39aa:	2300      	movs	r3, #0
    39ac:	6003      	str	r3, [r0, #0]
    39ae:	6043      	str	r3, [r0, #4]
    39b0:	780b      	ldrb	r3, [r1, #0]
    39b2:	1c04      	adds	r4, r0, #0
    39b4:	2b2f      	cmp	r3, #47	; 0x2f
    39b6:	d001      	beq.n	39bc <_ZN4mbed8FilePathC1EPKc+0x14>
    39b8:	1c20      	adds	r0, r4, #0
    39ba:	bd38      	pop	{r3, r4, r5, pc}
    39bc:	784b      	ldrb	r3, [r1, #1]
    39be:	2b00      	cmp	r3, #0
    39c0:	d0fa      	beq.n	39b8 <_ZN4mbed8FilePathC1EPKc+0x10>
    39c2:	1c48      	adds	r0, r1, #1
    39c4:	6020      	str	r0, [r4, #0]
    39c6:	784b      	ldrb	r3, [r1, #1]
    39c8:	2b2f      	cmp	r3, #47	; 0x2f
    39ca:	d014      	beq.n	39f6 <_ZN4mbed8FilePathC1EPKc+0x4e>
    39cc:	2b00      	cmp	r3, #0
    39ce:	d015      	beq.n	39fc <_ZN4mbed8FilePathC1EPKc+0x54>
    39d0:	1c03      	adds	r3, r0, #0
    39d2:	e001      	b.n	39d8 <_ZN4mbed8FilePathC1EPKc+0x30>
    39d4:	2a00      	cmp	r2, #0
    39d6:	d00c      	beq.n	39f2 <_ZN4mbed8FilePathC1EPKc+0x4a>
    39d8:	1a5d      	subs	r5, r3, r1
    39da:	3301      	adds	r3, #1
    39dc:	6023      	str	r3, [r4, #0]
    39de:	781a      	ldrb	r2, [r3, #0]
    39e0:	2a2f      	cmp	r2, #47	; 0x2f
    39e2:	d1f7      	bne.n	39d4 <_ZN4mbed8FilePathC1EPKc+0x2c>
    39e4:	1c29      	adds	r1, r5, #0
    39e6:	3301      	adds	r3, #1
    39e8:	6023      	str	r3, [r4, #0]
    39ea:	f001 fcc3 	bl	5374 <_ZN4mbed8FileBase6lookupEPKcj>
    39ee:	6060      	str	r0, [r4, #4]
    39f0:	e7e2      	b.n	39b8 <_ZN4mbed8FilePathC1EPKc+0x10>
    39f2:	1c29      	adds	r1, r5, #0
    39f4:	e7f9      	b.n	39ea <_ZN4mbed8FilePathC1EPKc+0x42>
    39f6:	1c03      	adds	r3, r0, #0
    39f8:	2100      	movs	r1, #0
    39fa:	e7f4      	b.n	39e6 <_ZN4mbed8FilePathC1EPKc+0x3e>
    39fc:	2100      	movs	r1, #0
    39fe:	e7f4      	b.n	39ea <_ZN4mbed8FilePathC1EPKc+0x42>

00003a00 <_ZN4mbed8FilePath8fileNameEv>:
    3a00:	6800      	ldr	r0, [r0, #0]
    3a02:	4770      	bx	lr

00003a04 <_ZN4mbed8FilePath10fileSystemEv>:
    3a04:	6843      	ldr	r3, [r0, #4]
    3a06:	b510      	push	{r4, lr}
    3a08:	2b00      	cmp	r3, #0
    3a0a:	d007      	beq.n	3a1c <_ZN4mbed8FilePath10fileSystemEv+0x18>
    3a0c:	1c04      	adds	r4, r0, #0
    3a0e:	1c18      	adds	r0, r3, #0
    3a10:	f001 fcd0 	bl	53b4 <_ZN4mbed8FileBase11getPathTypeEv>
    3a14:	2801      	cmp	r0, #1
    3a16:	d101      	bne.n	3a1c <_ZN4mbed8FilePath10fileSystemEv+0x18>
    3a18:	6860      	ldr	r0, [r4, #4]
    3a1a:	bd10      	pop	{r4, pc}
    3a1c:	2000      	movs	r0, #0
    3a1e:	e7fc      	b.n	3a1a <_ZN4mbed8FilePath10fileSystemEv+0x16>

00003a20 <_ZN4mbed8FilePath6isFileEv>:
    3a20:	6840      	ldr	r0, [r0, #4]
    3a22:	b508      	push	{r3, lr}
    3a24:	2800      	cmp	r0, #0
    3a26:	d005      	beq.n	3a34 <_ZN4mbed8FilePath6isFileEv+0x14>
    3a28:	f001 fcc4 	bl	53b4 <_ZN4mbed8FileBase11getPathTypeEv>
    3a2c:	4243      	negs	r3, r0
    3a2e:	4158      	adcs	r0, r3
    3a30:	b2c0      	uxtb	r0, r0
    3a32:	bd08      	pop	{r3, pc}
    3a34:	2000      	movs	r0, #0
    3a36:	e7fc      	b.n	3a32 <_ZN4mbed8FilePath6isFileEv+0x12>

00003a38 <_ZN4mbed8FilePath4fileEv>:
    3a38:	6843      	ldr	r3, [r0, #4]
    3a3a:	b510      	push	{r4, lr}
    3a3c:	2b00      	cmp	r3, #0
    3a3e:	d00a      	beq.n	3a56 <_ZN4mbed8FilePath4fileEv+0x1e>
    3a40:	1c04      	adds	r4, r0, #0
    3a42:	1c18      	adds	r0, r3, #0
    3a44:	f001 fcb6 	bl	53b4 <_ZN4mbed8FileBase11getPathTypeEv>
    3a48:	2800      	cmp	r0, #0
    3a4a:	d104      	bne.n	3a56 <_ZN4mbed8FilePath4fileEv+0x1e>
    3a4c:	6860      	ldr	r0, [r4, #4]
    3a4e:	2800      	cmp	r0, #0
    3a50:	d001      	beq.n	3a56 <_ZN4mbed8FilePath4fileEv+0x1e>
    3a52:	3804      	subs	r0, #4
    3a54:	bd10      	pop	{r4, pc}
    3a56:	2000      	movs	r0, #0
    3a58:	e7fc      	b.n	3a54 <_ZN4mbed8FilePath4fileEv+0x1c>
    3a5a:	46c0      	nop			; (mov r8, r8)

00003a5c <_ZN4mbed8FilePath6existsEv>:
    3a5c:	6840      	ldr	r0, [r0, #4]
    3a5e:	1e43      	subs	r3, r0, #1
    3a60:	4198      	sbcs	r0, r3
    3a62:	b2c0      	uxtb	r0, r0
    3a64:	4770      	bx	lr
    3a66:	46c0      	nop			; (mov r8, r8)

00003a68 <_ZN4mbed11InterruptInD1Ev>:
    3a68:	b510      	push	{r4, lr}
    3a6a:	1c04      	adds	r4, r0, #0
    3a6c:	4b03      	ldr	r3, [pc, #12]	; (3a7c <_ZN4mbed11InterruptInD1Ev+0x14>)
    3a6e:	3308      	adds	r3, #8
    3a70:	6003      	str	r3, [r0, #0]
    3a72:	3020      	adds	r0, #32
    3a74:	f7ff fa9e 	bl	2fb4 <gpio_irq_free>
    3a78:	1c20      	adds	r0, r4, #0
    3a7a:	bd10      	pop	{r4, pc}
    3a7c:	0000d748 	.word	0x0000d748

00003a80 <_ZN4mbed11InterruptInD0Ev>:
    3a80:	b510      	push	{r4, lr}
    3a82:	1c04      	adds	r4, r0, #0
    3a84:	4b05      	ldr	r3, [pc, #20]	; (3a9c <_ZN4mbed11InterruptInD0Ev+0x1c>)
    3a86:	3308      	adds	r3, #8
    3a88:	6003      	str	r3, [r0, #0]
    3a8a:	3020      	adds	r0, #32
    3a8c:	f7ff fa92 	bl	2fb4 <gpio_irq_free>
    3a90:	1c20      	adds	r0, r4, #0
    3a92:	f001 ff08 	bl	58a6 <_ZdlPv>
    3a96:	1c20      	adds	r0, r4, #0
    3a98:	bd10      	pop	{r4, pc}
    3a9a:	46c0      	nop			; (mov r8, r8)
    3a9c:	0000d748 	.word	0x0000d748

00003aa0 <_ZN4mbed11InterruptIn12_irq_handlerEm14gpio_irq_event>:
    3aa0:	b508      	push	{r3, lr}
    3aa2:	2901      	cmp	r1, #1
    3aa4:	d00c      	beq.n	3ac0 <_ZN4mbed11InterruptIn12_irq_handlerEm14gpio_irq_event+0x20>
    3aa6:	2902      	cmp	r1, #2
    3aa8:	d109      	bne.n	3abe <_ZN4mbed11InterruptIn12_irq_handlerEm14gpio_irq_event+0x1e>
    3aaa:	6e83      	ldr	r3, [r0, #104]	; 0x68
    3aac:	2b00      	cmp	r3, #0
    3aae:	d012      	beq.n	3ad6 <_ZN4mbed11InterruptIn12_irq_handlerEm14gpio_irq_event+0x36>
    3ab0:	6d42      	ldr	r2, [r0, #84]	; 0x54
    3ab2:	2a00      	cmp	r2, #0
    3ab4:	d003      	beq.n	3abe <_ZN4mbed11InterruptIn12_irq_handlerEm14gpio_irq_event+0x1e>
    3ab6:	1c01      	adds	r1, r0, #0
    3ab8:	1c10      	adds	r0, r2, #0
    3aba:	3158      	adds	r1, #88	; 0x58
    3abc:	4798      	blx	r3
    3abe:	bd08      	pop	{r3, pc}
    3ac0:	6d03      	ldr	r3, [r0, #80]	; 0x50
    3ac2:	2b00      	cmp	r3, #0
    3ac4:	d00c      	beq.n	3ae0 <_ZN4mbed11InterruptIn12_irq_handlerEm14gpio_irq_event+0x40>
    3ac6:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
    3ac8:	2a00      	cmp	r2, #0
    3aca:	d0f8      	beq.n	3abe <_ZN4mbed11InterruptIn12_irq_handlerEm14gpio_irq_event+0x1e>
    3acc:	1c01      	adds	r1, r0, #0
    3ace:	1c10      	adds	r0, r2, #0
    3ad0:	3140      	adds	r1, #64	; 0x40
    3ad2:	4798      	blx	r3
    3ad4:	e7f3      	b.n	3abe <_ZN4mbed11InterruptIn12_irq_handlerEm14gpio_irq_event+0x1e>
    3ad6:	6d43      	ldr	r3, [r0, #84]	; 0x54
    3ad8:	2b00      	cmp	r3, #0
    3ada:	d0f0      	beq.n	3abe <_ZN4mbed11InterruptIn12_irq_handlerEm14gpio_irq_event+0x1e>
    3adc:	4798      	blx	r3
    3ade:	e7ee      	b.n	3abe <_ZN4mbed11InterruptIn12_irq_handlerEm14gpio_irq_event+0x1e>
    3ae0:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
    3ae2:	2b00      	cmp	r3, #0
    3ae4:	d0eb      	beq.n	3abe <_ZN4mbed11InterruptIn12_irq_handlerEm14gpio_irq_event+0x1e>
    3ae6:	4798      	blx	r3
    3ae8:	e7e9      	b.n	3abe <_ZN4mbed11InterruptIn12_irq_handlerEm14gpio_irq_event+0x1e>
    3aea:	46c0      	nop			; (mov r8, r8)

00003aec <_ZN4mbed11InterruptInC1E7PinName>:
    3aec:	b538      	push	{r3, r4, r5, lr}
    3aee:	4b16      	ldr	r3, [pc, #88]	; (3b48 <_ZN4mbed11InterruptInC1E7PinName+0x5c>)
    3af0:	2220      	movs	r2, #32
    3af2:	3308      	adds	r3, #8
    3af4:	6003      	str	r3, [r0, #0]
    3af6:	2300      	movs	r3, #0
    3af8:	1c04      	adds	r4, r0, #0
    3afa:	1c0d      	adds	r5, r1, #0
    3afc:	7103      	strb	r3, [r0, #4]
    3afe:	6083      	str	r3, [r0, #8]
    3b00:	7303      	strb	r3, [r0, #12]
    3b02:	7343      	strb	r3, [r0, #13]
    3b04:	7383      	strb	r3, [r0, #14]
    3b06:	6103      	str	r3, [r0, #16]
    3b08:	6143      	str	r3, [r0, #20]
    3b0a:	6183      	str	r3, [r0, #24]
    3b0c:	61c3      	str	r3, [r0, #28]
    3b0e:	5483      	strb	r3, [r0, r2]
    3b10:	3218      	adds	r2, #24
    3b12:	6243      	str	r3, [r0, #36]	; 0x24
    3b14:	6283      	str	r3, [r0, #40]	; 0x28
    3b16:	62c3      	str	r3, [r0, #44]	; 0x2c
    3b18:	6303      	str	r3, [r0, #48]	; 0x30
    3b1a:	6343      	str	r3, [r0, #52]	; 0x34
    3b1c:	5483      	strb	r3, [r0, r2]
    3b1e:	3201      	adds	r2, #1
    3b20:	5483      	strb	r3, [r0, r2]
    3b22:	3201      	adds	r2, #1
    3b24:	5483      	strb	r3, [r0, r2]
    3b26:	3201      	adds	r2, #1
    3b28:	5483      	strb	r3, [r0, r2]
    3b2a:	63c3      	str	r3, [r0, #60]	; 0x3c
    3b2c:	6503      	str	r3, [r0, #80]	; 0x50
    3b2e:	6543      	str	r3, [r0, #84]	; 0x54
    3b30:	6683      	str	r3, [r0, #104]	; 0x68
    3b32:	4a06      	ldr	r2, [pc, #24]	; (3b4c <_ZN4mbed11InterruptInC1E7PinName+0x60>)
    3b34:	1c23      	adds	r3, r4, #0
    3b36:	3020      	adds	r0, #32
    3b38:	f7ff f9e8 	bl	2f0c <gpio_irq_init>
    3b3c:	1d20      	adds	r0, r4, #4
    3b3e:	1c29      	adds	r1, r5, #0
    3b40:	f000 fa34 	bl	3fac <gpio_init_in>
    3b44:	1c20      	adds	r0, r4, #0
    3b46:	bd38      	pop	{r3, r4, r5, pc}
    3b48:	0000d748 	.word	0x0000d748
    3b4c:	00003aa1 	.word	0x00003aa1

00003b50 <_ZN4mbed3SPID1Ev>:
    3b50:	4770      	bx	lr
    3b52:	46c0      	nop			; (mov r8, r8)

00003b54 <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E>:
    3b54:	b510      	push	{r4, lr}
    3b56:	2800      	cmp	r0, #0
    3b58:	d008      	beq.n	3b6c <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    3b5a:	6814      	ldr	r4, [r2, #0]
    3b5c:	6853      	ldr	r3, [r2, #4]
    3b5e:	2c00      	cmp	r4, #0
    3b60:	d005      	beq.n	3b6e <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E+0x1a>
    3b62:	07da      	lsls	r2, r3, #31
    3b64:	d405      	bmi.n	3b72 <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E+0x1e>
    3b66:	105b      	asrs	r3, r3, #1
    3b68:	18c0      	adds	r0, r0, r3
    3b6a:	47a0      	blx	r4
    3b6c:	bd10      	pop	{r4, pc}
    3b6e:	07da      	lsls	r2, r3, #31
    3b70:	d5fc      	bpl.n	3b6c <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    3b72:	105b      	asrs	r3, r3, #1
    3b74:	18c0      	adds	r0, r0, r3
    3b76:	6803      	ldr	r3, [r0, #0]
    3b78:	591c      	ldr	r4, [r3, r4]
    3b7a:	47a0      	blx	r4
    3b7c:	e7f6      	b.n	3b6c <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    3b7e:	46c0      	nop			; (mov r8, r8)

00003b80 <_ZN4mbed3SPID0Ev>:
    3b80:	b510      	push	{r4, lr}
    3b82:	1c04      	adds	r4, r0, #0
    3b84:	f001 fe8f 	bl	58a6 <_ZdlPv>
    3b88:	1c20      	adds	r0, r4, #0
    3b8a:	bd10      	pop	{r4, pc}

00003b8c <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_>:
    3b8c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3b8e:	4656      	mov	r6, sl
    3b90:	465f      	mov	r7, fp
    3b92:	464d      	mov	r5, r9
    3b94:	4644      	mov	r4, r8
    3b96:	4691      	mov	r9, r2
    3b98:	2200      	movs	r2, #0
    3b9a:	b4f0      	push	{r4, r5, r6, r7}
    3b9c:	1c05      	adds	r5, r0, #0
    3b9e:	1c04      	adds	r4, r0, #0
    3ba0:	b087      	sub	sp, #28
    3ba2:	9303      	str	r3, [sp, #12]
    3ba4:	ab10      	add	r3, sp, #64	; 0x40
    3ba6:	569a      	ldrsb	r2, [r3, r2]
    3ba8:	4b26      	ldr	r3, [pc, #152]	; (3c44 <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xb8>)
    3baa:	468a      	mov	sl, r1
    3bac:	3308      	adds	r3, #8
    3bae:	c508      	stmia	r5!, {r3}
    3bb0:	4693      	mov	fp, r2
    3bb2:	1c28      	adds	r0, r5, #0
    3bb4:	2100      	movs	r1, #0
    3bb6:	2240      	movs	r2, #64	; 0x40
    3bb8:	f002 fca2 	bl	6500 <memset>
    3bbc:	2300      	movs	r3, #0
    3bbe:	1c22      	adds	r2, r4, #0
    3bc0:	9304      	str	r3, [sp, #16]
    3bc2:	9305      	str	r3, [sp, #20]
    3bc4:	a904      	add	r1, sp, #16
    3bc6:	3248      	adds	r2, #72	; 0x48
    3bc8:	c941      	ldmia	r1!, {r0, r6}
    3bca:	c241      	stmia	r2!, {r0, r6}
    3bcc:	4a1e      	ldr	r2, [pc, #120]	; (3c48 <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xbc>)
    3bce:	6522      	str	r2, [r4, #80]	; 0x50
    3bd0:	4a1e      	ldr	r2, [pc, #120]	; (3c4c <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xc0>)
    3bd2:	6562      	str	r2, [r4, #84]	; 0x54
    3bd4:	4a1e      	ldr	r2, [pc, #120]	; (3c50 <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xc4>)
    3bd6:	65a2      	str	r2, [r4, #88]	; 0x58
    3bd8:	1c22      	adds	r2, r4, #0
    3bda:	3248      	adds	r2, #72	; 0x48
    3bdc:	6623      	str	r3, [r4, #96]	; 0x60
    3bde:	65e4      	str	r4, [r4, #92]	; 0x5c
    3be0:	6662      	str	r2, [r4, #100]	; 0x64
    3be2:	4a1c      	ldr	r2, [pc, #112]	; (3c54 <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xc8>)
    3be4:	66a2      	str	r2, [r4, #104]	; 0x68
    3be6:	f3bf 8f6f 	isb	sy
    3bea:	f3bf 8f4f 	dsb	sy
    3bee:	2280      	movs	r2, #128	; 0x80
    3bf0:	66e3      	str	r3, [r4, #108]	; 0x6c
    3bf2:	50a3      	str	r3, [r4, r2]
    3bf4:	3204      	adds	r2, #4
    3bf6:	54a3      	strb	r3, [r4, r2]
    3bf8:	3204      	adds	r2, #4
    3bfa:	4690      	mov	r8, r2
    3bfc:	4641      	mov	r1, r8
    3bfe:	278c      	movs	r7, #140	; 0x8c
    3c00:	3a80      	subs	r2, #128	; 0x80
    3c02:	5062      	str	r2, [r4, r1]
    3c04:	2690      	movs	r6, #144	; 0x90
    3c06:	465a      	mov	r2, fp
    3c08:	51e3      	str	r3, [r4, r7]
    3c0a:	4b13      	ldr	r3, [pc, #76]	; (3c58 <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xcc>)
    3c0c:	9200      	str	r2, [sp, #0]
    3c0e:	51a3      	str	r3, [r4, r6]
    3c10:	1c28      	adds	r0, r5, #0
    3c12:	4651      	mov	r1, sl
    3c14:	464a      	mov	r2, r9
    3c16:	9b03      	ldr	r3, [sp, #12]
    3c18:	f001 f8b2 	bl	4d80 <spi_init>
    3c1c:	4643      	mov	r3, r8
    3c1e:	59e2      	ldr	r2, [r4, r7]
    3c20:	58e1      	ldr	r1, [r4, r3]
    3c22:	1c28      	adds	r0, r5, #0
    3c24:	2300      	movs	r3, #0
    3c26:	f001 f9a3 	bl	4f70 <spi_format>
    3c2a:	1c28      	adds	r0, r5, #0
    3c2c:	59a1      	ldr	r1, [r4, r6]
    3c2e:	f001 fa53 	bl	50d8 <spi_frequency>
    3c32:	1c20      	adds	r0, r4, #0
    3c34:	b007      	add	sp, #28
    3c36:	bc3c      	pop	{r2, r3, r4, r5}
    3c38:	4690      	mov	r8, r2
    3c3a:	4699      	mov	r9, r3
    3c3c:	46a2      	mov	sl, r4
    3c3e:	46ab      	mov	fp, r5
    3c40:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3c42:	46c0      	nop			; (mov r8, r8)
    3c44:	0000d758 	.word	0x0000d758
    3c48:	2404b51f 	.word	0x2404b51f
    3c4c:	cc0f447c 	.word	0xcc0f447c
    3c50:	bd1f4798 	.word	0xbd1f4798
    3c54:	00003b55 	.word	0x00003b55
    3c58:	000f4240 	.word	0x000f4240

00003c5c <_ZN4mbed3SPI6aquireEv>:
    3c5c:	b570      	push	{r4, r5, r6, lr}
    3c5e:	4d0a      	ldr	r5, [pc, #40]	; (3c88 <_ZN4mbed3SPI6aquireEv+0x2c>)
    3c60:	682b      	ldr	r3, [r5, #0]
    3c62:	4283      	cmp	r3, r0
    3c64:	d00f      	beq.n	3c86 <_ZN4mbed3SPI6aquireEv+0x2a>
    3c66:	2388      	movs	r3, #136	; 0x88
    3c68:	1d06      	adds	r6, r0, #4
    3c6a:	58c1      	ldr	r1, [r0, r3]
    3c6c:	3304      	adds	r3, #4
    3c6e:	58c2      	ldr	r2, [r0, r3]
    3c70:	1c04      	adds	r4, r0, #0
    3c72:	2300      	movs	r3, #0
    3c74:	1c30      	adds	r0, r6, #0
    3c76:	f001 f97b 	bl	4f70 <spi_format>
    3c7a:	2390      	movs	r3, #144	; 0x90
    3c7c:	1c30      	adds	r0, r6, #0
    3c7e:	58e1      	ldr	r1, [r4, r3]
    3c80:	f001 fa2a 	bl	50d8 <spi_frequency>
    3c84:	602c      	str	r4, [r5, #0]
    3c86:	bd70      	pop	{r4, r5, r6, pc}
    3c88:	20003f80 	.word	0x20003f80

00003c8c <_ZN4mbed3SPI6formatEii>:
    3c8c:	b508      	push	{r3, lr}
    3c8e:	2388      	movs	r3, #136	; 0x88
    3c90:	50c1      	str	r1, [r0, r3]
    3c92:	3304      	adds	r3, #4
    3c94:	50c2      	str	r2, [r0, r3]
    3c96:	2200      	movs	r2, #0
    3c98:	4b02      	ldr	r3, [pc, #8]	; (3ca4 <_ZN4mbed3SPI6formatEii+0x18>)
    3c9a:	601a      	str	r2, [r3, #0]
    3c9c:	f7ff ffde 	bl	3c5c <_ZN4mbed3SPI6aquireEv>
    3ca0:	bd08      	pop	{r3, pc}
    3ca2:	46c0      	nop			; (mov r8, r8)
    3ca4:	20003f80 	.word	0x20003f80

00003ca8 <_ZN4mbed3SPI9frequencyEi>:
    3ca8:	b508      	push	{r3, lr}
    3caa:	2390      	movs	r3, #144	; 0x90
    3cac:	2200      	movs	r2, #0
    3cae:	50c1      	str	r1, [r0, r3]
    3cb0:	4b02      	ldr	r3, [pc, #8]	; (3cbc <_ZN4mbed3SPI9frequencyEi+0x14>)
    3cb2:	601a      	str	r2, [r3, #0]
    3cb4:	f7ff ffd2 	bl	3c5c <_ZN4mbed3SPI6aquireEv>
    3cb8:	bd08      	pop	{r3, pc}
    3cba:	46c0      	nop			; (mov r8, r8)
    3cbc:	20003f80 	.word	0x20003f80

00003cc0 <_ZN4mbed3SPI5writeEi>:
    3cc0:	b538      	push	{r3, r4, r5, lr}
    3cc2:	1c0d      	adds	r5, r1, #0
    3cc4:	1c04      	adds	r4, r0, #0
    3cc6:	f7ff ffc9 	bl	3c5c <_ZN4mbed3SPI6aquireEv>
    3cca:	1c29      	adds	r1, r5, #0
    3ccc:	1d20      	adds	r0, r4, #4
    3cce:	f001 fa7f 	bl	51d0 <spi_master_write>
    3cd2:	bd38      	pop	{r3, r4, r5, pc}

00003cd4 <_ZN4mbed6Serial5_getcEv>:
    3cd4:	b508      	push	{r3, lr}
    3cd6:	f000 f8b5 	bl	3e44 <_ZN4mbed10SerialBase10_base_getcEv>
    3cda:	bd08      	pop	{r3, pc}

00003cdc <_ZThn220_N4mbed6Serial5_getcEv>:
    3cdc:	b408      	push	{r3}
    3cde:	4b02      	ldr	r3, [pc, #8]	; (3ce8 <_ZThn220_N4mbed6Serial5_getcEv+0xc>)
    3ce0:	469c      	mov	ip, r3
    3ce2:	38dc      	subs	r0, #220	; 0xdc
    3ce4:	bc08      	pop	{r3}
    3ce6:	4760      	bx	ip
    3ce8:	00003cd5 	.word	0x00003cd5

00003cec <_ZN4mbed6Serial5_putcEi>:
    3cec:	b508      	push	{r3, lr}
    3cee:	f000 f8af 	bl	3e50 <_ZN4mbed10SerialBase10_base_putcEi>
    3cf2:	bd08      	pop	{r3, pc}

00003cf4 <_ZThn220_N4mbed6Serial5_putcEi>:
    3cf4:	b408      	push	{r3}
    3cf6:	4b02      	ldr	r3, [pc, #8]	; (3d00 <_ZThn220_N4mbed6Serial5_putcEi+0xc>)
    3cf8:	469c      	mov	ip, r3
    3cfa:	38dc      	subs	r0, #220	; 0xdc
    3cfc:	bc08      	pop	{r3}
    3cfe:	4760      	bx	ip
    3d00:	00003ced 	.word	0x00003ced

00003d04 <_ZN4mbed6SerialC1E7PinNameS1_PKc>:
    3d04:	b538      	push	{r3, r4, r5, lr}
    3d06:	1c04      	adds	r4, r0, #0
    3d08:	1c1d      	adds	r5, r3, #0
    3d0a:	f000 f843 	bl	3d94 <_ZN4mbed10SerialBaseC1E7PinNameS1_>
    3d0e:	1c20      	adds	r0, r4, #0
    3d10:	1c29      	adds	r1, r5, #0
    3d12:	30dc      	adds	r0, #220	; 0xdc
    3d14:	f000 f8da 	bl	3ecc <_ZN4mbed6StreamC1EPKc>
    3d18:	4b06      	ldr	r3, [pc, #24]	; (3d34 <_ZN4mbed6SerialC1E7PinNameS1_PKc+0x30>)
    3d1a:	1c20      	adds	r0, r4, #0
    3d1c:	1c1a      	adds	r2, r3, #0
    3d1e:	1c19      	adds	r1, r3, #0
    3d20:	3208      	adds	r2, #8
    3d22:	6022      	str	r2, [r4, #0]
    3d24:	22dc      	movs	r2, #220	; 0xdc
    3d26:	3120      	adds	r1, #32
    3d28:	50a1      	str	r1, [r4, r2]
    3d2a:	3354      	adds	r3, #84	; 0x54
    3d2c:	3204      	adds	r2, #4
    3d2e:	50a3      	str	r3, [r4, r2]
    3d30:	bd38      	pop	{r3, r4, r5, pc}
    3d32:	46c0      	nop			; (mov r8, r8)
    3d34:	0000d770 	.word	0x0000d770

00003d38 <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq>:
    3d38:	b508      	push	{r3, lr}
    3d3a:	004b      	lsls	r3, r1, #1
    3d3c:	1859      	adds	r1, r3, r1
    3d3e:	00c9      	lsls	r1, r1, #3
    3d40:	1843      	adds	r3, r0, r1
    3d42:	1c1a      	adds	r2, r3, #0
    3d44:	32b8      	adds	r2, #184	; 0xb8
    3d46:	6852      	ldr	r2, [r2, #4]
    3d48:	33a8      	adds	r3, #168	; 0xa8
    3d4a:	681b      	ldr	r3, [r3, #0]
    3d4c:	2a00      	cmp	r2, #0
    3d4e:	d006      	beq.n	3d5e <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq+0x26>
    3d50:	2b00      	cmp	r3, #0
    3d52:	d003      	beq.n	3d5c <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq+0x24>
    3d54:	1841      	adds	r1, r0, r1
    3d56:	31ac      	adds	r1, #172	; 0xac
    3d58:	1c18      	adds	r0, r3, #0
    3d5a:	4790      	blx	r2
    3d5c:	bd08      	pop	{r3, pc}
    3d5e:	2b00      	cmp	r3, #0
    3d60:	d0fc      	beq.n	3d5c <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq+0x24>
    3d62:	4798      	blx	r3
    3d64:	e7fa      	b.n	3d5c <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq+0x24>
    3d66:	46c0      	nop			; (mov r8, r8)

00003d68 <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E>:
    3d68:	b510      	push	{r4, lr}
    3d6a:	2800      	cmp	r0, #0
    3d6c:	d008      	beq.n	3d80 <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    3d6e:	6814      	ldr	r4, [r2, #0]
    3d70:	6853      	ldr	r3, [r2, #4]
    3d72:	2c00      	cmp	r4, #0
    3d74:	d005      	beq.n	3d82 <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x1a>
    3d76:	07da      	lsls	r2, r3, #31
    3d78:	d405      	bmi.n	3d86 <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x1e>
    3d7a:	105b      	asrs	r3, r3, #1
    3d7c:	18c0      	adds	r0, r0, r3
    3d7e:	47a0      	blx	r4
    3d80:	bd10      	pop	{r4, pc}
    3d82:	07da      	lsls	r2, r3, #31
    3d84:	d5fc      	bpl.n	3d80 <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    3d86:	105b      	asrs	r3, r3, #1
    3d88:	18c0      	adds	r0, r0, r3
    3d8a:	6803      	ldr	r3, [r0, #0]
    3d8c:	591c      	ldr	r4, [r3, r4]
    3d8e:	47a0      	blx	r4
    3d90:	e7f6      	b.n	3d80 <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    3d92:	46c0      	nop			; (mov r8, r8)

00003d94 <_ZN4mbed10SerialBaseC1E7PinNameS1_>:
    3d94:	b5f0      	push	{r4, r5, r6, r7, lr}
    3d96:	4647      	mov	r7, r8
    3d98:	b480      	push	{r7}
    3d9a:	4b24      	ldr	r3, [pc, #144]	; (3e2c <_ZN4mbed10SerialBaseC1E7PinNameS1_+0x98>)
    3d9c:	b082      	sub	sp, #8
    3d9e:	6003      	str	r3, [r0, #0]
    3da0:	2500      	movs	r5, #0
    3da2:	1c03      	adds	r3, r0, #0
    3da4:	1c17      	adds	r7, r2, #0
    3da6:	466a      	mov	r2, sp
    3da8:	1c04      	adds	r4, r0, #0
    3daa:	9500      	str	r5, [sp, #0]
    3dac:	9501      	str	r5, [sp, #4]
    3dae:	3308      	adds	r3, #8
    3db0:	4688      	mov	r8, r1
    3db2:	ca03      	ldmia	r2!, {r0, r1}
    3db4:	c303      	stmia	r3!, {r0, r1}
    3db6:	4b1e      	ldr	r3, [pc, #120]	; (3e30 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0x9c>)
    3db8:	6123      	str	r3, [r4, #16]
    3dba:	4b1e      	ldr	r3, [pc, #120]	; (3e34 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0xa0>)
    3dbc:	6163      	str	r3, [r4, #20]
    3dbe:	4b1e      	ldr	r3, [pc, #120]	; (3e38 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0xa4>)
    3dc0:	61a3      	str	r3, [r4, #24]
    3dc2:	1c23      	adds	r3, r4, #0
    3dc4:	3308      	adds	r3, #8
    3dc6:	6225      	str	r5, [r4, #32]
    3dc8:	61e4      	str	r4, [r4, #28]
    3dca:	6263      	str	r3, [r4, #36]	; 0x24
    3dcc:	4b1b      	ldr	r3, [pc, #108]	; (3e3c <_ZN4mbed10SerialBaseC1E7PinNameS1_+0xa8>)
    3dce:	62a3      	str	r3, [r4, #40]	; 0x28
    3dd0:	f3bf 8f6f 	isb	sy
    3dd4:	f3bf 8f4f 	dsb	sy
    3dd8:	235c      	movs	r3, #92	; 0x5c
    3dda:	1c26      	adds	r6, r4, #0
    3ddc:	62e5      	str	r5, [r4, #44]	; 0x2c
    3dde:	6425      	str	r5, [r4, #64]	; 0x40
    3de0:	6465      	str	r5, [r4, #68]	; 0x44
    3de2:	65a5      	str	r5, [r4, #88]	; 0x58
    3de4:	3660      	adds	r6, #96	; 0x60
    3de6:	54e5      	strb	r5, [r4, r3]
    3de8:	3301      	adds	r3, #1
    3dea:	54e5      	strb	r5, [r4, r3]
    3dec:	1c30      	adds	r0, r6, #0
    3dee:	2100      	movs	r1, #0
    3df0:	2248      	movs	r2, #72	; 0x48
    3df2:	f002 fb85 	bl	6500 <memset>
    3df6:	23a8      	movs	r3, #168	; 0xa8
    3df8:	2296      	movs	r2, #150	; 0x96
    3dfa:	50e5      	str	r5, [r4, r3]
    3dfc:	3314      	adds	r3, #20
    3dfe:	50e5      	str	r5, [r4, r3]
    3e00:	3304      	adds	r3, #4
    3e02:	50e5      	str	r5, [r4, r3]
    3e04:	3314      	adds	r3, #20
    3e06:	50e5      	str	r5, [r4, r3]
    3e08:	0192      	lsls	r2, r2, #6
    3e0a:	3304      	adds	r3, #4
    3e0c:	50e2      	str	r2, [r4, r3]
    3e0e:	1c30      	adds	r0, r6, #0
    3e10:	4641      	mov	r1, r8
    3e12:	1c3a      	adds	r2, r7, #0
    3e14:	f7ff fb5c 	bl	34d0 <serial_init>
    3e18:	1c30      	adds	r0, r6, #0
    3e1a:	4909      	ldr	r1, [pc, #36]	; (3e40 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0xac>)
    3e1c:	1c22      	adds	r2, r4, #0
    3e1e:	f7ff fc7b 	bl	3718 <serial_irq_handler>
    3e22:	1c20      	adds	r0, r4, #0
    3e24:	b002      	add	sp, #8
    3e26:	bc04      	pop	{r2}
    3e28:	4690      	mov	r8, r2
    3e2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3e2c:	0000d7d8 	.word	0x0000d7d8
    3e30:	2404b51f 	.word	0x2404b51f
    3e34:	cc0f447c 	.word	0xcc0f447c
    3e38:	bd1f4798 	.word	0xbd1f4798
    3e3c:	00003d69 	.word	0x00003d69
    3e40:	00003d39 	.word	0x00003d39

00003e44 <_ZN4mbed10SerialBase10_base_getcEv>:
    3e44:	b508      	push	{r3, lr}
    3e46:	3060      	adds	r0, #96	; 0x60
    3e48:	f7ff fd62 	bl	3910 <serial_getc>
    3e4c:	bd08      	pop	{r3, pc}
    3e4e:	46c0      	nop			; (mov r8, r8)

00003e50 <_ZN4mbed10SerialBase10_base_putcEi>:
    3e50:	b510      	push	{r4, lr}
    3e52:	1c0c      	adds	r4, r1, #0
    3e54:	3060      	adds	r0, #96	; 0x60
    3e56:	f7ff fd87 	bl	3968 <serial_putc>
    3e5a:	1c20      	adds	r0, r4, #0
    3e5c:	bd10      	pop	{r4, pc}
    3e5e:	46c0      	nop			; (mov r8, r8)

00003e60 <_ZN4mbed6Stream5closeEv>:
    3e60:	2000      	movs	r0, #0
    3e62:	4770      	bx	lr

00003e64 <_ZN4mbed6Stream5writeEPKvj>:
    3e64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3e66:	188e      	adds	r6, r1, r2
    3e68:	1c05      	adds	r5, r0, #0
    3e6a:	1c0f      	adds	r7, r1, #0
    3e6c:	1e0c      	subs	r4, r1, #0
    3e6e:	42b4      	cmp	r4, r6
    3e70:	d102      	bne.n	3e78 <_ZN4mbed6Stream5writeEPKvj+0x14>
    3e72:	e00a      	b.n	3e8a <_ZN4mbed6Stream5writeEPKvj+0x26>
    3e74:	42a6      	cmp	r6, r4
    3e76:	d008      	beq.n	3e8a <_ZN4mbed6Stream5writeEPKvj+0x26>
    3e78:	3401      	adds	r4, #1
    3e7a:	682b      	ldr	r3, [r5, #0]
    3e7c:	1e62      	subs	r2, r4, #1
    3e7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3e80:	7811      	ldrb	r1, [r2, #0]
    3e82:	1c28      	adds	r0, r5, #0
    3e84:	4798      	blx	r3
    3e86:	1c43      	adds	r3, r0, #1
    3e88:	d1f4      	bne.n	3e74 <_ZN4mbed6Stream5writeEPKvj+0x10>
    3e8a:	1be0      	subs	r0, r4, r7
    3e8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3e8e:	46c0      	nop			; (mov r8, r8)

00003e90 <_ZN4mbed6Stream4readEPvj>:
    3e90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3e92:	188e      	adds	r6, r1, r2
    3e94:	1c05      	adds	r5, r0, #0
    3e96:	1c0f      	adds	r7, r1, #0
    3e98:	1e0c      	subs	r4, r1, #0
    3e9a:	42b4      	cmp	r4, r6
    3e9c:	d105      	bne.n	3eaa <_ZN4mbed6Stream4readEPvj+0x1a>
    3e9e:	e00a      	b.n	3eb6 <_ZN4mbed6Stream4readEPvj+0x26>
    3ea0:	3401      	adds	r4, #1
    3ea2:	1e63      	subs	r3, r4, #1
    3ea4:	7018      	strb	r0, [r3, #0]
    3ea6:	42a6      	cmp	r6, r4
    3ea8:	d005      	beq.n	3eb6 <_ZN4mbed6Stream4readEPvj+0x26>
    3eaa:	682b      	ldr	r3, [r5, #0]
    3eac:	1c28      	adds	r0, r5, #0
    3eae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    3eb0:	4798      	blx	r3
    3eb2:	1c43      	adds	r3, r0, #1
    3eb4:	d1f4      	bne.n	3ea0 <_ZN4mbed6Stream4readEPvj+0x10>
    3eb6:	1be0      	subs	r0, r4, r7
    3eb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3eba:	46c0      	nop			; (mov r8, r8)

00003ebc <_ZN4mbed6Stream5lseekEli>:
    3ebc:	2000      	movs	r0, #0
    3ebe:	4770      	bx	lr

00003ec0 <_ZN4mbed6Stream6isattyEv>:
    3ec0:	2000      	movs	r0, #0
    3ec2:	4770      	bx	lr

00003ec4 <_ZN4mbed6Stream5fsyncEv>:
    3ec4:	2000      	movs	r0, #0
    3ec6:	4770      	bx	lr

00003ec8 <_ZN4mbed6Stream4flenEv>:
    3ec8:	2000      	movs	r0, #0
    3eca:	4770      	bx	lr

00003ecc <_ZN4mbed6StreamC1EPKc>:
    3ecc:	b510      	push	{r4, lr}
    3ece:	1c04      	adds	r4, r0, #0
    3ed0:	b084      	sub	sp, #16
    3ed2:	f001 fa71 	bl	53b8 <_ZN4mbed8FileLikeC1EPKc>
    3ed6:	4b0b      	ldr	r3, [pc, #44]	; (3f04 <_ZN4mbed6StreamC1EPKc+0x38>)
    3ed8:	a801      	add	r0, sp, #4
    3eda:	1c1a      	adds	r2, r3, #0
    3edc:	333c      	adds	r3, #60	; 0x3c
    3ede:	6063      	str	r3, [r4, #4]
    3ee0:	2300      	movs	r3, #0
    3ee2:	3208      	adds	r2, #8
    3ee4:	6163      	str	r3, [r4, #20]
    3ee6:	6022      	str	r2, [r4, #0]
    3ee8:	4907      	ldr	r1, [pc, #28]	; (3f08 <_ZN4mbed6StreamC1EPKc+0x3c>)
    3eea:	1c22      	adds	r2, r4, #0
    3eec:	f003 fef6 	bl	7cdc <siprintf>
    3ef0:	4906      	ldr	r1, [pc, #24]	; (3f0c <_ZN4mbed6StreamC1EPKc+0x40>)
    3ef2:	a801      	add	r0, sp, #4
    3ef4:	f002 f946 	bl	6184 <fopen>
    3ef8:	6160      	str	r0, [r4, #20]
    3efa:	f7fe fe5f 	bl	2bbc <_ZN4mbed26mbed_set_unbuffered_streamEP7__sFILE>
    3efe:	1c20      	adds	r0, r4, #0
    3f00:	b004      	add	sp, #16
    3f02:	bd10      	pop	{r4, pc}
    3f04:	0000d7e0 	.word	0x0000d7e0
    3f08:	0000d424 	.word	0x0000d424
    3f0c:	0000d824 	.word	0x0000d824

00003f10 <_ZN4mbed6StreamD1Ev>:
    3f10:	4b07      	ldr	r3, [pc, #28]	; (3f30 <_ZN4mbed6StreamD1Ev+0x20>)
    3f12:	b510      	push	{r4, lr}
    3f14:	1c1a      	adds	r2, r3, #0
    3f16:	1c04      	adds	r4, r0, #0
    3f18:	3208      	adds	r2, #8
    3f1a:	333c      	adds	r3, #60	; 0x3c
    3f1c:	6002      	str	r2, [r0, #0]
    3f1e:	6043      	str	r3, [r0, #4]
    3f20:	6940      	ldr	r0, [r0, #20]
    3f22:	f001 ff31 	bl	5d88 <fclose>
    3f26:	1c20      	adds	r0, r4, #0
    3f28:	f001 fa5a 	bl	53e0 <_ZN4mbed8FileLikeD1Ev>
    3f2c:	1c20      	adds	r0, r4, #0
    3f2e:	bd10      	pop	{r4, pc}
    3f30:	0000d7e0 	.word	0x0000d7e0

00003f34 <_ZN4mbed6Stream4putcEi>:
    3f34:	b538      	push	{r3, r4, r5, lr}
    3f36:	1c0d      	adds	r5, r1, #0
    3f38:	1c04      	adds	r4, r0, #0
    3f3a:	6940      	ldr	r0, [r0, #20]
    3f3c:	f001 ffe4 	bl	5f08 <fflush>
    3f40:	1c28      	adds	r0, r5, #0
    3f42:	6961      	ldr	r1, [r4, #20]
    3f44:	f002 f950 	bl	61e8 <fputc>
    3f48:	bd38      	pop	{r3, r4, r5, pc}
    3f4a:	46c0      	nop			; (mov r8, r8)

00003f4c <_ZN4mbed6Stream4getcEv>:
    3f4c:	b510      	push	{r4, lr}
    3f4e:	1c04      	adds	r4, r0, #0
    3f50:	6940      	ldr	r0, [r0, #20]
    3f52:	f001 ffd9 	bl	5f08 <fflush>
    3f56:	6960      	ldr	r0, [r4, #20]
    3f58:	f7fe fe36 	bl	2bc8 <_ZN4mbed9mbed_getcEP7__sFILE>
    3f5c:	bd10      	pop	{r4, pc}
    3f5e:	46c0      	nop			; (mov r8, r8)

00003f60 <_ZN4mbed6Stream6printfEPKcz>:
    3f60:	b40e      	push	{r1, r2, r3}
    3f62:	b530      	push	{r4, r5, lr}
    3f64:	1c04      	adds	r4, r0, #0
    3f66:	b082      	sub	sp, #8
    3f68:	ab05      	add	r3, sp, #20
    3f6a:	cb20      	ldmia	r3!, {r5}
    3f6c:	6940      	ldr	r0, [r0, #20]
    3f6e:	9301      	str	r3, [sp, #4]
    3f70:	f001 ffca 	bl	5f08 <fflush>
    3f74:	6960      	ldr	r0, [r4, #20]
    3f76:	1c29      	adds	r1, r5, #0
    3f78:	9a01      	ldr	r2, [sp, #4]
    3f7a:	f002 fc9f 	bl	68bc <vfiprintf>
    3f7e:	b002      	add	sp, #8
    3f80:	bc30      	pop	{r4, r5}
    3f82:	bc08      	pop	{r3}
    3f84:	b003      	add	sp, #12
    3f86:	4718      	bx	r3

00003f88 <mbed_assert_internal>:
    3f88:	b538      	push	{r3, r4, r5, lr}
    3f8a:	1c05      	adds	r5, r0, #0
    3f8c:	1c0c      	adds	r4, r1, #0
    3f8e:	1c13      	adds	r3, r2, #0
    3f90:	1c29      	adds	r1, r5, #0
    3f92:	4802      	ldr	r0, [pc, #8]	; (3f9c <mbed_assert_internal+0x14>)
    3f94:	1c22      	adds	r2, r4, #0
    3f96:	f000 f803 	bl	3fa0 <error>
    3f9a:	bd38      	pop	{r3, r4, r5, pc}
    3f9c:	0000d828 	.word	0x0000d828

00003fa0 <error>:
    3fa0:	b40f      	push	{r0, r1, r2, r3}
    3fa2:	2001      	movs	r0, #1
    3fa4:	b508      	push	{r3, lr}
    3fa6:	f001 fe81 	bl	5cac <exit>
    3faa:	46c0      	nop			; (mov r8, r8)

00003fac <gpio_init_in>:
    3fac:	b538      	push	{r3, r4, r5, lr}
    3fae:	1c0d      	adds	r5, r1, #0
    3fb0:	1c04      	adds	r4, r0, #0
    3fb2:	f000 fba1 	bl	46f8 <gpio_init>
    3fb6:	1c6b      	adds	r3, r5, #1
    3fb8:	d007      	beq.n	3fca <gpio_init_in+0x1e>
    3fba:	1c20      	adds	r0, r4, #0
    3fbc:	2100      	movs	r1, #0
    3fbe:	f000 fc03 	bl	47c8 <gpio_dir>
    3fc2:	1c20      	adds	r0, r4, #0
    3fc4:	2101      	movs	r1, #1
    3fc6:	f000 fbd7 	bl	4778 <gpio_mode>
    3fca:	bd38      	pop	{r3, r4, r5, pc}

00003fcc <gpio_init_out>:
    3fcc:	b538      	push	{r3, r4, r5, lr}
    3fce:	1c0d      	adds	r5, r1, #0
    3fd0:	1c04      	adds	r4, r0, #0
    3fd2:	f000 fb91 	bl	46f8 <gpio_init>
    3fd6:	1c6b      	adds	r3, r5, #1
    3fd8:	d00e      	beq.n	3ff8 <gpio_init_out+0x2c>
    3fda:	2300      	movs	r3, #0
    3fdc:	56e3      	ldrsb	r3, [r4, r3]
    3fde:	3301      	adds	r3, #1
    3fe0:	d00b      	beq.n	3ffa <gpio_init_out+0x2e>
    3fe2:	68e3      	ldr	r3, [r4, #12]
    3fe4:	6862      	ldr	r2, [r4, #4]
    3fe6:	1c20      	adds	r0, r4, #0
    3fe8:	2101      	movs	r1, #1
    3fea:	601a      	str	r2, [r3, #0]
    3fec:	f000 fbec 	bl	47c8 <gpio_dir>
    3ff0:	1c20      	adds	r0, r4, #0
    3ff2:	2100      	movs	r1, #0
    3ff4:	f000 fbc0 	bl	4778 <gpio_mode>
    3ff8:	bd38      	pop	{r3, r4, r5, pc}
    3ffa:	4803      	ldr	r0, [pc, #12]	; (4008 <gpio_init_out+0x3c>)
    3ffc:	4903      	ldr	r1, [pc, #12]	; (400c <gpio_init_out+0x40>)
    3ffe:	2228      	movs	r2, #40	; 0x28
    4000:	f7ff ffc2 	bl	3f88 <mbed_assert_internal>
    4004:	e7ed      	b.n	3fe2 <gpio_init_out+0x16>
    4006:	46c0      	nop			; (mov r8, r8)
    4008:	0000d268 	.word	0x0000d268
    400c:	0000d85c 	.word	0x0000d85c

00004010 <pinmap_find_peripheral>:
    4010:	e002      	b.n	4018 <pinmap_find_peripheral+0x8>
    4012:	4283      	cmp	r3, r0
    4014:	d006      	beq.n	4024 <pinmap_find_peripheral+0x14>
    4016:	310c      	adds	r1, #12
    4018:	2300      	movs	r3, #0
    401a:	56cb      	ldrsb	r3, [r1, r3]
    401c:	1c5a      	adds	r2, r3, #1
    401e:	d1f8      	bne.n	4012 <pinmap_find_peripheral+0x2>
    4020:	1c18      	adds	r0, r3, #0
    4022:	4770      	bx	lr
    4024:	6848      	ldr	r0, [r1, #4]
    4026:	e7fc      	b.n	4022 <pinmap_find_peripheral+0x12>

00004028 <pinmap_peripheral>:
    4028:	1c02      	adds	r2, r0, #0
    402a:	b508      	push	{r3, lr}
    402c:	1c53      	adds	r3, r2, #1
    402e:	d103      	bne.n	4038 <pinmap_peripheral+0x10>
    4030:	e00b      	b.n	404a <pinmap_peripheral+0x22>
    4032:	429a      	cmp	r2, r3
    4034:	d00a      	beq.n	404c <pinmap_peripheral+0x24>
    4036:	310c      	adds	r1, #12
    4038:	2300      	movs	r3, #0
    403a:	56cb      	ldrsb	r3, [r1, r3]
    403c:	1c58      	adds	r0, r3, #1
    403e:	d1f8      	bne.n	4032 <pinmap_peripheral+0xa>
    4040:	4804      	ldr	r0, [pc, #16]	; (4054 <pinmap_peripheral+0x2c>)
    4042:	f7ff ffad 	bl	3fa0 <error>
    4046:	2001      	movs	r0, #1
    4048:	4240      	negs	r0, r0
    404a:	bd08      	pop	{r3, pc}
    404c:	6848      	ldr	r0, [r1, #4]
    404e:	1c43      	adds	r3, r0, #1
    4050:	d1fb      	bne.n	404a <pinmap_peripheral+0x22>
    4052:	e7f5      	b.n	4040 <pinmap_peripheral+0x18>
    4054:	0000d8fc 	.word	0x0000d8fc

00004058 <pinmap_function>:
    4058:	1c02      	adds	r2, r0, #0
    405a:	b508      	push	{r3, lr}
    405c:	1c53      	adds	r3, r2, #1
    405e:	d103      	bne.n	4068 <pinmap_function+0x10>
    4060:	e00b      	b.n	407a <pinmap_function+0x22>
    4062:	429a      	cmp	r2, r3
    4064:	d00a      	beq.n	407c <pinmap_function+0x24>
    4066:	310c      	adds	r1, #12
    4068:	2300      	movs	r3, #0
    406a:	56cb      	ldrsb	r3, [r1, r3]
    406c:	1c58      	adds	r0, r3, #1
    406e:	d1f8      	bne.n	4062 <pinmap_function+0xa>
    4070:	4804      	ldr	r0, [pc, #16]	; (4084 <pinmap_function+0x2c>)
    4072:	f7ff ff95 	bl	3fa0 <error>
    4076:	2001      	movs	r0, #1
    4078:	4240      	negs	r0, r0
    407a:	bd08      	pop	{r3, pc}
    407c:	6888      	ldr	r0, [r1, #8]
    407e:	1c43      	adds	r3, r0, #1
    4080:	d1fb      	bne.n	407a <pinmap_function+0x22>
    4082:	e7f5      	b.n	4070 <pinmap_function+0x18>
    4084:	0000d91c 	.word	0x0000d91c

00004088 <wait_us>:
    4088:	b538      	push	{r3, r4, r5, lr}
    408a:	1c05      	adds	r5, r0, #0
    408c:	f000 fdc2 	bl	4c14 <us_ticker_read>
    4090:	1c04      	adds	r4, r0, #0
    4092:	f000 fdbf 	bl	4c14 <us_ticker_read>
    4096:	1b00      	subs	r0, r0, r4
    4098:	42a8      	cmp	r0, r5
    409a:	d3fa      	bcc.n	4092 <wait_us+0xa>
    409c:	bd38      	pop	{r3, r4, r5, pc}
    409e:	46c0      	nop			; (mov r8, r8)

000040a0 <wait_ms>:
    40a0:	b508      	push	{r3, lr}
    40a2:	23fa      	movs	r3, #250	; 0xfa
    40a4:	009b      	lsls	r3, r3, #2
    40a6:	4358      	muls	r0, r3
    40a8:	f7ff ffee 	bl	4088 <wait_us>
    40ac:	bd08      	pop	{r3, pc}
    40ae:	46c0      	nop			; (mov r8, r8)

000040b0 <_extint_enable>:
    40b0:	2302      	movs	r3, #2
    40b2:	4a04      	ldr	r2, [pc, #16]	; (40c4 <_extint_enable+0x14>)
    40b4:	7811      	ldrb	r1, [r2, #0]
    40b6:	430b      	orrs	r3, r1
    40b8:	7013      	strb	r3, [r2, #0]
    40ba:	7853      	ldrb	r3, [r2, #1]
    40bc:	b25b      	sxtb	r3, r3
    40be:	2b00      	cmp	r3, #0
    40c0:	dbfb      	blt.n	40ba <_extint_enable+0xa>
    40c2:	4770      	bx	lr
    40c4:	40001800 	.word	0x40001800

000040c8 <_system_extint_init>:
    40c8:	2340      	movs	r3, #64	; 0x40
    40ca:	b500      	push	{lr}
    40cc:	4a12      	ldr	r2, [pc, #72]	; (4118 <_system_extint_init+0x50>)
    40ce:	b083      	sub	sp, #12
    40d0:	6991      	ldr	r1, [r2, #24]
    40d2:	2005      	movs	r0, #5
    40d4:	430b      	orrs	r3, r1
    40d6:	6193      	str	r3, [r2, #24]
    40d8:	2300      	movs	r3, #0
    40da:	a901      	add	r1, sp, #4
    40dc:	700b      	strb	r3, [r1, #0]
    40de:	f7fe fea9 	bl	2e34 <system_gclk_chan_set_config>
    40e2:	2005      	movs	r0, #5
    40e4:	f7fe fe68 	bl	2db8 <system_gclk_chan_enable>
    40e8:	2301      	movs	r3, #1
    40ea:	4a0c      	ldr	r2, [pc, #48]	; (411c <_system_extint_init+0x54>)
    40ec:	7811      	ldrb	r1, [r2, #0]
    40ee:	430b      	orrs	r3, r1
    40f0:	7013      	strb	r3, [r2, #0]
    40f2:	7853      	ldrb	r3, [r2, #1]
    40f4:	b25b      	sxtb	r3, r3
    40f6:	2b00      	cmp	r3, #0
    40f8:	dbfb      	blt.n	40f2 <_system_extint_init+0x2a>
    40fa:	4b09      	ldr	r3, [pc, #36]	; (4120 <_system_extint_init+0x58>)
    40fc:	2200      	movs	r2, #0
    40fe:	1c19      	adds	r1, r3, #0
    4100:	3140      	adds	r1, #64	; 0x40
    4102:	c304      	stmia	r3!, {r2}
    4104:	428b      	cmp	r3, r1
    4106:	d1fc      	bne.n	4102 <_system_extint_init+0x3a>
    4108:	2210      	movs	r2, #16
    410a:	4b06      	ldr	r3, [pc, #24]	; (4124 <_system_extint_init+0x5c>)
    410c:	601a      	str	r2, [r3, #0]
    410e:	f7ff ffcf 	bl	40b0 <_extint_enable>
    4112:	b003      	add	sp, #12
    4114:	bd00      	pop	{pc}
    4116:	46c0      	nop			; (mov r8, r8)
    4118:	40000400 	.word	0x40000400
    411c:	40001800 	.word	0x40001800
    4120:	20004004 	.word	0x20004004
    4124:	e000e100 	.word	0xe000e100

00004128 <extint_chan_get_config_defaults>:
    4128:	2300      	movs	r3, #0
    412a:	2201      	movs	r2, #1
    412c:	6003      	str	r3, [r0, #0]
    412e:	6043      	str	r3, [r0, #4]
    4130:	7283      	strb	r3, [r0, #10]
    4132:	3302      	adds	r3, #2
    4134:	7202      	strb	r2, [r0, #8]
    4136:	7242      	strb	r2, [r0, #9]
    4138:	72c3      	strb	r3, [r0, #11]
    413a:	4770      	bx	lr

0000413c <extint_chan_set_config>:
    413c:	b5f0      	push	{r4, r5, r6, r7, lr}
    413e:	2300      	movs	r3, #0
    4140:	1c0c      	adds	r4, r1, #0
    4142:	b083      	sub	sp, #12
    4144:	a901      	add	r1, sp, #4
    4146:	704b      	strb	r3, [r1, #1]
    4148:	70cb      	strb	r3, [r1, #3]
    414a:	7923      	ldrb	r3, [r4, #4]
    414c:	1c05      	adds	r5, r0, #0
    414e:	700b      	strb	r3, [r1, #0]
    4150:	7a23      	ldrb	r3, [r4, #8]
    4152:	7820      	ldrb	r0, [r4, #0]
    4154:	708b      	strb	r3, [r1, #2]
    4156:	2600      	movs	r6, #0
    4158:	f000 faa0 	bl	469c <system_pinmux_pin_set_config>
    415c:	2d1f      	cmp	r5, #31
    415e:	d800      	bhi.n	4162 <extint_chan_set_config+0x26>
    4160:	4e12      	ldr	r6, [pc, #72]	; (41ac <extint_chan_set_config+0x70>)
    4162:	2207      	movs	r2, #7
    4164:	7aa3      	ldrb	r3, [r4, #10]
    4166:	402a      	ands	r2, r5
    4168:	0092      	lsls	r2, r2, #2
    416a:	7ae0      	ldrb	r0, [r4, #11]
    416c:	2b00      	cmp	r3, #0
    416e:	d001      	beq.n	4174 <extint_chan_set_config+0x38>
    4170:	2308      	movs	r3, #8
    4172:	4318      	orrs	r0, r3
    4174:	270f      	movs	r7, #15
    4176:	4097      	lsls	r7, r2
    4178:	08eb      	lsrs	r3, r5, #3
    417a:	009b      	lsls	r3, r3, #2
    417c:	18f3      	adds	r3, r6, r3
    417e:	6999      	ldr	r1, [r3, #24]
    4180:	4090      	lsls	r0, r2
    4182:	43b9      	bics	r1, r7
    4184:	1c0a      	adds	r2, r1, #0
    4186:	4302      	orrs	r2, r0
    4188:	619a      	str	r2, [r3, #24]
    418a:	7a63      	ldrb	r3, [r4, #9]
    418c:	2b00      	cmp	r3, #0
    418e:	d106      	bne.n	419e <extint_chan_set_config+0x62>
    4190:	2201      	movs	r2, #1
    4192:	40aa      	lsls	r2, r5
    4194:	6973      	ldr	r3, [r6, #20]
    4196:	4393      	bics	r3, r2
    4198:	6173      	str	r3, [r6, #20]
    419a:	b003      	add	sp, #12
    419c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    419e:	2201      	movs	r2, #1
    41a0:	40aa      	lsls	r2, r5
    41a2:	1c15      	adds	r5, r2, #0
    41a4:	6973      	ldr	r3, [r6, #20]
    41a6:	431d      	orrs	r5, r3
    41a8:	6175      	str	r5, [r6, #20]
    41aa:	e7f6      	b.n	419a <extint_chan_set_config+0x5e>
    41ac:	40001800 	.word	0x40001800

000041b0 <_sercom_get_sync_baud_val>:
    41b0:	b510      	push	{r4, lr}
    41b2:	0849      	lsrs	r1, r1, #1
    41b4:	2340      	movs	r3, #64	; 0x40
    41b6:	2400      	movs	r4, #0
    41b8:	4281      	cmp	r1, r0
    41ba:	d202      	bcs.n	41c2 <_sercom_get_sync_baud_val+0x12>
    41bc:	1c18      	adds	r0, r3, #0
    41be:	bd10      	pop	{r4, pc}
    41c0:	1c1c      	adds	r4, r3, #0
    41c2:	1c63      	adds	r3, r4, #1
    41c4:	1a09      	subs	r1, r1, r0
    41c6:	b29b      	uxth	r3, r3
    41c8:	4288      	cmp	r0, r1
    41ca:	d9f9      	bls.n	41c0 <_sercom_get_sync_baud_val+0x10>
    41cc:	2340      	movs	r3, #64	; 0x40
    41ce:	2cff      	cmp	r4, #255	; 0xff
    41d0:	d8f4      	bhi.n	41bc <_sercom_get_sync_baud_val+0xc>
    41d2:	8014      	strh	r4, [r2, #0]
    41d4:	2300      	movs	r3, #0
    41d6:	e7f1      	b.n	41bc <_sercom_get_sync_baud_val+0xc>

000041d8 <_sercom_get_async_baud_val>:
    41d8:	b5f0      	push	{r4, r5, r6, r7, lr}
    41da:	4656      	mov	r6, sl
    41dc:	464d      	mov	r5, r9
    41de:	4644      	mov	r4, r8
    41e0:	465f      	mov	r7, fp
    41e2:	b4f0      	push	{r4, r5, r6, r7}
    41e4:	1c04      	adds	r4, r0, #0
    41e6:	1c25      	adds	r5, r4, #0
    41e8:	b087      	sub	sp, #28
    41ea:	a810      	add	r0, sp, #64	; 0x40
    41ec:	7806      	ldrb	r6, [r0, #0]
    41ee:	2040      	movs	r0, #64	; 0x40
    41f0:	4375      	muls	r5, r6
    41f2:	428d      	cmp	r5, r1
    41f4:	d906      	bls.n	4204 <_sercom_get_async_baud_val+0x2c>
    41f6:	b007      	add	sp, #28
    41f8:	bc3c      	pop	{r2, r3, r4, r5}
    41fa:	4690      	mov	r8, r2
    41fc:	4699      	mov	r9, r3
    41fe:	46a2      	mov	sl, r4
    4200:	46ab      	mov	fp, r5
    4202:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4204:	9204      	str	r2, [sp, #16]
    4206:	1c0d      	adds	r5, r1, #0
    4208:	1c22      	adds	r2, r4, #0
    420a:	2b00      	cmp	r3, #0
    420c:	d13f      	bne.n	428e <_sercom_get_async_baud_val+0xb6>
    420e:	1c30      	adds	r0, r6, #0
    4210:	2100      	movs	r1, #0
    4212:	f001 fce7 	bl	5be4 <__aeabi_lmul>
    4216:	2300      	movs	r3, #0
    4218:	4683      	mov	fp, r0
    421a:	213f      	movs	r1, #63	; 0x3f
    421c:	2001      	movs	r0, #1
    421e:	469c      	mov	ip, r3
    4220:	469a      	mov	sl, r3
    4222:	1c2e      	adds	r6, r5, #0
    4224:	2700      	movs	r7, #0
    4226:	2200      	movs	r2, #0
    4228:	2300      	movs	r3, #0
    422a:	4680      	mov	r8, r0
    422c:	1c0c      	adds	r4, r1, #0
    422e:	e024      	b.n	427a <_sercom_get_async_baud_val+0xa2>
    4230:	4641      	mov	r1, r8
    4232:	40a9      	lsls	r1, r5
    4234:	1c0d      	adds	r5, r1, #0
    4236:	4641      	mov	r1, r8
    4238:	40a1      	lsls	r1, r4
    423a:	1c10      	adds	r0, r2, #0
    423c:	4689      	mov	r9, r1
    423e:	1c19      	adds	r1, r3, #0
    4240:	1880      	adds	r0, r0, r2
    4242:	4159      	adcs	r1, r3
    4244:	1c0b      	adds	r3, r1, #0
    4246:	1c02      	adds	r2, r0, #0
    4248:	4659      	mov	r1, fp
    424a:	9200      	str	r2, [sp, #0]
    424c:	9301      	str	r3, [sp, #4]
    424e:	4229      	tst	r1, r5
    4250:	d003      	beq.n	425a <_sercom_get_async_baud_val+0x82>
    4252:	4640      	mov	r0, r8
    4254:	4310      	orrs	r0, r2
    4256:	1c02      	adds	r2, r0, #0
    4258:	9b01      	ldr	r3, [sp, #4]
    425a:	429f      	cmp	r7, r3
    425c:	d80b      	bhi.n	4276 <_sercom_get_async_baud_val+0x9e>
    425e:	d101      	bne.n	4264 <_sercom_get_async_baud_val+0x8c>
    4260:	4296      	cmp	r6, r2
    4262:	d808      	bhi.n	4276 <_sercom_get_async_baud_val+0x9e>
    4264:	4661      	mov	r1, ip
    4266:	4648      	mov	r0, r9
    4268:	4301      	orrs	r1, r0
    426a:	4650      	mov	r0, sl
    426c:	4328      	orrs	r0, r5
    426e:	1b92      	subs	r2, r2, r6
    4270:	41bb      	sbcs	r3, r7
    4272:	468c      	mov	ip, r1
    4274:	4682      	mov	sl, r0
    4276:	3c01      	subs	r4, #1
    4278:	d310      	bcc.n	429c <_sercom_get_async_baud_val+0xc4>
    427a:	2120      	movs	r1, #32
    427c:	4249      	negs	r1, r1
    427e:	1865      	adds	r5, r4, r1
    4280:	d5d6      	bpl.n	4230 <_sercom_get_async_baud_val+0x58>
    4282:	2120      	movs	r1, #32
    4284:	1b0d      	subs	r5, r1, r4
    4286:	4641      	mov	r1, r8
    4288:	40e9      	lsrs	r1, r5
    428a:	1c0d      	adds	r5, r1, #0
    428c:	e7d3      	b.n	4236 <_sercom_get_async_baud_val+0x5e>
    428e:	2400      	movs	r4, #0
    4290:	2b01      	cmp	r3, #1
    4292:	d007      	beq.n	42a4 <_sercom_get_async_baud_val+0xcc>
    4294:	9b04      	ldr	r3, [sp, #16]
    4296:	2000      	movs	r0, #0
    4298:	801c      	strh	r4, [r3, #0]
    429a:	e7ac      	b.n	41f6 <_sercom_get_async_baud_val+0x1e>
    429c:	4663      	mov	r3, ip
    429e:	425c      	negs	r4, r3
    42a0:	0c24      	lsrs	r4, r4, #16
    42a2:	e7f7      	b.n	4294 <_sercom_get_async_baud_val+0xbc>
    42a4:	0f4b      	lsrs	r3, r1, #29
    42a6:	1c1c      	adds	r4, r3, #0
    42a8:	00cb      	lsls	r3, r1, #3
    42aa:	4698      	mov	r8, r3
    42ac:	1c30      	adds	r0, r6, #0
    42ae:	2300      	movs	r3, #0
    42b0:	2100      	movs	r1, #0
    42b2:	f001 fc97 	bl	5be4 <__aeabi_lmul>
    42b6:	2300      	movs	r3, #0
    42b8:	469c      	mov	ip, r3
    42ba:	3320      	adds	r3, #32
    42bc:	469b      	mov	fp, r3
    42be:	4663      	mov	r3, ip
    42c0:	46a1      	mov	r9, r4
    42c2:	9000      	str	r0, [sp, #0]
    42c4:	9101      	str	r1, [sp, #4]
    42c6:	9303      	str	r3, [sp, #12]
    42c8:	466b      	mov	r3, sp
    42ca:	7b1b      	ldrb	r3, [r3, #12]
    42cc:	2000      	movs	r0, #0
    42ce:	9305      	str	r3, [sp, #20]
    42d0:	2300      	movs	r3, #0
    42d2:	2100      	movs	r1, #0
    42d4:	469c      	mov	ip, r3
    42d6:	223f      	movs	r2, #63	; 0x3f
    42d8:	e027      	b.n	432a <_sercom_get_async_baud_val+0x152>
    42da:	2401      	movs	r4, #1
    42dc:	409c      	lsls	r4, r3
    42de:	1c23      	adds	r3, r4, #0
    42e0:	2701      	movs	r7, #1
    42e2:	4646      	mov	r6, r8
    42e4:	4097      	lsls	r7, r2
    42e6:	403e      	ands	r6, r7
    42e8:	1c04      	adds	r4, r0, #0
    42ea:	1c0d      	adds	r5, r1, #0
    42ec:	46b2      	mov	sl, r6
    42ee:	464e      	mov	r6, r9
    42f0:	1824      	adds	r4, r4, r0
    42f2:	414d      	adcs	r5, r1
    42f4:	4033      	ands	r3, r6
    42f6:	4656      	mov	r6, sl
    42f8:	1c20      	adds	r0, r4, #0
    42fa:	1c29      	adds	r1, r5, #0
    42fc:	4333      	orrs	r3, r6
    42fe:	d004      	beq.n	430a <_sercom_get_async_baud_val+0x132>
    4300:	2101      	movs	r1, #1
    4302:	1c23      	adds	r3, r4, #0
    4304:	430b      	orrs	r3, r1
    4306:	1c18      	adds	r0, r3, #0
    4308:	1c29      	adds	r1, r5, #0
    430a:	9b01      	ldr	r3, [sp, #4]
    430c:	428b      	cmp	r3, r1
    430e:	d80a      	bhi.n	4326 <_sercom_get_async_baud_val+0x14e>
    4310:	d102      	bne.n	4318 <_sercom_get_async_baud_val+0x140>
    4312:	9b00      	ldr	r3, [sp, #0]
    4314:	4283      	cmp	r3, r0
    4316:	d806      	bhi.n	4326 <_sercom_get_async_baud_val+0x14e>
    4318:	9b00      	ldr	r3, [sp, #0]
    431a:	9c01      	ldr	r4, [sp, #4]
    431c:	1ac0      	subs	r0, r0, r3
    431e:	41a1      	sbcs	r1, r4
    4320:	4663      	mov	r3, ip
    4322:	433b      	orrs	r3, r7
    4324:	469c      	mov	ip, r3
    4326:	3a01      	subs	r2, #1
    4328:	d309      	bcc.n	433e <_sercom_get_async_baud_val+0x166>
    432a:	2320      	movs	r3, #32
    432c:	425b      	negs	r3, r3
    432e:	18d3      	adds	r3, r2, r3
    4330:	d5d3      	bpl.n	42da <_sercom_get_async_baud_val+0x102>
    4332:	465b      	mov	r3, fp
    4334:	2401      	movs	r4, #1
    4336:	1a9b      	subs	r3, r3, r2
    4338:	40dc      	lsrs	r4, r3
    433a:	1c23      	adds	r3, r4, #0
    433c:	e7d0      	b.n	42e0 <_sercom_get_async_baud_val+0x108>
    433e:	4661      	mov	r1, ip
    4340:	9a03      	ldr	r2, [sp, #12]
    4342:	1a8b      	subs	r3, r1, r2
    4344:	4907      	ldr	r1, [pc, #28]	; (4364 <_sercom_get_async_baud_val+0x18c>)
    4346:	08db      	lsrs	r3, r3, #3
    4348:	428b      	cmp	r3, r1
    434a:	d906      	bls.n	435a <_sercom_get_async_baud_val+0x182>
    434c:	1c13      	adds	r3, r2, #0
    434e:	3301      	adds	r3, #1
    4350:	9303      	str	r3, [sp, #12]
    4352:	2b08      	cmp	r3, #8
    4354:	d1b8      	bne.n	42c8 <_sercom_get_async_baud_val+0xf0>
    4356:	2040      	movs	r0, #64	; 0x40
    4358:	e74d      	b.n	41f6 <_sercom_get_async_baud_val+0x1e>
    435a:	9a05      	ldr	r2, [sp, #20]
    435c:	0354      	lsls	r4, r2, #13
    435e:	431c      	orrs	r4, r3
    4360:	b2a4      	uxth	r4, r4
    4362:	e797      	b.n	4294 <_sercom_get_async_baud_val+0xbc>
    4364:	00001fff 	.word	0x00001fff

00004368 <sercom_set_gclk_generator>:
    4368:	b530      	push	{r4, r5, lr}
    436a:	4c0e      	ldr	r4, [pc, #56]	; (43a4 <sercom_set_gclk_generator+0x3c>)
    436c:	b083      	sub	sp, #12
    436e:	7823      	ldrb	r3, [r4, #0]
    4370:	1c05      	adds	r5, r0, #0
    4372:	2b00      	cmp	r3, #0
    4374:	d006      	beq.n	4384 <sercom_set_gclk_generator+0x1c>
    4376:	2900      	cmp	r1, #0
    4378:	d104      	bne.n	4384 <sercom_set_gclk_generator+0x1c>
    437a:	7863      	ldrb	r3, [r4, #1]
    437c:	4283      	cmp	r3, r0
    437e:	d00f      	beq.n	43a0 <sercom_set_gclk_generator+0x38>
    4380:	201d      	movs	r0, #29
    4382:	e00b      	b.n	439c <sercom_set_gclk_generator+0x34>
    4384:	a901      	add	r1, sp, #4
    4386:	2013      	movs	r0, #19
    4388:	700d      	strb	r5, [r1, #0]
    438a:	f7fe fd53 	bl	2e34 <system_gclk_chan_set_config>
    438e:	2013      	movs	r0, #19
    4390:	f7fe fd12 	bl	2db8 <system_gclk_chan_enable>
    4394:	2301      	movs	r3, #1
    4396:	2000      	movs	r0, #0
    4398:	7065      	strb	r5, [r4, #1]
    439a:	7023      	strb	r3, [r4, #0]
    439c:	b003      	add	sp, #12
    439e:	bd30      	pop	{r4, r5, pc}
    43a0:	2000      	movs	r0, #0
    43a2:	e7fb      	b.n	439c <sercom_set_gclk_generator+0x34>
    43a4:	20003f84 	.word	0x20003f84

000043a8 <_sercom_get_sercom_inst_index>:
    43a8:	b570      	push	{r4, r5, r6, lr}
    43aa:	b086      	sub	sp, #24
    43ac:	4669      	mov	r1, sp
    43ae:	4b09      	ldr	r3, [pc, #36]	; (43d4 <_sercom_get_sercom_inst_index+0x2c>)
    43b0:	466a      	mov	r2, sp
    43b2:	cb70      	ldmia	r3!, {r4, r5, r6}
    43b4:	c170      	stmia	r1!, {r4, r5, r6}
    43b6:	cb70      	ldmia	r3!, {r4, r5, r6}
    43b8:	c170      	stmia	r1!, {r4, r5, r6}
    43ba:	2300      	movs	r3, #0
    43bc:	0099      	lsls	r1, r3, #2
    43be:	5851      	ldr	r1, [r2, r1]
    43c0:	4281      	cmp	r1, r0
    43c2:	d005      	beq.n	43d0 <_sercom_get_sercom_inst_index+0x28>
    43c4:	3301      	adds	r3, #1
    43c6:	2b06      	cmp	r3, #6
    43c8:	d1f8      	bne.n	43bc <_sercom_get_sercom_inst_index+0x14>
    43ca:	2000      	movs	r0, #0
    43cc:	b006      	add	sp, #24
    43ce:	bd70      	pop	{r4, r5, r6, pc}
    43d0:	b2d8      	uxtb	r0, r3
    43d2:	e7fb      	b.n	43cc <_sercom_get_sercom_inst_index+0x24>
    43d4:	0000dd2c 	.word	0x0000dd2c

000043d8 <system_clock_source_get_hz>:
    43d8:	b510      	push	{r4, lr}
    43da:	2808      	cmp	r0, #8
    43dc:	d82c      	bhi.n	4438 <system_clock_source_get_hz+0x60>
    43de:	4b1b      	ldr	r3, [pc, #108]	; (444c <system_clock_source_get_hz+0x74>)
    43e0:	0080      	lsls	r0, r0, #2
    43e2:	581b      	ldr	r3, [r3, r0]
    43e4:	469f      	mov	pc, r3
    43e6:	2080      	movs	r0, #128	; 0x80
    43e8:	0200      	lsls	r0, r0, #8
    43ea:	bd10      	pop	{r4, pc}
    43ec:	4b18      	ldr	r3, [pc, #96]	; (4450 <system_clock_source_get_hz+0x78>)
    43ee:	6958      	ldr	r0, [r3, #20]
    43f0:	e7fb      	b.n	43ea <system_clock_source_get_hz+0x12>
    43f2:	4b18      	ldr	r3, [pc, #96]	; (4454 <system_clock_source_get_hz+0x7c>)
    43f4:	6a18      	ldr	r0, [r3, #32]
    43f6:	4b18      	ldr	r3, [pc, #96]	; (4458 <system_clock_source_get_hz+0x80>)
    43f8:	0580      	lsls	r0, r0, #22
    43fa:	0f80      	lsrs	r0, r0, #30
    43fc:	40c3      	lsrs	r3, r0
    43fe:	1c18      	adds	r0, r3, #0
    4400:	e7f3      	b.n	43ea <system_clock_source_get_hz+0x12>
    4402:	2002      	movs	r0, #2
    4404:	4c12      	ldr	r4, [pc, #72]	; (4450 <system_clock_source_get_hz+0x78>)
    4406:	6823      	ldr	r3, [r4, #0]
    4408:	4018      	ands	r0, r3
    440a:	d0ee      	beq.n	43ea <system_clock_source_get_hz+0x12>
    440c:	2210      	movs	r2, #16
    440e:	4911      	ldr	r1, [pc, #68]	; (4454 <system_clock_source_get_hz+0x7c>)
    4410:	68cb      	ldr	r3, [r1, #12]
    4412:	421a      	tst	r2, r3
    4414:	d0fc      	beq.n	4410 <system_clock_source_get_hz+0x38>
    4416:	6823      	ldr	r3, [r4, #0]
    4418:	075b      	lsls	r3, r3, #29
    441a:	d40f      	bmi.n	443c <system_clock_source_get_hz+0x64>
    441c:	480f      	ldr	r0, [pc, #60]	; (445c <system_clock_source_get_hz+0x84>)
    441e:	e7e4      	b.n	43ea <system_clock_source_get_hz+0x12>
    4420:	4b0b      	ldr	r3, [pc, #44]	; (4450 <system_clock_source_get_hz+0x78>)
    4422:	6918      	ldr	r0, [r3, #16]
    4424:	e7e1      	b.n	43ea <system_clock_source_get_hz+0x12>
    4426:	2350      	movs	r3, #80	; 0x50
    4428:	4a0a      	ldr	r2, [pc, #40]	; (4454 <system_clock_source_get_hz+0x7c>)
    442a:	2000      	movs	r0, #0
    442c:	5cd3      	ldrb	r3, [r2, r3]
    442e:	075b      	lsls	r3, r3, #29
    4430:	d5db      	bpl.n	43ea <system_clock_source_get_hz+0x12>
    4432:	4b07      	ldr	r3, [pc, #28]	; (4450 <system_clock_source_get_hz+0x78>)
    4434:	68d8      	ldr	r0, [r3, #12]
    4436:	e7d8      	b.n	43ea <system_clock_source_get_hz+0x12>
    4438:	2000      	movs	r0, #0
    443a:	e7d6      	b.n	43ea <system_clock_source_get_hz+0x12>
    443c:	2000      	movs	r0, #0
    443e:	f7fe fd05 	bl	2e4c <system_gclk_chan_get_hz>
    4442:	68a3      	ldr	r3, [r4, #8]
    4444:	041b      	lsls	r3, r3, #16
    4446:	0c1b      	lsrs	r3, r3, #16
    4448:	4358      	muls	r0, r3
    444a:	e7ce      	b.n	43ea <system_clock_source_get_hz+0x12>
    444c:	0000dd44 	.word	0x0000dd44
    4450:	20003f88 	.word	0x20003f88
    4454:	40000800 	.word	0x40000800
    4458:	007a1200 	.word	0x007a1200
    445c:	02dc6c00 	.word	0x02dc6c00

00004460 <system_clock_source_enable>:
    4460:	b510      	push	{r4, lr}
    4462:	2808      	cmp	r0, #8
    4464:	d841      	bhi.n	44ea <system_clock_source_enable+0x8a>
    4466:	4b22      	ldr	r3, [pc, #136]	; (44f0 <system_clock_source_enable+0x90>)
    4468:	0080      	lsls	r0, r0, #2
    446a:	581b      	ldr	r3, [r3, r0]
    446c:	469f      	mov	pc, r3
    446e:	2000      	movs	r0, #0
    4470:	bd10      	pop	{r4, pc}
    4472:	2302      	movs	r3, #2
    4474:	4a1f      	ldr	r2, [pc, #124]	; (44f4 <system_clock_source_enable+0x94>)
    4476:	2000      	movs	r0, #0
    4478:	6991      	ldr	r1, [r2, #24]
    447a:	430b      	orrs	r3, r1
    447c:	6193      	str	r3, [r2, #24]
    447e:	e7f7      	b.n	4470 <system_clock_source_enable+0x10>
    4480:	2302      	movs	r3, #2
    4482:	4a1c      	ldr	r2, [pc, #112]	; (44f4 <system_clock_source_enable+0x94>)
    4484:	2000      	movs	r0, #0
    4486:	8a91      	ldrh	r1, [r2, #20]
    4488:	430b      	orrs	r3, r1
    448a:	8293      	strh	r3, [r2, #20]
    448c:	e7f0      	b.n	4470 <system_clock_source_enable+0x10>
    448e:	2302      	movs	r3, #2
    4490:	4a18      	ldr	r2, [pc, #96]	; (44f4 <system_clock_source_enable+0x94>)
    4492:	2000      	movs	r0, #0
    4494:	6a11      	ldr	r1, [r2, #32]
    4496:	430b      	orrs	r3, r1
    4498:	6213      	str	r3, [r2, #32]
    449a:	e7e9      	b.n	4470 <system_clock_source_enable+0x10>
    449c:	2302      	movs	r3, #2
    449e:	2010      	movs	r0, #16
    44a0:	4c15      	ldr	r4, [pc, #84]	; (44f8 <system_clock_source_enable+0x98>)
    44a2:	6822      	ldr	r2, [r4, #0]
    44a4:	4313      	orrs	r3, r2
    44a6:	6023      	str	r3, [r4, #0]
    44a8:	6822      	ldr	r2, [r4, #0]
    44aa:	4b14      	ldr	r3, [pc, #80]	; (44fc <system_clock_source_enable+0x9c>)
    44ac:	4013      	ands	r3, r2
    44ae:	4a11      	ldr	r2, [pc, #68]	; (44f4 <system_clock_source_enable+0x94>)
    44b0:	8493      	strh	r3, [r2, #36]	; 0x24
    44b2:	68d3      	ldr	r3, [r2, #12]
    44b4:	490f      	ldr	r1, [pc, #60]	; (44f4 <system_clock_source_enable+0x94>)
    44b6:	4218      	tst	r0, r3
    44b8:	d0fb      	beq.n	44b2 <system_clock_source_enable+0x52>
    44ba:	68a3      	ldr	r3, [r4, #8]
    44bc:	2000      	movs	r0, #0
    44be:	62cb      	str	r3, [r1, #44]	; 0x2c
    44c0:	6863      	ldr	r3, [r4, #4]
    44c2:	628b      	str	r3, [r1, #40]	; 0x28
    44c4:	6823      	ldr	r3, [r4, #0]
    44c6:	b29b      	uxth	r3, r3
    44c8:	848b      	strh	r3, [r1, #36]	; 0x24
    44ca:	e7d1      	b.n	4470 <system_clock_source_enable+0x10>
    44cc:	2244      	movs	r2, #68	; 0x44
    44ce:	2302      	movs	r3, #2
    44d0:	4908      	ldr	r1, [pc, #32]	; (44f4 <system_clock_source_enable+0x94>)
    44d2:	5c88      	ldrb	r0, [r1, r2]
    44d4:	4303      	orrs	r3, r0
    44d6:	548b      	strb	r3, [r1, r2]
    44d8:	2000      	movs	r0, #0
    44da:	e7c9      	b.n	4470 <system_clock_source_enable+0x10>
    44dc:	2302      	movs	r3, #2
    44de:	4a05      	ldr	r2, [pc, #20]	; (44f4 <system_clock_source_enable+0x94>)
    44e0:	2000      	movs	r0, #0
    44e2:	8a11      	ldrh	r1, [r2, #16]
    44e4:	430b      	orrs	r3, r1
    44e6:	8213      	strh	r3, [r2, #16]
    44e8:	e7c2      	b.n	4470 <system_clock_source_enable+0x10>
    44ea:	2017      	movs	r0, #23
    44ec:	e7c0      	b.n	4470 <system_clock_source_enable+0x10>
    44ee:	46c0      	nop			; (mov r8, r8)
    44f0:	0000dd68 	.word	0x0000dd68
    44f4:	40000800 	.word	0x40000800
    44f8:	20003f88 	.word	0x20003f88
    44fc:	0000ff7f 	.word	0x0000ff7f

00004500 <system_clock_init>:
    4500:	b5f0      	push	{r4, r5, r6, r7, lr}
    4502:	4647      	mov	r7, r8
    4504:	22c2      	movs	r2, #194	; 0xc2
    4506:	211e      	movs	r1, #30
    4508:	b480      	push	{r7}
    450a:	4b31      	ldr	r3, [pc, #196]	; (45d0 <system_clock_init+0xd0>)
    450c:	00d2      	lsls	r2, r2, #3
    450e:	609a      	str	r2, [r3, #8]
    4510:	4a30      	ldr	r2, [pc, #192]	; (45d4 <system_clock_init+0xd4>)
    4512:	2400      	movs	r4, #0
    4514:	6853      	ldr	r3, [r2, #4]
    4516:	b084      	sub	sp, #16
    4518:	438b      	bics	r3, r1
    451a:	6053      	str	r3, [r2, #4]
    451c:	2301      	movs	r3, #1
    451e:	ad01      	add	r5, sp, #4
    4520:	702b      	strb	r3, [r5, #0]
    4522:	b2e0      	uxtb	r0, r4
    4524:	1c29      	adds	r1, r5, #0
    4526:	3401      	adds	r4, #1
    4528:	f7fe fc84 	bl	2e34 <system_gclk_chan_set_config>
    452c:	2c25      	cmp	r4, #37	; 0x25
    452e:	d1f8      	bne.n	4522 <system_clock_init+0x22>
    4530:	4b29      	ldr	r3, [pc, #164]	; (45d8 <system_clock_init+0xd8>)
    4532:	4c27      	ldr	r4, [pc, #156]	; (45d0 <system_clock_init+0xd0>)
    4534:	681b      	ldr	r3, [r3, #0]
    4536:	69a1      	ldr	r1, [r4, #24]
    4538:	04db      	lsls	r3, r3, #19
    453a:	0e5b      	lsrs	r3, r3, #25
    453c:	041a      	lsls	r2, r3, #16
    453e:	4b27      	ldr	r3, [pc, #156]	; (45dc <system_clock_init+0xdc>)
    4540:	2604      	movs	r6, #4
    4542:	400b      	ands	r3, r1
    4544:	4313      	orrs	r3, r2
    4546:	2208      	movs	r2, #8
    4548:	2740      	movs	r7, #64	; 0x40
    454a:	61a3      	str	r3, [r4, #24]
    454c:	69a3      	ldr	r3, [r4, #24]
    454e:	2004      	movs	r0, #4
    4550:	4333      	orrs	r3, r6
    4552:	4313      	orrs	r3, r2
    4554:	43bb      	bics	r3, r7
    4556:	3278      	adds	r2, #120	; 0x78
    4558:	4690      	mov	r8, r2
    455a:	4313      	orrs	r3, r2
    455c:	22e0      	movs	r2, #224	; 0xe0
    455e:	00d2      	lsls	r2, r2, #3
    4560:	4313      	orrs	r3, r2
    4562:	4a1f      	ldr	r2, [pc, #124]	; (45e0 <system_clock_init+0xe0>)
    4564:	4013      	ands	r3, r2
    4566:	61a3      	str	r3, [r4, #24]
    4568:	f7ff ff7a 	bl	4460 <system_clock_source_enable>
    456c:	4642      	mov	r2, r8
    456e:	6a23      	ldr	r3, [r4, #32]
    4570:	2006      	movs	r0, #6
    4572:	43bb      	bics	r3, r7
    4574:	4313      	orrs	r3, r2
    4576:	4a1b      	ldr	r2, [pc, #108]	; (45e4 <system_clock_init+0xe4>)
    4578:	4013      	ands	r3, r2
    457a:	6223      	str	r3, [r4, #32]
    457c:	f7ff ff70 	bl	4460 <system_clock_source_enable>
    4580:	2400      	movs	r4, #0
    4582:	f7fe fb63 	bl	2c4c <system_gclk_init>
    4586:	2320      	movs	r3, #32
    4588:	1c29      	adds	r1, r5, #0
    458a:	2002      	movs	r0, #2
    458c:	606b      	str	r3, [r5, #4]
    458e:	706c      	strb	r4, [r5, #1]
    4590:	722c      	strb	r4, [r5, #8]
    4592:	726c      	strb	r4, [r5, #9]
    4594:	702e      	strb	r6, [r5, #0]
    4596:	f7fe fb6b 	bl	2c70 <system_gclk_gen_set_config>
    459a:	2002      	movs	r0, #2
    459c:	f7fe fbb2 	bl	2d04 <system_gclk_gen_enable>
    45a0:	4b11      	ldr	r3, [pc, #68]	; (45e8 <system_clock_init+0xe8>)
    45a2:	1c29      	adds	r1, r5, #0
    45a4:	721c      	strb	r4, [r3, #8]
    45a6:	725c      	strb	r4, [r3, #9]
    45a8:	729c      	strb	r4, [r3, #10]
    45aa:	72dc      	strb	r4, [r3, #11]
    45ac:	2301      	movs	r3, #1
    45ae:	2000      	movs	r0, #0
    45b0:	606b      	str	r3, [r5, #4]
    45b2:	3305      	adds	r3, #5
    45b4:	702b      	strb	r3, [r5, #0]
    45b6:	706c      	strb	r4, [r5, #1]
    45b8:	722c      	strb	r4, [r5, #8]
    45ba:	726c      	strb	r4, [r5, #9]
    45bc:	f7fe fb58 	bl	2c70 <system_gclk_gen_set_config>
    45c0:	2000      	movs	r0, #0
    45c2:	f7fe fb9f 	bl	2d04 <system_gclk_gen_enable>
    45c6:	b004      	add	sp, #16
    45c8:	bc04      	pop	{r2}
    45ca:	4690      	mov	r8, r2
    45cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    45ce:	46c0      	nop			; (mov r8, r8)
    45d0:	40000800 	.word	0x40000800
    45d4:	41004000 	.word	0x41004000
    45d8:	00806024 	.word	0x00806024
    45dc:	ff80ffff 	.word	0xff80ffff
    45e0:	ffffefff 	.word	0xffffefff
    45e4:	fffffcff 	.word	0xfffffcff
    45e8:	40000400 	.word	0x40000400

000045ec <_system_pinmux_config>:
    45ec:	78d3      	ldrb	r3, [r2, #3]
    45ee:	b570      	push	{r4, r5, r6, lr}
    45f0:	2b00      	cmp	r3, #0
    45f2:	d131      	bne.n	4658 <_system_pinmux_config+0x6c>
    45f4:	7814      	ldrb	r4, [r2, #0]
    45f6:	2c80      	cmp	r4, #128	; 0x80
    45f8:	d047      	beq.n	468a <_system_pinmux_config+0x9e>
    45fa:	2380      	movs	r3, #128	; 0x80
    45fc:	0624      	lsls	r4, r4, #24
    45fe:	025b      	lsls	r3, r3, #9
    4600:	431c      	orrs	r4, r3
    4602:	7853      	ldrb	r3, [r2, #1]
    4604:	2502      	movs	r5, #2
    4606:	1c1e      	adds	r6, r3, #0
    4608:	43ae      	bics	r6, r5
    460a:	d107      	bne.n	461c <_system_pinmux_config+0x30>
    460c:	7893      	ldrb	r3, [r2, #2]
    460e:	2b00      	cmp	r3, #0
    4610:	d137      	bne.n	4682 <_system_pinmux_config+0x96>
    4612:	2380      	movs	r3, #128	; 0x80
    4614:	029b      	lsls	r3, r3, #10
    4616:	431c      	orrs	r4, r3
    4618:	6041      	str	r1, [r0, #4]
    461a:	7853      	ldrb	r3, [r2, #1]
    461c:	3b01      	subs	r3, #1
    461e:	2b01      	cmp	r3, #1
    4620:	d935      	bls.n	468e <_system_pinmux_config+0xa2>
    4622:	25a0      	movs	r5, #160	; 0xa0
    4624:	040b      	lsls	r3, r1, #16
    4626:	05ed      	lsls	r5, r5, #23
    4628:	0c1b      	lsrs	r3, r3, #16
    462a:	432b      	orrs	r3, r5
    462c:	25d0      	movs	r5, #208	; 0xd0
    462e:	4323      	orrs	r3, r4
    4630:	6283      	str	r3, [r0, #40]	; 0x28
    4632:	062d      	lsls	r5, r5, #24
    4634:	0c0b      	lsrs	r3, r1, #16
    4636:	432b      	orrs	r3, r5
    4638:	4323      	orrs	r3, r4
    463a:	6283      	str	r3, [r0, #40]	; 0x28
    463c:	78d3      	ldrb	r3, [r2, #3]
    463e:	2b00      	cmp	r3, #0
    4640:	d109      	bne.n	4656 <_system_pinmux_config+0x6a>
    4642:	0363      	lsls	r3, r4, #13
    4644:	d503      	bpl.n	464e <_system_pinmux_config+0x62>
    4646:	7893      	ldrb	r3, [r2, #2]
    4648:	2b01      	cmp	r3, #1
    464a:	d023      	beq.n	4694 <_system_pinmux_config+0xa8>
    464c:	6141      	str	r1, [r0, #20]
    464e:	7853      	ldrb	r3, [r2, #1]
    4650:	3b01      	subs	r3, #1
    4652:	2b01      	cmp	r3, #1
    4654:	d913      	bls.n	467e <_system_pinmux_config+0x92>
    4656:	bd70      	pop	{r4, r5, r6, pc}
    4658:	24a0      	movs	r4, #160	; 0xa0
    465a:	040b      	lsls	r3, r1, #16
    465c:	05e4      	lsls	r4, r4, #23
    465e:	0c1b      	lsrs	r3, r3, #16
    4660:	4323      	orrs	r3, r4
    4662:	24d0      	movs	r4, #208	; 0xd0
    4664:	6041      	str	r1, [r0, #4]
    4666:	0624      	lsls	r4, r4, #24
    4668:	6283      	str	r3, [r0, #40]	; 0x28
    466a:	0c0b      	lsrs	r3, r1, #16
    466c:	4323      	orrs	r3, r4
    466e:	6283      	str	r3, [r0, #40]	; 0x28
    4670:	78d3      	ldrb	r3, [r2, #3]
    4672:	2b00      	cmp	r3, #0
    4674:	d1ef      	bne.n	4656 <_system_pinmux_config+0x6a>
    4676:	7853      	ldrb	r3, [r2, #1]
    4678:	3b01      	subs	r3, #1
    467a:	2b01      	cmp	r3, #1
    467c:	d8eb      	bhi.n	4656 <_system_pinmux_config+0x6a>
    467e:	6081      	str	r1, [r0, #8]
    4680:	e7e9      	b.n	4656 <_system_pinmux_config+0x6a>
    4682:	23c0      	movs	r3, #192	; 0xc0
    4684:	02db      	lsls	r3, r3, #11
    4686:	431c      	orrs	r4, r3
    4688:	e7c6      	b.n	4618 <_system_pinmux_config+0x2c>
    468a:	2400      	movs	r4, #0
    468c:	e7b9      	b.n	4602 <_system_pinmux_config+0x16>
    468e:	4b02      	ldr	r3, [pc, #8]	; (4698 <_system_pinmux_config+0xac>)
    4690:	401c      	ands	r4, r3
    4692:	e7c6      	b.n	4622 <_system_pinmux_config+0x36>
    4694:	6181      	str	r1, [r0, #24]
    4696:	e7da      	b.n	464e <_system_pinmux_config+0x62>
    4698:	fffbffff 	.word	0xfffbffff

0000469c <system_pinmux_pin_set_config>:
    469c:	b508      	push	{r3, lr}
    469e:	1c0a      	adds	r2, r1, #0
    46a0:	1c03      	adds	r3, r0, #0
    46a2:	09c1      	lsrs	r1, r0, #7
    46a4:	2000      	movs	r0, #0
    46a6:	2900      	cmp	r1, #0
    46a8:	d104      	bne.n	46b4 <system_pinmux_pin_set_config+0x18>
    46aa:	4906      	ldr	r1, [pc, #24]	; (46c4 <system_pinmux_pin_set_config+0x28>)
    46ac:	0958      	lsrs	r0, r3, #5
    46ae:	468c      	mov	ip, r1
    46b0:	01c0      	lsls	r0, r0, #7
    46b2:	4460      	add	r0, ip
    46b4:	211f      	movs	r1, #31
    46b6:	400b      	ands	r3, r1
    46b8:	391e      	subs	r1, #30
    46ba:	4099      	lsls	r1, r3
    46bc:	f7ff ff96 	bl	45ec <_system_pinmux_config>
    46c0:	bd08      	pop	{r3, pc}
    46c2:	46c0      	nop			; (mov r8, r8)
    46c4:	41004400 	.word	0x41004400

000046c8 <gpio_set>:
    46c8:	b510      	push	{r4, lr}
    46ca:	1c04      	adds	r4, r0, #0
    46cc:	1c43      	adds	r3, r0, #1
    46ce:	d009      	beq.n	46e4 <gpio_set+0x1c>
    46d0:	17e2      	asrs	r2, r4, #31
    46d2:	0ed2      	lsrs	r2, r2, #27
    46d4:	18a3      	adds	r3, r4, r2
    46d6:	241f      	movs	r4, #31
    46d8:	2001      	movs	r0, #1
    46da:	401c      	ands	r4, r3
    46dc:	1aa4      	subs	r4, r4, r2
    46de:	b264      	sxtb	r4, r4
    46e0:	40a0      	lsls	r0, r4
    46e2:	bd10      	pop	{r4, pc}
    46e4:	4802      	ldr	r0, [pc, #8]	; (46f0 <gpio_set+0x28>)
    46e6:	4903      	ldr	r1, [pc, #12]	; (46f4 <gpio_set+0x2c>)
    46e8:	2219      	movs	r2, #25
    46ea:	f7ff fc4d 	bl	3f88 <mbed_assert_internal>
    46ee:	e7ef      	b.n	46d0 <gpio_set+0x8>
    46f0:	0000dd8c 	.word	0x0000dd8c
    46f4:	0000dda0 	.word	0x0000dda0

000046f8 <gpio_init>:
    46f8:	b570      	push	{r4, r5, r6, lr}
    46fa:	1c05      	adds	r5, r0, #0
    46fc:	b082      	sub	sp, #8
    46fe:	1c0c      	adds	r4, r1, #0
    4700:	1c4b      	adds	r3, r1, #1
    4702:	d028      	beq.n	4756 <gpio_init+0x5e>
    4704:	b2c8      	uxtb	r0, r1
    4706:	2900      	cmp	r1, #0
    4708:	db2c      	blt.n	4764 <gpio_init+0x6c>
    470a:	4b18      	ldr	r3, [pc, #96]	; (476c <gpio_init+0x74>)
    470c:	0946      	lsrs	r6, r0, #5
    470e:	469c      	mov	ip, r3
    4710:	01f6      	lsls	r6, r6, #7
    4712:	4466      	add	r6, ip
    4714:	702c      	strb	r4, [r5, #0]
    4716:	17e2      	asrs	r2, r4, #31
    4718:	0ed2      	lsrs	r2, r2, #27
    471a:	18a3      	adds	r3, r4, r2
    471c:	241f      	movs	r4, #31
    471e:	401c      	ands	r4, r3
    4720:	1aa4      	subs	r4, r4, r2
    4722:	2201      	movs	r2, #1
    4724:	1c13      	adds	r3, r2, #0
    4726:	b264      	sxtb	r4, r4
    4728:	40a3      	lsls	r3, r4
    472a:	606b      	str	r3, [r5, #4]
    472c:	2300      	movs	r3, #0
    472e:	a901      	add	r1, sp, #4
    4730:	722b      	strb	r3, [r5, #8]
    4732:	72ab      	strb	r3, [r5, #10]
    4734:	726a      	strb	r2, [r5, #9]
    4736:	700b      	strb	r3, [r1, #0]
    4738:	708b      	strb	r3, [r1, #2]
    473a:	704a      	strb	r2, [r1, #1]
    473c:	f000 fe6a 	bl	5414 <port_pin_set_config>
    4740:	1c33      	adds	r3, r6, #0
    4742:	3314      	adds	r3, #20
    4744:	60eb      	str	r3, [r5, #12]
    4746:	3304      	adds	r3, #4
    4748:	612b      	str	r3, [r5, #16]
    474a:	3610      	adds	r6, #16
    474c:	3308      	adds	r3, #8
    474e:	616b      	str	r3, [r5, #20]
    4750:	61ae      	str	r6, [r5, #24]
    4752:	b002      	add	sp, #8
    4754:	bd70      	pop	{r4, r5, r6, pc}
    4756:	4806      	ldr	r0, [pc, #24]	; (4770 <gpio_init+0x78>)
    4758:	4906      	ldr	r1, [pc, #24]	; (4774 <gpio_init+0x7c>)
    475a:	221f      	movs	r2, #31
    475c:	f7ff fc14 	bl	3f88 <mbed_assert_internal>
    4760:	702c      	strb	r4, [r5, #0]
    4762:	e7f6      	b.n	4752 <gpio_init+0x5a>
    4764:	702c      	strb	r4, [r5, #0]
    4766:	2600      	movs	r6, #0
    4768:	e7d5      	b.n	4716 <gpio_init+0x1e>
    476a:	46c0      	nop			; (mov r8, r8)
    476c:	41004400 	.word	0x41004400
    4770:	0000dd8c 	.word	0x0000dd8c
    4774:	0000dda0 	.word	0x0000dda0

00004778 <gpio_mode>:
    4778:	b530      	push	{r4, r5, lr}
    477a:	1c04      	adds	r4, r0, #0
    477c:	7800      	ldrb	r0, [r0, #0]
    477e:	b083      	sub	sp, #12
    4780:	b243      	sxtb	r3, r0
    4782:	1c0d      	adds	r5, r1, #0
    4784:	3301      	adds	r3, #1
    4786:	d013      	beq.n	47b0 <gpio_mode+0x38>
    4788:	7aa3      	ldrb	r3, [r4, #10]
    478a:	a901      	add	r1, sp, #4
    478c:	700b      	strb	r3, [r1, #0]
    478e:	7a23      	ldrb	r3, [r4, #8]
    4790:	7265      	strb	r5, [r4, #9]
    4792:	1e5a      	subs	r2, r3, #1
    4794:	4193      	sbcs	r3, r2
    4796:	708b      	strb	r3, [r1, #2]
    4798:	2d01      	cmp	r5, #1
    479a:	d003      	beq.n	47a4 <gpio_mode+0x2c>
    479c:	2d00      	cmp	r5, #0
    479e:	d001      	beq.n	47a4 <gpio_mode+0x2c>
    47a0:	2d02      	cmp	r5, #2
    47a2:	d100      	bne.n	47a6 <gpio_mode+0x2e>
    47a4:	704d      	strb	r5, [r1, #1]
    47a6:	b2c0      	uxtb	r0, r0
    47a8:	f000 fe34 	bl	5414 <port_pin_set_config>
    47ac:	b003      	add	sp, #12
    47ae:	bd30      	pop	{r4, r5, pc}
    47b0:	4803      	ldr	r0, [pc, #12]	; (47c0 <gpio_mode+0x48>)
    47b2:	4904      	ldr	r1, [pc, #16]	; (47c4 <gpio_mode+0x4c>)
    47b4:	2236      	movs	r2, #54	; 0x36
    47b6:	f7ff fbe7 	bl	3f88 <mbed_assert_internal>
    47ba:	7820      	ldrb	r0, [r4, #0]
    47bc:	e7e4      	b.n	4788 <gpio_mode+0x10>
    47be:	46c0      	nop			; (mov r8, r8)
    47c0:	0000d268 	.word	0x0000d268
    47c4:	0000dda0 	.word	0x0000dda0

000047c8 <gpio_dir>:
    47c8:	b530      	push	{r4, r5, lr}
    47ca:	1c04      	adds	r4, r0, #0
    47cc:	7800      	ldrb	r0, [r0, #0]
    47ce:	b083      	sub	sp, #12
    47d0:	b243      	sxtb	r3, r0
    47d2:	1c0d      	adds	r5, r1, #0
    47d4:	3301      	adds	r3, #1
    47d6:	d013      	beq.n	4800 <gpio_dir+0x38>
    47d8:	7a63      	ldrb	r3, [r4, #9]
    47da:	a901      	add	r1, sp, #4
    47dc:	704b      	strb	r3, [r1, #1]
    47de:	7a23      	ldrb	r3, [r4, #8]
    47e0:	72a5      	strb	r5, [r4, #10]
    47e2:	1e5a      	subs	r2, r3, #1
    47e4:	4193      	sbcs	r3, r2
    47e6:	708b      	strb	r3, [r1, #2]
    47e8:	2d01      	cmp	r5, #1
    47ea:	d003      	beq.n	47f4 <gpio_dir+0x2c>
    47ec:	2d00      	cmp	r5, #0
    47ee:	d001      	beq.n	47f4 <gpio_dir+0x2c>
    47f0:	2d02      	cmp	r5, #2
    47f2:	d100      	bne.n	47f6 <gpio_dir+0x2e>
    47f4:	700d      	strb	r5, [r1, #0]
    47f6:	b2c0      	uxtb	r0, r0
    47f8:	f000 fe0c 	bl	5414 <port_pin_set_config>
    47fc:	b003      	add	sp, #12
    47fe:	bd30      	pop	{r4, r5, pc}
    4800:	4803      	ldr	r0, [pc, #12]	; (4810 <gpio_dir+0x48>)
    4802:	4904      	ldr	r1, [pc, #16]	; (4814 <gpio_dir+0x4c>)
    4804:	224c      	movs	r2, #76	; 0x4c
    4806:	f7ff fbbf 	bl	3f88 <mbed_assert_internal>
    480a:	7820      	ldrb	r0, [r4, #0]
    480c:	e7e4      	b.n	47d8 <gpio_dir+0x10>
    480e:	46c0      	nop			; (mov r8, r8)
    4810:	0000d268 	.word	0x0000d268
    4814:	0000dda0 	.word	0x0000dda0

00004818 <pin_mode>:
    4818:	b5f0      	push	{r4, r5, r6, r7, lr}
    481a:	4645      	mov	r5, r8
    481c:	4657      	mov	r7, sl
    481e:	464e      	mov	r6, r9
    4820:	b4e0      	push	{r5, r6, r7}
    4822:	4688      	mov	r8, r1
    4824:	b082      	sub	sp, #8
    4826:	1c05      	adds	r5, r0, #0
    4828:	1c43      	adds	r3, r0, #1
    482a:	d062      	beq.n	48f2 <pin_mode+0xda>
    482c:	17c4      	asrs	r4, r0, #31
    482e:	0ee2      	lsrs	r2, r4, #27
    4830:	241f      	movs	r4, #31
    4832:	2701      	movs	r7, #1
    4834:	1883      	adds	r3, r0, r2
    4836:	401c      	ands	r4, r3
    4838:	1aa4      	subs	r4, r4, r2
    483a:	b264      	sxtb	r4, r4
    483c:	40a7      	lsls	r7, r4
    483e:	b2c6      	uxtb	r6, r0
    4840:	46ba      	mov	sl, r7
    4842:	0975      	lsrs	r5, r6, #5
    4844:	09f3      	lsrs	r3, r6, #7
    4846:	d13e      	bne.n	48c6 <pin_mode+0xae>
    4848:	4b37      	ldr	r3, [pc, #220]	; (4928 <pin_mode+0x110>)
    484a:	01ed      	lsls	r5, r5, #7
    484c:	469c      	mov	ip, r3
    484e:	4465      	add	r5, ip
    4850:	2d00      	cmp	r5, #0
    4852:	d062      	beq.n	491a <pin_mode+0x102>
    4854:	1c28      	adds	r0, r5, #0
    4856:	231f      	movs	r3, #31
    4858:	4033      	ands	r3, r6
    485a:	18c2      	adds	r2, r0, r3
    485c:	3240      	adds	r2, #64	; 0x40
    485e:	7812      	ldrb	r2, [r2, #0]
    4860:	2101      	movs	r1, #1
    4862:	4694      	mov	ip, r2
    4864:	4667      	mov	r7, ip
    4866:	2280      	movs	r2, #128	; 0x80
    4868:	4239      	tst	r1, r7
    486a:	d136      	bne.n	48da <pin_mode+0xc2>
    486c:	a901      	add	r1, sp, #4
    486e:	700a      	strb	r2, [r1, #0]
    4870:	2202      	movs	r2, #2
    4872:	192c      	adds	r4, r5, r4
    4874:	3440      	adds	r4, #64	; 0x40
    4876:	7823      	ldrb	r3, [r4, #0]
    4878:	421a      	tst	r2, r3
    487a:	d010      	beq.n	489e <pin_mode+0x86>
    487c:	4650      	mov	r0, sl
    487e:	682b      	ldr	r3, [r5, #0]
    4880:	4003      	ands	r3, r0
    4882:	d134      	bne.n	48ee <pin_mode+0xd6>
    4884:	704b      	strb	r3, [r1, #1]
    4886:	7823      	ldrb	r3, [r4, #0]
    4888:	075b      	lsls	r3, r3, #29
    488a:	d50a      	bpl.n	48a2 <pin_mode+0x8a>
    488c:	692b      	ldr	r3, [r5, #16]
    488e:	4642      	mov	r2, r8
    4890:	2300      	movs	r3, #0
    4892:	70cb      	strb	r3, [r1, #3]
    4894:	2a01      	cmp	r2, #1
    4896:	d109      	bne.n	48ac <pin_mode+0x94>
    4898:	4643      	mov	r3, r8
    489a:	708b      	strb	r3, [r1, #2]
    489c:	e00a      	b.n	48b4 <pin_mode+0x9c>
    489e:	2301      	movs	r3, #1
    48a0:	704b      	strb	r3, [r1, #1]
    48a2:	2300      	movs	r3, #0
    48a4:	4642      	mov	r2, r8
    48a6:	70cb      	strb	r3, [r1, #3]
    48a8:	2a01      	cmp	r2, #1
    48aa:	d0f5      	beq.n	4898 <pin_mode+0x80>
    48ac:	4642      	mov	r2, r8
    48ae:	2a02      	cmp	r2, #2
    48b0:	d0f2      	beq.n	4898 <pin_mode+0x80>
    48b2:	708b      	strb	r3, [r1, #2]
    48b4:	1c30      	adds	r0, r6, #0
    48b6:	f7ff fef1 	bl	469c <system_pinmux_pin_set_config>
    48ba:	b002      	add	sp, #8
    48bc:	bc1c      	pop	{r2, r3, r4}
    48be:	4690      	mov	r8, r2
    48c0:	4699      	mov	r9, r3
    48c2:	46a2      	mov	sl, r4
    48c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    48c6:	4b19      	ldr	r3, [pc, #100]	; (492c <pin_mode+0x114>)
    48c8:	4699      	mov	r9, r3
    48ca:	4819      	ldr	r0, [pc, #100]	; (4930 <pin_mode+0x118>)
    48cc:	4649      	mov	r1, r9
    48ce:	2223      	movs	r2, #35	; 0x23
    48d0:	f7ff fb5a 	bl	3f88 <mbed_assert_internal>
    48d4:	2500      	movs	r5, #0
    48d6:	2000      	movs	r0, #0
    48d8:	e7bd      	b.n	4856 <pin_mode+0x3e>
    48da:	085b      	lsrs	r3, r3, #1
    48dc:	18c3      	adds	r3, r0, r3
    48de:	3330      	adds	r3, #48	; 0x30
    48e0:	781a      	ldrb	r2, [r3, #0]
    48e2:	b2d2      	uxtb	r2, r2
    48e4:	4231      	tst	r1, r6
    48e6:	d116      	bne.n	4916 <pin_mode+0xfe>
    48e8:	230f      	movs	r3, #15
    48ea:	401a      	ands	r2, r3
    48ec:	e7be      	b.n	486c <pin_mode+0x54>
    48ee:	704a      	strb	r2, [r1, #1]
    48f0:	e7d7      	b.n	48a2 <pin_mode+0x8a>
    48f2:	4b0e      	ldr	r3, [pc, #56]	; (492c <pin_mode+0x114>)
    48f4:	4c0f      	ldr	r4, [pc, #60]	; (4934 <pin_mode+0x11c>)
    48f6:	4699      	mov	r9, r3
    48f8:	1c19      	adds	r1, r3, #0
    48fa:	1c20      	adds	r0, r4, #0
    48fc:	225c      	movs	r2, #92	; 0x5c
    48fe:	f7ff fb43 	bl	3f88 <mbed_assert_internal>
    4902:	1c20      	adds	r0, r4, #0
    4904:	4649      	mov	r1, r9
    4906:	221e      	movs	r2, #30
    4908:	f7ff fb3e 	bl	3f88 <mbed_assert_internal>
    490c:	2300      	movs	r3, #0
    490e:	26ff      	movs	r6, #255	; 0xff
    4910:	469a      	mov	sl, r3
    4912:	1c2c      	adds	r4, r5, #0
    4914:	e7d9      	b.n	48ca <pin_mode+0xb2>
    4916:	0912      	lsrs	r2, r2, #4
    4918:	e7a8      	b.n	486c <pin_mode+0x54>
    491a:	4805      	ldr	r0, [pc, #20]	; (4930 <pin_mode+0x118>)
    491c:	4903      	ldr	r1, [pc, #12]	; (492c <pin_mode+0x114>)
    491e:	2223      	movs	r2, #35	; 0x23
    4920:	f7ff fb32 	bl	3f88 <mbed_assert_internal>
    4924:	2000      	movs	r0, #0
    4926:	e796      	b.n	4856 <pin_mode+0x3e>
    4928:	41004400 	.word	0x41004400
    492c:	0000de08 	.word	0x0000de08
    4930:	0000de70 	.word	0x0000de70
    4934:	0000dd8c 	.word	0x0000dd8c

00004938 <pinmap_find_peripheral_from_pad.part.0>:
    4938:	b510      	push	{r4, lr}
    493a:	1c04      	adds	r4, r0, #0
    493c:	2901      	cmp	r1, #1
    493e:	d004      	beq.n	494a <pinmap_find_peripheral_from_pad.part.0+0x12>
    4940:	1c20      	adds	r0, r4, #0
    4942:	4905      	ldr	r1, [pc, #20]	; (4958 <pinmap_find_peripheral_from_pad.part.0+0x20>)
    4944:	f7ff fb64 	bl	4010 <pinmap_find_peripheral>
    4948:	bd10      	pop	{r4, pc}
    494a:	4904      	ldr	r1, [pc, #16]	; (495c <pinmap_find_peripheral_from_pad.part.0+0x24>)
    494c:	f7ff fb60 	bl	4010 <pinmap_find_peripheral>
    4950:	1c43      	adds	r3, r0, #1
    4952:	d1f9      	bne.n	4948 <pinmap_find_peripheral_from_pad.part.0+0x10>
    4954:	e7f4      	b.n	4940 <pinmap_find_peripheral_from_pad.part.0+0x8>
    4956:	46c0      	nop			; (mov r8, r8)
    4958:	0000d9c0 	.word	0x0000d9c0
    495c:	0000d93c 	.word	0x0000d93c

00004960 <pinmap_merge_sercom>:
    4960:	b538      	push	{r3, r4, r5, lr}
    4962:	1c0d      	adds	r5, r1, #0
    4964:	1c43      	adds	r3, r0, #1
    4966:	d01b      	beq.n	49a0 <pinmap_merge_sercom+0x40>
    4968:	2100      	movs	r1, #0
    496a:	f7ff ffe5 	bl	4938 <pinmap_find_peripheral_from_pad.part.0>
    496e:	1c43      	adds	r3, r0, #1
    4970:	d016      	beq.n	49a0 <pinmap_merge_sercom+0x40>
    4972:	240f      	movs	r4, #15
    4974:	4004      	ands	r4, r0
    4976:	1c28      	adds	r0, r5, #0
    4978:	1c6b      	adds	r3, r5, #1
    497a:	d008      	beq.n	498e <pinmap_merge_sercom+0x2e>
    497c:	2100      	movs	r1, #0
    497e:	f7ff ffdb 	bl	4938 <pinmap_find_peripheral_from_pad.part.0>
    4982:	1c43      	adds	r3, r0, #1
    4984:	d003      	beq.n	498e <pinmap_merge_sercom+0x2e>
    4986:	230f      	movs	r3, #15
    4988:	4018      	ands	r0, r3
    498a:	42a0      	cmp	r0, r4
    498c:	d006      	beq.n	499c <pinmap_merge_sercom+0x3c>
    498e:	1c63      	adds	r3, r4, #1
    4990:	d003      	beq.n	499a <pinmap_merge_sercom+0x3a>
    4992:	1c43      	adds	r3, r0, #1
    4994:	d002      	beq.n	499c <pinmap_merge_sercom+0x3c>
    4996:	2001      	movs	r0, #1
    4998:	4240      	negs	r0, r0
    499a:	bd38      	pop	{r3, r4, r5, pc}
    499c:	1c20      	adds	r0, r4, #0
    499e:	e7fc      	b.n	499a <pinmap_merge_sercom+0x3a>
    49a0:	1c28      	adds	r0, r5, #0
    49a2:	1c6b      	adds	r3, r5, #1
    49a4:	d0f9      	beq.n	499a <pinmap_merge_sercom+0x3a>
    49a6:	2100      	movs	r1, #0
    49a8:	2401      	movs	r4, #1
    49aa:	f7ff ffc5 	bl	4938 <pinmap_find_peripheral_from_pad.part.0>
    49ae:	4264      	negs	r4, r4
    49b0:	1c43      	adds	r3, r0, #1
    49b2:	d1e8      	bne.n	4986 <pinmap_merge_sercom+0x26>
    49b4:	e7f1      	b.n	499a <pinmap_merge_sercom+0x3a>
    49b6:	46c0      	nop			; (mov r8, r8)

000049b8 <pinmap_find_sercom>:
    49b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    49ba:	1c0f      	adds	r7, r1, #0
    49bc:	b085      	sub	sp, #20
    49be:	1c16      	adds	r6, r2, #0
    49c0:	1c1d      	adds	r5, r3, #0
    49c2:	1c04      	adds	r4, r0, #0
    49c4:	1c43      	adds	r3, r0, #1
    49c6:	d003      	beq.n	49d0 <pinmap_find_sercom+0x18>
    49c8:	2100      	movs	r1, #0
    49ca:	f7ff ffb5 	bl	4938 <pinmap_find_peripheral_from_pad.part.0>
    49ce:	1c04      	adds	r4, r0, #0
    49d0:	9400      	str	r4, [sp, #0]
    49d2:	1c38      	adds	r0, r7, #0
    49d4:	1c7b      	adds	r3, r7, #1
    49d6:	d002      	beq.n	49de <pinmap_find_sercom+0x26>
    49d8:	2100      	movs	r1, #0
    49da:	f7ff ffad 	bl	4938 <pinmap_find_peripheral_from_pad.part.0>
    49de:	9001      	str	r0, [sp, #4]
    49e0:	1c30      	adds	r0, r6, #0
    49e2:	1c73      	adds	r3, r6, #1
    49e4:	d002      	beq.n	49ec <pinmap_find_sercom+0x34>
    49e6:	2100      	movs	r1, #0
    49e8:	f7ff ffa6 	bl	4938 <pinmap_find_peripheral_from_pad.part.0>
    49ec:	9002      	str	r0, [sp, #8]
    49ee:	1c28      	adds	r0, r5, #0
    49f0:	1c6b      	adds	r3, r5, #1
    49f2:	d002      	beq.n	49fa <pinmap_find_sercom+0x42>
    49f4:	2100      	movs	r1, #0
    49f6:	f7ff ff9f 	bl	4938 <pinmap_find_peripheral_from_pad.part.0>
    49fa:	9003      	str	r0, [sp, #12]
    49fc:	2001      	movs	r0, #1
    49fe:	2300      	movs	r3, #0
    4a00:	4240      	negs	r0, r0
    4a02:	220f      	movs	r2, #15
    4a04:	1c61      	adds	r1, r4, #1
    4a06:	d004      	beq.n	4a12 <pinmap_find_sercom+0x5a>
    4a08:	1c41      	adds	r1, r0, #1
    4a0a:	d00b      	beq.n	4a24 <pinmap_find_sercom+0x6c>
    4a0c:	4014      	ands	r4, r2
    4a0e:	4284      	cmp	r4, r0
    4a10:	d10f      	bne.n	4a32 <pinmap_find_sercom+0x7a>
    4a12:	3304      	adds	r3, #4
    4a14:	2b10      	cmp	r3, #16
    4a16:	d00a      	beq.n	4a2e <pinmap_find_sercom+0x76>
    4a18:	4669      	mov	r1, sp
    4a1a:	58cc      	ldr	r4, [r1, r3]
    4a1c:	1c61      	adds	r1, r4, #1
    4a1e:	d0f8      	beq.n	4a12 <pinmap_find_sercom+0x5a>
    4a20:	1c41      	adds	r1, r0, #1
    4a22:	d1f3      	bne.n	4a0c <pinmap_find_sercom+0x54>
    4a24:	1c20      	adds	r0, r4, #0
    4a26:	3304      	adds	r3, #4
    4a28:	4010      	ands	r0, r2
    4a2a:	2b10      	cmp	r3, #16
    4a2c:	d1f4      	bne.n	4a18 <pinmap_find_sercom+0x60>
    4a2e:	b005      	add	sp, #20
    4a30:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4a32:	2001      	movs	r0, #1
    4a34:	4240      	negs	r0, r0
    4a36:	e7fa      	b.n	4a2e <pinmap_find_sercom+0x76>

00004a38 <pinmap_function_sercom>:
    4a38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4a3a:	1c43      	adds	r3, r0, #1
    4a3c:	d004      	beq.n	4a48 <pinmap_function_sercom+0x10>
    4a3e:	260f      	movs	r6, #15
    4a40:	4031      	ands	r1, r6
    4a42:	1e0d      	subs	r5, r1, #0
    4a44:	2d05      	cmp	r5, #5
    4a46:	d902      	bls.n	4a4e <pinmap_function_sercom+0x16>
    4a48:	2001      	movs	r0, #1
    4a4a:	4240      	negs	r0, r0
    4a4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4a4e:	4f0a      	ldr	r7, [pc, #40]	; (4a78 <pinmap_function_sercom+0x40>)
    4a50:	1c04      	adds	r4, r0, #0
    4a52:	1c39      	adds	r1, r7, #0
    4a54:	f7ff fae8 	bl	4028 <pinmap_peripheral>
    4a58:	4030      	ands	r0, r6
    4a5a:	42a8      	cmp	r0, r5
    4a5c:	d007      	beq.n	4a6e <pinmap_function_sercom+0x36>
    4a5e:	4f07      	ldr	r7, [pc, #28]	; (4a7c <pinmap_function_sercom+0x44>)
    4a60:	1c20      	adds	r0, r4, #0
    4a62:	1c39      	adds	r1, r7, #0
    4a64:	f7ff fae0 	bl	4028 <pinmap_peripheral>
    4a68:	4006      	ands	r6, r0
    4a6a:	42ae      	cmp	r6, r5
    4a6c:	d1ec      	bne.n	4a48 <pinmap_function_sercom+0x10>
    4a6e:	1c20      	adds	r0, r4, #0
    4a70:	1c39      	adds	r1, r7, #0
    4a72:	f7ff faf1 	bl	4058 <pinmap_function>
    4a76:	e7e9      	b.n	4a4c <pinmap_function_sercom+0x14>
    4a78:	0000d9c0 	.word	0x0000d9c0
    4a7c:	0000d93c 	.word	0x0000d93c

00004a80 <pinmap_pad_sercom>:
    4a80:	b570      	push	{r4, r5, r6, lr}
    4a82:	1c43      	adds	r3, r0, #1
    4a84:	d004      	beq.n	4a90 <pinmap_pad_sercom+0x10>
    4a86:	240f      	movs	r4, #15
    4a88:	4021      	ands	r1, r4
    4a8a:	1e0d      	subs	r5, r1, #0
    4a8c:	2d05      	cmp	r5, #5
    4a8e:	d902      	bls.n	4a96 <pinmap_pad_sercom+0x16>
    4a90:	2001      	movs	r0, #1
    4a92:	4240      	negs	r0, r0
    4a94:	bd70      	pop	{r4, r5, r6, pc}
    4a96:	4909      	ldr	r1, [pc, #36]	; (4abc <pinmap_pad_sercom+0x3c>)
    4a98:	1c06      	adds	r6, r0, #0
    4a9a:	f7ff fac5 	bl	4028 <pinmap_peripheral>
    4a9e:	1c23      	adds	r3, r4, #0
    4aa0:	4003      	ands	r3, r0
    4aa2:	42ab      	cmp	r3, r5
    4aa4:	d007      	beq.n	4ab6 <pinmap_pad_sercom+0x36>
    4aa6:	1c30      	adds	r0, r6, #0
    4aa8:	4905      	ldr	r1, [pc, #20]	; (4ac0 <pinmap_pad_sercom+0x40>)
    4aaa:	f7ff fabd 	bl	4028 <pinmap_peripheral>
    4aae:	1c23      	adds	r3, r4, #0
    4ab0:	4003      	ands	r3, r0
    4ab2:	42ab      	cmp	r3, r5
    4ab4:	d1ec      	bne.n	4a90 <pinmap_pad_sercom+0x10>
    4ab6:	0900      	lsrs	r0, r0, #4
    4ab8:	4020      	ands	r0, r4
    4aba:	e7eb      	b.n	4a94 <pinmap_pad_sercom+0x14>
    4abc:	0000d9c0 	.word	0x0000d9c0
    4ac0:	0000d93c 	.word	0x0000d93c

00004ac4 <pinmap_peripheral_sercom>:
    4ac4:	b570      	push	{r4, r5, r6, lr}
    4ac6:	b086      	sub	sp, #24
    4ac8:	466a      	mov	r2, sp
    4aca:	4b08      	ldr	r3, [pc, #32]	; (4aec <pinmap_peripheral_sercom+0x28>)
    4acc:	4668      	mov	r0, sp
    4ace:	cb70      	ldmia	r3!, {r4, r5, r6}
    4ad0:	c270      	stmia	r2!, {r4, r5, r6}
    4ad2:	cb70      	ldmia	r3!, {r4, r5, r6}
    4ad4:	c270      	stmia	r2!, {r4, r5, r6}
    4ad6:	230f      	movs	r3, #15
    4ad8:	4019      	ands	r1, r3
    4ada:	2905      	cmp	r1, #5
    4adc:	d903      	bls.n	4ae6 <pinmap_peripheral_sercom+0x22>
    4ade:	2001      	movs	r0, #1
    4ae0:	4240      	negs	r0, r0
    4ae2:	b006      	add	sp, #24
    4ae4:	bd70      	pop	{r4, r5, r6, pc}
    4ae6:	0089      	lsls	r1, r1, #2
    4ae8:	5808      	ldr	r0, [r1, r0]
    4aea:	e7fa      	b.n	4ae2 <pinmap_peripheral_sercom+0x1e>
    4aec:	0000de78 	.word	0x0000de78

00004af0 <us_ticker_irq_handler_internal>:
    4af0:	2203      	movs	r2, #3
    4af2:	b508      	push	{r3, lr}
    4af4:	4b02      	ldr	r3, [pc, #8]	; (4b00 <us_ticker_irq_handler_internal+0x10>)
    4af6:	681b      	ldr	r3, [r3, #0]
    4af8:	739a      	strb	r2, [r3, #14]
    4afa:	f000 fc83 	bl	5404 <us_ticker_irq_handler>
    4afe:	bd08      	pop	{r3, pc}
    4b00:	20004044 	.word	0x20004044

00004b04 <us_ticker_init.part.5>:
    4b04:	b530      	push	{r4, r5, lr}
    4b06:	2501      	movs	r5, #1
    4b08:	4b35      	ldr	r3, [pc, #212]	; (4be0 <us_ticker_init.part.5+0xdc>)
    4b0a:	4c36      	ldr	r4, [pc, #216]	; (4be4 <us_ticker_init.part.5+0xe0>)
    4b0c:	601d      	str	r5, [r3, #0]
    4b0e:	7823      	ldrb	r3, [r4, #0]
    4b10:	b08f      	sub	sp, #60	; 0x3c
    4b12:	2b00      	cmp	r3, #0
    4b14:	d05c      	beq.n	4bd0 <us_ticker_init.part.5+0xcc>
    4b16:	2300      	movs	r3, #0
    4b18:	2200      	movs	r2, #0
    4b1a:	ac01      	add	r4, sp, #4
    4b1c:	7422      	strb	r2, [r4, #16]
    4b1e:	6163      	str	r3, [r4, #20]
    4b20:	61a3      	str	r3, [r4, #24]
    4b22:	7722      	strb	r2, [r4, #28]
    4b24:	6223      	str	r3, [r4, #32]
    4b26:	6263      	str	r3, [r4, #36]	; 0x24
    4b28:	2000      	movs	r0, #0
    4b2a:	7023      	strb	r3, [r4, #0]
    4b2c:	70a3      	strb	r3, [r4, #2]
    4b2e:	80a3      	strh	r3, [r4, #4]
    4b30:	71a2      	strb	r2, [r4, #6]
    4b32:	8123      	strh	r3, [r4, #8]
    4b34:	7062      	strb	r2, [r4, #1]
    4b36:	72a2      	strb	r2, [r4, #10]
    4b38:	72e2      	strb	r2, [r4, #11]
    4b3a:	7322      	strb	r2, [r4, #12]
    4b3c:	73a2      	strb	r2, [r4, #14]
    4b3e:	7362      	strb	r2, [r4, #13]
    4b40:	8523      	strh	r3, [r4, #40]	; 0x28
    4b42:	8563      	strh	r3, [r4, #42]	; 0x2a
    4b44:	85a3      	strh	r3, [r4, #44]	; 0x2c
    4b46:	f7fe f8fb 	bl	2d40 <system_gclk_gen_get_hz>
    4b4a:	4927      	ldr	r1, [pc, #156]	; (4be8 <us_ticker_init.part.5+0xe4>)
    4b4c:	f000 fec8 	bl	58e0 <__aeabi_uidiv>
    4b50:	2800      	cmp	r0, #0
    4b52:	d032      	beq.n	4bba <us_ticker_init.part.5+0xb6>
    4b54:	2300      	movs	r3, #0
    4b56:	2801      	cmp	r0, #1
    4b58:	d007      	beq.n	4b6a <us_ticker_init.part.5+0x66>
    4b5a:	0840      	lsrs	r0, r0, #1
    4b5c:	3301      	adds	r3, #1
    4b5e:	2801      	cmp	r0, #1
    4b60:	d022      	beq.n	4ba8 <us_ticker_init.part.5+0xa4>
    4b62:	2b0b      	cmp	r3, #11
    4b64:	d1f9      	bne.n	4b5a <us_ticker_init.part.5+0x56>
    4b66:	23e0      	movs	r3, #224	; 0xe0
    4b68:	00db      	lsls	r3, r3, #3
    4b6a:	80a3      	strh	r3, [r4, #4]
    4b6c:	2308      	movs	r3, #8
    4b6e:	70a3      	strb	r3, [r4, #2]
    4b70:	3b07      	subs	r3, #7
    4b72:	7063      	strb	r3, [r4, #1]
    4b74:	2300      	movs	r3, #0
    4b76:	4d1d      	ldr	r5, [pc, #116]	; (4bec <us_ticker_init.part.5+0xe8>)
    4b78:	62a3      	str	r3, [r4, #40]	; 0x28
    4b7a:	491d      	ldr	r1, [pc, #116]	; (4bf0 <us_ticker_init.part.5+0xec>)
    4b7c:	3b01      	subs	r3, #1
    4b7e:	1c22      	adds	r2, r4, #0
    4b80:	1c28      	adds	r0, r5, #0
    4b82:	62e3      	str	r3, [r4, #44]	; 0x2c
    4b84:	f000 fcd2 	bl	552c <tc_init>
    4b88:	491a      	ldr	r1, [pc, #104]	; (4bf4 <us_ticker_init.part.5+0xf0>)
    4b8a:	2202      	movs	r2, #2
    4b8c:	1c28      	adds	r0, r5, #0
    4b8e:	f000 fc51 	bl	5434 <tc_register_callback>
    4b92:	217f      	movs	r1, #127	; 0x7f
    4b94:	682a      	ldr	r2, [r5, #0]
    4b96:	7bd3      	ldrb	r3, [r2, #15]
    4b98:	438b      	bics	r3, r1
    4b9a:	d1fc      	bne.n	4b96 <us_ticker_init.part.5+0x92>
    4b9c:	8811      	ldrh	r1, [r2, #0]
    4b9e:	3302      	adds	r3, #2
    4ba0:	430b      	orrs	r3, r1
    4ba2:	8013      	strh	r3, [r2, #0]
    4ba4:	b00f      	add	sp, #60	; 0x3c
    4ba6:	bd30      	pop	{r4, r5, pc}
    4ba8:	2b08      	cmp	r3, #8
    4baa:	d8dc      	bhi.n	4b66 <us_ticker_init.part.5+0x62>
    4bac:	2b06      	cmp	r3, #6
    4bae:	d813      	bhi.n	4bd8 <us_ticker_init.part.5+0xd4>
    4bb0:	2b04      	cmp	r3, #4
    4bb2:	d908      	bls.n	4bc6 <us_ticker_init.part.5+0xc2>
    4bb4:	23a0      	movs	r3, #160	; 0xa0
    4bb6:	00db      	lsls	r3, r3, #3
    4bb8:	e7d7      	b.n	4b6a <us_ticker_init.part.5+0x66>
    4bba:	480f      	ldr	r0, [pc, #60]	; (4bf8 <us_ticker_init.part.5+0xf4>)
    4bbc:	490f      	ldr	r1, [pc, #60]	; (4bfc <us_ticker_init.part.5+0xf8>)
    4bbe:	2257      	movs	r2, #87	; 0x57
    4bc0:	f7ff f9e2 	bl	3f88 <mbed_assert_internal>
    4bc4:	2300      	movs	r3, #0
    4bc6:	22e0      	movs	r2, #224	; 0xe0
    4bc8:	021b      	lsls	r3, r3, #8
    4bca:	00d2      	lsls	r2, r2, #3
    4bcc:	4013      	ands	r3, r2
    4bce:	e7cc      	b.n	4b6a <us_ticker_init.part.5+0x66>
    4bd0:	f7fe f952 	bl	2e78 <system_init>
    4bd4:	7025      	strb	r5, [r4, #0]
    4bd6:	e79e      	b.n	4b16 <us_ticker_init.part.5+0x12>
    4bd8:	23c0      	movs	r3, #192	; 0xc0
    4bda:	00db      	lsls	r3, r3, #3
    4bdc:	e7c5      	b.n	4b6a <us_ticker_init.part.5+0x66>
    4bde:	46c0      	nop			; (mov r8, r8)
    4be0:	20003fa0 	.word	0x20003fa0
    4be4:	20003e10 	.word	0x20003e10
    4be8:	000f4240 	.word	0x000f4240
    4bec:	20004044 	.word	0x20004044
    4bf0:	42003000 	.word	0x42003000
    4bf4:	00004af1 	.word	0x00004af1
    4bf8:	0000de90 	.word	0x0000de90
    4bfc:	0000dea4 	.word	0x0000dea4

00004c00 <us_ticker_init>:
    4c00:	b508      	push	{r3, lr}
    4c02:	4b03      	ldr	r3, [pc, #12]	; (4c10 <us_ticker_init+0x10>)
    4c04:	681b      	ldr	r3, [r3, #0]
    4c06:	2b00      	cmp	r3, #0
    4c08:	d101      	bne.n	4c0e <us_ticker_init+0xe>
    4c0a:	f7ff ff7b 	bl	4b04 <us_ticker_init.part.5>
    4c0e:	bd08      	pop	{r3, pc}
    4c10:	20003fa0 	.word	0x20003fa0

00004c14 <us_ticker_read>:
    4c14:	b508      	push	{r3, lr}
    4c16:	4b05      	ldr	r3, [pc, #20]	; (4c2c <us_ticker_read+0x18>)
    4c18:	681b      	ldr	r3, [r3, #0]
    4c1a:	2b00      	cmp	r3, #0
    4c1c:	d101      	bne.n	4c22 <us_ticker_read+0xe>
    4c1e:	f7ff ff71 	bl	4b04 <us_ticker_init.part.5>
    4c22:	4803      	ldr	r0, [pc, #12]	; (4c30 <us_ticker_read+0x1c>)
    4c24:	f000 fdd4 	bl	57d0 <tc_get_count_value>
    4c28:	bd08      	pop	{r3, pc}
    4c2a:	46c0      	nop			; (mov r8, r8)
    4c2c:	20003fa0 	.word	0x20003fa0
    4c30:	20004044 	.word	0x20004044

00004c34 <us_ticker_set_interrupt>:
    4c34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4c36:	1c06      	adds	r6, r0, #0
    4c38:	f7ff ffec 	bl	4c14 <us_ticker_read>
    4c3c:	1a30      	subs	r0, r6, r0
    4c3e:	d421      	bmi.n	4c84 <us_ticker_set_interrupt+0x50>
    4c40:	2780      	movs	r7, #128	; 0x80
    4c42:	2380      	movs	r3, #128	; 0x80
    4c44:	4d11      	ldr	r5, [pc, #68]	; (4c8c <us_ticker_set_interrupt+0x58>)
    4c46:	033f      	lsls	r7, r7, #12
    4c48:	50ef      	str	r7, [r5, r3]
    4c4a:	4911      	ldr	r1, [pc, #68]	; (4c90 <us_ticker_set_interrupt+0x5c>)
    4c4c:	2013      	movs	r0, #19
    4c4e:	f7fd fe0f 	bl	2870 <NVIC_SetVector>
    4c52:	4c10      	ldr	r4, [pc, #64]	; (4c94 <us_ticker_set_interrupt+0x60>)
    4c54:	6820      	ldr	r0, [r4, #0]
    4c56:	f000 fc49 	bl	54ec <_tc_get_inst_index>
    4c5a:	221f      	movs	r2, #31
    4c5c:	4b0e      	ldr	r3, [pc, #56]	; (4c98 <us_ticker_set_interrupt+0x64>)
    4c5e:	2100      	movs	r1, #0
    4c60:	5c1b      	ldrb	r3, [r3, r0]
    4c62:	1c20      	adds	r0, r4, #0
    4c64:	4013      	ands	r3, r2
    4c66:	3a1e      	subs	r2, #30
    4c68:	409a      	lsls	r2, r3
    4c6a:	2310      	movs	r3, #16
    4c6c:	602a      	str	r2, [r5, #0]
    4c6e:	7e62      	ldrb	r2, [r4, #25]
    4c70:	4313      	orrs	r3, r2
    4c72:	7663      	strb	r3, [r4, #25]
    4c74:	2310      	movs	r3, #16
    4c76:	6822      	ldr	r2, [r4, #0]
    4c78:	7353      	strb	r3, [r2, #13]
    4c7a:	1c32      	adds	r2, r6, #0
    4c7c:	f000 fdbe 	bl	57fc <tc_set_compare_value>
    4c80:	602f      	str	r7, [r5, #0]
    4c82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4c84:	f000 fbbe 	bl	5404 <us_ticker_irq_handler>
    4c88:	e7fb      	b.n	4c82 <us_ticker_set_interrupt+0x4e>
    4c8a:	46c0      	nop			; (mov r8, r8)
    4c8c:	e000e100 	.word	0xe000e100
    4c90:	000054d5 	.word	0x000054d5
    4c94:	20004044 	.word	0x20004044
    4c98:	0000df14 	.word	0x0000df14

00004c9c <us_ticker_disable_interrupt>:
    4c9c:	2110      	movs	r1, #16
    4c9e:	4b06      	ldr	r3, [pc, #24]	; (4cb8 <us_ticker_disable_interrupt+0x1c>)
    4ca0:	681a      	ldr	r2, [r3, #0]
    4ca2:	7311      	strb	r1, [r2, #12]
    4ca4:	7e5a      	ldrb	r2, [r3, #25]
    4ca6:	438a      	bics	r2, r1
    4ca8:	2180      	movs	r1, #128	; 0x80
    4caa:	765a      	strb	r2, [r3, #25]
    4cac:	2380      	movs	r3, #128	; 0x80
    4cae:	4a03      	ldr	r2, [pc, #12]	; (4cbc <us_ticker_disable_interrupt+0x20>)
    4cb0:	0309      	lsls	r1, r1, #12
    4cb2:	50d1      	str	r1, [r2, r3]
    4cb4:	4770      	bx	lr
    4cb6:	46c0      	nop			; (mov r8, r8)
    4cb8:	20004044 	.word	0x20004044
    4cbc:	e000e100 	.word	0xe000e100

00004cc0 <us_ticker_clear_interrupt>:
    4cc0:	2210      	movs	r2, #16
    4cc2:	4b05      	ldr	r3, [pc, #20]	; (4cd8 <us_ticker_clear_interrupt+0x18>)
    4cc4:	2180      	movs	r1, #128	; 0x80
    4cc6:	681b      	ldr	r3, [r3, #0]
    4cc8:	0309      	lsls	r1, r1, #12
    4cca:	739a      	strb	r2, [r3, #14]
    4ccc:	731a      	strb	r2, [r3, #12]
    4cce:	23c0      	movs	r3, #192	; 0xc0
    4cd0:	4a02      	ldr	r2, [pc, #8]	; (4cdc <us_ticker_clear_interrupt+0x1c>)
    4cd2:	005b      	lsls	r3, r3, #1
    4cd4:	50d1      	str	r1, [r2, r3]
    4cd6:	4770      	bx	lr
    4cd8:	20004044 	.word	0x20004044
    4cdc:	e000e100 	.word	0xe000e100

00004ce0 <spi_find_mux_settings>:
    4ce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4ce2:	1e04      	subs	r4, r0, #0
    4ce4:	d03e      	beq.n	4d64 <spi_find_mux_settings+0x84>
    4ce6:	6820      	ldr	r0, [r4, #0]
    4ce8:	f7ff fb5e 	bl	43a8 <_sercom_get_sercom_inst_index>
    4cec:	7923      	ldrb	r3, [r4, #4]
    4cee:	1c07      	adds	r7, r0, #0
    4cf0:	2b01      	cmp	r3, #1
    4cf2:	d02a      	beq.n	4d4a <spi_find_mux_settings+0x6a>
    4cf4:	2501      	movs	r5, #1
    4cf6:	2300      	movs	r3, #0
    4cf8:	2005      	movs	r0, #5
    4cfa:	18e3      	adds	r3, r4, r3
    4cfc:	5618      	ldrsb	r0, [r3, r0]
    4cfe:	1c43      	adds	r3, r0, #1
    4d00:	d00f      	beq.n	4d22 <spi_find_mux_settings+0x42>
    4d02:	1c39      	adds	r1, r7, #0
    4d04:	f7ff febc 	bl	4a80 <pinmap_pad_sercom>
    4d08:	1c43      	adds	r3, r0, #1
    4d0a:	d00a      	beq.n	4d22 <spi_find_mux_settings+0x42>
    4d0c:	26c0      	movs	r6, #192	; 0xc0
    4d0e:	0500      	lsls	r0, r0, #20
    4d10:	03b6      	lsls	r6, r6, #14
    4d12:	4006      	ands	r6, r0
    4d14:	2005      	movs	r0, #5
    4d16:	1965      	adds	r5, r4, r5
    4d18:	5628      	ldrsb	r0, [r5, r0]
    4d1a:	1c43      	adds	r3, r0, #1
    4d1c:	d107      	bne.n	4d2e <spi_find_mux_settings+0x4e>
    4d1e:	1c30      	adds	r0, r6, #0
    4d20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4d22:	2005      	movs	r0, #5
    4d24:	1965      	adds	r5, r4, r5
    4d26:	5628      	ldrsb	r0, [r5, r0]
    4d28:	2600      	movs	r6, #0
    4d2a:	1c43      	adds	r3, r0, #1
    4d2c:	d0f7      	beq.n	4d1e <spi_find_mux_settings+0x3e>
    4d2e:	1c39      	adds	r1, r7, #0
    4d30:	f7ff fea6 	bl	4a80 <pinmap_pad_sercom>
    4d34:	1c43      	adds	r3, r0, #1
    4d36:	d0f2      	beq.n	4d1e <spi_find_mux_settings+0x3e>
    4d38:	2800      	cmp	r0, #0
    4d3a:	d009      	beq.n	4d50 <spi_find_mux_settings+0x70>
    4d3c:	23c0      	movs	r3, #192	; 0xc0
    4d3e:	3801      	subs	r0, #1
    4d40:	0400      	lsls	r0, r0, #16
    4d42:	029b      	lsls	r3, r3, #10
    4d44:	4018      	ands	r0, r3
    4d46:	4306      	orrs	r6, r0
    4d48:	e7e9      	b.n	4d1e <spi_find_mux_settings+0x3e>
    4d4a:	2500      	movs	r5, #0
    4d4c:	2301      	movs	r3, #1
    4d4e:	e7d3      	b.n	4cf8 <spi_find_mux_settings+0x18>
    4d50:	2007      	movs	r0, #7
    4d52:	1c39      	adds	r1, r7, #0
    4d54:	5620      	ldrsb	r0, [r4, r0]
    4d56:	f7ff fe93 	bl	4a80 <pinmap_pad_sercom>
    4d5a:	2803      	cmp	r0, #3
    4d5c:	d008      	beq.n	4d70 <spi_find_mux_settings+0x90>
    4d5e:	2000      	movs	r0, #0
    4d60:	4306      	orrs	r6, r0
    4d62:	e7dc      	b.n	4d1e <spi_find_mux_settings+0x3e>
    4d64:	4804      	ldr	r0, [pc, #16]	; (4d78 <spi_find_mux_settings+0x98>)
    4d66:	4905      	ldr	r1, [pc, #20]	; (4d7c <spi_find_mux_settings+0x9c>)
    4d68:	22b1      	movs	r2, #177	; 0xb1
    4d6a:	f7ff f90d 	bl	3f88 <mbed_assert_internal>
    4d6e:	e7ba      	b.n	4ce6 <spi_find_mux_settings+0x6>
    4d70:	20c0      	movs	r0, #192	; 0xc0
    4d72:	0280      	lsls	r0, r0, #10
    4d74:	4306      	orrs	r6, r0
    4d76:	e7d2      	b.n	4d1e <spi_find_mux_settings+0x3e>
    4d78:	0000d434 	.word	0x0000d434
    4d7c:	0000df18 	.word	0x0000df18

00004d80 <spi_init>:
    4d80:	b5f0      	push	{r4, r5, r6, r7, lr}
    4d82:	4644      	mov	r4, r8
    4d84:	465f      	mov	r7, fp
    4d86:	464d      	mov	r5, r9
    4d88:	4656      	mov	r6, sl
    4d8a:	b4f0      	push	{r4, r5, r6, r7}
    4d8c:	b085      	sub	sp, #20
    4d8e:	4698      	mov	r8, r3
    4d90:	ab0e      	add	r3, sp, #56	; 0x38
    4d92:	781b      	ldrb	r3, [r3, #0]
    4d94:	1c04      	adds	r4, r0, #0
    4d96:	b25b      	sxtb	r3, r3
    4d98:	1c0d      	adds	r5, r1, #0
    4d9a:	4693      	mov	fp, r2
    4d9c:	9300      	str	r3, [sp, #0]
    4d9e:	2800      	cmp	r0, #0
    4da0:	d100      	bne.n	4da4 <spi_init+0x24>
    4da2:	e0c8      	b.n	4f36 <spi_init+0x1b6>
    4da4:	4643      	mov	r3, r8
    4da6:	3301      	adds	r3, #1
    4da8:	d100      	bne.n	4dac <spi_init+0x2c>
    4daa:	e0b8      	b.n	4f1e <spi_init+0x19e>
    4dac:	2300      	movs	r3, #0
    4dae:	4e6a      	ldr	r6, [pc, #424]	; (4f58 <spi_init+0x1d8>)
    4db0:	aa02      	add	r2, sp, #8
    4db2:	8053      	strh	r3, [r2, #2]
    4db4:	7833      	ldrb	r3, [r6, #0]
    4db6:	2b00      	cmp	r3, #0
    4db8:	d032      	beq.n	4e20 <spi_init+0xa0>
    4dba:	4659      	mov	r1, fp
    4dbc:	4642      	mov	r2, r8
    4dbe:	9b00      	ldr	r3, [sp, #0]
    4dc0:	1c28      	adds	r0, r5, #0
    4dc2:	f7ff fdf9 	bl	49b8 <pinmap_find_sercom>
    4dc6:	4681      	mov	r9, r0
    4dc8:	2001      	movs	r0, #1
    4dca:	4649      	mov	r1, r9
    4dcc:	4240      	negs	r0, r0
    4dce:	f7ff fe79 	bl	4ac4 <pinmap_peripheral_sercom>
    4dd2:	6020      	str	r0, [r4, #0]
    4dd4:	2c00      	cmp	r4, #0
    4dd6:	d100      	bne.n	4dda <spi_init+0x5a>
    4dd8:	e0a7      	b.n	4f2a <spi_init+0x1aa>
    4dda:	4f60      	ldr	r7, [pc, #384]	; (4f5c <spi_init+0x1dc>)
    4ddc:	4e60      	ldr	r6, [pc, #384]	; (4f60 <spi_init+0x1e0>)
    4dde:	e003      	b.n	4de8 <spi_init+0x68>
    4de0:	6822      	ldr	r2, [r4, #0]
    4de2:	8b53      	ldrh	r3, [r2, #26]
    4de4:	0bdb      	lsrs	r3, r3, #15
    4de6:	d00a      	beq.n	4dfe <spi_init+0x7e>
    4de8:	2c00      	cmp	r4, #0
    4dea:	d1f9      	bne.n	4de0 <spi_init+0x60>
    4dec:	2244      	movs	r2, #68	; 0x44
    4dee:	1c38      	adds	r0, r7, #0
    4df0:	1c31      	adds	r1, r6, #0
    4df2:	f7ff f8c9 	bl	3f88 <mbed_assert_internal>
    4df6:	6822      	ldr	r2, [r4, #0]
    4df8:	8b53      	ldrh	r3, [r2, #26]
    4dfa:	0bdb      	lsrs	r3, r3, #15
    4dfc:	d1f4      	bne.n	4de8 <spi_init+0x68>
    4dfe:	2102      	movs	r1, #2
    4e00:	6813      	ldr	r3, [r2, #0]
    4e02:	438b      	bics	r3, r1
    4e04:	6013      	str	r3, [r2, #0]
    4e06:	6823      	ldr	r3, [r4, #0]
    4e08:	681e      	ldr	r6, [r3, #0]
    4e0a:	2301      	movs	r3, #1
    4e0c:	469a      	mov	sl, r3
    4e0e:	401e      	ands	r6, r3
    4e10:	d00b      	beq.n	4e2a <spi_init+0xaa>
    4e12:	b005      	add	sp, #20
    4e14:	bc3c      	pop	{r2, r3, r4, r5}
    4e16:	4690      	mov	r8, r2
    4e18:	4699      	mov	r9, r3
    4e1a:	46a2      	mov	sl, r4
    4e1c:	46ab      	mov	fp, r5
    4e1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4e20:	f7fe f82a 	bl	2e78 <system_init>
    4e24:	2301      	movs	r3, #1
    4e26:	7033      	strb	r3, [r6, #0]
    4e28:	e7c7      	b.n	4dba <spi_init+0x3a>
    4e2a:	464b      	mov	r3, r9
    4e2c:	4650      	mov	r0, sl
    4e2e:	3302      	adds	r3, #2
    4e30:	4098      	lsls	r0, r3
    4e32:	1c03      	adds	r3, r0, #0
    4e34:	494b      	ldr	r1, [pc, #300]	; (4f64 <spi_init+0x1e4>)
    4e36:	6a0a      	ldr	r2, [r1, #32]
    4e38:	4313      	orrs	r3, r2
    4e3a:	620b      	str	r3, [r1, #32]
    4e3c:	ab02      	add	r3, sp, #8
    4e3e:	701e      	strb	r6, [r3, #0]
    4e40:	464b      	mov	r3, r9
    4e42:	3314      	adds	r3, #20
    4e44:	b2db      	uxtb	r3, r3
    4e46:	1c1f      	adds	r7, r3, #0
    4e48:	1c18      	adds	r0, r3, #0
    4e4a:	a902      	add	r1, sp, #8
    4e4c:	9301      	str	r3, [sp, #4]
    4e4e:	f7fd fff1 	bl	2e34 <system_gclk_chan_set_config>
    4e52:	1c38      	adds	r0, r7, #0
    4e54:	f7fd ffb0 	bl	2db8 <system_gclk_chan_enable>
    4e58:	2100      	movs	r1, #0
    4e5a:	2000      	movs	r0, #0
    4e5c:	f7ff fa84 	bl	4368 <sercom_set_gclk_generator>
    4e60:	230c      	movs	r3, #12
    4e62:	6822      	ldr	r2, [r4, #0]
    4e64:	af03      	add	r7, sp, #12
    4e66:	6811      	ldr	r1, [r2, #0]
    4e68:	430b      	orrs	r3, r1
    4e6a:	6013      	str	r3, [r2, #0]
    4e6c:	4653      	mov	r3, sl
    4e6e:	7123      	strb	r3, [r4, #4]
    4e70:	2380      	movs	r3, #128	; 0x80
    4e72:	703b      	strb	r3, [r7, #0]
    4e74:	4653      	mov	r3, sl
    4e76:	70bb      	strb	r3, [r7, #2]
    4e78:	465b      	mov	r3, fp
    4e7a:	71a3      	strb	r3, [r4, #6]
    4e7c:	4643      	mov	r3, r8
    4e7e:	71e3      	strb	r3, [r4, #7]
    4e80:	466b      	mov	r3, sp
    4e82:	781b      	ldrb	r3, [r3, #0]
    4e84:	7165      	strb	r5, [r4, #5]
    4e86:	7223      	strb	r3, [r4, #8]
    4e88:	2309      	movs	r3, #9
    4e8a:	4698      	mov	r8, r3
    4e8c:	b26d      	sxtb	r5, r5
    4e8e:	707e      	strb	r6, [r7, #1]
    4e90:	70fe      	strb	r6, [r7, #3]
    4e92:	44a0      	add	r8, r4
    4e94:	1da6      	adds	r6, r4, #6
    4e96:	1c6b      	adds	r3, r5, #1
    4e98:	d00b      	beq.n	4eb2 <spi_init+0x132>
    4e9a:	1c28      	adds	r0, r5, #0
    4e9c:	4649      	mov	r1, r9
    4e9e:	f7ff fdcb 	bl	4a38 <pinmap_function_sercom>
    4ea2:	b2c0      	uxtb	r0, r0
    4ea4:	7038      	strb	r0, [r7, #0]
    4ea6:	28ff      	cmp	r0, #255	; 0xff
    4ea8:	d003      	beq.n	4eb2 <spi_init+0x132>
    4eaa:	b2e8      	uxtb	r0, r5
    4eac:	1c39      	adds	r1, r7, #0
    4eae:	f7ff fbf5 	bl	469c <system_pinmux_pin_set_config>
    4eb2:	4546      	cmp	r6, r8
    4eb4:	d006      	beq.n	4ec4 <spi_init+0x144>
    4eb6:	7835      	ldrb	r5, [r6, #0]
    4eb8:	3601      	adds	r6, #1
    4eba:	b26d      	sxtb	r5, r5
    4ebc:	1c6b      	adds	r3, r5, #1
    4ebe:	d1ec      	bne.n	4e9a <spi_init+0x11a>
    4ec0:	4546      	cmp	r6, r8
    4ec2:	d1f8      	bne.n	4eb6 <spi_init+0x136>
    4ec4:	9801      	ldr	r0, [sp, #4]
    4ec6:	f7fd ffc1 	bl	2e4c <system_gclk_chan_get_hz>
    4eca:	ab02      	add	r3, sp, #8
    4ecc:	1c01      	adds	r1, r0, #0
    4ece:	1c9a      	adds	r2, r3, #2
    4ed0:	4825      	ldr	r0, [pc, #148]	; (4f68 <spi_init+0x1e8>)
    4ed2:	f7ff f96d 	bl	41b0 <_sercom_get_sync_baud_val>
    4ed6:	2800      	cmp	r0, #0
    4ed8:	d19b      	bne.n	4e12 <spi_init+0x92>
    4eda:	ab02      	add	r3, sp, #8
    4edc:	789b      	ldrb	r3, [r3, #2]
    4ede:	6822      	ldr	r2, [r4, #0]
    4ee0:	1c20      	adds	r0, r4, #0
    4ee2:	7313      	strb	r3, [r2, #12]
    4ee4:	f7ff fefc 	bl	4ce0 <spi_find_mux_settings>
    4ee8:	2180      	movs	r1, #128	; 0x80
    4eea:	6822      	ldr	r2, [r4, #0]
    4eec:	0289      	lsls	r1, r1, #10
    4eee:	6813      	ldr	r3, [r2, #0]
    4ef0:	4318      	orrs	r0, r3
    4ef2:	6010      	str	r0, [r2, #0]
    4ef4:	6822      	ldr	r2, [r4, #0]
    4ef6:	6853      	ldr	r3, [r2, #4]
    4ef8:	430b      	orrs	r3, r1
    4efa:	6053      	str	r3, [r2, #4]
    4efc:	2c00      	cmp	r4, #0
    4efe:	d025      	beq.n	4f4c <spi_init+0x1cc>
    4f00:	4e16      	ldr	r6, [pc, #88]	; (4f5c <spi_init+0x1dc>)
    4f02:	4d17      	ldr	r5, [pc, #92]	; (4f60 <spi_init+0x1e0>)
    4f04:	e003      	b.n	4f0e <spi_init+0x18e>
    4f06:	6822      	ldr	r2, [r4, #0]
    4f08:	8b53      	ldrh	r3, [r2, #26]
    4f0a:	0bdb      	lsrs	r3, r3, #15
    4f0c:	d019      	beq.n	4f42 <spi_init+0x1c2>
    4f0e:	2c00      	cmp	r4, #0
    4f10:	d1f9      	bne.n	4f06 <spi_init+0x186>
    4f12:	1c30      	adds	r0, r6, #0
    4f14:	1c29      	adds	r1, r5, #0
    4f16:	2244      	movs	r2, #68	; 0x44
    4f18:	f7ff f836 	bl	3f88 <mbed_assert_internal>
    4f1c:	e7f3      	b.n	4f06 <spi_init+0x186>
    4f1e:	4813      	ldr	r0, [pc, #76]	; (4f6c <spi_init+0x1ec>)
    4f20:	490f      	ldr	r1, [pc, #60]	; (4f60 <spi_init+0x1e0>)
    4f22:	22f5      	movs	r2, #245	; 0xf5
    4f24:	f7ff f830 	bl	3f88 <mbed_assert_internal>
    4f28:	e740      	b.n	4dac <spi_init+0x2c>
    4f2a:	480c      	ldr	r0, [pc, #48]	; (4f5c <spi_init+0x1dc>)
    4f2c:	490c      	ldr	r1, [pc, #48]	; (4f60 <spi_init+0x1e0>)
    4f2e:	225e      	movs	r2, #94	; 0x5e
    4f30:	f7ff f82a 	bl	3f88 <mbed_assert_internal>
    4f34:	e751      	b.n	4dda <spi_init+0x5a>
    4f36:	4809      	ldr	r0, [pc, #36]	; (4f5c <spi_init+0x1dc>)
    4f38:	4909      	ldr	r1, [pc, #36]	; (4f60 <spi_init+0x1e0>)
    4f3a:	22f4      	movs	r2, #244	; 0xf4
    4f3c:	f7ff f824 	bl	3f88 <mbed_assert_internal>
    4f40:	e730      	b.n	4da4 <spi_init+0x24>
    4f42:	6811      	ldr	r1, [r2, #0]
    4f44:	3302      	adds	r3, #2
    4f46:	430b      	orrs	r3, r1
    4f48:	6013      	str	r3, [r2, #0]
    4f4a:	e762      	b.n	4e12 <spi_init+0x92>
    4f4c:	4803      	ldr	r0, [pc, #12]	; (4f5c <spi_init+0x1dc>)
    4f4e:	4904      	ldr	r1, [pc, #16]	; (4f60 <spi_init+0x1e0>)
    4f50:	2252      	movs	r2, #82	; 0x52
    4f52:	f7ff f819 	bl	3f88 <mbed_assert_internal>
    4f56:	e7d3      	b.n	4f00 <spi_init+0x180>
    4f58:	20003e10 	.word	0x20003e10
    4f5c:	0000d434 	.word	0x0000d434
    4f60:	0000df18 	.word	0x0000df18
    4f64:	40000400 	.word	0x40000400
    4f68:	000186a0 	.word	0x000186a0
    4f6c:	0000df80 	.word	0x0000df80

00004f70 <spi_format>:
    4f70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4f72:	464f      	mov	r7, r9
    4f74:	4646      	mov	r6, r8
    4f76:	1c04      	adds	r4, r0, #0
    4f78:	b4c0      	push	{r6, r7}
    4f7a:	4688      	mov	r8, r1
    4f7c:	1c15      	adds	r5, r2, #0
    4f7e:	4699      	mov	r9, r3
    4f80:	2800      	cmp	r0, #0
    4f82:	d100      	bne.n	4f86 <spi_format+0x16>
    4f84:	e08a      	b.n	509c <spi_format+0x12c>
    4f86:	4f4f      	ldr	r7, [pc, #316]	; (50c4 <spi_format+0x154>)
    4f88:	4e4f      	ldr	r6, [pc, #316]	; (50c8 <spi_format+0x158>)
    4f8a:	e006      	b.n	4f9a <spi_format+0x2a>
    4f8c:	6822      	ldr	r2, [r4, #0]
    4f8e:	8b53      	ldrh	r3, [r2, #26]
    4f90:	0bdb      	lsrs	r3, r3, #15
    4f92:	03db      	lsls	r3, r3, #15
    4f94:	b29b      	uxth	r3, r3
    4f96:	2b00      	cmp	r3, #0
    4f98:	d00d      	beq.n	4fb6 <spi_format+0x46>
    4f9a:	2c00      	cmp	r4, #0
    4f9c:	d1f6      	bne.n	4f8c <spi_format+0x1c>
    4f9e:	2244      	movs	r2, #68	; 0x44
    4fa0:	1c38      	adds	r0, r7, #0
    4fa2:	1c31      	adds	r1, r6, #0
    4fa4:	f7fe fff0 	bl	3f88 <mbed_assert_internal>
    4fa8:	6822      	ldr	r2, [r4, #0]
    4faa:	8b53      	ldrh	r3, [r2, #26]
    4fac:	0bdb      	lsrs	r3, r3, #15
    4fae:	03db      	lsls	r3, r3, #15
    4fb0:	b29b      	uxth	r3, r3
    4fb2:	2b00      	cmp	r3, #0
    4fb4:	d1f1      	bne.n	4f9a <spi_format+0x2a>
    4fb6:	2002      	movs	r0, #2
    4fb8:	6811      	ldr	r1, [r2, #0]
    4fba:	4381      	bics	r1, r0
    4fbc:	6011      	str	r1, [r2, #0]
    4fbe:	464a      	mov	r2, r9
    4fc0:	2a00      	cmp	r2, #0
    4fc2:	d060      	beq.n	5086 <spi_format+0x116>
    4fc4:	211c      	movs	r1, #28
    4fc6:	6820      	ldr	r0, [r4, #0]
    4fc8:	6802      	ldr	r2, [r0, #0]
    4fca:	438a      	bics	r2, r1
    4fcc:	3914      	subs	r1, #20
    4fce:	430a      	orrs	r2, r1
    4fd0:	6002      	str	r2, [r0, #0]
    4fd2:	6822      	ldr	r2, [r4, #0]
    4fd4:	7123      	strb	r3, [r4, #4]
    4fd6:	6851      	ldr	r1, [r2, #4]
    4fd8:	3340      	adds	r3, #64	; 0x40
    4fda:	430b      	orrs	r3, r1
    4fdc:	6053      	str	r3, [r2, #4]
    4fde:	2300      	movs	r3, #0
    4fe0:	4699      	mov	r9, r3
    4fe2:	1c27      	adds	r7, r4, #0
    4fe4:	1d66      	adds	r6, r4, #5
    4fe6:	3709      	adds	r7, #9
    4fe8:	2000      	movs	r0, #0
    4fea:	5630      	ldrsb	r0, [r6, r0]
    4fec:	1c43      	adds	r3, r0, #1
    4fee:	d002      	beq.n	4ff6 <spi_format+0x86>
    4ff0:	4649      	mov	r1, r9
    4ff2:	f7ff fc11 	bl	4818 <pin_mode>
    4ff6:	3601      	adds	r6, #1
    4ff8:	42be      	cmp	r6, r7
    4ffa:	d1f5      	bne.n	4fe8 <spi_format+0x78>
    4ffc:	6823      	ldr	r3, [r4, #0]
    4ffe:	1c20      	adds	r0, r4, #0
    5000:	681e      	ldr	r6, [r3, #0]
    5002:	4b32      	ldr	r3, [pc, #200]	; (50cc <spi_format+0x15c>)
    5004:	401e      	ands	r6, r3
    5006:	f7ff fe6b 	bl	4ce0 <spi_find_mux_settings>
    500a:	4642      	mov	r2, r8
    500c:	6823      	ldr	r3, [r4, #0]
    500e:	4306      	orrs	r6, r0
    5010:	601e      	str	r6, [r3, #0]
    5012:	6821      	ldr	r1, [r4, #0]
    5014:	2301      	movs	r3, #1
    5016:	2a08      	cmp	r2, #8
    5018:	dc00      	bgt.n	501c <spi_format+0xac>
    501a:	2300      	movs	r3, #0
    501c:	2007      	movs	r0, #7
    501e:	684a      	ldr	r2, [r1, #4]
    5020:	4003      	ands	r3, r0
    5022:	4382      	bics	r2, r0
    5024:	4313      	orrs	r3, r2
    5026:	604b      	str	r3, [r1, #4]
    5028:	2301      	movs	r3, #1
    502a:	1c1a      	adds	r2, r3, #0
    502c:	6820      	ldr	r0, [r4, #0]
    502e:	402a      	ands	r2, r5
    5030:	6806      	ldr	r6, [r0, #0]
    5032:	0711      	lsls	r1, r2, #28
    5034:	4a26      	ldr	r2, [pc, #152]	; (50d0 <spi_format+0x160>)
    5036:	086d      	lsrs	r5, r5, #1
    5038:	4032      	ands	r2, r6
    503a:	430a      	orrs	r2, r1
    503c:	6002      	str	r2, [r0, #0]
    503e:	6821      	ldr	r1, [r4, #0]
    5040:	401d      	ands	r5, r3
    5042:	076b      	lsls	r3, r5, #29
    5044:	4a23      	ldr	r2, [pc, #140]	; (50d4 <spi_format+0x164>)
    5046:	680d      	ldr	r5, [r1, #0]
    5048:	4015      	ands	r5, r2
    504a:	431d      	orrs	r5, r3
    504c:	600d      	str	r5, [r1, #0]
    504e:	2c00      	cmp	r4, #0
    5050:	d032      	beq.n	50b8 <spi_format+0x148>
    5052:	4e1c      	ldr	r6, [pc, #112]	; (50c4 <spi_format+0x154>)
    5054:	4d1c      	ldr	r5, [pc, #112]	; (50c8 <spi_format+0x158>)
    5056:	e003      	b.n	5060 <spi_format+0xf0>
    5058:	6822      	ldr	r2, [r4, #0]
    505a:	8b53      	ldrh	r3, [r2, #26]
    505c:	0bdb      	lsrs	r3, r3, #15
    505e:	d00a      	beq.n	5076 <spi_format+0x106>
    5060:	2c00      	cmp	r4, #0
    5062:	d1f9      	bne.n	5058 <spi_format+0xe8>
    5064:	2244      	movs	r2, #68	; 0x44
    5066:	1c30      	adds	r0, r6, #0
    5068:	1c29      	adds	r1, r5, #0
    506a:	f7fe ff8d 	bl	3f88 <mbed_assert_internal>
    506e:	6822      	ldr	r2, [r4, #0]
    5070:	8b53      	ldrh	r3, [r2, #26]
    5072:	0bdb      	lsrs	r3, r3, #15
    5074:	d1f4      	bne.n	5060 <spi_format+0xf0>
    5076:	6811      	ldr	r1, [r2, #0]
    5078:	3302      	adds	r3, #2
    507a:	430b      	orrs	r3, r1
    507c:	6013      	str	r3, [r2, #0]
    507e:	bc0c      	pop	{r2, r3}
    5080:	4690      	mov	r8, r2
    5082:	4699      	mov	r9, r3
    5084:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5086:	221c      	movs	r2, #28
    5088:	6821      	ldr	r1, [r4, #0]
    508a:	680b      	ldr	r3, [r1, #0]
    508c:	4393      	bics	r3, r2
    508e:	3a10      	subs	r2, #16
    5090:	4313      	orrs	r3, r2
    5092:	600b      	str	r3, [r1, #0]
    5094:	2301      	movs	r3, #1
    5096:	7123      	strb	r3, [r4, #4]
    5098:	4699      	mov	r9, r3
    509a:	e7a2      	b.n	4fe2 <spi_format+0x72>
    509c:	2296      	movs	r2, #150	; 0x96
    509e:	4f09      	ldr	r7, [pc, #36]	; (50c4 <spi_format+0x154>)
    50a0:	4e09      	ldr	r6, [pc, #36]	; (50c8 <spi_format+0x158>)
    50a2:	1c38      	adds	r0, r7, #0
    50a4:	1c31      	adds	r1, r6, #0
    50a6:	32ff      	adds	r2, #255	; 0xff
    50a8:	f7fe ff6e 	bl	3f88 <mbed_assert_internal>
    50ac:	1c38      	adds	r0, r7, #0
    50ae:	1c31      	adds	r1, r6, #0
    50b0:	225e      	movs	r2, #94	; 0x5e
    50b2:	f7fe ff69 	bl	3f88 <mbed_assert_internal>
    50b6:	e766      	b.n	4f86 <spi_format+0x16>
    50b8:	4802      	ldr	r0, [pc, #8]	; (50c4 <spi_format+0x154>)
    50ba:	4903      	ldr	r1, [pc, #12]	; (50c8 <spi_format+0x158>)
    50bc:	2252      	movs	r2, #82	; 0x52
    50be:	f7fe ff63 	bl	3f88 <mbed_assert_internal>
    50c2:	e7c6      	b.n	5052 <spi_format+0xe2>
    50c4:	0000d434 	.word	0x0000d434
    50c8:	0000df18 	.word	0x0000df18
    50cc:	ffccffff 	.word	0xffccffff
    50d0:	efffffff 	.word	0xefffffff
    50d4:	dfffffff 	.word	0xdfffffff

000050d8 <spi_frequency>:
    50d8:	b5f0      	push	{r4, r5, r6, r7, lr}
    50da:	b083      	sub	sp, #12
    50dc:	2300      	movs	r3, #0
    50de:	466a      	mov	r2, sp
    50e0:	1c04      	adds	r4, r0, #0
    50e2:	1c0d      	adds	r5, r1, #0
    50e4:	80d3      	strh	r3, [r2, #6]
    50e6:	2800      	cmp	r0, #0
    50e8:	d053      	beq.n	5192 <spi_frequency+0xba>
    50ea:	4f37      	ldr	r7, [pc, #220]	; (51c8 <spi_frequency+0xf0>)
    50ec:	4e37      	ldr	r6, [pc, #220]	; (51cc <spi_frequency+0xf4>)
    50ee:	e003      	b.n	50f8 <spi_frequency+0x20>
    50f0:	6822      	ldr	r2, [r4, #0]
    50f2:	8b53      	ldrh	r3, [r2, #26]
    50f4:	0bdb      	lsrs	r3, r3, #15
    50f6:	d00a      	beq.n	510e <spi_frequency+0x36>
    50f8:	2c00      	cmp	r4, #0
    50fa:	d1f9      	bne.n	50f0 <spi_frequency+0x18>
    50fc:	2244      	movs	r2, #68	; 0x44
    50fe:	1c38      	adds	r0, r7, #0
    5100:	1c31      	adds	r1, r6, #0
    5102:	f7fe ff41 	bl	3f88 <mbed_assert_internal>
    5106:	6822      	ldr	r2, [r4, #0]
    5108:	8b53      	ldrh	r3, [r2, #26]
    510a:	0bdb      	lsrs	r3, r3, #15
    510c:	d1f4      	bne.n	50f8 <spi_frequency+0x20>
    510e:	2102      	movs	r1, #2
    5110:	6813      	ldr	r3, [r2, #0]
    5112:	438b      	bics	r3, r1
    5114:	6013      	str	r3, [r2, #0]
    5116:	6820      	ldr	r0, [r4, #0]
    5118:	f7ff f946 	bl	43a8 <_sercom_get_sercom_inst_index>
    511c:	3014      	adds	r0, #20
    511e:	b2c0      	uxtb	r0, r0
    5120:	f7fd fe94 	bl	2e4c <system_gclk_chan_get_hz>
    5124:	466b      	mov	r3, sp
    5126:	1c01      	adds	r1, r0, #0
    5128:	1d9a      	adds	r2, r3, #6
    512a:	1c28      	adds	r0, r5, #0
    512c:	f7ff f840 	bl	41b0 <_sercom_get_sync_baud_val>
    5130:	2800      	cmp	r0, #0
    5132:	d11d      	bne.n	5170 <spi_frequency+0x98>
    5134:	466b      	mov	r3, sp
    5136:	6822      	ldr	r2, [r4, #0]
    5138:	799b      	ldrb	r3, [r3, #6]
    513a:	7313      	strb	r3, [r2, #12]
    513c:	2c00      	cmp	r4, #0
    513e:	d036      	beq.n	51ae <spi_frequency+0xd6>
    5140:	4e21      	ldr	r6, [pc, #132]	; (51c8 <spi_frequency+0xf0>)
    5142:	4d22      	ldr	r5, [pc, #136]	; (51cc <spi_frequency+0xf4>)
    5144:	e003      	b.n	514e <spi_frequency+0x76>
    5146:	6822      	ldr	r2, [r4, #0]
    5148:	8b53      	ldrh	r3, [r2, #26]
    514a:	0bdb      	lsrs	r3, r3, #15
    514c:	d00a      	beq.n	5164 <spi_frequency+0x8c>
    514e:	2c00      	cmp	r4, #0
    5150:	d1f9      	bne.n	5146 <spi_frequency+0x6e>
    5152:	2244      	movs	r2, #68	; 0x44
    5154:	1c30      	adds	r0, r6, #0
    5156:	1c29      	adds	r1, r5, #0
    5158:	f7fe ff16 	bl	3f88 <mbed_assert_internal>
    515c:	6822      	ldr	r2, [r4, #0]
    515e:	8b53      	ldrh	r3, [r2, #26]
    5160:	0bdb      	lsrs	r3, r3, #15
    5162:	d1f4      	bne.n	514e <spi_frequency+0x76>
    5164:	6811      	ldr	r1, [r2, #0]
    5166:	3302      	adds	r3, #2
    5168:	430b      	orrs	r3, r1
    516a:	6013      	str	r3, [r2, #0]
    516c:	b003      	add	sp, #12
    516e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5170:	2c00      	cmp	r4, #0
    5172:	d022      	beq.n	51ba <spi_frequency+0xe2>
    5174:	4e14      	ldr	r6, [pc, #80]	; (51c8 <spi_frequency+0xf0>)
    5176:	4d15      	ldr	r5, [pc, #84]	; (51cc <spi_frequency+0xf4>)
    5178:	e003      	b.n	5182 <spi_frequency+0xaa>
    517a:	6822      	ldr	r2, [r4, #0]
    517c:	8b53      	ldrh	r3, [r2, #26]
    517e:	0bdb      	lsrs	r3, r3, #15
    5180:	d0f0      	beq.n	5164 <spi_frequency+0x8c>
    5182:	2c00      	cmp	r4, #0
    5184:	d1f9      	bne.n	517a <spi_frequency+0xa2>
    5186:	1c30      	adds	r0, r6, #0
    5188:	1c29      	adds	r1, r5, #0
    518a:	2244      	movs	r2, #68	; 0x44
    518c:	f7fe fefc 	bl	3f88 <mbed_assert_internal>
    5190:	e7f3      	b.n	517a <spi_frequency+0xa2>
    5192:	22d0      	movs	r2, #208	; 0xd0
    5194:	4f0c      	ldr	r7, [pc, #48]	; (51c8 <spi_frequency+0xf0>)
    5196:	4e0d      	ldr	r6, [pc, #52]	; (51cc <spi_frequency+0xf4>)
    5198:	1c38      	adds	r0, r7, #0
    519a:	1c31      	adds	r1, r6, #0
    519c:	32ff      	adds	r2, #255	; 0xff
    519e:	f7fe fef3 	bl	3f88 <mbed_assert_internal>
    51a2:	1c38      	adds	r0, r7, #0
    51a4:	1c31      	adds	r1, r6, #0
    51a6:	225e      	movs	r2, #94	; 0x5e
    51a8:	f7fe feee 	bl	3f88 <mbed_assert_internal>
    51ac:	e79d      	b.n	50ea <spi_frequency+0x12>
    51ae:	4806      	ldr	r0, [pc, #24]	; (51c8 <spi_frequency+0xf0>)
    51b0:	4906      	ldr	r1, [pc, #24]	; (51cc <spi_frequency+0xf4>)
    51b2:	2252      	movs	r2, #82	; 0x52
    51b4:	f7fe fee8 	bl	3f88 <mbed_assert_internal>
    51b8:	e7c2      	b.n	5140 <spi_frequency+0x68>
    51ba:	4803      	ldr	r0, [pc, #12]	; (51c8 <spi_frequency+0xf0>)
    51bc:	4903      	ldr	r1, [pc, #12]	; (51cc <spi_frequency+0xf4>)
    51be:	2252      	movs	r2, #82	; 0x52
    51c0:	f7fe fee2 	bl	3f88 <mbed_assert_internal>
    51c4:	e7d6      	b.n	5174 <spi_frequency+0x9c>
    51c6:	46c0      	nop			; (mov r8, r8)
    51c8:	0000d434 	.word	0x0000d434
    51cc:	0000df18 	.word	0x0000df18

000051d0 <spi_master_write>:
    51d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    51d2:	4647      	mov	r7, r8
    51d4:	1c04      	adds	r4, r0, #0
    51d6:	b480      	push	{r7}
    51d8:	1c0e      	adds	r6, r1, #0
    51da:	2800      	cmp	r0, #0
    51dc:	d052      	beq.n	5284 <spi_master_write+0xb4>
    51de:	7a63      	ldrb	r3, [r4, #9]
    51e0:	2b05      	cmp	r3, #5
    51e2:	d045      	beq.n	5270 <spi_master_write+0xa0>
    51e4:	4b3a      	ldr	r3, [pc, #232]	; (52d0 <spi_master_write+0x100>)
    51e6:	4f3b      	ldr	r7, [pc, #236]	; (52d4 <spi_master_write+0x104>)
    51e8:	4698      	mov	r8, r3
    51ea:	2501      	movs	r5, #1
    51ec:	e003      	b.n	51f6 <spi_master_write+0x26>
    51ee:	6823      	ldr	r3, [r4, #0]
    51f0:	7e1a      	ldrb	r2, [r3, #24]
    51f2:	4215      	tst	r5, r2
    51f4:	d10a      	bne.n	520c <spi_master_write+0x3c>
    51f6:	2c00      	cmp	r4, #0
    51f8:	d1f9      	bne.n	51ee <spi_master_write+0x1e>
    51fa:	2273      	movs	r2, #115	; 0x73
    51fc:	4640      	mov	r0, r8
    51fe:	1c39      	adds	r1, r7, #0
    5200:	f7fe fec2 	bl	3f88 <mbed_assert_internal>
    5204:	6823      	ldr	r3, [r4, #0]
    5206:	7e1a      	ldrb	r2, [r3, #24]
    5208:	4215      	tst	r5, r2
    520a:	d0f4      	beq.n	51f6 <spi_master_write+0x26>
    520c:	2c00      	cmp	r4, #0
    520e:	d043      	beq.n	5298 <spi_master_write+0xc8>
    5210:	7e1a      	ldrb	r2, [r3, #24]
    5212:	07d2      	lsls	r2, r2, #31
    5214:	d503      	bpl.n	521e <spi_master_write+0x4e>
    5216:	05f6      	lsls	r6, r6, #23
    5218:	0df6      	lsrs	r6, r6, #23
    521a:	629e      	str	r6, [r3, #40]	; 0x28
    521c:	6823      	ldr	r3, [r4, #0]
    521e:	685b      	ldr	r3, [r3, #4]
    5220:	039b      	lsls	r3, r3, #14
    5222:	d525      	bpl.n	5270 <spi_master_write+0xa0>
    5224:	4f2a      	ldr	r7, [pc, #168]	; (52d0 <spi_master_write+0x100>)
    5226:	4e2b      	ldr	r6, [pc, #172]	; (52d4 <spi_master_write+0x104>)
    5228:	2504      	movs	r5, #4
    522a:	e003      	b.n	5234 <spi_master_write+0x64>
    522c:	6823      	ldr	r3, [r4, #0]
    522e:	7e1a      	ldrb	r2, [r3, #24]
    5230:	4215      	tst	r5, r2
    5232:	d10a      	bne.n	524a <spi_master_write+0x7a>
    5234:	2c00      	cmp	r4, #0
    5236:	d1f9      	bne.n	522c <spi_master_write+0x5c>
    5238:	227c      	movs	r2, #124	; 0x7c
    523a:	1c38      	adds	r0, r7, #0
    523c:	1c31      	adds	r1, r6, #0
    523e:	f7fe fea3 	bl	3f88 <mbed_assert_internal>
    5242:	6823      	ldr	r3, [r4, #0]
    5244:	7e1a      	ldrb	r2, [r3, #24]
    5246:	4215      	tst	r5, r2
    5248:	d0f4      	beq.n	5234 <spi_master_write+0x64>
    524a:	2c00      	cmp	r4, #0
    524c:	d032      	beq.n	52b4 <spi_master_write+0xe4>
    524e:	2204      	movs	r2, #4
    5250:	7e19      	ldrb	r1, [r3, #24]
    5252:	2000      	movs	r0, #0
    5254:	420a      	tst	r2, r1
    5256:	d00c      	beq.n	5272 <spi_master_write+0xa2>
    5258:	8b59      	ldrh	r1, [r3, #26]
    525a:	420a      	tst	r2, r1
    525c:	d10c      	bne.n	5278 <spi_master_write+0xa8>
    525e:	2107      	movs	r1, #7
    5260:	685a      	ldr	r2, [r3, #4]
    5262:	400a      	ands	r2, r1
    5264:	2a01      	cmp	r2, #1
    5266:	d013      	beq.n	5290 <spi_master_write+0xc0>
    5268:	20ff      	movs	r0, #255	; 0xff
    526a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    526c:	4018      	ands	r0, r3
    526e:	e000      	b.n	5272 <spi_master_write+0xa2>
    5270:	2000      	movs	r0, #0
    5272:	bc04      	pop	{r2}
    5274:	4690      	mov	r8, r2
    5276:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5278:	8b59      	ldrh	r1, [r3, #26]
    527a:	430a      	orrs	r2, r1
    527c:	b292      	uxth	r2, r2
    527e:	835a      	strh	r2, [r3, #26]
    5280:	6823      	ldr	r3, [r4, #0]
    5282:	e7ec      	b.n	525e <spi_master_write+0x8e>
    5284:	4812      	ldr	r0, [pc, #72]	; (52d0 <spi_master_write+0x100>)
    5286:	4913      	ldr	r1, [pc, #76]	; (52d4 <spi_master_write+0x104>)
    5288:	4a13      	ldr	r2, [pc, #76]	; (52d8 <spi_master_write+0x108>)
    528a:	f7fe fe7d 	bl	3f88 <mbed_assert_internal>
    528e:	e7a6      	b.n	51de <spi_master_write+0xe>
    5290:	6a98      	ldr	r0, [r3, #40]	; 0x28
    5292:	05c0      	lsls	r0, r0, #23
    5294:	0dc0      	lsrs	r0, r0, #23
    5296:	e7ec      	b.n	5272 <spi_master_write+0xa2>
    5298:	4f0d      	ldr	r7, [pc, #52]	; (52d0 <spi_master_write+0x100>)
    529a:	4d0e      	ldr	r5, [pc, #56]	; (52d4 <spi_master_write+0x104>)
    529c:	1c38      	adds	r0, r7, #0
    529e:	1c29      	adds	r1, r5, #0
    52a0:	2285      	movs	r2, #133	; 0x85
    52a2:	f7fe fe71 	bl	3f88 <mbed_assert_internal>
    52a6:	1c38      	adds	r0, r7, #0
    52a8:	1c29      	adds	r1, r5, #0
    52aa:	2273      	movs	r2, #115	; 0x73
    52ac:	f7fe fe6c 	bl	3f88 <mbed_assert_internal>
    52b0:	6823      	ldr	r3, [r4, #0]
    52b2:	e7ad      	b.n	5210 <spi_master_write+0x40>
    52b4:	4e06      	ldr	r6, [pc, #24]	; (52d0 <spi_master_write+0x100>)
    52b6:	4d07      	ldr	r5, [pc, #28]	; (52d4 <spi_master_write+0x104>)
    52b8:	1c30      	adds	r0, r6, #0
    52ba:	1c29      	adds	r1, r5, #0
    52bc:	2296      	movs	r2, #150	; 0x96
    52be:	f7fe fe63 	bl	3f88 <mbed_assert_internal>
    52c2:	1c30      	adds	r0, r6, #0
    52c4:	1c29      	adds	r1, r5, #0
    52c6:	227c      	movs	r2, #124	; 0x7c
    52c8:	f7fe fe5e 	bl	3f88 <mbed_assert_internal>
    52cc:	6823      	ldr	r3, [r4, #0]
    52ce:	e7be      	b.n	524e <spi_master_write+0x7e>
    52d0:	0000d434 	.word	0x0000d434
    52d4:	0000df18 	.word	0x0000df18
    52d8:	00000212 	.word	0x00000212

000052dc <_ZN4mbed8FileBaseD1Ev>:
    52dc:	4b0a      	ldr	r3, [pc, #40]	; (5308 <_ZN4mbed8FileBaseD1Ev+0x2c>)
    52de:	3308      	adds	r3, #8
    52e0:	6003      	str	r3, [r0, #0]
    52e2:	6883      	ldr	r3, [r0, #8]
    52e4:	2b00      	cmp	r3, #0
    52e6:	d00a      	beq.n	52fe <_ZN4mbed8FileBaseD1Ev+0x22>
    52e8:	4b08      	ldr	r3, [pc, #32]	; (530c <_ZN4mbed8FileBaseD1Ev+0x30>)
    52ea:	681a      	ldr	r2, [r3, #0]
    52ec:	4282      	cmp	r2, r0
    52ee:	d101      	bne.n	52f4 <_ZN4mbed8FileBaseD1Ev+0x18>
    52f0:	e006      	b.n	5300 <_ZN4mbed8FileBaseD1Ev+0x24>
    52f2:	1c1a      	adds	r2, r3, #0
    52f4:	6853      	ldr	r3, [r2, #4]
    52f6:	4283      	cmp	r3, r0
    52f8:	d1fb      	bne.n	52f2 <_ZN4mbed8FileBaseD1Ev+0x16>
    52fa:	6843      	ldr	r3, [r0, #4]
    52fc:	6053      	str	r3, [r2, #4]
    52fe:	4770      	bx	lr
    5300:	6842      	ldr	r2, [r0, #4]
    5302:	601a      	str	r2, [r3, #0]
    5304:	e7fb      	b.n	52fe <_ZN4mbed8FileBaseD1Ev+0x22>
    5306:	46c0      	nop			; (mov r8, r8)
    5308:	0000df90 	.word	0x0000df90
    530c:	20003fa4 	.word	0x20003fa4

00005310 <_ZN4mbed8FileBaseD0Ev>:
    5310:	4b0d      	ldr	r3, [pc, #52]	; (5348 <_ZN4mbed8FileBaseD0Ev+0x38>)
    5312:	b510      	push	{r4, lr}
    5314:	3308      	adds	r3, #8
    5316:	6003      	str	r3, [r0, #0]
    5318:	6883      	ldr	r3, [r0, #8]
    531a:	1c04      	adds	r4, r0, #0
    531c:	2b00      	cmp	r3, #0
    531e:	d00a      	beq.n	5336 <_ZN4mbed8FileBaseD0Ev+0x26>
    5320:	4b0a      	ldr	r3, [pc, #40]	; (534c <_ZN4mbed8FileBaseD0Ev+0x3c>)
    5322:	681a      	ldr	r2, [r3, #0]
    5324:	4290      	cmp	r0, r2
    5326:	d101      	bne.n	532c <_ZN4mbed8FileBaseD0Ev+0x1c>
    5328:	e00a      	b.n	5340 <_ZN4mbed8FileBaseD0Ev+0x30>
    532a:	1c1a      	adds	r2, r3, #0
    532c:	6853      	ldr	r3, [r2, #4]
    532e:	429c      	cmp	r4, r3
    5330:	d1fb      	bne.n	532a <_ZN4mbed8FileBaseD0Ev+0x1a>
    5332:	6863      	ldr	r3, [r4, #4]
    5334:	6053      	str	r3, [r2, #4]
    5336:	1c20      	adds	r0, r4, #0
    5338:	f000 fab5 	bl	58a6 <_ZdlPv>
    533c:	1c20      	adds	r0, r4, #0
    533e:	bd10      	pop	{r4, pc}
    5340:	6842      	ldr	r2, [r0, #4]
    5342:	601a      	str	r2, [r3, #0]
    5344:	e7f7      	b.n	5336 <_ZN4mbed8FileBaseD0Ev+0x26>
    5346:	46c0      	nop			; (mov r8, r8)
    5348:	0000df90 	.word	0x0000df90
    534c:	20003fa4 	.word	0x20003fa4

00005350 <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE>:
    5350:	4b06      	ldr	r3, [pc, #24]	; (536c <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE+0x1c>)
    5352:	6081      	str	r1, [r0, #8]
    5354:	3308      	adds	r3, #8
    5356:	6003      	str	r3, [r0, #0]
    5358:	2300      	movs	r3, #0
    535a:	7302      	strb	r2, [r0, #12]
    535c:	6043      	str	r3, [r0, #4]
    535e:	2900      	cmp	r1, #0
    5360:	d003      	beq.n	536a <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE+0x1a>
    5362:	4b03      	ldr	r3, [pc, #12]	; (5370 <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE+0x20>)
    5364:	681a      	ldr	r2, [r3, #0]
    5366:	6018      	str	r0, [r3, #0]
    5368:	6042      	str	r2, [r0, #4]
    536a:	4770      	bx	lr
    536c:	0000df90 	.word	0x0000df90
    5370:	20003fa4 	.word	0x20003fa4

00005374 <_ZN4mbed8FileBase6lookupEPKcj>:
    5374:	4b0e      	ldr	r3, [pc, #56]	; (53b0 <_ZN4mbed8FileBase6lookupEPKcj+0x3c>)
    5376:	b570      	push	{r4, r5, r6, lr}
    5378:	681c      	ldr	r4, [r3, #0]
    537a:	1c06      	adds	r6, r0, #0
    537c:	1c0d      	adds	r5, r1, #0
    537e:	2c00      	cmp	r4, #0
    5380:	d103      	bne.n	538a <_ZN4mbed8FileBase6lookupEPKcj+0x16>
    5382:	e012      	b.n	53aa <_ZN4mbed8FileBase6lookupEPKcj+0x36>
    5384:	6864      	ldr	r4, [r4, #4]
    5386:	2c00      	cmp	r4, #0
    5388:	d00f      	beq.n	53aa <_ZN4mbed8FileBase6lookupEPKcj+0x36>
    538a:	68a0      	ldr	r0, [r4, #8]
    538c:	2800      	cmp	r0, #0
    538e:	d0f9      	beq.n	5384 <_ZN4mbed8FileBase6lookupEPKcj+0x10>
    5390:	1c31      	adds	r1, r6, #0
    5392:	1c2a      	adds	r2, r5, #0
    5394:	f002 fd4b 	bl	7e2e <strncmp>
    5398:	2800      	cmp	r0, #0
    539a:	d1f3      	bne.n	5384 <_ZN4mbed8FileBase6lookupEPKcj+0x10>
    539c:	68a0      	ldr	r0, [r4, #8]
    539e:	f002 fd3f 	bl	7e20 <strlen>
    53a2:	42a8      	cmp	r0, r5
    53a4:	d1ee      	bne.n	5384 <_ZN4mbed8FileBase6lookupEPKcj+0x10>
    53a6:	1c20      	adds	r0, r4, #0
    53a8:	e000      	b.n	53ac <_ZN4mbed8FileBase6lookupEPKcj+0x38>
    53aa:	2000      	movs	r0, #0
    53ac:	bd70      	pop	{r4, r5, r6, pc}
    53ae:	46c0      	nop			; (mov r8, r8)
    53b0:	20003fa4 	.word	0x20003fa4

000053b4 <_ZN4mbed8FileBase11getPathTypeEv>:
    53b4:	7b00      	ldrb	r0, [r0, #12]
    53b6:	4770      	bx	lr

000053b8 <_ZN4mbed8FileLikeC1EPKc>:
    53b8:	4b07      	ldr	r3, [pc, #28]	; (53d8 <_ZN4mbed8FileLikeC1EPKc+0x20>)
    53ba:	b510      	push	{r4, lr}
    53bc:	2200      	movs	r2, #0
    53be:	1c04      	adds	r4, r0, #0
    53c0:	c008      	stmia	r0!, {r3}
    53c2:	f7ff ffc5 	bl	5350 <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE>
    53c6:	4b05      	ldr	r3, [pc, #20]	; (53dc <_ZN4mbed8FileLikeC1EPKc+0x24>)
    53c8:	1c20      	adds	r0, r4, #0
    53ca:	1c1a      	adds	r2, r3, #0
    53cc:	3334      	adds	r3, #52	; 0x34
    53ce:	3208      	adds	r2, #8
    53d0:	6022      	str	r2, [r4, #0]
    53d2:	6063      	str	r3, [r4, #4]
    53d4:	bd10      	pop	{r4, pc}
    53d6:	46c0      	nop			; (mov r8, r8)
    53d8:	0000d400 	.word	0x0000d400
    53dc:	0000dfa0 	.word	0x0000dfa0

000053e0 <_ZN4mbed8FileLikeD1Ev>:
    53e0:	4b07      	ldr	r3, [pc, #28]	; (5400 <_ZN4mbed8FileLikeD1Ev+0x20>)
    53e2:	b510      	push	{r4, lr}
    53e4:	1c1a      	adds	r2, r3, #0
    53e6:	1c04      	adds	r4, r0, #0
    53e8:	3208      	adds	r2, #8
    53ea:	3334      	adds	r3, #52	; 0x34
    53ec:	6002      	str	r2, [r0, #0]
    53ee:	6043      	str	r3, [r0, #4]
    53f0:	3004      	adds	r0, #4
    53f2:	f7ff ff73 	bl	52dc <_ZN4mbed8FileBaseD1Ev>
    53f6:	1c20      	adds	r0, r4, #0
    53f8:	f7fd fa84 	bl	2904 <_ZN4mbed10FileHandleD1Ev>
    53fc:	1c20      	adds	r0, r4, #0
    53fe:	bd10      	pop	{r4, pc}
    5400:	0000dfa0 	.word	0x0000dfa0

00005404 <us_ticker_irq_handler>:
    5404:	b508      	push	{r3, lr}
    5406:	4802      	ldr	r0, [pc, #8]	; (5410 <us_ticker_irq_handler+0xc>)
    5408:	f000 fa20 	bl	584c <ticker_irq_handler>
    540c:	bd08      	pop	{r3, pc}
    540e:	46c0      	nop			; (mov r8, r8)
    5410:	0000dff0 	.word	0x0000dff0

00005414 <port_pin_set_config>:
    5414:	2280      	movs	r2, #128	; 0x80
    5416:	b500      	push	{lr}
    5418:	b083      	sub	sp, #12
    541a:	ab01      	add	r3, sp, #4
    541c:	701a      	strb	r2, [r3, #0]
    541e:	780a      	ldrb	r2, [r1, #0]
    5420:	705a      	strb	r2, [r3, #1]
    5422:	784a      	ldrb	r2, [r1, #1]
    5424:	709a      	strb	r2, [r3, #2]
    5426:	788a      	ldrb	r2, [r1, #2]
    5428:	1c19      	adds	r1, r3, #0
    542a:	70da      	strb	r2, [r3, #3]
    542c:	f7ff f936 	bl	469c <system_pinmux_pin_set_config>
    5430:	b003      	add	sp, #12
    5432:	bd00      	pop	{pc}

00005434 <tc_register_callback>:
    5434:	1c93      	adds	r3, r2, #2
    5436:	009b      	lsls	r3, r3, #2
    5438:	5019      	str	r1, [r3, r0]
    543a:	2a02      	cmp	r2, #2
    543c:	d009      	beq.n	5452 <tc_register_callback+0x1e>
    543e:	2a03      	cmp	r2, #3
    5440:	d00c      	beq.n	545c <tc_register_callback+0x28>
    5442:	2301      	movs	r3, #1
    5444:	4093      	lsls	r3, r2
    5446:	1c1a      	adds	r2, r3, #0
    5448:	7e03      	ldrb	r3, [r0, #24]
    544a:	431a      	orrs	r2, r3
    544c:	7602      	strb	r2, [r0, #24]
    544e:	2000      	movs	r0, #0
    5450:	4770      	bx	lr
    5452:	2310      	movs	r3, #16
    5454:	7e02      	ldrb	r2, [r0, #24]
    5456:	4313      	orrs	r3, r2
    5458:	7603      	strb	r3, [r0, #24]
    545a:	e7f8      	b.n	544e <tc_register_callback+0x1a>
    545c:	2320      	movs	r3, #32
    545e:	7e02      	ldrb	r2, [r0, #24]
    5460:	4313      	orrs	r3, r2
    5462:	7603      	strb	r3, [r0, #24]
    5464:	e7f3      	b.n	544e <tc_register_callback+0x1a>
    5466:	46c0      	nop			; (mov r8, r8)

00005468 <_tc_interrupt_handler>:
    5468:	b570      	push	{r4, r5, r6, lr}
    546a:	2601      	movs	r6, #1
    546c:	4b15      	ldr	r3, [pc, #84]	; (54c4 <_tc_interrupt_handler+0x5c>)
    546e:	0080      	lsls	r0, r0, #2
    5470:	58c5      	ldr	r5, [r0, r3]
    5472:	682b      	ldr	r3, [r5, #0]
    5474:	7e2c      	ldrb	r4, [r5, #24]
    5476:	7b9b      	ldrb	r3, [r3, #14]
    5478:	401c      	ands	r4, r3
    547a:	7e6b      	ldrb	r3, [r5, #25]
    547c:	401c      	ands	r4, r3
    547e:	4226      	tst	r6, r4
    5480:	d11a      	bne.n	54b8 <_tc_interrupt_handler+0x50>
    5482:	2602      	movs	r6, #2
    5484:	4226      	tst	r6, r4
    5486:	d111      	bne.n	54ac <_tc_interrupt_handler+0x44>
    5488:	2610      	movs	r6, #16
    548a:	4226      	tst	r6, r4
    548c:	d108      	bne.n	54a0 <_tc_interrupt_handler+0x38>
    548e:	2620      	movs	r6, #32
    5490:	4226      	tst	r6, r4
    5492:	d004      	beq.n	549e <_tc_interrupt_handler+0x36>
    5494:	696b      	ldr	r3, [r5, #20]
    5496:	1c28      	adds	r0, r5, #0
    5498:	4798      	blx	r3
    549a:	682b      	ldr	r3, [r5, #0]
    549c:	739e      	strb	r6, [r3, #14]
    549e:	bd70      	pop	{r4, r5, r6, pc}
    54a0:	692b      	ldr	r3, [r5, #16]
    54a2:	1c28      	adds	r0, r5, #0
    54a4:	4798      	blx	r3
    54a6:	682b      	ldr	r3, [r5, #0]
    54a8:	739e      	strb	r6, [r3, #14]
    54aa:	e7f0      	b.n	548e <_tc_interrupt_handler+0x26>
    54ac:	68eb      	ldr	r3, [r5, #12]
    54ae:	1c28      	adds	r0, r5, #0
    54b0:	4798      	blx	r3
    54b2:	682b      	ldr	r3, [r5, #0]
    54b4:	739e      	strb	r6, [r3, #14]
    54b6:	e7e7      	b.n	5488 <_tc_interrupt_handler+0x20>
    54b8:	68ab      	ldr	r3, [r5, #8]
    54ba:	1c28      	adds	r0, r5, #0
    54bc:	4798      	blx	r3
    54be:	682b      	ldr	r3, [r5, #0]
    54c0:	739e      	strb	r6, [r3, #14]
    54c2:	e7de      	b.n	5482 <_tc_interrupt_handler+0x1a>
    54c4:	20004060 	.word	0x20004060

000054c8 <TC3_Handler>:
    54c8:	b508      	push	{r3, lr}
    54ca:	2000      	movs	r0, #0
    54cc:	f7ff ffcc 	bl	5468 <_tc_interrupt_handler>
    54d0:	bd08      	pop	{r3, pc}
    54d2:	46c0      	nop			; (mov r8, r8)

000054d4 <TC4_Handler>:
    54d4:	b508      	push	{r3, lr}
    54d6:	2001      	movs	r0, #1
    54d8:	f7ff ffc6 	bl	5468 <_tc_interrupt_handler>
    54dc:	bd08      	pop	{r3, pc}
    54de:	46c0      	nop			; (mov r8, r8)

000054e0 <TC5_Handler>:
    54e0:	b508      	push	{r3, lr}
    54e2:	2002      	movs	r0, #2
    54e4:	f7ff ffc0 	bl	5468 <_tc_interrupt_handler>
    54e8:	bd08      	pop	{r3, pc}
    54ea:	46c0      	nop			; (mov r8, r8)

000054ec <_tc_get_inst_index>:
    54ec:	4b0e      	ldr	r3, [pc, #56]	; (5528 <_tc_get_inst_index+0x3c>)
    54ee:	1c01      	adds	r1, r0, #0
    54f0:	1c18      	adds	r0, r3, #0
    54f2:	b570      	push	{r4, r5, r6, lr}
    54f4:	b084      	sub	sp, #16
    54f6:	aa01      	add	r2, sp, #4
    54f8:	c870      	ldmia	r0!, {r4, r5, r6}
    54fa:	c270      	stmia	r2!, {r4, r5, r6}
    54fc:	9a01      	ldr	r2, [sp, #4]
    54fe:	428a      	cmp	r2, r1
    5500:	d008      	beq.n	5514 <_tc_get_inst_index+0x28>
    5502:	685a      	ldr	r2, [r3, #4]
    5504:	428a      	cmp	r2, r1
    5506:	d008      	beq.n	551a <_tc_get_inst_index+0x2e>
    5508:	689b      	ldr	r3, [r3, #8]
    550a:	2000      	movs	r0, #0
    550c:	428b      	cmp	r3, r1
    550e:	d007      	beq.n	5520 <_tc_get_inst_index+0x34>
    5510:	b004      	add	sp, #16
    5512:	bd70      	pop	{r4, r5, r6, pc}
    5514:	2000      	movs	r0, #0
    5516:	b2c0      	uxtb	r0, r0
    5518:	e7fa      	b.n	5510 <_tc_get_inst_index+0x24>
    551a:	2001      	movs	r0, #1
    551c:	b2c0      	uxtb	r0, r0
    551e:	e7f7      	b.n	5510 <_tc_get_inst_index+0x24>
    5520:	3002      	adds	r0, #2
    5522:	b2c0      	uxtb	r0, r0
    5524:	e7f4      	b.n	5510 <_tc_get_inst_index+0x24>
    5526:	46c0      	nop			; (mov r8, r8)
    5528:	0000dff8 	.word	0x0000dff8

0000552c <tc_init>:
    552c:	b5f0      	push	{r4, r5, r6, r7, lr}
    552e:	4657      	mov	r7, sl
    5530:	464e      	mov	r6, r9
    5532:	4645      	mov	r5, r8
    5534:	4ca3      	ldr	r4, [pc, #652]	; (57c4 <tc_init+0x298>)
    5536:	4691      	mov	r9, r2
    5538:	1c22      	adds	r2, r4, #0
    553a:	b4e0      	push	{r5, r6, r7}
    553c:	b086      	sub	sp, #24
    553e:	ab03      	add	r3, sp, #12
    5540:	1c05      	adds	r5, r0, #0
    5542:	1c0e      	adds	r6, r1, #0
    5544:	469a      	mov	sl, r3
    5546:	ca83      	ldmia	r2!, {r0, r1, r7}
    5548:	c383      	stmia	r3!, {r0, r1, r7}
    554a:	9b03      	ldr	r3, [sp, #12]
    554c:	429e      	cmp	r6, r3
    554e:	d100      	bne.n	5552 <tc_init+0x26>
    5550:	e10c      	b.n	576c <tc_init+0x240>
    5552:	6863      	ldr	r3, [r4, #4]
    5554:	429e      	cmp	r6, r3
    5556:	d100      	bne.n	555a <tc_init+0x2e>
    5558:	e10b      	b.n	5772 <tc_init+0x246>
    555a:	2300      	movs	r3, #0
    555c:	4698      	mov	r8, r3
    555e:	68a3      	ldr	r3, [r4, #8]
    5560:	429e      	cmp	r6, r3
    5562:	d100      	bne.n	5566 <tc_init+0x3a>
    5564:	e108      	b.n	5778 <tc_init+0x24c>
    5566:	1c21      	adds	r1, r4, #0
    5568:	2203      	movs	r2, #3
    556a:	310c      	adds	r1, #12
    556c:	a801      	add	r0, sp, #4
    556e:	f000 ffbe 	bl	64ee <memcpy>
    5572:	1c21      	adds	r1, r4, #0
    5574:	2206      	movs	r2, #6
    5576:	3110      	adds	r1, #16
    5578:	4650      	mov	r0, sl
    557a:	f000 ffb8 	bl	64ee <memcpy>
    557e:	2300      	movs	r3, #0
    5580:	60ab      	str	r3, [r5, #8]
    5582:	60eb      	str	r3, [r5, #12]
    5584:	612b      	str	r3, [r5, #16]
    5586:	616b      	str	r3, [r5, #20]
    5588:	762b      	strb	r3, [r5, #24]
    558a:	766b      	strb	r3, [r5, #25]
    558c:	4643      	mov	r3, r8
    558e:	4a8e      	ldr	r2, [pc, #568]	; (57c8 <tc_init+0x29c>)
    5590:	009b      	lsls	r3, r3, #2
    5592:	509d      	str	r5, [r3, r2]
    5594:	464b      	mov	r3, r9
    5596:	602e      	str	r6, [r5, #0]
    5598:	789b      	ldrb	r3, [r3, #2]
    559a:	2b08      	cmp	r3, #8
    559c:	d00b      	beq.n	55b6 <tc_init+0x8a>
    559e:	712b      	strb	r3, [r5, #4]
    55a0:	8833      	ldrh	r3, [r6, #0]
    55a2:	2201      	movs	r2, #1
    55a4:	2005      	movs	r0, #5
    55a6:	07db      	lsls	r3, r3, #31
    55a8:	d50a      	bpl.n	55c0 <tc_init+0x94>
    55aa:	b006      	add	sp, #24
    55ac:	bc1c      	pop	{r2, r3, r4}
    55ae:	4690      	mov	r8, r2
    55b0:	4699      	mov	r9, r3
    55b2:	46a2      	mov	sl, r4
    55b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    55b6:	4642      	mov	r2, r8
    55b8:	2017      	movs	r0, #23
    55ba:	07d2      	lsls	r2, r2, #31
    55bc:	d5f5      	bpl.n	55aa <tc_init+0x7e>
    55be:	e7ee      	b.n	559e <tc_init+0x72>
    55c0:	7bf3      	ldrb	r3, [r6, #15]
    55c2:	3017      	adds	r0, #23
    55c4:	06db      	lsls	r3, r3, #27
    55c6:	d4f0      	bmi.n	55aa <tc_init+0x7e>
    55c8:	2102      	movs	r1, #2
    55ca:	8833      	ldrh	r3, [r6, #0]
    55cc:	400b      	ands	r3, r1
    55ce:	d1ec      	bne.n	55aa <tc_init+0x7e>
    55d0:	4649      	mov	r1, r9
    55d2:	7c09      	ldrb	r1, [r1, #16]
    55d4:	2900      	cmp	r1, #0
    55d6:	d000      	beq.n	55da <tc_init+0xae>
    55d8:	e0d1      	b.n	577e <tc_init+0x252>
    55da:	464b      	mov	r3, r9
    55dc:	7f1b      	ldrb	r3, [r3, #28]
    55de:	2b00      	cmp	r3, #0
    55e0:	d000      	beq.n	55e4 <tc_init+0xb8>
    55e2:	e0d8      	b.n	5796 <tc_init+0x26a>
    55e4:	4641      	mov	r1, r8
    55e6:	4650      	mov	r0, sl
    55e8:	4a78      	ldr	r2, [pc, #480]	; (57cc <tc_init+0x2a0>)
    55ea:	0049      	lsls	r1, r1, #1
    55ec:	6a13      	ldr	r3, [r2, #32]
    55ee:	5a41      	ldrh	r1, [r0, r1]
    55f0:	430b      	orrs	r3, r1
    55f2:	6213      	str	r3, [r2, #32]
    55f4:	464b      	mov	r3, r9
    55f6:	789b      	ldrb	r3, [r3, #2]
    55f8:	2b08      	cmp	r3, #8
    55fa:	d100      	bne.n	55fe <tc_init+0xd2>
    55fc:	e0da      	b.n	57b4 <tc_init+0x288>
    55fe:	464b      	mov	r3, r9
    5600:	466a      	mov	r2, sp
    5602:	781b      	ldrb	r3, [r3, #0]
    5604:	4669      	mov	r1, sp
    5606:	7013      	strb	r3, [r2, #0]
    5608:	466b      	mov	r3, sp
    560a:	4642      	mov	r2, r8
    560c:	3304      	adds	r3, #4
    560e:	5c9c      	ldrb	r4, [r3, r2]
    5610:	1c20      	adds	r0, r4, #0
    5612:	f7fd fc0f 	bl	2e34 <system_gclk_chan_set_config>
    5616:	1c20      	adds	r0, r4, #0
    5618:	f7fd fbce 	bl	2db8 <system_gclk_chan_enable>
    561c:	464b      	mov	r3, r9
    561e:	464a      	mov	r2, r9
    5620:	8898      	ldrh	r0, [r3, #4]
    5622:	891b      	ldrh	r3, [r3, #8]
    5624:	4303      	orrs	r3, r0
    5626:	7990      	ldrb	r0, [r2, #6]
    5628:	7892      	ldrb	r2, [r2, #2]
    562a:	4310      	orrs	r0, r2
    562c:	4318      	orrs	r0, r3
    562e:	464b      	mov	r3, r9
    5630:	785b      	ldrb	r3, [r3, #1]
    5632:	2b00      	cmp	r3, #0
    5634:	d002      	beq.n	563c <tc_init+0x110>
    5636:	2380      	movs	r3, #128	; 0x80
    5638:	011b      	lsls	r3, r3, #4
    563a:	4318      	orrs	r0, r3
    563c:	227f      	movs	r2, #127	; 0x7f
    563e:	6829      	ldr	r1, [r5, #0]
    5640:	7bcb      	ldrb	r3, [r1, #15]
    5642:	4393      	bics	r3, r2
    5644:	d1fc      	bne.n	5640 <tc_init+0x114>
    5646:	464b      	mov	r3, r9
    5648:	8030      	strh	r0, [r6, #0]
    564a:	7b58      	ldrb	r0, [r3, #13]
    564c:	1e43      	subs	r3, r0, #1
    564e:	4198      	sbcs	r0, r3
    5650:	464b      	mov	r3, r9
    5652:	7b9b      	ldrb	r3, [r3, #14]
    5654:	0080      	lsls	r0, r0, #2
    5656:	2b00      	cmp	r3, #0
    5658:	d001      	beq.n	565e <tc_init+0x132>
    565a:	2301      	movs	r3, #1
    565c:	4318      	orrs	r0, r3
    565e:	227f      	movs	r2, #127	; 0x7f
    5660:	6829      	ldr	r1, [r5, #0]
    5662:	7bcb      	ldrb	r3, [r1, #15]
    5664:	4393      	bics	r3, r2
    5666:	d1fc      	bne.n	5662 <tc_init+0x136>
    5668:	33ff      	adds	r3, #255	; 0xff
    566a:	7133      	strb	r3, [r6, #4]
    566c:	2800      	cmp	r0, #0
    566e:	d005      	beq.n	567c <tc_init+0x150>
    5670:	227f      	movs	r2, #127	; 0x7f
    5672:	6829      	ldr	r1, [r5, #0]
    5674:	7bcb      	ldrb	r3, [r1, #15]
    5676:	4393      	bics	r3, r2
    5678:	d1fc      	bne.n	5674 <tc_init+0x148>
    567a:	7170      	strb	r0, [r6, #5]
    567c:	464b      	mov	r3, r9
    567e:	7a98      	ldrb	r0, [r3, #10]
    5680:	7adb      	ldrb	r3, [r3, #11]
    5682:	2b00      	cmp	r3, #0
    5684:	d001      	beq.n	568a <tc_init+0x15e>
    5686:	2310      	movs	r3, #16
    5688:	4318      	orrs	r0, r3
    568a:	464b      	mov	r3, r9
    568c:	7b1b      	ldrb	r3, [r3, #12]
    568e:	2b00      	cmp	r3, #0
    5690:	d001      	beq.n	5696 <tc_init+0x16a>
    5692:	2320      	movs	r3, #32
    5694:	4318      	orrs	r0, r3
    5696:	227f      	movs	r2, #127	; 0x7f
    5698:	6829      	ldr	r1, [r5, #0]
    569a:	7bcb      	ldrb	r3, [r1, #15]
    569c:	4393      	bics	r3, r2
    569e:	d1fc      	bne.n	569a <tc_init+0x16e>
    56a0:	217f      	movs	r1, #127	; 0x7f
    56a2:	71b0      	strb	r0, [r6, #6]
    56a4:	682a      	ldr	r2, [r5, #0]
    56a6:	7bd3      	ldrb	r3, [r2, #15]
    56a8:	438b      	bics	r3, r1
    56aa:	d1fc      	bne.n	56a6 <tc_init+0x17a>
    56ac:	792b      	ldrb	r3, [r5, #4]
    56ae:	217f      	movs	r1, #127	; 0x7f
    56b0:	2b04      	cmp	r3, #4
    56b2:	d007      	beq.n	56c4 <tc_init+0x198>
    56b4:	217f      	movs	r1, #127	; 0x7f
    56b6:	2b08      	cmp	r3, #8
    56b8:	d040      	beq.n	573c <tc_init+0x210>
    56ba:	217f      	movs	r1, #127	; 0x7f
    56bc:	2b00      	cmp	r3, #0
    56be:	d025      	beq.n	570c <tc_init+0x1e0>
    56c0:	2017      	movs	r0, #23
    56c2:	e772      	b.n	55aa <tc_init+0x7e>
    56c4:	7bd3      	ldrb	r3, [r2, #15]
    56c6:	438b      	bics	r3, r1
    56c8:	d1fc      	bne.n	56c4 <tc_init+0x198>
    56ca:	464a      	mov	r2, r9
    56cc:	3328      	adds	r3, #40	; 0x28
    56ce:	5cd3      	ldrb	r3, [r2, r3]
    56d0:	227f      	movs	r2, #127	; 0x7f
    56d2:	7433      	strb	r3, [r6, #16]
    56d4:	6829      	ldr	r1, [r5, #0]
    56d6:	7bcb      	ldrb	r3, [r1, #15]
    56d8:	4393      	bics	r3, r2
    56da:	d1fc      	bne.n	56d6 <tc_init+0x1aa>
    56dc:	464a      	mov	r2, r9
    56de:	3329      	adds	r3, #41	; 0x29
    56e0:	5cd3      	ldrb	r3, [r2, r3]
    56e2:	227f      	movs	r2, #127	; 0x7f
    56e4:	7533      	strb	r3, [r6, #20]
    56e6:	6829      	ldr	r1, [r5, #0]
    56e8:	7bcb      	ldrb	r3, [r1, #15]
    56ea:	4393      	bics	r3, r2
    56ec:	d1fc      	bne.n	56e8 <tc_init+0x1bc>
    56ee:	464a      	mov	r2, r9
    56f0:	332a      	adds	r3, #42	; 0x2a
    56f2:	5cd3      	ldrb	r3, [r2, r3]
    56f4:	227f      	movs	r2, #127	; 0x7f
    56f6:	7633      	strb	r3, [r6, #24]
    56f8:	6829      	ldr	r1, [r5, #0]
    56fa:	7bcb      	ldrb	r3, [r1, #15]
    56fc:	4393      	bics	r3, r2
    56fe:	d1fc      	bne.n	56fa <tc_init+0x1ce>
    5700:	464a      	mov	r2, r9
    5702:	332b      	adds	r3, #43	; 0x2b
    5704:	5cd3      	ldrb	r3, [r2, r3]
    5706:	2000      	movs	r0, #0
    5708:	7673      	strb	r3, [r6, #25]
    570a:	e74e      	b.n	55aa <tc_init+0x7e>
    570c:	7bd3      	ldrb	r3, [r2, #15]
    570e:	438b      	bics	r3, r1
    5710:	d1fc      	bne.n	570c <tc_init+0x1e0>
    5712:	464b      	mov	r3, r9
    5714:	227f      	movs	r2, #127	; 0x7f
    5716:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
    5718:	8233      	strh	r3, [r6, #16]
    571a:	6829      	ldr	r1, [r5, #0]
    571c:	7bcb      	ldrb	r3, [r1, #15]
    571e:	4393      	bics	r3, r2
    5720:	d1fc      	bne.n	571c <tc_init+0x1f0>
    5722:	464b      	mov	r3, r9
    5724:	227f      	movs	r2, #127	; 0x7f
    5726:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
    5728:	8333      	strh	r3, [r6, #24]
    572a:	6829      	ldr	r1, [r5, #0]
    572c:	7bcb      	ldrb	r3, [r1, #15]
    572e:	4393      	bics	r3, r2
    5730:	d1fc      	bne.n	572c <tc_init+0x200>
    5732:	464b      	mov	r3, r9
    5734:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
    5736:	2000      	movs	r0, #0
    5738:	8373      	strh	r3, [r6, #26]
    573a:	e736      	b.n	55aa <tc_init+0x7e>
    573c:	7bd3      	ldrb	r3, [r2, #15]
    573e:	438b      	bics	r3, r1
    5740:	d1fc      	bne.n	573c <tc_init+0x210>
    5742:	464b      	mov	r3, r9
    5744:	227f      	movs	r2, #127	; 0x7f
    5746:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    5748:	6133      	str	r3, [r6, #16]
    574a:	6829      	ldr	r1, [r5, #0]
    574c:	7bcb      	ldrb	r3, [r1, #15]
    574e:	4393      	bics	r3, r2
    5750:	d1fc      	bne.n	574c <tc_init+0x220>
    5752:	464b      	mov	r3, r9
    5754:	227f      	movs	r2, #127	; 0x7f
    5756:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    5758:	61b3      	str	r3, [r6, #24]
    575a:	6829      	ldr	r1, [r5, #0]
    575c:	7bcb      	ldrb	r3, [r1, #15]
    575e:	4393      	bics	r3, r2
    5760:	d1fc      	bne.n	575c <tc_init+0x230>
    5762:	464b      	mov	r3, r9
    5764:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    5766:	2000      	movs	r0, #0
    5768:	61f3      	str	r3, [r6, #28]
    576a:	e71e      	b.n	55aa <tc_init+0x7e>
    576c:	2300      	movs	r3, #0
    576e:	4698      	mov	r8, r3
    5770:	e6f9      	b.n	5566 <tc_init+0x3a>
    5772:	2301      	movs	r3, #1
    5774:	4698      	mov	r8, r3
    5776:	e6f6      	b.n	5566 <tc_init+0x3a>
    5778:	2302      	movs	r3, #2
    577a:	4698      	mov	r8, r3
    577c:	e6f3      	b.n	5566 <tc_init+0x3a>
    577e:	a902      	add	r1, sp, #8
    5780:	70cb      	strb	r3, [r1, #3]
    5782:	464b      	mov	r3, r9
    5784:	7e1b      	ldrb	r3, [r3, #24]
    5786:	708a      	strb	r2, [r1, #2]
    5788:	700b      	strb	r3, [r1, #0]
    578a:	464b      	mov	r3, r9
    578c:	7d18      	ldrb	r0, [r3, #20]
    578e:	704a      	strb	r2, [r1, #1]
    5790:	f7fe ff84 	bl	469c <system_pinmux_pin_set_config>
    5794:	e721      	b.n	55da <tc_init+0xae>
    5796:	2301      	movs	r3, #1
    5798:	2200      	movs	r2, #0
    579a:	a902      	add	r1, sp, #8
    579c:	708b      	strb	r3, [r1, #2]
    579e:	704b      	strb	r3, [r1, #1]
    57a0:	464b      	mov	r3, r9
    57a2:	70ca      	strb	r2, [r1, #3]
    57a4:	464a      	mov	r2, r9
    57a6:	6a1b      	ldr	r3, [r3, #32]
    57a8:	6a52      	ldr	r2, [r2, #36]	; 0x24
    57aa:	b2d8      	uxtb	r0, r3
    57ac:	700a      	strb	r2, [r1, #0]
    57ae:	f7fe ff75 	bl	469c <system_pinmux_pin_set_config>
    57b2:	e717      	b.n	55e4 <tc_init+0xb8>
    57b4:	4641      	mov	r1, r8
    57b6:	3101      	adds	r1, #1
    57b8:	0049      	lsls	r1, r1, #1
    57ba:	6a13      	ldr	r3, [r2, #32]
    57bc:	5a41      	ldrh	r1, [r0, r1]
    57be:	430b      	orrs	r3, r1
    57c0:	6213      	str	r3, [r2, #32]
    57c2:	e71c      	b.n	55fe <tc_init+0xd2>
    57c4:	0000dff8 	.word	0x0000dff8
    57c8:	20004060 	.word	0x20004060
    57cc:	40000400 	.word	0x40000400

000057d0 <tc_get_count_value>:
    57d0:	217f      	movs	r1, #127	; 0x7f
    57d2:	6802      	ldr	r2, [r0, #0]
    57d4:	7bd3      	ldrb	r3, [r2, #15]
    57d6:	438b      	bics	r3, r1
    57d8:	d1fc      	bne.n	57d4 <tc_get_count_value+0x4>
    57da:	7903      	ldrb	r3, [r0, #4]
    57dc:	2b04      	cmp	r3, #4
    57de:	d00a      	beq.n	57f6 <tc_get_count_value+0x26>
    57e0:	2b08      	cmp	r3, #8
    57e2:	d006      	beq.n	57f2 <tc_get_count_value+0x22>
    57e4:	2000      	movs	r0, #0
    57e6:	2b00      	cmp	r3, #0
    57e8:	d000      	beq.n	57ec <tc_get_count_value+0x1c>
    57ea:	4770      	bx	lr
    57ec:	8a10      	ldrh	r0, [r2, #16]
    57ee:	b280      	uxth	r0, r0
    57f0:	e7fb      	b.n	57ea <tc_get_count_value+0x1a>
    57f2:	6910      	ldr	r0, [r2, #16]
    57f4:	e7f9      	b.n	57ea <tc_get_count_value+0x1a>
    57f6:	7c10      	ldrb	r0, [r2, #16]
    57f8:	b2c0      	uxtb	r0, r0
    57fa:	e7f6      	b.n	57ea <tc_get_count_value+0x1a>

000057fc <tc_set_compare_value>:
    57fc:	b530      	push	{r4, r5, lr}
    57fe:	257f      	movs	r5, #127	; 0x7f
    5800:	6804      	ldr	r4, [r0, #0]
    5802:	7be3      	ldrb	r3, [r4, #15]
    5804:	43ab      	bics	r3, r5
    5806:	d1fc      	bne.n	5802 <tc_set_compare_value+0x6>
    5808:	7903      	ldrb	r3, [r0, #4]
    580a:	2b04      	cmp	r3, #4
    580c:	d016      	beq.n	583c <tc_set_compare_value+0x40>
    580e:	2b08      	cmp	r3, #8
    5810:	d00c      	beq.n	582c <tc_set_compare_value+0x30>
    5812:	2017      	movs	r0, #23
    5814:	2b00      	cmp	r3, #0
    5816:	d000      	beq.n	581a <tc_set_compare_value+0x1e>
    5818:	bd30      	pop	{r4, r5, pc}
    581a:	2017      	movs	r0, #23
    581c:	2901      	cmp	r1, #1
    581e:	d8fb      	bhi.n	5818 <tc_set_compare_value+0x1c>
    5820:	310c      	adds	r1, #12
    5822:	b292      	uxth	r2, r2
    5824:	0049      	lsls	r1, r1, #1
    5826:	530a      	strh	r2, [r1, r4]
    5828:	2000      	movs	r0, #0
    582a:	e7f5      	b.n	5818 <tc_set_compare_value+0x1c>
    582c:	2017      	movs	r0, #23
    582e:	2901      	cmp	r1, #1
    5830:	d8f2      	bhi.n	5818 <tc_set_compare_value+0x1c>
    5832:	3106      	adds	r1, #6
    5834:	0089      	lsls	r1, r1, #2
    5836:	510a      	str	r2, [r1, r4]
    5838:	2000      	movs	r0, #0
    583a:	e7ed      	b.n	5818 <tc_set_compare_value+0x1c>
    583c:	2017      	movs	r0, #23
    583e:	2901      	cmp	r1, #1
    5840:	d8ea      	bhi.n	5818 <tc_set_compare_value+0x1c>
    5842:	b2d2      	uxtb	r2, r2
    5844:	1861      	adds	r1, r4, r1
    5846:	760a      	strb	r2, [r1, #24]
    5848:	2000      	movs	r0, #0
    584a:	e7e5      	b.n	5818 <tc_set_compare_value+0x1c>

0000584c <ticker_irq_handler>:
    584c:	b538      	push	{r3, r4, r5, lr}
    584e:	6803      	ldr	r3, [r0, #0]
    5850:	1c05      	adds	r5, r0, #0
    5852:	68db      	ldr	r3, [r3, #12]
    5854:	4798      	blx	r3
    5856:	686b      	ldr	r3, [r5, #4]
    5858:	685b      	ldr	r3, [r3, #4]
    585a:	e00d      	b.n	5878 <ticker_irq_handler+0x2c>
    585c:	681c      	ldr	r4, [r3, #0]
    585e:	682b      	ldr	r3, [r5, #0]
    5860:	685b      	ldr	r3, [r3, #4]
    5862:	4798      	blx	r3
    5864:	1a24      	subs	r4, r4, r0
    5866:	2c00      	cmp	r4, #0
    5868:	dc0c      	bgt.n	5884 <ticker_irq_handler+0x38>
    586a:	686a      	ldr	r2, [r5, #4]
    586c:	6851      	ldr	r1, [r2, #4]
    586e:	688b      	ldr	r3, [r1, #8]
    5870:	6053      	str	r3, [r2, #4]
    5872:	6812      	ldr	r2, [r2, #0]
    5874:	2a00      	cmp	r2, #0
    5876:	d10c      	bne.n	5892 <ticker_irq_handler+0x46>
    5878:	2b00      	cmp	r3, #0
    587a:	d1ef      	bne.n	585c <ticker_irq_handler+0x10>
    587c:	682b      	ldr	r3, [r5, #0]
    587e:	689b      	ldr	r3, [r3, #8]
    5880:	4798      	blx	r3
    5882:	bd38      	pop	{r3, r4, r5, pc}
    5884:	686a      	ldr	r2, [r5, #4]
    5886:	682b      	ldr	r3, [r5, #0]
    5888:	6852      	ldr	r2, [r2, #4]
    588a:	691b      	ldr	r3, [r3, #16]
    588c:	6810      	ldr	r0, [r2, #0]
    588e:	4798      	blx	r3
    5890:	e7f7      	b.n	5882 <ticker_irq_handler+0x36>
    5892:	6848      	ldr	r0, [r1, #4]
    5894:	4790      	blx	r2
    5896:	e7de      	b.n	5856 <ticker_irq_handler+0xa>

00005898 <__aeabi_atexit>:
    5898:	b508      	push	{r3, lr}
    589a:	1c03      	adds	r3, r0, #0
    589c:	1c08      	adds	r0, r1, #0
    589e:	1c19      	adds	r1, r3, #0
    58a0:	f000 f9f0 	bl	5c84 <__cxa_atexit>
    58a4:	bd08      	pop	{r3, pc}

000058a6 <_ZdlPv>:
    58a6:	b508      	push	{r3, lr}
    58a8:	f000 fe0c 	bl	64c4 <free>
    58ac:	bd08      	pop	{r3, pc}

000058ae <_Znwj>:
    58ae:	b510      	push	{r4, lr}
    58b0:	1e04      	subs	r4, r0, #0
    58b2:	d102      	bne.n	58ba <_Znwj+0xc>
    58b4:	3401      	adds	r4, #1
    58b6:	e000      	b.n	58ba <_Znwj+0xc>
    58b8:	4780      	blx	r0
    58ba:	1c20      	adds	r0, r4, #0
    58bc:	f000 fdf8 	bl	64b0 <malloc>
    58c0:	2800      	cmp	r0, #0
    58c2:	d105      	bne.n	58d0 <_Znwj+0x22>
    58c4:	f000 f806 	bl	58d4 <_ZSt15get_new_handlerv>
    58c8:	2800      	cmp	r0, #0
    58ca:	d1f5      	bne.n	58b8 <_Znwj+0xa>
    58cc:	f000 f9d2 	bl	5c74 <abort>
    58d0:	bd10      	pop	{r4, pc}
	...

000058d4 <_ZSt15get_new_handlerv>:
    58d4:	4b01      	ldr	r3, [pc, #4]	; (58dc <_ZSt15get_new_handlerv+0x8>)
    58d6:	6818      	ldr	r0, [r3, #0]
    58d8:	4770      	bx	lr
    58da:	46c0      	nop			; (mov r8, r8)
    58dc:	20003fb0 	.word	0x20003fb0

000058e0 <__aeabi_uidiv>:
    58e0:	2200      	movs	r2, #0
    58e2:	0843      	lsrs	r3, r0, #1
    58e4:	428b      	cmp	r3, r1
    58e6:	d374      	bcc.n	59d2 <__aeabi_uidiv+0xf2>
    58e8:	0903      	lsrs	r3, r0, #4
    58ea:	428b      	cmp	r3, r1
    58ec:	d35f      	bcc.n	59ae <__aeabi_uidiv+0xce>
    58ee:	0a03      	lsrs	r3, r0, #8
    58f0:	428b      	cmp	r3, r1
    58f2:	d344      	bcc.n	597e <__aeabi_uidiv+0x9e>
    58f4:	0b03      	lsrs	r3, r0, #12
    58f6:	428b      	cmp	r3, r1
    58f8:	d328      	bcc.n	594c <__aeabi_uidiv+0x6c>
    58fa:	0c03      	lsrs	r3, r0, #16
    58fc:	428b      	cmp	r3, r1
    58fe:	d30d      	bcc.n	591c <__aeabi_uidiv+0x3c>
    5900:	22ff      	movs	r2, #255	; 0xff
    5902:	0209      	lsls	r1, r1, #8
    5904:	ba12      	rev	r2, r2
    5906:	0c03      	lsrs	r3, r0, #16
    5908:	428b      	cmp	r3, r1
    590a:	d302      	bcc.n	5912 <__aeabi_uidiv+0x32>
    590c:	1212      	asrs	r2, r2, #8
    590e:	0209      	lsls	r1, r1, #8
    5910:	d065      	beq.n	59de <__aeabi_uidiv+0xfe>
    5912:	0b03      	lsrs	r3, r0, #12
    5914:	428b      	cmp	r3, r1
    5916:	d319      	bcc.n	594c <__aeabi_uidiv+0x6c>
    5918:	e000      	b.n	591c <__aeabi_uidiv+0x3c>
    591a:	0a09      	lsrs	r1, r1, #8
    591c:	0bc3      	lsrs	r3, r0, #15
    591e:	428b      	cmp	r3, r1
    5920:	d301      	bcc.n	5926 <__aeabi_uidiv+0x46>
    5922:	03cb      	lsls	r3, r1, #15
    5924:	1ac0      	subs	r0, r0, r3
    5926:	4152      	adcs	r2, r2
    5928:	0b83      	lsrs	r3, r0, #14
    592a:	428b      	cmp	r3, r1
    592c:	d301      	bcc.n	5932 <__aeabi_uidiv+0x52>
    592e:	038b      	lsls	r3, r1, #14
    5930:	1ac0      	subs	r0, r0, r3
    5932:	4152      	adcs	r2, r2
    5934:	0b43      	lsrs	r3, r0, #13
    5936:	428b      	cmp	r3, r1
    5938:	d301      	bcc.n	593e <__aeabi_uidiv+0x5e>
    593a:	034b      	lsls	r3, r1, #13
    593c:	1ac0      	subs	r0, r0, r3
    593e:	4152      	adcs	r2, r2
    5940:	0b03      	lsrs	r3, r0, #12
    5942:	428b      	cmp	r3, r1
    5944:	d301      	bcc.n	594a <__aeabi_uidiv+0x6a>
    5946:	030b      	lsls	r3, r1, #12
    5948:	1ac0      	subs	r0, r0, r3
    594a:	4152      	adcs	r2, r2
    594c:	0ac3      	lsrs	r3, r0, #11
    594e:	428b      	cmp	r3, r1
    5950:	d301      	bcc.n	5956 <__aeabi_uidiv+0x76>
    5952:	02cb      	lsls	r3, r1, #11
    5954:	1ac0      	subs	r0, r0, r3
    5956:	4152      	adcs	r2, r2
    5958:	0a83      	lsrs	r3, r0, #10
    595a:	428b      	cmp	r3, r1
    595c:	d301      	bcc.n	5962 <__aeabi_uidiv+0x82>
    595e:	028b      	lsls	r3, r1, #10
    5960:	1ac0      	subs	r0, r0, r3
    5962:	4152      	adcs	r2, r2
    5964:	0a43      	lsrs	r3, r0, #9
    5966:	428b      	cmp	r3, r1
    5968:	d301      	bcc.n	596e <__aeabi_uidiv+0x8e>
    596a:	024b      	lsls	r3, r1, #9
    596c:	1ac0      	subs	r0, r0, r3
    596e:	4152      	adcs	r2, r2
    5970:	0a03      	lsrs	r3, r0, #8
    5972:	428b      	cmp	r3, r1
    5974:	d301      	bcc.n	597a <__aeabi_uidiv+0x9a>
    5976:	020b      	lsls	r3, r1, #8
    5978:	1ac0      	subs	r0, r0, r3
    597a:	4152      	adcs	r2, r2
    597c:	d2cd      	bcs.n	591a <__aeabi_uidiv+0x3a>
    597e:	09c3      	lsrs	r3, r0, #7
    5980:	428b      	cmp	r3, r1
    5982:	d301      	bcc.n	5988 <__aeabi_uidiv+0xa8>
    5984:	01cb      	lsls	r3, r1, #7
    5986:	1ac0      	subs	r0, r0, r3
    5988:	4152      	adcs	r2, r2
    598a:	0983      	lsrs	r3, r0, #6
    598c:	428b      	cmp	r3, r1
    598e:	d301      	bcc.n	5994 <__aeabi_uidiv+0xb4>
    5990:	018b      	lsls	r3, r1, #6
    5992:	1ac0      	subs	r0, r0, r3
    5994:	4152      	adcs	r2, r2
    5996:	0943      	lsrs	r3, r0, #5
    5998:	428b      	cmp	r3, r1
    599a:	d301      	bcc.n	59a0 <__aeabi_uidiv+0xc0>
    599c:	014b      	lsls	r3, r1, #5
    599e:	1ac0      	subs	r0, r0, r3
    59a0:	4152      	adcs	r2, r2
    59a2:	0903      	lsrs	r3, r0, #4
    59a4:	428b      	cmp	r3, r1
    59a6:	d301      	bcc.n	59ac <__aeabi_uidiv+0xcc>
    59a8:	010b      	lsls	r3, r1, #4
    59aa:	1ac0      	subs	r0, r0, r3
    59ac:	4152      	adcs	r2, r2
    59ae:	08c3      	lsrs	r3, r0, #3
    59b0:	428b      	cmp	r3, r1
    59b2:	d301      	bcc.n	59b8 <__aeabi_uidiv+0xd8>
    59b4:	00cb      	lsls	r3, r1, #3
    59b6:	1ac0      	subs	r0, r0, r3
    59b8:	4152      	adcs	r2, r2
    59ba:	0883      	lsrs	r3, r0, #2
    59bc:	428b      	cmp	r3, r1
    59be:	d301      	bcc.n	59c4 <__aeabi_uidiv+0xe4>
    59c0:	008b      	lsls	r3, r1, #2
    59c2:	1ac0      	subs	r0, r0, r3
    59c4:	4152      	adcs	r2, r2
    59c6:	0843      	lsrs	r3, r0, #1
    59c8:	428b      	cmp	r3, r1
    59ca:	d301      	bcc.n	59d0 <__aeabi_uidiv+0xf0>
    59cc:	004b      	lsls	r3, r1, #1
    59ce:	1ac0      	subs	r0, r0, r3
    59d0:	4152      	adcs	r2, r2
    59d2:	1a41      	subs	r1, r0, r1
    59d4:	d200      	bcs.n	59d8 <__aeabi_uidiv+0xf8>
    59d6:	4601      	mov	r1, r0
    59d8:	4152      	adcs	r2, r2
    59da:	4610      	mov	r0, r2
    59dc:	4770      	bx	lr
    59de:	e7ff      	b.n	59e0 <__aeabi_uidiv+0x100>
    59e0:	b501      	push	{r0, lr}
    59e2:	2000      	movs	r0, #0
    59e4:	f000 f8fc 	bl	5be0 <__aeabi_idiv0>
    59e8:	bd02      	pop	{r1, pc}
    59ea:	46c0      	nop			; (mov r8, r8)

000059ec <__aeabi_uidivmod>:
    59ec:	2900      	cmp	r1, #0
    59ee:	d0f7      	beq.n	59e0 <__aeabi_uidiv+0x100>
    59f0:	b503      	push	{r0, r1, lr}
    59f2:	f7ff ff75 	bl	58e0 <__aeabi_uidiv>
    59f6:	bc0e      	pop	{r1, r2, r3}
    59f8:	4342      	muls	r2, r0
    59fa:	1a89      	subs	r1, r1, r2
    59fc:	4718      	bx	r3
    59fe:	46c0      	nop			; (mov r8, r8)

00005a00 <__aeabi_idiv>:
    5a00:	4603      	mov	r3, r0
    5a02:	430b      	orrs	r3, r1
    5a04:	d47f      	bmi.n	5b06 <__aeabi_idiv+0x106>
    5a06:	2200      	movs	r2, #0
    5a08:	0843      	lsrs	r3, r0, #1
    5a0a:	428b      	cmp	r3, r1
    5a0c:	d374      	bcc.n	5af8 <__aeabi_idiv+0xf8>
    5a0e:	0903      	lsrs	r3, r0, #4
    5a10:	428b      	cmp	r3, r1
    5a12:	d35f      	bcc.n	5ad4 <__aeabi_idiv+0xd4>
    5a14:	0a03      	lsrs	r3, r0, #8
    5a16:	428b      	cmp	r3, r1
    5a18:	d344      	bcc.n	5aa4 <__aeabi_idiv+0xa4>
    5a1a:	0b03      	lsrs	r3, r0, #12
    5a1c:	428b      	cmp	r3, r1
    5a1e:	d328      	bcc.n	5a72 <__aeabi_idiv+0x72>
    5a20:	0c03      	lsrs	r3, r0, #16
    5a22:	428b      	cmp	r3, r1
    5a24:	d30d      	bcc.n	5a42 <__aeabi_idiv+0x42>
    5a26:	22ff      	movs	r2, #255	; 0xff
    5a28:	0209      	lsls	r1, r1, #8
    5a2a:	ba12      	rev	r2, r2
    5a2c:	0c03      	lsrs	r3, r0, #16
    5a2e:	428b      	cmp	r3, r1
    5a30:	d302      	bcc.n	5a38 <__aeabi_idiv+0x38>
    5a32:	1212      	asrs	r2, r2, #8
    5a34:	0209      	lsls	r1, r1, #8
    5a36:	d065      	beq.n	5b04 <__aeabi_idiv+0x104>
    5a38:	0b03      	lsrs	r3, r0, #12
    5a3a:	428b      	cmp	r3, r1
    5a3c:	d319      	bcc.n	5a72 <__aeabi_idiv+0x72>
    5a3e:	e000      	b.n	5a42 <__aeabi_idiv+0x42>
    5a40:	0a09      	lsrs	r1, r1, #8
    5a42:	0bc3      	lsrs	r3, r0, #15
    5a44:	428b      	cmp	r3, r1
    5a46:	d301      	bcc.n	5a4c <__aeabi_idiv+0x4c>
    5a48:	03cb      	lsls	r3, r1, #15
    5a4a:	1ac0      	subs	r0, r0, r3
    5a4c:	4152      	adcs	r2, r2
    5a4e:	0b83      	lsrs	r3, r0, #14
    5a50:	428b      	cmp	r3, r1
    5a52:	d301      	bcc.n	5a58 <__aeabi_idiv+0x58>
    5a54:	038b      	lsls	r3, r1, #14
    5a56:	1ac0      	subs	r0, r0, r3
    5a58:	4152      	adcs	r2, r2
    5a5a:	0b43      	lsrs	r3, r0, #13
    5a5c:	428b      	cmp	r3, r1
    5a5e:	d301      	bcc.n	5a64 <__aeabi_idiv+0x64>
    5a60:	034b      	lsls	r3, r1, #13
    5a62:	1ac0      	subs	r0, r0, r3
    5a64:	4152      	adcs	r2, r2
    5a66:	0b03      	lsrs	r3, r0, #12
    5a68:	428b      	cmp	r3, r1
    5a6a:	d301      	bcc.n	5a70 <__aeabi_idiv+0x70>
    5a6c:	030b      	lsls	r3, r1, #12
    5a6e:	1ac0      	subs	r0, r0, r3
    5a70:	4152      	adcs	r2, r2
    5a72:	0ac3      	lsrs	r3, r0, #11
    5a74:	428b      	cmp	r3, r1
    5a76:	d301      	bcc.n	5a7c <__aeabi_idiv+0x7c>
    5a78:	02cb      	lsls	r3, r1, #11
    5a7a:	1ac0      	subs	r0, r0, r3
    5a7c:	4152      	adcs	r2, r2
    5a7e:	0a83      	lsrs	r3, r0, #10
    5a80:	428b      	cmp	r3, r1
    5a82:	d301      	bcc.n	5a88 <__aeabi_idiv+0x88>
    5a84:	028b      	lsls	r3, r1, #10
    5a86:	1ac0      	subs	r0, r0, r3
    5a88:	4152      	adcs	r2, r2
    5a8a:	0a43      	lsrs	r3, r0, #9
    5a8c:	428b      	cmp	r3, r1
    5a8e:	d301      	bcc.n	5a94 <__aeabi_idiv+0x94>
    5a90:	024b      	lsls	r3, r1, #9
    5a92:	1ac0      	subs	r0, r0, r3
    5a94:	4152      	adcs	r2, r2
    5a96:	0a03      	lsrs	r3, r0, #8
    5a98:	428b      	cmp	r3, r1
    5a9a:	d301      	bcc.n	5aa0 <__aeabi_idiv+0xa0>
    5a9c:	020b      	lsls	r3, r1, #8
    5a9e:	1ac0      	subs	r0, r0, r3
    5aa0:	4152      	adcs	r2, r2
    5aa2:	d2cd      	bcs.n	5a40 <__aeabi_idiv+0x40>
    5aa4:	09c3      	lsrs	r3, r0, #7
    5aa6:	428b      	cmp	r3, r1
    5aa8:	d301      	bcc.n	5aae <__aeabi_idiv+0xae>
    5aaa:	01cb      	lsls	r3, r1, #7
    5aac:	1ac0      	subs	r0, r0, r3
    5aae:	4152      	adcs	r2, r2
    5ab0:	0983      	lsrs	r3, r0, #6
    5ab2:	428b      	cmp	r3, r1
    5ab4:	d301      	bcc.n	5aba <__aeabi_idiv+0xba>
    5ab6:	018b      	lsls	r3, r1, #6
    5ab8:	1ac0      	subs	r0, r0, r3
    5aba:	4152      	adcs	r2, r2
    5abc:	0943      	lsrs	r3, r0, #5
    5abe:	428b      	cmp	r3, r1
    5ac0:	d301      	bcc.n	5ac6 <__aeabi_idiv+0xc6>
    5ac2:	014b      	lsls	r3, r1, #5
    5ac4:	1ac0      	subs	r0, r0, r3
    5ac6:	4152      	adcs	r2, r2
    5ac8:	0903      	lsrs	r3, r0, #4
    5aca:	428b      	cmp	r3, r1
    5acc:	d301      	bcc.n	5ad2 <__aeabi_idiv+0xd2>
    5ace:	010b      	lsls	r3, r1, #4
    5ad0:	1ac0      	subs	r0, r0, r3
    5ad2:	4152      	adcs	r2, r2
    5ad4:	08c3      	lsrs	r3, r0, #3
    5ad6:	428b      	cmp	r3, r1
    5ad8:	d301      	bcc.n	5ade <__aeabi_idiv+0xde>
    5ada:	00cb      	lsls	r3, r1, #3
    5adc:	1ac0      	subs	r0, r0, r3
    5ade:	4152      	adcs	r2, r2
    5ae0:	0883      	lsrs	r3, r0, #2
    5ae2:	428b      	cmp	r3, r1
    5ae4:	d301      	bcc.n	5aea <__aeabi_idiv+0xea>
    5ae6:	008b      	lsls	r3, r1, #2
    5ae8:	1ac0      	subs	r0, r0, r3
    5aea:	4152      	adcs	r2, r2
    5aec:	0843      	lsrs	r3, r0, #1
    5aee:	428b      	cmp	r3, r1
    5af0:	d301      	bcc.n	5af6 <__aeabi_idiv+0xf6>
    5af2:	004b      	lsls	r3, r1, #1
    5af4:	1ac0      	subs	r0, r0, r3
    5af6:	4152      	adcs	r2, r2
    5af8:	1a41      	subs	r1, r0, r1
    5afa:	d200      	bcs.n	5afe <__aeabi_idiv+0xfe>
    5afc:	4601      	mov	r1, r0
    5afe:	4152      	adcs	r2, r2
    5b00:	4610      	mov	r0, r2
    5b02:	4770      	bx	lr
    5b04:	e05d      	b.n	5bc2 <__aeabi_idiv+0x1c2>
    5b06:	0fca      	lsrs	r2, r1, #31
    5b08:	d000      	beq.n	5b0c <__aeabi_idiv+0x10c>
    5b0a:	4249      	negs	r1, r1
    5b0c:	1003      	asrs	r3, r0, #32
    5b0e:	d300      	bcc.n	5b12 <__aeabi_idiv+0x112>
    5b10:	4240      	negs	r0, r0
    5b12:	4053      	eors	r3, r2
    5b14:	2200      	movs	r2, #0
    5b16:	469c      	mov	ip, r3
    5b18:	0903      	lsrs	r3, r0, #4
    5b1a:	428b      	cmp	r3, r1
    5b1c:	d32d      	bcc.n	5b7a <__aeabi_idiv+0x17a>
    5b1e:	0a03      	lsrs	r3, r0, #8
    5b20:	428b      	cmp	r3, r1
    5b22:	d312      	bcc.n	5b4a <__aeabi_idiv+0x14a>
    5b24:	22fc      	movs	r2, #252	; 0xfc
    5b26:	0189      	lsls	r1, r1, #6
    5b28:	ba12      	rev	r2, r2
    5b2a:	0a03      	lsrs	r3, r0, #8
    5b2c:	428b      	cmp	r3, r1
    5b2e:	d30c      	bcc.n	5b4a <__aeabi_idiv+0x14a>
    5b30:	0189      	lsls	r1, r1, #6
    5b32:	1192      	asrs	r2, r2, #6
    5b34:	428b      	cmp	r3, r1
    5b36:	d308      	bcc.n	5b4a <__aeabi_idiv+0x14a>
    5b38:	0189      	lsls	r1, r1, #6
    5b3a:	1192      	asrs	r2, r2, #6
    5b3c:	428b      	cmp	r3, r1
    5b3e:	d304      	bcc.n	5b4a <__aeabi_idiv+0x14a>
    5b40:	0189      	lsls	r1, r1, #6
    5b42:	d03a      	beq.n	5bba <__aeabi_idiv+0x1ba>
    5b44:	1192      	asrs	r2, r2, #6
    5b46:	e000      	b.n	5b4a <__aeabi_idiv+0x14a>
    5b48:	0989      	lsrs	r1, r1, #6
    5b4a:	09c3      	lsrs	r3, r0, #7
    5b4c:	428b      	cmp	r3, r1
    5b4e:	d301      	bcc.n	5b54 <__aeabi_idiv+0x154>
    5b50:	01cb      	lsls	r3, r1, #7
    5b52:	1ac0      	subs	r0, r0, r3
    5b54:	4152      	adcs	r2, r2
    5b56:	0983      	lsrs	r3, r0, #6
    5b58:	428b      	cmp	r3, r1
    5b5a:	d301      	bcc.n	5b60 <__aeabi_idiv+0x160>
    5b5c:	018b      	lsls	r3, r1, #6
    5b5e:	1ac0      	subs	r0, r0, r3
    5b60:	4152      	adcs	r2, r2
    5b62:	0943      	lsrs	r3, r0, #5
    5b64:	428b      	cmp	r3, r1
    5b66:	d301      	bcc.n	5b6c <__aeabi_idiv+0x16c>
    5b68:	014b      	lsls	r3, r1, #5
    5b6a:	1ac0      	subs	r0, r0, r3
    5b6c:	4152      	adcs	r2, r2
    5b6e:	0903      	lsrs	r3, r0, #4
    5b70:	428b      	cmp	r3, r1
    5b72:	d301      	bcc.n	5b78 <__aeabi_idiv+0x178>
    5b74:	010b      	lsls	r3, r1, #4
    5b76:	1ac0      	subs	r0, r0, r3
    5b78:	4152      	adcs	r2, r2
    5b7a:	08c3      	lsrs	r3, r0, #3
    5b7c:	428b      	cmp	r3, r1
    5b7e:	d301      	bcc.n	5b84 <__aeabi_idiv+0x184>
    5b80:	00cb      	lsls	r3, r1, #3
    5b82:	1ac0      	subs	r0, r0, r3
    5b84:	4152      	adcs	r2, r2
    5b86:	0883      	lsrs	r3, r0, #2
    5b88:	428b      	cmp	r3, r1
    5b8a:	d301      	bcc.n	5b90 <__aeabi_idiv+0x190>
    5b8c:	008b      	lsls	r3, r1, #2
    5b8e:	1ac0      	subs	r0, r0, r3
    5b90:	4152      	adcs	r2, r2
    5b92:	d2d9      	bcs.n	5b48 <__aeabi_idiv+0x148>
    5b94:	0843      	lsrs	r3, r0, #1
    5b96:	428b      	cmp	r3, r1
    5b98:	d301      	bcc.n	5b9e <__aeabi_idiv+0x19e>
    5b9a:	004b      	lsls	r3, r1, #1
    5b9c:	1ac0      	subs	r0, r0, r3
    5b9e:	4152      	adcs	r2, r2
    5ba0:	1a41      	subs	r1, r0, r1
    5ba2:	d200      	bcs.n	5ba6 <__aeabi_idiv+0x1a6>
    5ba4:	4601      	mov	r1, r0
    5ba6:	4663      	mov	r3, ip
    5ba8:	4152      	adcs	r2, r2
    5baa:	105b      	asrs	r3, r3, #1
    5bac:	4610      	mov	r0, r2
    5bae:	d301      	bcc.n	5bb4 <__aeabi_idiv+0x1b4>
    5bb0:	4240      	negs	r0, r0
    5bb2:	2b00      	cmp	r3, #0
    5bb4:	d500      	bpl.n	5bb8 <__aeabi_idiv+0x1b8>
    5bb6:	4249      	negs	r1, r1
    5bb8:	4770      	bx	lr
    5bba:	4663      	mov	r3, ip
    5bbc:	105b      	asrs	r3, r3, #1
    5bbe:	d300      	bcc.n	5bc2 <__aeabi_idiv+0x1c2>
    5bc0:	4240      	negs	r0, r0
    5bc2:	b501      	push	{r0, lr}
    5bc4:	2000      	movs	r0, #0
    5bc6:	f000 f80b 	bl	5be0 <__aeabi_idiv0>
    5bca:	bd02      	pop	{r1, pc}

00005bcc <__aeabi_idivmod>:
    5bcc:	2900      	cmp	r1, #0
    5bce:	d0f8      	beq.n	5bc2 <__aeabi_idiv+0x1c2>
    5bd0:	b503      	push	{r0, r1, lr}
    5bd2:	f7ff ff15 	bl	5a00 <__aeabi_idiv>
    5bd6:	bc0e      	pop	{r1, r2, r3}
    5bd8:	4342      	muls	r2, r0
    5bda:	1a89      	subs	r1, r1, r2
    5bdc:	4718      	bx	r3
    5bde:	46c0      	nop			; (mov r8, r8)

00005be0 <__aeabi_idiv0>:
    5be0:	4770      	bx	lr
    5be2:	46c0      	nop			; (mov r8, r8)

00005be4 <__aeabi_lmul>:
    5be4:	b5f0      	push	{r4, r5, r6, r7, lr}
    5be6:	464f      	mov	r7, r9
    5be8:	4646      	mov	r6, r8
    5bea:	0405      	lsls	r5, r0, #16
    5bec:	0c2d      	lsrs	r5, r5, #16
    5bee:	1c2c      	adds	r4, r5, #0
    5bf0:	b4c0      	push	{r6, r7}
    5bf2:	0417      	lsls	r7, r2, #16
    5bf4:	0c16      	lsrs	r6, r2, #16
    5bf6:	0c3f      	lsrs	r7, r7, #16
    5bf8:	4699      	mov	r9, r3
    5bfa:	0c03      	lsrs	r3, r0, #16
    5bfc:	437c      	muls	r4, r7
    5bfe:	4375      	muls	r5, r6
    5c00:	435f      	muls	r7, r3
    5c02:	4373      	muls	r3, r6
    5c04:	197d      	adds	r5, r7, r5
    5c06:	0c26      	lsrs	r6, r4, #16
    5c08:	19ad      	adds	r5, r5, r6
    5c0a:	469c      	mov	ip, r3
    5c0c:	42af      	cmp	r7, r5
    5c0e:	d903      	bls.n	5c18 <__aeabi_lmul+0x34>
    5c10:	2380      	movs	r3, #128	; 0x80
    5c12:	025b      	lsls	r3, r3, #9
    5c14:	4698      	mov	r8, r3
    5c16:	44c4      	add	ip, r8
    5c18:	464b      	mov	r3, r9
    5c1a:	4351      	muls	r1, r2
    5c1c:	4343      	muls	r3, r0
    5c1e:	0424      	lsls	r4, r4, #16
    5c20:	0c2e      	lsrs	r6, r5, #16
    5c22:	0c24      	lsrs	r4, r4, #16
    5c24:	042d      	lsls	r5, r5, #16
    5c26:	4466      	add	r6, ip
    5c28:	192c      	adds	r4, r5, r4
    5c2a:	1859      	adds	r1, r3, r1
    5c2c:	1989      	adds	r1, r1, r6
    5c2e:	1c20      	adds	r0, r4, #0
    5c30:	bc0c      	pop	{r2, r3}
    5c32:	4690      	mov	r8, r2
    5c34:	4699      	mov	r9, r3
    5c36:	bdf0      	pop	{r4, r5, r6, r7, pc}

00005c38 <__clzsi2>:
    5c38:	211c      	movs	r1, #28
    5c3a:	2301      	movs	r3, #1
    5c3c:	041b      	lsls	r3, r3, #16
    5c3e:	4298      	cmp	r0, r3
    5c40:	d301      	bcc.n	5c46 <__clzsi2+0xe>
    5c42:	0c00      	lsrs	r0, r0, #16
    5c44:	3910      	subs	r1, #16
    5c46:	0a1b      	lsrs	r3, r3, #8
    5c48:	4298      	cmp	r0, r3
    5c4a:	d301      	bcc.n	5c50 <__clzsi2+0x18>
    5c4c:	0a00      	lsrs	r0, r0, #8
    5c4e:	3908      	subs	r1, #8
    5c50:	091b      	lsrs	r3, r3, #4
    5c52:	4298      	cmp	r0, r3
    5c54:	d301      	bcc.n	5c5a <__clzsi2+0x22>
    5c56:	0900      	lsrs	r0, r0, #4
    5c58:	3904      	subs	r1, #4
    5c5a:	a202      	add	r2, pc, #8	; (adr r2, 5c64 <__clzsi2+0x2c>)
    5c5c:	5c10      	ldrb	r0, [r2, r0]
    5c5e:	1840      	adds	r0, r0, r1
    5c60:	4770      	bx	lr
    5c62:	46c0      	nop			; (mov r8, r8)
    5c64:	02020304 	.word	0x02020304
    5c68:	01010101 	.word	0x01010101
	...

00005c74 <abort>:
    5c74:	b508      	push	{r3, lr}
    5c76:	2006      	movs	r0, #6
    5c78:	f002 f810 	bl	7c9c <raise>
    5c7c:	2001      	movs	r0, #1
    5c7e:	f7fc ff95 	bl	2bac <_exit>
	...

00005c84 <__cxa_atexit>:
    5c84:	4b05      	ldr	r3, [pc, #20]	; (5c9c <__cxa_atexit+0x18>)
    5c86:	b510      	push	{r4, lr}
    5c88:	1c04      	adds	r4, r0, #0
    5c8a:	1e18      	subs	r0, r3, #0
    5c8c:	d005      	beq.n	5c9a <__cxa_atexit+0x16>
    5c8e:	1c13      	adds	r3, r2, #0
    5c90:	2002      	movs	r0, #2
    5c92:	1c0a      	adds	r2, r1, #0
    5c94:	1c21      	adds	r1, r4, #0
    5c96:	e000      	b.n	5c9a <__cxa_atexit+0x16>
    5c98:	bf00      	nop
    5c9a:	bd10      	pop	{r4, pc}
    5c9c:	00000000 	.word	0x00000000

00005ca0 <__errno>:
    5ca0:	4b01      	ldr	r3, [pc, #4]	; (5ca8 <__errno+0x8>)
    5ca2:	6818      	ldr	r0, [r3, #0]
    5ca4:	4770      	bx	lr
    5ca6:	46c0      	nop			; (mov r8, r8)
    5ca8:	20000134 	.word	0x20000134

00005cac <exit>:
    5cac:	4b08      	ldr	r3, [pc, #32]	; (5cd0 <exit+0x24>)
    5cae:	b510      	push	{r4, lr}
    5cb0:	1c04      	adds	r4, r0, #0
    5cb2:	2b00      	cmp	r3, #0
    5cb4:	d002      	beq.n	5cbc <exit+0x10>
    5cb6:	2100      	movs	r1, #0
    5cb8:	e000      	b.n	5cbc <exit+0x10>
    5cba:	bf00      	nop
    5cbc:	4b05      	ldr	r3, [pc, #20]	; (5cd4 <exit+0x28>)
    5cbe:	6818      	ldr	r0, [r3, #0]
    5cc0:	6a83      	ldr	r3, [r0, #40]	; 0x28
    5cc2:	2b00      	cmp	r3, #0
    5cc4:	d000      	beq.n	5cc8 <exit+0x1c>
    5cc6:	4798      	blx	r3
    5cc8:	1c20      	adds	r0, r4, #0
    5cca:	f7fc ff6f 	bl	2bac <_exit>
    5cce:	46c0      	nop			; (mov r8, r8)
    5cd0:	00000000 	.word	0x00000000
    5cd4:	0000e074 	.word	0x0000e074

00005cd8 <_fclose_r>:
    5cd8:	b570      	push	{r4, r5, r6, lr}
    5cda:	1c05      	adds	r5, r0, #0
    5cdc:	1e0c      	subs	r4, r1, #0
    5cde:	d101      	bne.n	5ce4 <_fclose_r+0xc>
    5ce0:	2000      	movs	r0, #0
    5ce2:	e049      	b.n	5d78 <_fclose_r+0xa0>
    5ce4:	2800      	cmp	r0, #0
    5ce6:	d004      	beq.n	5cf2 <_fclose_r+0x1a>
    5ce8:	6983      	ldr	r3, [r0, #24]
    5cea:	2b00      	cmp	r3, #0
    5cec:	d101      	bne.n	5cf2 <_fclose_r+0x1a>
    5cee:	f000 f999 	bl	6024 <__sinit>
    5cf2:	4b22      	ldr	r3, [pc, #136]	; (5d7c <_fclose_r+0xa4>)
    5cf4:	429c      	cmp	r4, r3
    5cf6:	d101      	bne.n	5cfc <_fclose_r+0x24>
    5cf8:	686c      	ldr	r4, [r5, #4]
    5cfa:	e008      	b.n	5d0e <_fclose_r+0x36>
    5cfc:	4b20      	ldr	r3, [pc, #128]	; (5d80 <_fclose_r+0xa8>)
    5cfe:	429c      	cmp	r4, r3
    5d00:	d101      	bne.n	5d06 <_fclose_r+0x2e>
    5d02:	68ac      	ldr	r4, [r5, #8]
    5d04:	e003      	b.n	5d0e <_fclose_r+0x36>
    5d06:	4b1f      	ldr	r3, [pc, #124]	; (5d84 <_fclose_r+0xac>)
    5d08:	429c      	cmp	r4, r3
    5d0a:	d100      	bne.n	5d0e <_fclose_r+0x36>
    5d0c:	68ec      	ldr	r4, [r5, #12]
    5d0e:	220c      	movs	r2, #12
    5d10:	5ea3      	ldrsh	r3, [r4, r2]
    5d12:	2b00      	cmp	r3, #0
    5d14:	d0e4      	beq.n	5ce0 <_fclose_r+0x8>
    5d16:	1c28      	adds	r0, r5, #0
    5d18:	1c21      	adds	r1, r4, #0
    5d1a:	f000 f83f 	bl	5d9c <__sflush_r>
    5d1e:	6b23      	ldr	r3, [r4, #48]	; 0x30
    5d20:	1c06      	adds	r6, r0, #0
    5d22:	2b00      	cmp	r3, #0
    5d24:	d006      	beq.n	5d34 <_fclose_r+0x5c>
    5d26:	1c28      	adds	r0, r5, #0
    5d28:	6a21      	ldr	r1, [r4, #32]
    5d2a:	4798      	blx	r3
    5d2c:	2800      	cmp	r0, #0
    5d2e:	da01      	bge.n	5d34 <_fclose_r+0x5c>
    5d30:	2601      	movs	r6, #1
    5d32:	4276      	negs	r6, r6
    5d34:	89a3      	ldrh	r3, [r4, #12]
    5d36:	061b      	lsls	r3, r3, #24
    5d38:	d503      	bpl.n	5d42 <_fclose_r+0x6a>
    5d3a:	1c28      	adds	r0, r5, #0
    5d3c:	6921      	ldr	r1, [r4, #16]
    5d3e:	f000 fbe7 	bl	6510 <_free_r>
    5d42:	6b61      	ldr	r1, [r4, #52]	; 0x34
    5d44:	2900      	cmp	r1, #0
    5d46:	d008      	beq.n	5d5a <_fclose_r+0x82>
    5d48:	1c23      	adds	r3, r4, #0
    5d4a:	3344      	adds	r3, #68	; 0x44
    5d4c:	4299      	cmp	r1, r3
    5d4e:	d002      	beq.n	5d56 <_fclose_r+0x7e>
    5d50:	1c28      	adds	r0, r5, #0
    5d52:	f000 fbdd 	bl	6510 <_free_r>
    5d56:	2300      	movs	r3, #0
    5d58:	6363      	str	r3, [r4, #52]	; 0x34
    5d5a:	6ca1      	ldr	r1, [r4, #72]	; 0x48
    5d5c:	2900      	cmp	r1, #0
    5d5e:	d004      	beq.n	5d6a <_fclose_r+0x92>
    5d60:	1c28      	adds	r0, r5, #0
    5d62:	f000 fbd5 	bl	6510 <_free_r>
    5d66:	2300      	movs	r3, #0
    5d68:	64a3      	str	r3, [r4, #72]	; 0x48
    5d6a:	f000 f9cb 	bl	6104 <__sfp_lock_acquire>
    5d6e:	2300      	movs	r3, #0
    5d70:	81a3      	strh	r3, [r4, #12]
    5d72:	f000 f9c8 	bl	6106 <__sfp_lock_release>
    5d76:	1c30      	adds	r0, r6, #0
    5d78:	bd70      	pop	{r4, r5, r6, pc}
    5d7a:	46c0      	nop			; (mov r8, r8)
    5d7c:	0000e010 	.word	0x0000e010
    5d80:	0000e030 	.word	0x0000e030
    5d84:	0000e050 	.word	0x0000e050

00005d88 <fclose>:
    5d88:	b508      	push	{r3, lr}
    5d8a:	4b03      	ldr	r3, [pc, #12]	; (5d98 <fclose+0x10>)
    5d8c:	1c01      	adds	r1, r0, #0
    5d8e:	6818      	ldr	r0, [r3, #0]
    5d90:	f7ff ffa2 	bl	5cd8 <_fclose_r>
    5d94:	bd08      	pop	{r3, pc}
    5d96:	46c0      	nop			; (mov r8, r8)
    5d98:	20000134 	.word	0x20000134

00005d9c <__sflush_r>:
    5d9c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    5d9e:	898a      	ldrh	r2, [r1, #12]
    5da0:	1c05      	adds	r5, r0, #0
    5da2:	1c0c      	adds	r4, r1, #0
    5da4:	0713      	lsls	r3, r2, #28
    5da6:	d45e      	bmi.n	5e66 <__sflush_r+0xca>
    5da8:	684b      	ldr	r3, [r1, #4]
    5daa:	2b00      	cmp	r3, #0
    5dac:	dc02      	bgt.n	5db4 <__sflush_r+0x18>
    5dae:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    5db0:	2b00      	cmp	r3, #0
    5db2:	dd1a      	ble.n	5dea <__sflush_r+0x4e>
    5db4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    5db6:	2f00      	cmp	r7, #0
    5db8:	d017      	beq.n	5dea <__sflush_r+0x4e>
    5dba:	2300      	movs	r3, #0
    5dbc:	682e      	ldr	r6, [r5, #0]
    5dbe:	602b      	str	r3, [r5, #0]
    5dc0:	2380      	movs	r3, #128	; 0x80
    5dc2:	015b      	lsls	r3, r3, #5
    5dc4:	401a      	ands	r2, r3
    5dc6:	d001      	beq.n	5dcc <__sflush_r+0x30>
    5dc8:	6d62      	ldr	r2, [r4, #84]	; 0x54
    5dca:	e015      	b.n	5df8 <__sflush_r+0x5c>
    5dcc:	1c28      	adds	r0, r5, #0
    5dce:	6a21      	ldr	r1, [r4, #32]
    5dd0:	2301      	movs	r3, #1
    5dd2:	47b8      	blx	r7
    5dd4:	1c02      	adds	r2, r0, #0
    5dd6:	1c43      	adds	r3, r0, #1
    5dd8:	d10e      	bne.n	5df8 <__sflush_r+0x5c>
    5dda:	682b      	ldr	r3, [r5, #0]
    5ddc:	2b00      	cmp	r3, #0
    5dde:	d00b      	beq.n	5df8 <__sflush_r+0x5c>
    5de0:	2b1d      	cmp	r3, #29
    5de2:	d001      	beq.n	5de8 <__sflush_r+0x4c>
    5de4:	2b16      	cmp	r3, #22
    5de6:	d102      	bne.n	5dee <__sflush_r+0x52>
    5de8:	602e      	str	r6, [r5, #0]
    5dea:	2000      	movs	r0, #0
    5dec:	e05e      	b.n	5eac <__sflush_r+0x110>
    5dee:	2140      	movs	r1, #64	; 0x40
    5df0:	89a3      	ldrh	r3, [r4, #12]
    5df2:	430b      	orrs	r3, r1
    5df4:	81a3      	strh	r3, [r4, #12]
    5df6:	e059      	b.n	5eac <__sflush_r+0x110>
    5df8:	89a3      	ldrh	r3, [r4, #12]
    5dfa:	075b      	lsls	r3, r3, #29
    5dfc:	d506      	bpl.n	5e0c <__sflush_r+0x70>
    5dfe:	6863      	ldr	r3, [r4, #4]
    5e00:	1ad2      	subs	r2, r2, r3
    5e02:	6b63      	ldr	r3, [r4, #52]	; 0x34
    5e04:	2b00      	cmp	r3, #0
    5e06:	d001      	beq.n	5e0c <__sflush_r+0x70>
    5e08:	6c23      	ldr	r3, [r4, #64]	; 0x40
    5e0a:	1ad2      	subs	r2, r2, r3
    5e0c:	2300      	movs	r3, #0
    5e0e:	1c28      	adds	r0, r5, #0
    5e10:	6a21      	ldr	r1, [r4, #32]
    5e12:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    5e14:	47b8      	blx	r7
    5e16:	89a3      	ldrh	r3, [r4, #12]
    5e18:	1c42      	adds	r2, r0, #1
    5e1a:	d106      	bne.n	5e2a <__sflush_r+0x8e>
    5e1c:	682a      	ldr	r2, [r5, #0]
    5e1e:	2a00      	cmp	r2, #0
    5e20:	d003      	beq.n	5e2a <__sflush_r+0x8e>
    5e22:	2a1d      	cmp	r2, #29
    5e24:	d001      	beq.n	5e2a <__sflush_r+0x8e>
    5e26:	2a16      	cmp	r2, #22
    5e28:	d119      	bne.n	5e5e <__sflush_r+0xc2>
    5e2a:	2200      	movs	r2, #0
    5e2c:	6062      	str	r2, [r4, #4]
    5e2e:	6922      	ldr	r2, [r4, #16]
    5e30:	6022      	str	r2, [r4, #0]
    5e32:	04db      	lsls	r3, r3, #19
    5e34:	d505      	bpl.n	5e42 <__sflush_r+0xa6>
    5e36:	1c43      	adds	r3, r0, #1
    5e38:	d102      	bne.n	5e40 <__sflush_r+0xa4>
    5e3a:	682b      	ldr	r3, [r5, #0]
    5e3c:	2b00      	cmp	r3, #0
    5e3e:	d100      	bne.n	5e42 <__sflush_r+0xa6>
    5e40:	6560      	str	r0, [r4, #84]	; 0x54
    5e42:	6b61      	ldr	r1, [r4, #52]	; 0x34
    5e44:	602e      	str	r6, [r5, #0]
    5e46:	2900      	cmp	r1, #0
    5e48:	d0cf      	beq.n	5dea <__sflush_r+0x4e>
    5e4a:	1c23      	adds	r3, r4, #0
    5e4c:	3344      	adds	r3, #68	; 0x44
    5e4e:	4299      	cmp	r1, r3
    5e50:	d002      	beq.n	5e58 <__sflush_r+0xbc>
    5e52:	1c28      	adds	r0, r5, #0
    5e54:	f000 fb5c 	bl	6510 <_free_r>
    5e58:	2000      	movs	r0, #0
    5e5a:	6360      	str	r0, [r4, #52]	; 0x34
    5e5c:	e026      	b.n	5eac <__sflush_r+0x110>
    5e5e:	2240      	movs	r2, #64	; 0x40
    5e60:	4313      	orrs	r3, r2
    5e62:	81a3      	strh	r3, [r4, #12]
    5e64:	e022      	b.n	5eac <__sflush_r+0x110>
    5e66:	690f      	ldr	r7, [r1, #16]
    5e68:	2f00      	cmp	r7, #0
    5e6a:	d0be      	beq.n	5dea <__sflush_r+0x4e>
    5e6c:	680b      	ldr	r3, [r1, #0]
    5e6e:	600f      	str	r7, [r1, #0]
    5e70:	1bdb      	subs	r3, r3, r7
    5e72:	9301      	str	r3, [sp, #4]
    5e74:	2300      	movs	r3, #0
    5e76:	0792      	lsls	r2, r2, #30
    5e78:	d100      	bne.n	5e7c <__sflush_r+0xe0>
    5e7a:	694b      	ldr	r3, [r1, #20]
    5e7c:	60a3      	str	r3, [r4, #8]
    5e7e:	9b01      	ldr	r3, [sp, #4]
    5e80:	2b00      	cmp	r3, #0
    5e82:	ddb2      	ble.n	5dea <__sflush_r+0x4e>
    5e84:	1c28      	adds	r0, r5, #0
    5e86:	6a21      	ldr	r1, [r4, #32]
    5e88:	1c3a      	adds	r2, r7, #0
    5e8a:	9b01      	ldr	r3, [sp, #4]
    5e8c:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    5e8e:	47b0      	blx	r6
    5e90:	2800      	cmp	r0, #0
    5e92:	dc06      	bgt.n	5ea2 <__sflush_r+0x106>
    5e94:	2240      	movs	r2, #64	; 0x40
    5e96:	2001      	movs	r0, #1
    5e98:	89a3      	ldrh	r3, [r4, #12]
    5e9a:	4240      	negs	r0, r0
    5e9c:	4313      	orrs	r3, r2
    5e9e:	81a3      	strh	r3, [r4, #12]
    5ea0:	e004      	b.n	5eac <__sflush_r+0x110>
    5ea2:	9b01      	ldr	r3, [sp, #4]
    5ea4:	183f      	adds	r7, r7, r0
    5ea6:	1a1b      	subs	r3, r3, r0
    5ea8:	9301      	str	r3, [sp, #4]
    5eaa:	e7e8      	b.n	5e7e <__sflush_r+0xe2>
    5eac:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

00005eb0 <_fflush_r>:
    5eb0:	b538      	push	{r3, r4, r5, lr}
    5eb2:	690b      	ldr	r3, [r1, #16]
    5eb4:	1c05      	adds	r5, r0, #0
    5eb6:	1c0c      	adds	r4, r1, #0
    5eb8:	2b00      	cmp	r3, #0
    5eba:	d101      	bne.n	5ec0 <_fflush_r+0x10>
    5ebc:	2000      	movs	r0, #0
    5ebe:	e01c      	b.n	5efa <_fflush_r+0x4a>
    5ec0:	2800      	cmp	r0, #0
    5ec2:	d004      	beq.n	5ece <_fflush_r+0x1e>
    5ec4:	6983      	ldr	r3, [r0, #24]
    5ec6:	2b00      	cmp	r3, #0
    5ec8:	d101      	bne.n	5ece <_fflush_r+0x1e>
    5eca:	f000 f8ab 	bl	6024 <__sinit>
    5ece:	4b0b      	ldr	r3, [pc, #44]	; (5efc <_fflush_r+0x4c>)
    5ed0:	429c      	cmp	r4, r3
    5ed2:	d101      	bne.n	5ed8 <_fflush_r+0x28>
    5ed4:	686c      	ldr	r4, [r5, #4]
    5ed6:	e008      	b.n	5eea <_fflush_r+0x3a>
    5ed8:	4b09      	ldr	r3, [pc, #36]	; (5f00 <_fflush_r+0x50>)
    5eda:	429c      	cmp	r4, r3
    5edc:	d101      	bne.n	5ee2 <_fflush_r+0x32>
    5ede:	68ac      	ldr	r4, [r5, #8]
    5ee0:	e003      	b.n	5eea <_fflush_r+0x3a>
    5ee2:	4b08      	ldr	r3, [pc, #32]	; (5f04 <_fflush_r+0x54>)
    5ee4:	429c      	cmp	r4, r3
    5ee6:	d100      	bne.n	5eea <_fflush_r+0x3a>
    5ee8:	68ec      	ldr	r4, [r5, #12]
    5eea:	220c      	movs	r2, #12
    5eec:	5ea3      	ldrsh	r3, [r4, r2]
    5eee:	2b00      	cmp	r3, #0
    5ef0:	d0e4      	beq.n	5ebc <_fflush_r+0xc>
    5ef2:	1c28      	adds	r0, r5, #0
    5ef4:	1c21      	adds	r1, r4, #0
    5ef6:	f7ff ff51 	bl	5d9c <__sflush_r>
    5efa:	bd38      	pop	{r3, r4, r5, pc}
    5efc:	0000e010 	.word	0x0000e010
    5f00:	0000e030 	.word	0x0000e030
    5f04:	0000e050 	.word	0x0000e050

00005f08 <fflush>:
    5f08:	b508      	push	{r3, lr}
    5f0a:	1e01      	subs	r1, r0, #0
    5f0c:	d105      	bne.n	5f1a <fflush+0x12>
    5f0e:	4b05      	ldr	r3, [pc, #20]	; (5f24 <fflush+0x1c>)
    5f10:	4905      	ldr	r1, [pc, #20]	; (5f28 <fflush+0x20>)
    5f12:	6818      	ldr	r0, [r3, #0]
    5f14:	f000 fa2c 	bl	6370 <_fwalk_reent>
    5f18:	e003      	b.n	5f22 <fflush+0x1a>
    5f1a:	4b04      	ldr	r3, [pc, #16]	; (5f2c <fflush+0x24>)
    5f1c:	6818      	ldr	r0, [r3, #0]
    5f1e:	f7ff ffc7 	bl	5eb0 <_fflush_r>
    5f22:	bd08      	pop	{r3, pc}
    5f24:	0000e074 	.word	0x0000e074
    5f28:	00005eb1 	.word	0x00005eb1
    5f2c:	20000134 	.word	0x20000134

00005f30 <_fgetc_r>:
    5f30:	b538      	push	{r3, r4, r5, lr}
    5f32:	1c05      	adds	r5, r0, #0
    5f34:	1c0c      	adds	r4, r1, #0
    5f36:	2800      	cmp	r0, #0
    5f38:	d004      	beq.n	5f44 <_fgetc_r+0x14>
    5f3a:	6983      	ldr	r3, [r0, #24]
    5f3c:	2b00      	cmp	r3, #0
    5f3e:	d101      	bne.n	5f44 <_fgetc_r+0x14>
    5f40:	f000 f870 	bl	6024 <__sinit>
    5f44:	4b0e      	ldr	r3, [pc, #56]	; (5f80 <_fgetc_r+0x50>)
    5f46:	429c      	cmp	r4, r3
    5f48:	d101      	bne.n	5f4e <_fgetc_r+0x1e>
    5f4a:	686c      	ldr	r4, [r5, #4]
    5f4c:	e008      	b.n	5f60 <_fgetc_r+0x30>
    5f4e:	4b0d      	ldr	r3, [pc, #52]	; (5f84 <_fgetc_r+0x54>)
    5f50:	429c      	cmp	r4, r3
    5f52:	d101      	bne.n	5f58 <_fgetc_r+0x28>
    5f54:	68ac      	ldr	r4, [r5, #8]
    5f56:	e003      	b.n	5f60 <_fgetc_r+0x30>
    5f58:	4b0b      	ldr	r3, [pc, #44]	; (5f88 <_fgetc_r+0x58>)
    5f5a:	429c      	cmp	r4, r3
    5f5c:	d100      	bne.n	5f60 <_fgetc_r+0x30>
    5f5e:	68ec      	ldr	r4, [r5, #12]
    5f60:	6863      	ldr	r3, [r4, #4]
    5f62:	3b01      	subs	r3, #1
    5f64:	6063      	str	r3, [r4, #4]
    5f66:	2b00      	cmp	r3, #0
    5f68:	da04      	bge.n	5f74 <_fgetc_r+0x44>
    5f6a:	1c28      	adds	r0, r5, #0
    5f6c:	1c21      	adds	r1, r4, #0
    5f6e:	f001 fd3b 	bl	79e8 <__srget_r>
    5f72:	e003      	b.n	5f7c <_fgetc_r+0x4c>
    5f74:	6823      	ldr	r3, [r4, #0]
    5f76:	1c5a      	adds	r2, r3, #1
    5f78:	6022      	str	r2, [r4, #0]
    5f7a:	7818      	ldrb	r0, [r3, #0]
    5f7c:	bd38      	pop	{r3, r4, r5, pc}
    5f7e:	46c0      	nop			; (mov r8, r8)
    5f80:	0000e010 	.word	0x0000e010
    5f84:	0000e030 	.word	0x0000e030
    5f88:	0000e050 	.word	0x0000e050

00005f8c <fgetc>:
    5f8c:	b508      	push	{r3, lr}
    5f8e:	4b03      	ldr	r3, [pc, #12]	; (5f9c <fgetc+0x10>)
    5f90:	1c01      	adds	r1, r0, #0
    5f92:	6818      	ldr	r0, [r3, #0]
    5f94:	f7ff ffcc 	bl	5f30 <_fgetc_r>
    5f98:	bd08      	pop	{r3, pc}
    5f9a:	46c0      	nop			; (mov r8, r8)
    5f9c:	20000134 	.word	0x20000134

00005fa0 <_cleanup_r>:
    5fa0:	b508      	push	{r3, lr}
    5fa2:	4902      	ldr	r1, [pc, #8]	; (5fac <_cleanup_r+0xc>)
    5fa4:	f000 f9e4 	bl	6370 <_fwalk_reent>
    5fa8:	bd08      	pop	{r3, pc}
    5faa:	46c0      	nop			; (mov r8, r8)
    5fac:	00005eb1 	.word	0x00005eb1

00005fb0 <std.isra.0>:
    5fb0:	2300      	movs	r3, #0
    5fb2:	b510      	push	{r4, lr}
    5fb4:	1c04      	adds	r4, r0, #0
    5fb6:	6003      	str	r3, [r0, #0]
    5fb8:	6043      	str	r3, [r0, #4]
    5fba:	6083      	str	r3, [r0, #8]
    5fbc:	8181      	strh	r1, [r0, #12]
    5fbe:	6643      	str	r3, [r0, #100]	; 0x64
    5fc0:	81c2      	strh	r2, [r0, #14]
    5fc2:	6103      	str	r3, [r0, #16]
    5fc4:	6143      	str	r3, [r0, #20]
    5fc6:	6183      	str	r3, [r0, #24]
    5fc8:	1c19      	adds	r1, r3, #0
    5fca:	2208      	movs	r2, #8
    5fcc:	305c      	adds	r0, #92	; 0x5c
    5fce:	f000 fa97 	bl	6500 <memset>
    5fd2:	4b05      	ldr	r3, [pc, #20]	; (5fe8 <std.isra.0+0x38>)
    5fd4:	6224      	str	r4, [r4, #32]
    5fd6:	6263      	str	r3, [r4, #36]	; 0x24
    5fd8:	4b04      	ldr	r3, [pc, #16]	; (5fec <std.isra.0+0x3c>)
    5fda:	62a3      	str	r3, [r4, #40]	; 0x28
    5fdc:	4b04      	ldr	r3, [pc, #16]	; (5ff0 <std.isra.0+0x40>)
    5fde:	62e3      	str	r3, [r4, #44]	; 0x2c
    5fe0:	4b04      	ldr	r3, [pc, #16]	; (5ff4 <std.isra.0+0x44>)
    5fe2:	6323      	str	r3, [r4, #48]	; 0x30
    5fe4:	bd10      	pop	{r4, pc}
    5fe6:	46c0      	nop			; (mov r8, r8)
    5fe8:	00007d71 	.word	0x00007d71
    5fec:	00007d9d 	.word	0x00007d9d
    5ff0:	00007dd5 	.word	0x00007dd5
    5ff4:	00007e01 	.word	0x00007e01

00005ff8 <__sfmoreglue>:
    5ff8:	b570      	push	{r4, r5, r6, lr}
    5ffa:	2568      	movs	r5, #104	; 0x68
    5ffc:	1e4b      	subs	r3, r1, #1
    5ffe:	435d      	muls	r5, r3
    6000:	1c0e      	adds	r6, r1, #0
    6002:	1c29      	adds	r1, r5, #0
    6004:	3174      	adds	r1, #116	; 0x74
    6006:	f000 fac9 	bl	659c <_malloc_r>
    600a:	1e04      	subs	r4, r0, #0
    600c:	d008      	beq.n	6020 <__sfmoreglue+0x28>
    600e:	2100      	movs	r1, #0
    6010:	1c2a      	adds	r2, r5, #0
    6012:	6001      	str	r1, [r0, #0]
    6014:	6046      	str	r6, [r0, #4]
    6016:	300c      	adds	r0, #12
    6018:	60a0      	str	r0, [r4, #8]
    601a:	3268      	adds	r2, #104	; 0x68
    601c:	f000 fa70 	bl	6500 <memset>
    6020:	1c20      	adds	r0, r4, #0
    6022:	bd70      	pop	{r4, r5, r6, pc}

00006024 <__sinit>:
    6024:	6983      	ldr	r3, [r0, #24]
    6026:	b513      	push	{r0, r1, r4, lr}
    6028:	2b00      	cmp	r3, #0
    602a:	d128      	bne.n	607e <__sinit+0x5a>
    602c:	6483      	str	r3, [r0, #72]	; 0x48
    602e:	64c3      	str	r3, [r0, #76]	; 0x4c
    6030:	6503      	str	r3, [r0, #80]	; 0x50
    6032:	4b13      	ldr	r3, [pc, #76]	; (6080 <__sinit+0x5c>)
    6034:	4a13      	ldr	r2, [pc, #76]	; (6084 <__sinit+0x60>)
    6036:	681b      	ldr	r3, [r3, #0]
    6038:	6282      	str	r2, [r0, #40]	; 0x28
    603a:	9301      	str	r3, [sp, #4]
    603c:	4298      	cmp	r0, r3
    603e:	d101      	bne.n	6044 <__sinit+0x20>
    6040:	2301      	movs	r3, #1
    6042:	6183      	str	r3, [r0, #24]
    6044:	1c04      	adds	r4, r0, #0
    6046:	f000 f81f 	bl	6088 <__sfp>
    604a:	6060      	str	r0, [r4, #4]
    604c:	1c20      	adds	r0, r4, #0
    604e:	f000 f81b 	bl	6088 <__sfp>
    6052:	60a0      	str	r0, [r4, #8]
    6054:	1c20      	adds	r0, r4, #0
    6056:	f000 f817 	bl	6088 <__sfp>
    605a:	2104      	movs	r1, #4
    605c:	60e0      	str	r0, [r4, #12]
    605e:	2200      	movs	r2, #0
    6060:	6860      	ldr	r0, [r4, #4]
    6062:	f7ff ffa5 	bl	5fb0 <std.isra.0>
    6066:	68a0      	ldr	r0, [r4, #8]
    6068:	2109      	movs	r1, #9
    606a:	2201      	movs	r2, #1
    606c:	f7ff ffa0 	bl	5fb0 <std.isra.0>
    6070:	68e0      	ldr	r0, [r4, #12]
    6072:	2112      	movs	r1, #18
    6074:	2202      	movs	r2, #2
    6076:	f7ff ff9b 	bl	5fb0 <std.isra.0>
    607a:	2301      	movs	r3, #1
    607c:	61a3      	str	r3, [r4, #24]
    607e:	bd13      	pop	{r0, r1, r4, pc}
    6080:	0000e074 	.word	0x0000e074
    6084:	00005fa1 	.word	0x00005fa1

00006088 <__sfp>:
    6088:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    608a:	4b1d      	ldr	r3, [pc, #116]	; (6100 <__sfp+0x78>)
    608c:	1c06      	adds	r6, r0, #0
    608e:	681d      	ldr	r5, [r3, #0]
    6090:	69ab      	ldr	r3, [r5, #24]
    6092:	2b00      	cmp	r3, #0
    6094:	d102      	bne.n	609c <__sfp+0x14>
    6096:	1c28      	adds	r0, r5, #0
    6098:	f7ff ffc4 	bl	6024 <__sinit>
    609c:	3548      	adds	r5, #72	; 0x48
    609e:	68ac      	ldr	r4, [r5, #8]
    60a0:	686b      	ldr	r3, [r5, #4]
    60a2:	3b01      	subs	r3, #1
    60a4:	d405      	bmi.n	60b2 <__sfp+0x2a>
    60a6:	220c      	movs	r2, #12
    60a8:	5ea7      	ldrsh	r7, [r4, r2]
    60aa:	2f00      	cmp	r7, #0
    60ac:	d010      	beq.n	60d0 <__sfp+0x48>
    60ae:	3468      	adds	r4, #104	; 0x68
    60b0:	e7f7      	b.n	60a2 <__sfp+0x1a>
    60b2:	682b      	ldr	r3, [r5, #0]
    60b4:	2b00      	cmp	r3, #0
    60b6:	d106      	bne.n	60c6 <__sfp+0x3e>
    60b8:	1c30      	adds	r0, r6, #0
    60ba:	2104      	movs	r1, #4
    60bc:	f7ff ff9c 	bl	5ff8 <__sfmoreglue>
    60c0:	6028      	str	r0, [r5, #0]
    60c2:	2800      	cmp	r0, #0
    60c4:	d001      	beq.n	60ca <__sfp+0x42>
    60c6:	682d      	ldr	r5, [r5, #0]
    60c8:	e7e9      	b.n	609e <__sfp+0x16>
    60ca:	230c      	movs	r3, #12
    60cc:	6033      	str	r3, [r6, #0]
    60ce:	e016      	b.n	60fe <__sfp+0x76>
    60d0:	2301      	movs	r3, #1
    60d2:	1c20      	adds	r0, r4, #0
    60d4:	425b      	negs	r3, r3
    60d6:	81e3      	strh	r3, [r4, #14]
    60d8:	3302      	adds	r3, #2
    60da:	81a3      	strh	r3, [r4, #12]
    60dc:	6667      	str	r7, [r4, #100]	; 0x64
    60de:	6027      	str	r7, [r4, #0]
    60e0:	60a7      	str	r7, [r4, #8]
    60e2:	6067      	str	r7, [r4, #4]
    60e4:	6127      	str	r7, [r4, #16]
    60e6:	6167      	str	r7, [r4, #20]
    60e8:	61a7      	str	r7, [r4, #24]
    60ea:	305c      	adds	r0, #92	; 0x5c
    60ec:	1c39      	adds	r1, r7, #0
    60ee:	2208      	movs	r2, #8
    60f0:	f000 fa06 	bl	6500 <memset>
    60f4:	1c20      	adds	r0, r4, #0
    60f6:	6367      	str	r7, [r4, #52]	; 0x34
    60f8:	63a7      	str	r7, [r4, #56]	; 0x38
    60fa:	64a7      	str	r7, [r4, #72]	; 0x48
    60fc:	64e7      	str	r7, [r4, #76]	; 0x4c
    60fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6100:	0000e074 	.word	0x0000e074

00006104 <__sfp_lock_acquire>:
    6104:	4770      	bx	lr

00006106 <__sfp_lock_release>:
    6106:	4770      	bx	lr

00006108 <_fopen_r>:
    6108:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    610a:	1c0f      	adds	r7, r1, #0
    610c:	1c11      	adds	r1, r2, #0
    610e:	aa01      	add	r2, sp, #4
    6110:	1c05      	adds	r5, r0, #0
    6112:	f003 fdc3 	bl	9c9c <__sflags>
    6116:	1e06      	subs	r6, r0, #0
    6118:	d101      	bne.n	611e <_fopen_r+0x16>
    611a:	2400      	movs	r4, #0
    611c:	e027      	b.n	616e <_fopen_r+0x66>
    611e:	1c28      	adds	r0, r5, #0
    6120:	f7ff ffb2 	bl	6088 <__sfp>
    6124:	1e04      	subs	r4, r0, #0
    6126:	d0f8      	beq.n	611a <_fopen_r+0x12>
    6128:	23db      	movs	r3, #219	; 0xdb
    612a:	1c28      	adds	r0, r5, #0
    612c:	1c39      	adds	r1, r7, #0
    612e:	9a01      	ldr	r2, [sp, #4]
    6130:	005b      	lsls	r3, r3, #1
    6132:	f001 fb6d 	bl	7810 <_open_r>
    6136:	2800      	cmp	r0, #0
    6138:	da06      	bge.n	6148 <_fopen_r+0x40>
    613a:	2500      	movs	r5, #0
    613c:	f7ff ffe2 	bl	6104 <__sfp_lock_acquire>
    6140:	81a5      	strh	r5, [r4, #12]
    6142:	f7ff ffe0 	bl	6106 <__sfp_lock_release>
    6146:	e7e8      	b.n	611a <_fopen_r+0x12>
    6148:	4b0a      	ldr	r3, [pc, #40]	; (6174 <_fopen_r+0x6c>)
    614a:	81e0      	strh	r0, [r4, #14]
    614c:	6263      	str	r3, [r4, #36]	; 0x24
    614e:	4b0a      	ldr	r3, [pc, #40]	; (6178 <_fopen_r+0x70>)
    6150:	81a6      	strh	r6, [r4, #12]
    6152:	62a3      	str	r3, [r4, #40]	; 0x28
    6154:	4b09      	ldr	r3, [pc, #36]	; (617c <_fopen_r+0x74>)
    6156:	6224      	str	r4, [r4, #32]
    6158:	62e3      	str	r3, [r4, #44]	; 0x2c
    615a:	4b09      	ldr	r3, [pc, #36]	; (6180 <_fopen_r+0x78>)
    615c:	6323      	str	r3, [r4, #48]	; 0x30
    615e:	05f3      	lsls	r3, r6, #23
    6160:	d505      	bpl.n	616e <_fopen_r+0x66>
    6162:	1c28      	adds	r0, r5, #0
    6164:	1c21      	adds	r1, r4, #0
    6166:	2200      	movs	r2, #0
    6168:	2302      	movs	r3, #2
    616a:	f000 f849 	bl	6200 <_fseek_r>
    616e:	1c20      	adds	r0, r4, #0
    6170:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    6172:	46c0      	nop			; (mov r8, r8)
    6174:	00007d71 	.word	0x00007d71
    6178:	00007d9d 	.word	0x00007d9d
    617c:	00007dd5 	.word	0x00007dd5
    6180:	00007e01 	.word	0x00007e01

00006184 <fopen>:
    6184:	b508      	push	{r3, lr}
    6186:	1c03      	adds	r3, r0, #0
    6188:	1c0a      	adds	r2, r1, #0
    618a:	4903      	ldr	r1, [pc, #12]	; (6198 <fopen+0x14>)
    618c:	6808      	ldr	r0, [r1, #0]
    618e:	1c19      	adds	r1, r3, #0
    6190:	f7ff ffba 	bl	6108 <_fopen_r>
    6194:	bd08      	pop	{r3, pc}
    6196:	46c0      	nop			; (mov r8, r8)
    6198:	20000134 	.word	0x20000134

0000619c <_fputc_r>:
    619c:	b570      	push	{r4, r5, r6, lr}
    619e:	1c05      	adds	r5, r0, #0
    61a0:	1c0e      	adds	r6, r1, #0
    61a2:	1c14      	adds	r4, r2, #0
    61a4:	2800      	cmp	r0, #0
    61a6:	d004      	beq.n	61b2 <_fputc_r+0x16>
    61a8:	6983      	ldr	r3, [r0, #24]
    61aa:	2b00      	cmp	r3, #0
    61ac:	d101      	bne.n	61b2 <_fputc_r+0x16>
    61ae:	f7ff ff39 	bl	6024 <__sinit>
    61b2:	4b0a      	ldr	r3, [pc, #40]	; (61dc <_fputc_r+0x40>)
    61b4:	429c      	cmp	r4, r3
    61b6:	d101      	bne.n	61bc <_fputc_r+0x20>
    61b8:	686c      	ldr	r4, [r5, #4]
    61ba:	e008      	b.n	61ce <_fputc_r+0x32>
    61bc:	4b08      	ldr	r3, [pc, #32]	; (61e0 <_fputc_r+0x44>)
    61be:	429c      	cmp	r4, r3
    61c0:	d101      	bne.n	61c6 <_fputc_r+0x2a>
    61c2:	68ac      	ldr	r4, [r5, #8]
    61c4:	e003      	b.n	61ce <_fputc_r+0x32>
    61c6:	4b07      	ldr	r3, [pc, #28]	; (61e4 <_fputc_r+0x48>)
    61c8:	429c      	cmp	r4, r3
    61ca:	d100      	bne.n	61ce <_fputc_r+0x32>
    61cc:	68ec      	ldr	r4, [r5, #12]
    61ce:	1c28      	adds	r0, r5, #0
    61d0:	1c31      	adds	r1, r6, #0
    61d2:	1c22      	adds	r2, r4, #0
    61d4:	f001 fb30 	bl	7838 <_putc_r>
    61d8:	bd70      	pop	{r4, r5, r6, pc}
    61da:	46c0      	nop			; (mov r8, r8)
    61dc:	0000e010 	.word	0x0000e010
    61e0:	0000e030 	.word	0x0000e030
    61e4:	0000e050 	.word	0x0000e050

000061e8 <fputc>:
    61e8:	b508      	push	{r3, lr}
    61ea:	1c03      	adds	r3, r0, #0
    61ec:	1c0a      	adds	r2, r1, #0
    61ee:	4903      	ldr	r1, [pc, #12]	; (61fc <fputc+0x14>)
    61f0:	6808      	ldr	r0, [r1, #0]
    61f2:	1c19      	adds	r1, r3, #0
    61f4:	f7ff ffd2 	bl	619c <_fputc_r>
    61f8:	bd08      	pop	{r3, pc}
    61fa:	46c0      	nop			; (mov r8, r8)
    61fc:	20000134 	.word	0x20000134

00006200 <_fseek_r>:
    6200:	b508      	push	{r3, lr}
    6202:	f000 f801 	bl	6208 <_fseeko_r>
    6206:	bd08      	pop	{r3, pc}

00006208 <_fseeko_r>:
    6208:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    620a:	1c05      	adds	r5, r0, #0
    620c:	1c0c      	adds	r4, r1, #0
    620e:	9201      	str	r2, [sp, #4]
    6210:	1c1e      	adds	r6, r3, #0
    6212:	2800      	cmp	r0, #0
    6214:	d004      	beq.n	6220 <_fseeko_r+0x18>
    6216:	6983      	ldr	r3, [r0, #24]
    6218:	2b00      	cmp	r3, #0
    621a:	d101      	bne.n	6220 <_fseeko_r+0x18>
    621c:	f7ff ff02 	bl	6024 <__sinit>
    6220:	4b41      	ldr	r3, [pc, #260]	; (6328 <_fseeko_r+0x120>)
    6222:	429c      	cmp	r4, r3
    6224:	d101      	bne.n	622a <_fseeko_r+0x22>
    6226:	686c      	ldr	r4, [r5, #4]
    6228:	e008      	b.n	623c <_fseeko_r+0x34>
    622a:	4b40      	ldr	r3, [pc, #256]	; (632c <_fseeko_r+0x124>)
    622c:	429c      	cmp	r4, r3
    622e:	d101      	bne.n	6234 <_fseeko_r+0x2c>
    6230:	68ac      	ldr	r4, [r5, #8]
    6232:	e003      	b.n	623c <_fseeko_r+0x34>
    6234:	4b3e      	ldr	r3, [pc, #248]	; (6330 <_fseeko_r+0x128>)
    6236:	429c      	cmp	r4, r3
    6238:	d100      	bne.n	623c <_fseeko_r+0x34>
    623a:	68ec      	ldr	r4, [r5, #12]
    623c:	2284      	movs	r2, #132	; 0x84
    623e:	89a3      	ldrh	r3, [r4, #12]
    6240:	0052      	lsls	r2, r2, #1
    6242:	4013      	ands	r3, r2
    6244:	4293      	cmp	r3, r2
    6246:	d103      	bne.n	6250 <_fseeko_r+0x48>
    6248:	1c28      	adds	r0, r5, #0
    624a:	1c21      	adds	r1, r4, #0
    624c:	f7ff fe30 	bl	5eb0 <_fflush_r>
    6250:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    6252:	9300      	str	r3, [sp, #0]
    6254:	2b00      	cmp	r3, #0
    6256:	d101      	bne.n	625c <_fseeko_r+0x54>
    6258:	331d      	adds	r3, #29
    625a:	e031      	b.n	62c0 <_fseeko_r+0xb8>
    625c:	2e01      	cmp	r6, #1
    625e:	d005      	beq.n	626c <_fseeko_r+0x64>
    6260:	2e02      	cmp	r6, #2
    6262:	d031      	beq.n	62c8 <_fseeko_r+0xc0>
    6264:	2316      	movs	r3, #22
    6266:	2e00      	cmp	r6, #0
    6268:	d12a      	bne.n	62c0 <_fseeko_r+0xb8>
    626a:	e02d      	b.n	62c8 <_fseeko_r+0xc0>
    626c:	1c28      	adds	r0, r5, #0
    626e:	1c21      	adds	r1, r4, #0
    6270:	f7ff fe1e 	bl	5eb0 <_fflush_r>
    6274:	2380      	movs	r3, #128	; 0x80
    6276:	89a2      	ldrh	r2, [r4, #12]
    6278:	015b      	lsls	r3, r3, #5
    627a:	401a      	ands	r2, r3
    627c:	d001      	beq.n	6282 <_fseeko_r+0x7a>
    627e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    6280:	e006      	b.n	6290 <_fseeko_r+0x88>
    6282:	1c33      	adds	r3, r6, #0
    6284:	1c28      	adds	r0, r5, #0
    6286:	6a21      	ldr	r1, [r4, #32]
    6288:	9e00      	ldr	r6, [sp, #0]
    628a:	47b0      	blx	r6
    628c:	1c43      	adds	r3, r0, #1
    628e:	d018      	beq.n	62c2 <_fseeko_r+0xba>
    6290:	89a3      	ldrh	r3, [r4, #12]
    6292:	075a      	lsls	r2, r3, #29
    6294:	d507      	bpl.n	62a6 <_fseeko_r+0x9e>
    6296:	6863      	ldr	r3, [r4, #4]
    6298:	1ac0      	subs	r0, r0, r3
    629a:	6b63      	ldr	r3, [r4, #52]	; 0x34
    629c:	2b00      	cmp	r3, #0
    629e:	d00a      	beq.n	62b6 <_fseeko_r+0xae>
    62a0:	6c23      	ldr	r3, [r4, #64]	; 0x40
    62a2:	1ac0      	subs	r0, r0, r3
    62a4:	e007      	b.n	62b6 <_fseeko_r+0xae>
    62a6:	071b      	lsls	r3, r3, #28
    62a8:	d505      	bpl.n	62b6 <_fseeko_r+0xae>
    62aa:	6823      	ldr	r3, [r4, #0]
    62ac:	2b00      	cmp	r3, #0
    62ae:	d002      	beq.n	62b6 <_fseeko_r+0xae>
    62b0:	6922      	ldr	r2, [r4, #16]
    62b2:	1a9b      	subs	r3, r3, r2
    62b4:	18c0      	adds	r0, r0, r3
    62b6:	9b01      	ldr	r3, [sp, #4]
    62b8:	2600      	movs	r6, #0
    62ba:	181b      	adds	r3, r3, r0
    62bc:	9301      	str	r3, [sp, #4]
    62be:	e003      	b.n	62c8 <_fseeko_r+0xc0>
    62c0:	602b      	str	r3, [r5, #0]
    62c2:	2701      	movs	r7, #1
    62c4:	427f      	negs	r7, r7
    62c6:	e02d      	b.n	6324 <_fseeko_r+0x11c>
    62c8:	6923      	ldr	r3, [r4, #16]
    62ca:	2b00      	cmp	r3, #0
    62cc:	d103      	bne.n	62d6 <_fseeko_r+0xce>
    62ce:	1c28      	adds	r0, r5, #0
    62d0:	1c21      	adds	r1, r4, #0
    62d2:	f000 f895 	bl	6400 <__smakebuf_r>
    62d6:	1c28      	adds	r0, r5, #0
    62d8:	1c21      	adds	r1, r4, #0
    62da:	f7ff fde9 	bl	5eb0 <_fflush_r>
    62de:	1e07      	subs	r7, r0, #0
    62e0:	d1ef      	bne.n	62c2 <_fseeko_r+0xba>
    62e2:	1c33      	adds	r3, r6, #0
    62e4:	1c28      	adds	r0, r5, #0
    62e6:	6a21      	ldr	r1, [r4, #32]
    62e8:	9a01      	ldr	r2, [sp, #4]
    62ea:	9e00      	ldr	r6, [sp, #0]
    62ec:	47b0      	blx	r6
    62ee:	1c43      	adds	r3, r0, #1
    62f0:	d0e7      	beq.n	62c2 <_fseeko_r+0xba>
    62f2:	6b61      	ldr	r1, [r4, #52]	; 0x34
    62f4:	2900      	cmp	r1, #0
    62f6:	d008      	beq.n	630a <_fseeko_r+0x102>
    62f8:	1c23      	adds	r3, r4, #0
    62fa:	3344      	adds	r3, #68	; 0x44
    62fc:	4299      	cmp	r1, r3
    62fe:	d002      	beq.n	6306 <_fseeko_r+0xfe>
    6300:	1c28      	adds	r0, r5, #0
    6302:	f000 f905 	bl	6510 <_free_r>
    6306:	2300      	movs	r3, #0
    6308:	6363      	str	r3, [r4, #52]	; 0x34
    630a:	2100      	movs	r1, #0
    630c:	1c20      	adds	r0, r4, #0
    630e:	6923      	ldr	r3, [r4, #16]
    6310:	89a2      	ldrh	r2, [r4, #12]
    6312:	6023      	str	r3, [r4, #0]
    6314:	4b07      	ldr	r3, [pc, #28]	; (6334 <_fseeko_r+0x12c>)
    6316:	6061      	str	r1, [r4, #4]
    6318:	4013      	ands	r3, r2
    631a:	81a3      	strh	r3, [r4, #12]
    631c:	305c      	adds	r0, #92	; 0x5c
    631e:	2208      	movs	r2, #8
    6320:	f000 f8ee 	bl	6500 <memset>
    6324:	1c38      	adds	r0, r7, #0
    6326:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    6328:	0000e010 	.word	0x0000e010
    632c:	0000e030 	.word	0x0000e030
    6330:	0000e050 	.word	0x0000e050
    6334:	fffff7df 	.word	0xfffff7df

00006338 <_fwalk>:
    6338:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    633a:	3048      	adds	r0, #72	; 0x48
    633c:	1c04      	adds	r4, r0, #0
    633e:	2600      	movs	r6, #0
    6340:	9101      	str	r1, [sp, #4]
    6342:	2c00      	cmp	r4, #0
    6344:	d012      	beq.n	636c <_fwalk+0x34>
    6346:	68a5      	ldr	r5, [r4, #8]
    6348:	6867      	ldr	r7, [r4, #4]
    634a:	3f01      	subs	r7, #1
    634c:	d40c      	bmi.n	6368 <_fwalk+0x30>
    634e:	89ab      	ldrh	r3, [r5, #12]
    6350:	2b01      	cmp	r3, #1
    6352:	d907      	bls.n	6364 <_fwalk+0x2c>
    6354:	220e      	movs	r2, #14
    6356:	5eab      	ldrsh	r3, [r5, r2]
    6358:	3301      	adds	r3, #1
    635a:	d003      	beq.n	6364 <_fwalk+0x2c>
    635c:	1c28      	adds	r0, r5, #0
    635e:	9b01      	ldr	r3, [sp, #4]
    6360:	4798      	blx	r3
    6362:	4306      	orrs	r6, r0
    6364:	3568      	adds	r5, #104	; 0x68
    6366:	e7f0      	b.n	634a <_fwalk+0x12>
    6368:	6824      	ldr	r4, [r4, #0]
    636a:	e7ea      	b.n	6342 <_fwalk+0xa>
    636c:	1c30      	adds	r0, r6, #0
    636e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

00006370 <_fwalk_reent>:
    6370:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    6372:	1c04      	adds	r4, r0, #0
    6374:	1c07      	adds	r7, r0, #0
    6376:	2600      	movs	r6, #0
    6378:	9101      	str	r1, [sp, #4]
    637a:	3448      	adds	r4, #72	; 0x48
    637c:	2c00      	cmp	r4, #0
    637e:	d016      	beq.n	63ae <_fwalk_reent+0x3e>
    6380:	6863      	ldr	r3, [r4, #4]
    6382:	68a5      	ldr	r5, [r4, #8]
    6384:	9300      	str	r3, [sp, #0]
    6386:	9b00      	ldr	r3, [sp, #0]
    6388:	3b01      	subs	r3, #1
    638a:	9300      	str	r3, [sp, #0]
    638c:	d40d      	bmi.n	63aa <_fwalk_reent+0x3a>
    638e:	89ab      	ldrh	r3, [r5, #12]
    6390:	2b01      	cmp	r3, #1
    6392:	d908      	bls.n	63a6 <_fwalk_reent+0x36>
    6394:	220e      	movs	r2, #14
    6396:	5eab      	ldrsh	r3, [r5, r2]
    6398:	3301      	adds	r3, #1
    639a:	d004      	beq.n	63a6 <_fwalk_reent+0x36>
    639c:	1c38      	adds	r0, r7, #0
    639e:	1c29      	adds	r1, r5, #0
    63a0:	9b01      	ldr	r3, [sp, #4]
    63a2:	4798      	blx	r3
    63a4:	4306      	orrs	r6, r0
    63a6:	3568      	adds	r5, #104	; 0x68
    63a8:	e7ed      	b.n	6386 <_fwalk_reent+0x16>
    63aa:	6824      	ldr	r4, [r4, #0]
    63ac:	e7e6      	b.n	637c <_fwalk_reent+0xc>
    63ae:	1c30      	adds	r0, r6, #0
    63b0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

000063b4 <__libc_init_array>:
    63b4:	4b0e      	ldr	r3, [pc, #56]	; (63f0 <__libc_init_array+0x3c>)
    63b6:	b570      	push	{r4, r5, r6, lr}
    63b8:	2500      	movs	r5, #0
    63ba:	1c1e      	adds	r6, r3, #0
    63bc:	4c0d      	ldr	r4, [pc, #52]	; (63f4 <__libc_init_array+0x40>)
    63be:	1ae4      	subs	r4, r4, r3
    63c0:	10a4      	asrs	r4, r4, #2
    63c2:	42a5      	cmp	r5, r4
    63c4:	d004      	beq.n	63d0 <__libc_init_array+0x1c>
    63c6:	00ab      	lsls	r3, r5, #2
    63c8:	58f3      	ldr	r3, [r6, r3]
    63ca:	4798      	blx	r3
    63cc:	3501      	adds	r5, #1
    63ce:	e7f8      	b.n	63c2 <__libc_init_array+0xe>
    63d0:	f008 f800 	bl	e3d4 <_init>
    63d4:	4b08      	ldr	r3, [pc, #32]	; (63f8 <__libc_init_array+0x44>)
    63d6:	2500      	movs	r5, #0
    63d8:	1c1e      	adds	r6, r3, #0
    63da:	4c08      	ldr	r4, [pc, #32]	; (63fc <__libc_init_array+0x48>)
    63dc:	1ae4      	subs	r4, r4, r3
    63de:	10a4      	asrs	r4, r4, #2
    63e0:	42a5      	cmp	r5, r4
    63e2:	d004      	beq.n	63ee <__libc_init_array+0x3a>
    63e4:	00ab      	lsls	r3, r5, #2
    63e6:	58f3      	ldr	r3, [r6, r3]
    63e8:	4798      	blx	r3
    63ea:	3501      	adds	r5, #1
    63ec:	e7f8      	b.n	63e0 <__libc_init_array+0x2c>
    63ee:	bd70      	pop	{r4, r5, r6, pc}
    63f0:	0000e3e0 	.word	0x0000e3e0
    63f4:	0000e3e0 	.word	0x0000e3e0
    63f8:	0000e3e0 	.word	0x0000e3e0
    63fc:	0000e3e8 	.word	0x0000e3e8

00006400 <__smakebuf_r>:
    6400:	b5f0      	push	{r4, r5, r6, r7, lr}
    6402:	898b      	ldrh	r3, [r1, #12]
    6404:	b091      	sub	sp, #68	; 0x44
    6406:	079b      	lsls	r3, r3, #30
    6408:	d506      	bpl.n	6418 <__smakebuf_r+0x18>
    640a:	1c0b      	adds	r3, r1, #0
    640c:	3347      	adds	r3, #71	; 0x47
    640e:	600b      	str	r3, [r1, #0]
    6410:	610b      	str	r3, [r1, #16]
    6412:	2301      	movs	r3, #1
    6414:	614b      	str	r3, [r1, #20]
    6416:	e045      	b.n	64a4 <__smakebuf_r+0xa4>
    6418:	1c0c      	adds	r4, r1, #0
    641a:	230e      	movs	r3, #14
    641c:	5ec9      	ldrsh	r1, [r1, r3]
    641e:	1c06      	adds	r6, r0, #0
    6420:	2900      	cmp	r1, #0
    6422:	da04      	bge.n	642e <__smakebuf_r+0x2e>
    6424:	2380      	movs	r3, #128	; 0x80
    6426:	89a5      	ldrh	r5, [r4, #12]
    6428:	401d      	ands	r5, r3
    642a:	d110      	bne.n	644e <__smakebuf_r+0x4e>
    642c:	e00c      	b.n	6448 <__smakebuf_r+0x48>
    642e:	aa01      	add	r2, sp, #4
    6430:	f003 fc6c 	bl	9d0c <_fstat_r>
    6434:	2800      	cmp	r0, #0
    6436:	dbf5      	blt.n	6424 <__smakebuf_r+0x24>
    6438:	23f0      	movs	r3, #240	; 0xf0
    643a:	9d02      	ldr	r5, [sp, #8]
    643c:	021b      	lsls	r3, r3, #8
    643e:	401d      	ands	r5, r3
    6440:	4b19      	ldr	r3, [pc, #100]	; (64a8 <__smakebuf_r+0xa8>)
    6442:	18ed      	adds	r5, r5, r3
    6444:	426b      	negs	r3, r5
    6446:	415d      	adcs	r5, r3
    6448:	2780      	movs	r7, #128	; 0x80
    644a:	00ff      	lsls	r7, r7, #3
    644c:	e001      	b.n	6452 <__smakebuf_r+0x52>
    644e:	2500      	movs	r5, #0
    6450:	2740      	movs	r7, #64	; 0x40
    6452:	1c30      	adds	r0, r6, #0
    6454:	1c39      	adds	r1, r7, #0
    6456:	f000 f8a1 	bl	659c <_malloc_r>
    645a:	2800      	cmp	r0, #0
    645c:	d10c      	bne.n	6478 <__smakebuf_r+0x78>
    645e:	89a3      	ldrh	r3, [r4, #12]
    6460:	059a      	lsls	r2, r3, #22
    6462:	d41f      	bmi.n	64a4 <__smakebuf_r+0xa4>
    6464:	2202      	movs	r2, #2
    6466:	4313      	orrs	r3, r2
    6468:	81a3      	strh	r3, [r4, #12]
    646a:	1c23      	adds	r3, r4, #0
    646c:	3347      	adds	r3, #71	; 0x47
    646e:	6023      	str	r3, [r4, #0]
    6470:	6123      	str	r3, [r4, #16]
    6472:	2301      	movs	r3, #1
    6474:	6163      	str	r3, [r4, #20]
    6476:	e015      	b.n	64a4 <__smakebuf_r+0xa4>
    6478:	2280      	movs	r2, #128	; 0x80
    647a:	4b0c      	ldr	r3, [pc, #48]	; (64ac <__smakebuf_r+0xac>)
    647c:	62b3      	str	r3, [r6, #40]	; 0x28
    647e:	89a3      	ldrh	r3, [r4, #12]
    6480:	6020      	str	r0, [r4, #0]
    6482:	4313      	orrs	r3, r2
    6484:	81a3      	strh	r3, [r4, #12]
    6486:	6120      	str	r0, [r4, #16]
    6488:	6167      	str	r7, [r4, #20]
    648a:	2d00      	cmp	r5, #0
    648c:	d00a      	beq.n	64a4 <__smakebuf_r+0xa4>
    648e:	230e      	movs	r3, #14
    6490:	5ee1      	ldrsh	r1, [r4, r3]
    6492:	1c30      	adds	r0, r6, #0
    6494:	f003 ff64 	bl	a360 <_isatty_r>
    6498:	2800      	cmp	r0, #0
    649a:	d003      	beq.n	64a4 <__smakebuf_r+0xa4>
    649c:	2201      	movs	r2, #1
    649e:	89a3      	ldrh	r3, [r4, #12]
    64a0:	4313      	orrs	r3, r2
    64a2:	81a3      	strh	r3, [r4, #12]
    64a4:	b011      	add	sp, #68	; 0x44
    64a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    64a8:	ffffe000 	.word	0xffffe000
    64ac:	00005fa1 	.word	0x00005fa1

000064b0 <malloc>:
    64b0:	b508      	push	{r3, lr}
    64b2:	4b03      	ldr	r3, [pc, #12]	; (64c0 <malloc+0x10>)
    64b4:	1c01      	adds	r1, r0, #0
    64b6:	6818      	ldr	r0, [r3, #0]
    64b8:	f000 f870 	bl	659c <_malloc_r>
    64bc:	bd08      	pop	{r3, pc}
    64be:	46c0      	nop			; (mov r8, r8)
    64c0:	20000134 	.word	0x20000134

000064c4 <free>:
    64c4:	b508      	push	{r3, lr}
    64c6:	4b03      	ldr	r3, [pc, #12]	; (64d4 <free+0x10>)
    64c8:	1c01      	adds	r1, r0, #0
    64ca:	6818      	ldr	r0, [r3, #0]
    64cc:	f000 f820 	bl	6510 <_free_r>
    64d0:	bd08      	pop	{r3, pc}
    64d2:	46c0      	nop			; (mov r8, r8)
    64d4:	20000134 	.word	0x20000134

000064d8 <memchr>:
    64d8:	b2c9      	uxtb	r1, r1
    64da:	1882      	adds	r2, r0, r2
    64dc:	4290      	cmp	r0, r2
    64de:	d004      	beq.n	64ea <memchr+0x12>
    64e0:	7803      	ldrb	r3, [r0, #0]
    64e2:	428b      	cmp	r3, r1
    64e4:	d002      	beq.n	64ec <memchr+0x14>
    64e6:	3001      	adds	r0, #1
    64e8:	e7f8      	b.n	64dc <memchr+0x4>
    64ea:	2000      	movs	r0, #0
    64ec:	4770      	bx	lr

000064ee <memcpy>:
    64ee:	2300      	movs	r3, #0
    64f0:	b510      	push	{r4, lr}
    64f2:	4293      	cmp	r3, r2
    64f4:	d003      	beq.n	64fe <memcpy+0x10>
    64f6:	5ccc      	ldrb	r4, [r1, r3]
    64f8:	54c4      	strb	r4, [r0, r3]
    64fa:	3301      	adds	r3, #1
    64fc:	e7f9      	b.n	64f2 <memcpy+0x4>
    64fe:	bd10      	pop	{r4, pc}

00006500 <memset>:
    6500:	1c03      	adds	r3, r0, #0
    6502:	1882      	adds	r2, r0, r2
    6504:	4293      	cmp	r3, r2
    6506:	d002      	beq.n	650e <memset+0xe>
    6508:	7019      	strb	r1, [r3, #0]
    650a:	3301      	adds	r3, #1
    650c:	e7fa      	b.n	6504 <memset+0x4>
    650e:	4770      	bx	lr

00006510 <_free_r>:
    6510:	b530      	push	{r4, r5, lr}
    6512:	2900      	cmp	r1, #0
    6514:	d03e      	beq.n	6594 <_free_r+0x84>
    6516:	3904      	subs	r1, #4
    6518:	680b      	ldr	r3, [r1, #0]
    651a:	2b00      	cmp	r3, #0
    651c:	da00      	bge.n	6520 <_free_r+0x10>
    651e:	18c9      	adds	r1, r1, r3
    6520:	4a1d      	ldr	r2, [pc, #116]	; (6598 <_free_r+0x88>)
    6522:	6813      	ldr	r3, [r2, #0]
    6524:	1c14      	adds	r4, r2, #0
    6526:	2b00      	cmp	r3, #0
    6528:	d102      	bne.n	6530 <_free_r+0x20>
    652a:	604b      	str	r3, [r1, #4]
    652c:	6011      	str	r1, [r2, #0]
    652e:	e031      	b.n	6594 <_free_r+0x84>
    6530:	4299      	cmp	r1, r3
    6532:	d20d      	bcs.n	6550 <_free_r+0x40>
    6534:	6808      	ldr	r0, [r1, #0]
    6536:	180a      	adds	r2, r1, r0
    6538:	429a      	cmp	r2, r3
    653a:	d103      	bne.n	6544 <_free_r+0x34>
    653c:	6813      	ldr	r3, [r2, #0]
    653e:	18c3      	adds	r3, r0, r3
    6540:	600b      	str	r3, [r1, #0]
    6542:	6853      	ldr	r3, [r2, #4]
    6544:	604b      	str	r3, [r1, #4]
    6546:	6021      	str	r1, [r4, #0]
    6548:	e024      	b.n	6594 <_free_r+0x84>
    654a:	428a      	cmp	r2, r1
    654c:	d803      	bhi.n	6556 <_free_r+0x46>
    654e:	1c13      	adds	r3, r2, #0
    6550:	685a      	ldr	r2, [r3, #4]
    6552:	2a00      	cmp	r2, #0
    6554:	d1f9      	bne.n	654a <_free_r+0x3a>
    6556:	681d      	ldr	r5, [r3, #0]
    6558:	195c      	adds	r4, r3, r5
    655a:	428c      	cmp	r4, r1
    655c:	d10b      	bne.n	6576 <_free_r+0x66>
    655e:	6809      	ldr	r1, [r1, #0]
    6560:	1869      	adds	r1, r5, r1
    6562:	1858      	adds	r0, r3, r1
    6564:	6019      	str	r1, [r3, #0]
    6566:	4290      	cmp	r0, r2
    6568:	d114      	bne.n	6594 <_free_r+0x84>
    656a:	6810      	ldr	r0, [r2, #0]
    656c:	6852      	ldr	r2, [r2, #4]
    656e:	1809      	adds	r1, r1, r0
    6570:	6019      	str	r1, [r3, #0]
    6572:	605a      	str	r2, [r3, #4]
    6574:	e00e      	b.n	6594 <_free_r+0x84>
    6576:	428c      	cmp	r4, r1
    6578:	d902      	bls.n	6580 <_free_r+0x70>
    657a:	230c      	movs	r3, #12
    657c:	6003      	str	r3, [r0, #0]
    657e:	e009      	b.n	6594 <_free_r+0x84>
    6580:	6808      	ldr	r0, [r1, #0]
    6582:	180c      	adds	r4, r1, r0
    6584:	4294      	cmp	r4, r2
    6586:	d103      	bne.n	6590 <_free_r+0x80>
    6588:	6814      	ldr	r4, [r2, #0]
    658a:	6852      	ldr	r2, [r2, #4]
    658c:	1900      	adds	r0, r0, r4
    658e:	6008      	str	r0, [r1, #0]
    6590:	604a      	str	r2, [r1, #4]
    6592:	6059      	str	r1, [r3, #4]
    6594:	bd30      	pop	{r4, r5, pc}
    6596:	46c0      	nop			; (mov r8, r8)
    6598:	20003fb8 	.word	0x20003fb8

0000659c <_malloc_r>:
    659c:	2303      	movs	r3, #3
    659e:	b570      	push	{r4, r5, r6, lr}
    65a0:	1ccc      	adds	r4, r1, #3
    65a2:	439c      	bics	r4, r3
    65a4:	3408      	adds	r4, #8
    65a6:	1c05      	adds	r5, r0, #0
    65a8:	2c0c      	cmp	r4, #12
    65aa:	d201      	bcs.n	65b0 <_malloc_r+0x14>
    65ac:	240c      	movs	r4, #12
    65ae:	e005      	b.n	65bc <_malloc_r+0x20>
    65b0:	2c00      	cmp	r4, #0
    65b2:	da03      	bge.n	65bc <_malloc_r+0x20>
    65b4:	230c      	movs	r3, #12
    65b6:	2000      	movs	r0, #0
    65b8:	602b      	str	r3, [r5, #0]
    65ba:	e042      	b.n	6642 <_malloc_r+0xa6>
    65bc:	428c      	cmp	r4, r1
    65be:	d3f9      	bcc.n	65b4 <_malloc_r+0x18>
    65c0:	4a20      	ldr	r2, [pc, #128]	; (6644 <_malloc_r+0xa8>)
    65c2:	6813      	ldr	r3, [r2, #0]
    65c4:	1c10      	adds	r0, r2, #0
    65c6:	1c19      	adds	r1, r3, #0
    65c8:	2900      	cmp	r1, #0
    65ca:	d013      	beq.n	65f4 <_malloc_r+0x58>
    65cc:	680a      	ldr	r2, [r1, #0]
    65ce:	1b12      	subs	r2, r2, r4
    65d0:	d40d      	bmi.n	65ee <_malloc_r+0x52>
    65d2:	2a0b      	cmp	r2, #11
    65d4:	d902      	bls.n	65dc <_malloc_r+0x40>
    65d6:	600a      	str	r2, [r1, #0]
    65d8:	188b      	adds	r3, r1, r2
    65da:	e01f      	b.n	661c <_malloc_r+0x80>
    65dc:	428b      	cmp	r3, r1
    65de:	d102      	bne.n	65e6 <_malloc_r+0x4a>
    65e0:	685a      	ldr	r2, [r3, #4]
    65e2:	6002      	str	r2, [r0, #0]
    65e4:	e01b      	b.n	661e <_malloc_r+0x82>
    65e6:	684a      	ldr	r2, [r1, #4]
    65e8:	605a      	str	r2, [r3, #4]
    65ea:	1c0b      	adds	r3, r1, #0
    65ec:	e017      	b.n	661e <_malloc_r+0x82>
    65ee:	1c0b      	adds	r3, r1, #0
    65f0:	6849      	ldr	r1, [r1, #4]
    65f2:	e7e9      	b.n	65c8 <_malloc_r+0x2c>
    65f4:	4e14      	ldr	r6, [pc, #80]	; (6648 <_malloc_r+0xac>)
    65f6:	6833      	ldr	r3, [r6, #0]
    65f8:	2b00      	cmp	r3, #0
    65fa:	d103      	bne.n	6604 <_malloc_r+0x68>
    65fc:	1c28      	adds	r0, r5, #0
    65fe:	f001 fa4b 	bl	7a98 <_sbrk_r>
    6602:	6030      	str	r0, [r6, #0]
    6604:	1c28      	adds	r0, r5, #0
    6606:	1c21      	adds	r1, r4, #0
    6608:	f001 fa46 	bl	7a98 <_sbrk_r>
    660c:	1c03      	adds	r3, r0, #0
    660e:	1c42      	adds	r2, r0, #1
    6610:	d0d0      	beq.n	65b4 <_malloc_r+0x18>
    6612:	2203      	movs	r2, #3
    6614:	1cc6      	adds	r6, r0, #3
    6616:	4396      	bics	r6, r2
    6618:	4286      	cmp	r6, r0
    661a:	d10a      	bne.n	6632 <_malloc_r+0x96>
    661c:	601c      	str	r4, [r3, #0]
    661e:	1c18      	adds	r0, r3, #0
    6620:	2107      	movs	r1, #7
    6622:	300b      	adds	r0, #11
    6624:	1d1a      	adds	r2, r3, #4
    6626:	4388      	bics	r0, r1
    6628:	1a82      	subs	r2, r0, r2
    662a:	d00a      	beq.n	6642 <_malloc_r+0xa6>
    662c:	4251      	negs	r1, r2
    662e:	5099      	str	r1, [r3, r2]
    6630:	e007      	b.n	6642 <_malloc_r+0xa6>
    6632:	1a31      	subs	r1, r6, r0
    6634:	1c28      	adds	r0, r5, #0
    6636:	f001 fa2f 	bl	7a98 <_sbrk_r>
    663a:	1c43      	adds	r3, r0, #1
    663c:	d0ba      	beq.n	65b4 <_malloc_r+0x18>
    663e:	1c33      	adds	r3, r6, #0
    6640:	e7ec      	b.n	661c <_malloc_r+0x80>
    6642:	bd70      	pop	{r4, r5, r6, pc}
    6644:	20003fb8 	.word	0x20003fb8
    6648:	20003fb4 	.word	0x20003fb4

0000664c <__sfputc_r>:
    664c:	6893      	ldr	r3, [r2, #8]
    664e:	b510      	push	{r4, lr}
    6650:	3b01      	subs	r3, #1
    6652:	6093      	str	r3, [r2, #8]
    6654:	2b00      	cmp	r3, #0
    6656:	da05      	bge.n	6664 <__sfputc_r+0x18>
    6658:	6994      	ldr	r4, [r2, #24]
    665a:	42a3      	cmp	r3, r4
    665c:	db08      	blt.n	6670 <__sfputc_r+0x24>
    665e:	b2cb      	uxtb	r3, r1
    6660:	2b0a      	cmp	r3, #10
    6662:	d005      	beq.n	6670 <__sfputc_r+0x24>
    6664:	6813      	ldr	r3, [r2, #0]
    6666:	1c58      	adds	r0, r3, #1
    6668:	6010      	str	r0, [r2, #0]
    666a:	7019      	strb	r1, [r3, #0]
    666c:	b2c8      	uxtb	r0, r1
    666e:	e001      	b.n	6674 <__sfputc_r+0x28>
    6670:	f002 fb9a 	bl	8da8 <__swbuf_r>
    6674:	bd10      	pop	{r4, pc}

00006676 <__sfputs_r>:
    6676:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6678:	1c06      	adds	r6, r0, #0
    667a:	1c0f      	adds	r7, r1, #0
    667c:	1c14      	adds	r4, r2, #0
    667e:	18d5      	adds	r5, r2, r3
    6680:	42ac      	cmp	r4, r5
    6682:	d008      	beq.n	6696 <__sfputs_r+0x20>
    6684:	7821      	ldrb	r1, [r4, #0]
    6686:	1c30      	adds	r0, r6, #0
    6688:	1c3a      	adds	r2, r7, #0
    668a:	f7ff ffdf 	bl	664c <__sfputc_r>
    668e:	3401      	adds	r4, #1
    6690:	1c43      	adds	r3, r0, #1
    6692:	d1f5      	bne.n	6680 <__sfputs_r+0xa>
    6694:	e000      	b.n	6698 <__sfputs_r+0x22>
    6696:	2000      	movs	r0, #0
    6698:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0000669c <_vfiprintf_r>:
    669c:	b5f0      	push	{r4, r5, r6, r7, lr}
    669e:	b09f      	sub	sp, #124	; 0x7c
    66a0:	1c06      	adds	r6, r0, #0
    66a2:	1c0f      	adds	r7, r1, #0
    66a4:	9202      	str	r2, [sp, #8]
    66a6:	9305      	str	r3, [sp, #20]
    66a8:	2800      	cmp	r0, #0
    66aa:	d004      	beq.n	66b6 <_vfiprintf_r+0x1a>
    66ac:	6983      	ldr	r3, [r0, #24]
    66ae:	2b00      	cmp	r3, #0
    66b0:	d101      	bne.n	66b6 <_vfiprintf_r+0x1a>
    66b2:	f7ff fcb7 	bl	6024 <__sinit>
    66b6:	4b79      	ldr	r3, [pc, #484]	; (689c <_vfiprintf_r+0x200>)
    66b8:	429f      	cmp	r7, r3
    66ba:	d101      	bne.n	66c0 <_vfiprintf_r+0x24>
    66bc:	6877      	ldr	r7, [r6, #4]
    66be:	e008      	b.n	66d2 <_vfiprintf_r+0x36>
    66c0:	4b77      	ldr	r3, [pc, #476]	; (68a0 <_vfiprintf_r+0x204>)
    66c2:	429f      	cmp	r7, r3
    66c4:	d101      	bne.n	66ca <_vfiprintf_r+0x2e>
    66c6:	68b7      	ldr	r7, [r6, #8]
    66c8:	e003      	b.n	66d2 <_vfiprintf_r+0x36>
    66ca:	4b76      	ldr	r3, [pc, #472]	; (68a4 <_vfiprintf_r+0x208>)
    66cc:	429f      	cmp	r7, r3
    66ce:	d100      	bne.n	66d2 <_vfiprintf_r+0x36>
    66d0:	68f7      	ldr	r7, [r6, #12]
    66d2:	89bb      	ldrh	r3, [r7, #12]
    66d4:	071b      	lsls	r3, r3, #28
    66d6:	d50a      	bpl.n	66ee <_vfiprintf_r+0x52>
    66d8:	693b      	ldr	r3, [r7, #16]
    66da:	2b00      	cmp	r3, #0
    66dc:	d007      	beq.n	66ee <_vfiprintf_r+0x52>
    66de:	2300      	movs	r3, #0
    66e0:	ad06      	add	r5, sp, #24
    66e2:	616b      	str	r3, [r5, #20]
    66e4:	3320      	adds	r3, #32
    66e6:	766b      	strb	r3, [r5, #25]
    66e8:	3310      	adds	r3, #16
    66ea:	76ab      	strb	r3, [r5, #26]
    66ec:	e03d      	b.n	676a <_vfiprintf_r+0xce>
    66ee:	1c30      	adds	r0, r6, #0
    66f0:	1c39      	adds	r1, r7, #0
    66f2:	f002 fbc5 	bl	8e80 <__swsetup_r>
    66f6:	2800      	cmp	r0, #0
    66f8:	d0f1      	beq.n	66de <_vfiprintf_r+0x42>
    66fa:	2001      	movs	r0, #1
    66fc:	4240      	negs	r0, r0
    66fe:	e0ca      	b.n	6896 <_vfiprintf_r+0x1fa>
    6700:	9a05      	ldr	r2, [sp, #20]
    6702:	1d11      	adds	r1, r2, #4
    6704:	6812      	ldr	r2, [r2, #0]
    6706:	9105      	str	r1, [sp, #20]
    6708:	2a00      	cmp	r2, #0
    670a:	db7e      	blt.n	680a <_vfiprintf_r+0x16e>
    670c:	9209      	str	r2, [sp, #36]	; 0x24
    670e:	3401      	adds	r4, #1
    6710:	7823      	ldrb	r3, [r4, #0]
    6712:	2b2e      	cmp	r3, #46	; 0x2e
    6714:	d100      	bne.n	6718 <_vfiprintf_r+0x7c>
    6716:	e089      	b.n	682c <_vfiprintf_r+0x190>
    6718:	7821      	ldrb	r1, [r4, #0]
    671a:	4863      	ldr	r0, [pc, #396]	; (68a8 <_vfiprintf_r+0x20c>)
    671c:	2203      	movs	r2, #3
    671e:	f7ff fedb 	bl	64d8 <memchr>
    6722:	2800      	cmp	r0, #0
    6724:	d008      	beq.n	6738 <_vfiprintf_r+0x9c>
    6726:	4b60      	ldr	r3, [pc, #384]	; (68a8 <_vfiprintf_r+0x20c>)
    6728:	3401      	adds	r4, #1
    672a:	1ac0      	subs	r0, r0, r3
    672c:	2340      	movs	r3, #64	; 0x40
    672e:	4083      	lsls	r3, r0
    6730:	1c18      	adds	r0, r3, #0
    6732:	682b      	ldr	r3, [r5, #0]
    6734:	4318      	orrs	r0, r3
    6736:	6028      	str	r0, [r5, #0]
    6738:	7821      	ldrb	r1, [r4, #0]
    673a:	1c63      	adds	r3, r4, #1
    673c:	485b      	ldr	r0, [pc, #364]	; (68ac <_vfiprintf_r+0x210>)
    673e:	2206      	movs	r2, #6
    6740:	9302      	str	r3, [sp, #8]
    6742:	7629      	strb	r1, [r5, #24]
    6744:	f7ff fec8 	bl	64d8 <memchr>
    6748:	2800      	cmp	r0, #0
    674a:	d100      	bne.n	674e <_vfiprintf_r+0xb2>
    674c:	e091      	b.n	6872 <_vfiprintf_r+0x1d6>
    674e:	4b58      	ldr	r3, [pc, #352]	; (68b0 <_vfiprintf_r+0x214>)
    6750:	2b00      	cmp	r3, #0
    6752:	d000      	beq.n	6756 <_vfiprintf_r+0xba>
    6754:	e084      	b.n	6860 <_vfiprintf_r+0x1c4>
    6756:	2207      	movs	r2, #7
    6758:	9b05      	ldr	r3, [sp, #20]
    675a:	3307      	adds	r3, #7
    675c:	4393      	bics	r3, r2
    675e:	3308      	adds	r3, #8
    6760:	9305      	str	r3, [sp, #20]
    6762:	696b      	ldr	r3, [r5, #20]
    6764:	9a03      	ldr	r2, [sp, #12]
    6766:	189b      	adds	r3, r3, r2
    6768:	616b      	str	r3, [r5, #20]
    676a:	9c02      	ldr	r4, [sp, #8]
    676c:	7823      	ldrb	r3, [r4, #0]
    676e:	2b00      	cmp	r3, #0
    6770:	d104      	bne.n	677c <_vfiprintf_r+0xe0>
    6772:	9b02      	ldr	r3, [sp, #8]
    6774:	1ae3      	subs	r3, r4, r3
    6776:	9304      	str	r3, [sp, #16]
    6778:	d011      	beq.n	679e <_vfiprintf_r+0x102>
    677a:	e003      	b.n	6784 <_vfiprintf_r+0xe8>
    677c:	2b25      	cmp	r3, #37	; 0x25
    677e:	d0f8      	beq.n	6772 <_vfiprintf_r+0xd6>
    6780:	3401      	adds	r4, #1
    6782:	e7f3      	b.n	676c <_vfiprintf_r+0xd0>
    6784:	9b04      	ldr	r3, [sp, #16]
    6786:	1c30      	adds	r0, r6, #0
    6788:	1c39      	adds	r1, r7, #0
    678a:	9a02      	ldr	r2, [sp, #8]
    678c:	f7ff ff73 	bl	6676 <__sfputs_r>
    6790:	1c43      	adds	r3, r0, #1
    6792:	d07b      	beq.n	688c <_vfiprintf_r+0x1f0>
    6794:	696a      	ldr	r2, [r5, #20]
    6796:	9b04      	ldr	r3, [sp, #16]
    6798:	4694      	mov	ip, r2
    679a:	4463      	add	r3, ip
    679c:	616b      	str	r3, [r5, #20]
    679e:	7823      	ldrb	r3, [r4, #0]
    67a0:	2b00      	cmp	r3, #0
    67a2:	d073      	beq.n	688c <_vfiprintf_r+0x1f0>
    67a4:	2201      	movs	r2, #1
    67a6:	2300      	movs	r3, #0
    67a8:	4252      	negs	r2, r2
    67aa:	606a      	str	r2, [r5, #4]
    67ac:	a902      	add	r1, sp, #8
    67ae:	3254      	adds	r2, #84	; 0x54
    67b0:	1852      	adds	r2, r2, r1
    67b2:	3401      	adds	r4, #1
    67b4:	602b      	str	r3, [r5, #0]
    67b6:	60eb      	str	r3, [r5, #12]
    67b8:	60ab      	str	r3, [r5, #8]
    67ba:	7013      	strb	r3, [r2, #0]
    67bc:	65ab      	str	r3, [r5, #88]	; 0x58
    67be:	7821      	ldrb	r1, [r4, #0]
    67c0:	483c      	ldr	r0, [pc, #240]	; (68b4 <_vfiprintf_r+0x218>)
    67c2:	2205      	movs	r2, #5
    67c4:	f7ff fe88 	bl	64d8 <memchr>
    67c8:	2800      	cmp	r0, #0
    67ca:	d009      	beq.n	67e0 <_vfiprintf_r+0x144>
    67cc:	4b39      	ldr	r3, [pc, #228]	; (68b4 <_vfiprintf_r+0x218>)
    67ce:	3401      	adds	r4, #1
    67d0:	1ac0      	subs	r0, r0, r3
    67d2:	2301      	movs	r3, #1
    67d4:	4083      	lsls	r3, r0
    67d6:	1c18      	adds	r0, r3, #0
    67d8:	682b      	ldr	r3, [r5, #0]
    67da:	4318      	orrs	r0, r3
    67dc:	6028      	str	r0, [r5, #0]
    67de:	e7ee      	b.n	67be <_vfiprintf_r+0x122>
    67e0:	682b      	ldr	r3, [r5, #0]
    67e2:	06da      	lsls	r2, r3, #27
    67e4:	d504      	bpl.n	67f0 <_vfiprintf_r+0x154>
    67e6:	2253      	movs	r2, #83	; 0x53
    67e8:	2120      	movs	r1, #32
    67ea:	a802      	add	r0, sp, #8
    67ec:	1812      	adds	r2, r2, r0
    67ee:	7011      	strb	r1, [r2, #0]
    67f0:	071a      	lsls	r2, r3, #28
    67f2:	d504      	bpl.n	67fe <_vfiprintf_r+0x162>
    67f4:	2253      	movs	r2, #83	; 0x53
    67f6:	212b      	movs	r1, #43	; 0x2b
    67f8:	a802      	add	r0, sp, #8
    67fa:	1812      	adds	r2, r2, r0
    67fc:	7011      	strb	r1, [r2, #0]
    67fe:	7822      	ldrb	r2, [r4, #0]
    6800:	2a2a      	cmp	r2, #42	; 0x2a
    6802:	d100      	bne.n	6806 <_vfiprintf_r+0x16a>
    6804:	e77c      	b.n	6700 <_vfiprintf_r+0x64>
    6806:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6808:	e005      	b.n	6816 <_vfiprintf_r+0x17a>
    680a:	4252      	negs	r2, r2
    680c:	60ea      	str	r2, [r5, #12]
    680e:	2202      	movs	r2, #2
    6810:	4313      	orrs	r3, r2
    6812:	602b      	str	r3, [r5, #0]
    6814:	e77b      	b.n	670e <_vfiprintf_r+0x72>
    6816:	7822      	ldrb	r2, [r4, #0]
    6818:	3a30      	subs	r2, #48	; 0x30
    681a:	2a09      	cmp	r2, #9
    681c:	d804      	bhi.n	6828 <_vfiprintf_r+0x18c>
    681e:	210a      	movs	r1, #10
    6820:	434b      	muls	r3, r1
    6822:	3401      	adds	r4, #1
    6824:	189b      	adds	r3, r3, r2
    6826:	e7f6      	b.n	6816 <_vfiprintf_r+0x17a>
    6828:	9309      	str	r3, [sp, #36]	; 0x24
    682a:	e771      	b.n	6710 <_vfiprintf_r+0x74>
    682c:	7863      	ldrb	r3, [r4, #1]
    682e:	2b2a      	cmp	r3, #42	; 0x2a
    6830:	d109      	bne.n	6846 <_vfiprintf_r+0x1aa>
    6832:	9b05      	ldr	r3, [sp, #20]
    6834:	3402      	adds	r4, #2
    6836:	1d1a      	adds	r2, r3, #4
    6838:	681b      	ldr	r3, [r3, #0]
    683a:	9205      	str	r2, [sp, #20]
    683c:	2b00      	cmp	r3, #0
    683e:	da0d      	bge.n	685c <_vfiprintf_r+0x1c0>
    6840:	2301      	movs	r3, #1
    6842:	425b      	negs	r3, r3
    6844:	e00a      	b.n	685c <_vfiprintf_r+0x1c0>
    6846:	2300      	movs	r3, #0
    6848:	3401      	adds	r4, #1
    684a:	7822      	ldrb	r2, [r4, #0]
    684c:	3a30      	subs	r2, #48	; 0x30
    684e:	2a09      	cmp	r2, #9
    6850:	d804      	bhi.n	685c <_vfiprintf_r+0x1c0>
    6852:	210a      	movs	r1, #10
    6854:	434b      	muls	r3, r1
    6856:	3401      	adds	r4, #1
    6858:	189b      	adds	r3, r3, r2
    685a:	e7f6      	b.n	684a <_vfiprintf_r+0x1ae>
    685c:	9307      	str	r3, [sp, #28]
    685e:	e75b      	b.n	6718 <_vfiprintf_r+0x7c>
    6860:	ab05      	add	r3, sp, #20
    6862:	9300      	str	r3, [sp, #0]
    6864:	1c30      	adds	r0, r6, #0
    6866:	1c29      	adds	r1, r5, #0
    6868:	1c3a      	adds	r2, r7, #0
    686a:	4b13      	ldr	r3, [pc, #76]	; (68b8 <_vfiprintf_r+0x21c>)
    686c:	f000 f8ca 	bl	6a04 <_printf_float>
    6870:	e007      	b.n	6882 <_vfiprintf_r+0x1e6>
    6872:	ab05      	add	r3, sp, #20
    6874:	9300      	str	r3, [sp, #0]
    6876:	1c30      	adds	r0, r6, #0
    6878:	1c29      	adds	r1, r5, #0
    687a:	1c3a      	adds	r2, r7, #0
    687c:	4b0e      	ldr	r3, [pc, #56]	; (68b8 <_vfiprintf_r+0x21c>)
    687e:	f000 fb6d 	bl	6f5c <_printf_i>
    6882:	9003      	str	r0, [sp, #12]
    6884:	9b03      	ldr	r3, [sp, #12]
    6886:	3301      	adds	r3, #1
    6888:	d000      	beq.n	688c <_vfiprintf_r+0x1f0>
    688a:	e76a      	b.n	6762 <_vfiprintf_r+0xc6>
    688c:	89bb      	ldrh	r3, [r7, #12]
    688e:	065b      	lsls	r3, r3, #25
    6890:	d500      	bpl.n	6894 <_vfiprintf_r+0x1f8>
    6892:	e732      	b.n	66fa <_vfiprintf_r+0x5e>
    6894:	980b      	ldr	r0, [sp, #44]	; 0x2c
    6896:	b01f      	add	sp, #124	; 0x7c
    6898:	bdf0      	pop	{r4, r5, r6, r7, pc}
    689a:	46c0      	nop			; (mov r8, r8)
    689c:	0000e010 	.word	0x0000e010
    68a0:	0000e030 	.word	0x0000e030
    68a4:	0000e050 	.word	0x0000e050
    68a8:	0000e07e 	.word	0x0000e07e
    68ac:	0000e082 	.word	0x0000e082
    68b0:	00006a05 	.word	0x00006a05
    68b4:	0000e078 	.word	0x0000e078
    68b8:	00006677 	.word	0x00006677

000068bc <vfiprintf>:
    68bc:	b538      	push	{r3, r4, r5, lr}
    68be:	1c05      	adds	r5, r0, #0
    68c0:	1c0c      	adds	r4, r1, #0
    68c2:	1c13      	adds	r3, r2, #0
    68c4:	4a03      	ldr	r2, [pc, #12]	; (68d4 <vfiprintf+0x18>)
    68c6:	1c29      	adds	r1, r5, #0
    68c8:	6810      	ldr	r0, [r2, #0]
    68ca:	1c22      	adds	r2, r4, #0
    68cc:	f7ff fee6 	bl	669c <_vfiprintf_r>
    68d0:	bd38      	pop	{r3, r4, r5, pc}
    68d2:	46c0      	nop			; (mov r8, r8)
    68d4:	20000134 	.word	0x20000134

000068d8 <__cvt>:
    68d8:	b5f0      	push	{r4, r5, r6, r7, lr}
    68da:	b08b      	sub	sp, #44	; 0x2c
    68dc:	1c14      	adds	r4, r2, #0
    68de:	1e1d      	subs	r5, r3, #0
    68e0:	9912      	ldr	r1, [sp, #72]	; 0x48
    68e2:	da06      	bge.n	68f2 <__cvt+0x1a>
    68e4:	2480      	movs	r4, #128	; 0x80
    68e6:	0624      	lsls	r4, r4, #24
    68e8:	192b      	adds	r3, r5, r4
    68ea:	1c1d      	adds	r5, r3, #0
    68ec:	1c14      	adds	r4, r2, #0
    68ee:	232d      	movs	r3, #45	; 0x2d
    68f0:	e000      	b.n	68f4 <__cvt+0x1c>
    68f2:	2300      	movs	r3, #0
    68f4:	700b      	strb	r3, [r1, #0]
    68f6:	2320      	movs	r3, #32
    68f8:	9e14      	ldr	r6, [sp, #80]	; 0x50
    68fa:	2203      	movs	r2, #3
    68fc:	439e      	bics	r6, r3
    68fe:	2e46      	cmp	r6, #70	; 0x46
    6900:	d007      	beq.n	6912 <__cvt+0x3a>
    6902:	1c33      	adds	r3, r6, #0
    6904:	3b45      	subs	r3, #69	; 0x45
    6906:	4259      	negs	r1, r3
    6908:	414b      	adcs	r3, r1
    690a:	9910      	ldr	r1, [sp, #64]	; 0x40
    690c:	3a01      	subs	r2, #1
    690e:	18cb      	adds	r3, r1, r3
    6910:	9310      	str	r3, [sp, #64]	; 0x40
    6912:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6914:	9200      	str	r2, [sp, #0]
    6916:	9301      	str	r3, [sp, #4]
    6918:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    691a:	1c22      	adds	r2, r4, #0
    691c:	9302      	str	r3, [sp, #8]
    691e:	ab08      	add	r3, sp, #32
    6920:	9303      	str	r3, [sp, #12]
    6922:	ab09      	add	r3, sp, #36	; 0x24
    6924:	9304      	str	r3, [sp, #16]
    6926:	1c2b      	adds	r3, r5, #0
    6928:	f002 fbb8 	bl	909c <_dtoa_r>
    692c:	1c07      	adds	r7, r0, #0
    692e:	2e47      	cmp	r6, #71	; 0x47
    6930:	d102      	bne.n	6938 <__cvt+0x60>
    6932:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6934:	07db      	lsls	r3, r3, #31
    6936:	d52c      	bpl.n	6992 <__cvt+0xba>
    6938:	9b10      	ldr	r3, [sp, #64]	; 0x40
    693a:	18fb      	adds	r3, r7, r3
    693c:	9307      	str	r3, [sp, #28]
    693e:	2e46      	cmp	r6, #70	; 0x46
    6940:	d114      	bne.n	696c <__cvt+0x94>
    6942:	783b      	ldrb	r3, [r7, #0]
    6944:	2b30      	cmp	r3, #48	; 0x30
    6946:	d10c      	bne.n	6962 <__cvt+0x8a>
    6948:	1c20      	adds	r0, r4, #0
    694a:	1c29      	adds	r1, r5, #0
    694c:	2200      	movs	r2, #0
    694e:	2300      	movs	r3, #0
    6950:	f004 fcf0 	bl	b334 <__aeabi_dcmpeq>
    6954:	2800      	cmp	r0, #0
    6956:	d104      	bne.n	6962 <__cvt+0x8a>
    6958:	2301      	movs	r3, #1
    695a:	9a10      	ldr	r2, [sp, #64]	; 0x40
    695c:	1a9b      	subs	r3, r3, r2
    695e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    6960:	6013      	str	r3, [r2, #0]
    6962:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6964:	9a07      	ldr	r2, [sp, #28]
    6966:	681b      	ldr	r3, [r3, #0]
    6968:	18d3      	adds	r3, r2, r3
    696a:	9307      	str	r3, [sp, #28]
    696c:	1c20      	adds	r0, r4, #0
    696e:	1c29      	adds	r1, r5, #0
    6970:	2200      	movs	r2, #0
    6972:	2300      	movs	r3, #0
    6974:	f004 fcde 	bl	b334 <__aeabi_dcmpeq>
    6978:	2800      	cmp	r0, #0
    697a:	d001      	beq.n	6980 <__cvt+0xa8>
    697c:	9b07      	ldr	r3, [sp, #28]
    697e:	9309      	str	r3, [sp, #36]	; 0x24
    6980:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6982:	9a07      	ldr	r2, [sp, #28]
    6984:	4293      	cmp	r3, r2
    6986:	d204      	bcs.n	6992 <__cvt+0xba>
    6988:	1c5a      	adds	r2, r3, #1
    698a:	9209      	str	r2, [sp, #36]	; 0x24
    698c:	2230      	movs	r2, #48	; 0x30
    698e:	701a      	strb	r2, [r3, #0]
    6990:	e7f6      	b.n	6980 <__cvt+0xa8>
    6992:	1c38      	adds	r0, r7, #0
    6994:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6996:	9a15      	ldr	r2, [sp, #84]	; 0x54
    6998:	1bdb      	subs	r3, r3, r7
    699a:	6013      	str	r3, [r2, #0]
    699c:	b00b      	add	sp, #44	; 0x2c
    699e:	bdf0      	pop	{r4, r5, r6, r7, pc}

000069a0 <__exponent>:
    69a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    69a2:	232b      	movs	r3, #43	; 0x2b
    69a4:	1c07      	adds	r7, r0, #0
    69a6:	1c0c      	adds	r4, r1, #0
    69a8:	7002      	strb	r2, [r0, #0]
    69aa:	1c86      	adds	r6, r0, #2
    69ac:	2900      	cmp	r1, #0
    69ae:	da01      	bge.n	69b4 <__exponent+0x14>
    69b0:	232d      	movs	r3, #45	; 0x2d
    69b2:	424c      	negs	r4, r1
    69b4:	707b      	strb	r3, [r7, #1]
    69b6:	2c09      	cmp	r4, #9
    69b8:	dd1c      	ble.n	69f4 <__exponent+0x54>
    69ba:	466b      	mov	r3, sp
    69bc:	1ddd      	adds	r5, r3, #7
    69be:	1c20      	adds	r0, r4, #0
    69c0:	210a      	movs	r1, #10
    69c2:	f7ff f903 	bl	5bcc <__aeabi_idivmod>
    69c6:	3d01      	subs	r5, #1
    69c8:	3130      	adds	r1, #48	; 0x30
    69ca:	7029      	strb	r1, [r5, #0]
    69cc:	1c20      	adds	r0, r4, #0
    69ce:	210a      	movs	r1, #10
    69d0:	f7ff f816 	bl	5a00 <__aeabi_idiv>
    69d4:	1e04      	subs	r4, r0, #0
    69d6:	2c09      	cmp	r4, #9
    69d8:	dcf1      	bgt.n	69be <__exponent+0x1e>
    69da:	3d01      	subs	r5, #1
    69dc:	3430      	adds	r4, #48	; 0x30
    69de:	702c      	strb	r4, [r5, #0]
    69e0:	466b      	mov	r3, sp
    69e2:	3307      	adds	r3, #7
    69e4:	1c30      	adds	r0, r6, #0
    69e6:	42ab      	cmp	r3, r5
    69e8:	d909      	bls.n	69fe <__exponent+0x5e>
    69ea:	782b      	ldrb	r3, [r5, #0]
    69ec:	3501      	adds	r5, #1
    69ee:	7033      	strb	r3, [r6, #0]
    69f0:	3601      	adds	r6, #1
    69f2:	e7f5      	b.n	69e0 <__exponent+0x40>
    69f4:	2330      	movs	r3, #48	; 0x30
    69f6:	18e4      	adds	r4, r4, r3
    69f8:	7033      	strb	r3, [r6, #0]
    69fa:	1cb0      	adds	r0, r6, #2
    69fc:	7074      	strb	r4, [r6, #1]
    69fe:	1bc0      	subs	r0, r0, r7
    6a00:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

00006a04 <_printf_float>:
    6a04:	b5f0      	push	{r4, r5, r6, r7, lr}
    6a06:	b093      	sub	sp, #76	; 0x4c
    6a08:	1c0c      	adds	r4, r1, #0
    6a0a:	9208      	str	r2, [sp, #32]
    6a0c:	9309      	str	r3, [sp, #36]	; 0x24
    6a0e:	9e18      	ldr	r6, [sp, #96]	; 0x60
    6a10:	1c05      	adds	r5, r0, #0
    6a12:	f003 fcb7 	bl	a384 <_localeconv_r>
    6a16:	6803      	ldr	r3, [r0, #0]
    6a18:	1c18      	adds	r0, r3, #0
    6a1a:	930b      	str	r3, [sp, #44]	; 0x2c
    6a1c:	f001 fa00 	bl	7e20 <strlen>
    6a20:	2300      	movs	r3, #0
    6a22:	6821      	ldr	r1, [r4, #0]
    6a24:	9310      	str	r3, [sp, #64]	; 0x40
    6a26:	900c      	str	r0, [sp, #48]	; 0x30
    6a28:	7e27      	ldrb	r7, [r4, #24]
    6a2a:	6833      	ldr	r3, [r6, #0]
    6a2c:	2207      	movs	r2, #7
    6a2e:	05c9      	lsls	r1, r1, #23
    6a30:	d501      	bpl.n	6a36 <_printf_float+0x32>
    6a32:	189b      	adds	r3, r3, r2
    6a34:	e000      	b.n	6a38 <_printf_float+0x34>
    6a36:	3307      	adds	r3, #7
    6a38:	4393      	bics	r3, r2
    6a3a:	1c1a      	adds	r2, r3, #0
    6a3c:	3208      	adds	r2, #8
    6a3e:	6032      	str	r2, [r6, #0]
    6a40:	681a      	ldr	r2, [r3, #0]
    6a42:	685b      	ldr	r3, [r3, #4]
    6a44:	64a2      	str	r2, [r4, #72]	; 0x48
    6a46:	64e3      	str	r3, [r4, #76]	; 0x4c
    6a48:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    6a4a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    6a4c:	f000 fffc 	bl	7a48 <__fpclassifyd>
    6a50:	2801      	cmp	r0, #1
    6a52:	d118      	bne.n	6a86 <_printf_float+0x82>
    6a54:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    6a56:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    6a58:	2200      	movs	r2, #0
    6a5a:	2300      	movs	r3, #0
    6a5c:	f004 fc70 	bl	b340 <__aeabi_dcmplt>
    6a60:	2800      	cmp	r0, #0
    6a62:	d003      	beq.n	6a6c <_printf_float+0x68>
    6a64:	1c23      	adds	r3, r4, #0
    6a66:	222d      	movs	r2, #45	; 0x2d
    6a68:	3343      	adds	r3, #67	; 0x43
    6a6a:	701a      	strb	r2, [r3, #0]
    6a6c:	4bb6      	ldr	r3, [pc, #728]	; (6d48 <_printf_float+0x344>)
    6a6e:	930a      	str	r3, [sp, #40]	; 0x28
    6a70:	2f47      	cmp	r7, #71	; 0x47
    6a72:	d901      	bls.n	6a78 <_printf_float+0x74>
    6a74:	4bb5      	ldr	r3, [pc, #724]	; (6d4c <_printf_float+0x348>)
    6a76:	930a      	str	r3, [sp, #40]	; 0x28
    6a78:	2303      	movs	r3, #3
    6a7a:	6822      	ldr	r2, [r4, #0]
    6a7c:	6123      	str	r3, [r4, #16]
    6a7e:	3301      	adds	r3, #1
    6a80:	439a      	bics	r2, r3
    6a82:	6022      	str	r2, [r4, #0]
    6a84:	e012      	b.n	6aac <_printf_float+0xa8>
    6a86:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    6a88:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    6a8a:	f000 ffdd 	bl	7a48 <__fpclassifyd>
    6a8e:	6826      	ldr	r6, [r4, #0]
    6a90:	2800      	cmp	r0, #0
    6a92:	d10d      	bne.n	6ab0 <_printf_float+0xac>
    6a94:	4bae      	ldr	r3, [pc, #696]	; (6d50 <_printf_float+0x34c>)
    6a96:	930a      	str	r3, [sp, #40]	; 0x28
    6a98:	2f47      	cmp	r7, #71	; 0x47
    6a9a:	d901      	bls.n	6aa0 <_printf_float+0x9c>
    6a9c:	4bad      	ldr	r3, [pc, #692]	; (6d54 <_printf_float+0x350>)
    6a9e:	930a      	str	r3, [sp, #40]	; 0x28
    6aa0:	2303      	movs	r3, #3
    6aa2:	1c31      	adds	r1, r6, #0
    6aa4:	6123      	str	r3, [r4, #16]
    6aa6:	3301      	adds	r3, #1
    6aa8:	4399      	bics	r1, r3
    6aaa:	6021      	str	r1, [r4, #0]
    6aac:	2600      	movs	r6, #0
    6aae:	e080      	b.n	6bb2 <_printf_float+0x1ae>
    6ab0:	2180      	movs	r1, #128	; 0x80
    6ab2:	6860      	ldr	r0, [r4, #4]
    6ab4:	00c9      	lsls	r1, r1, #3
    6ab6:	1c43      	adds	r3, r0, #1
    6ab8:	d101      	bne.n	6abe <_printf_float+0xba>
    6aba:	2306      	movs	r3, #6
    6abc:	e009      	b.n	6ad2 <_printf_float+0xce>
    6abe:	6ca2      	ldr	r2, [r4, #72]	; 0x48
    6ac0:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
    6ac2:	2f67      	cmp	r7, #103	; 0x67
    6ac4:	d001      	beq.n	6aca <_printf_float+0xc6>
    6ac6:	2f47      	cmp	r7, #71	; 0x47
    6ac8:	d104      	bne.n	6ad4 <_printf_float+0xd0>
    6aca:	2800      	cmp	r0, #0
    6acc:	d000      	beq.n	6ad0 <_printf_float+0xcc>
    6ace:	e1c0      	b.n	6e52 <_printf_float+0x44e>
    6ad0:	2301      	movs	r3, #1
    6ad2:	6063      	str	r3, [r4, #4]
    6ad4:	6863      	ldr	r3, [r4, #4]
    6ad6:	4331      	orrs	r1, r6
    6ad8:	9300      	str	r3, [sp, #0]
    6ada:	2323      	movs	r3, #35	; 0x23
    6adc:	6021      	str	r1, [r4, #0]
    6ade:	9101      	str	r1, [sp, #4]
    6ae0:	2100      	movs	r1, #0
    6ae2:	aa06      	add	r2, sp, #24
    6ae4:	189b      	adds	r3, r3, r2
    6ae6:	9302      	str	r3, [sp, #8]
    6ae8:	ab0f      	add	r3, sp, #60	; 0x3c
    6aea:	9303      	str	r3, [sp, #12]
    6aec:	ab10      	add	r3, sp, #64	; 0x40
    6aee:	9305      	str	r3, [sp, #20]
    6af0:	9704      	str	r7, [sp, #16]
    6af2:	6ca2      	ldr	r2, [r4, #72]	; 0x48
    6af4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
    6af6:	9106      	str	r1, [sp, #24]
    6af8:	1c28      	adds	r0, r5, #0
    6afa:	f7ff feed 	bl	68d8 <__cvt>
    6afe:	2320      	movs	r3, #32
    6b00:	1c3a      	adds	r2, r7, #0
    6b02:	900a      	str	r0, [sp, #40]	; 0x28
    6b04:	439a      	bics	r2, r3
    6b06:	2a47      	cmp	r2, #71	; 0x47
    6b08:	d107      	bne.n	6b1a <_printf_float+0x116>
    6b0a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6b0c:	1cda      	adds	r2, r3, #3
    6b0e:	db02      	blt.n	6b16 <_printf_float+0x112>
    6b10:	6862      	ldr	r2, [r4, #4]
    6b12:	4293      	cmp	r3, r2
    6b14:	dd2d      	ble.n	6b72 <_printf_float+0x16e>
    6b16:	3f02      	subs	r7, #2
    6b18:	b2ff      	uxtb	r7, r7
    6b1a:	990f      	ldr	r1, [sp, #60]	; 0x3c
    6b1c:	2f65      	cmp	r7, #101	; 0x65
    6b1e:	d812      	bhi.n	6b46 <_printf_float+0x142>
    6b20:	1c20      	adds	r0, r4, #0
    6b22:	3901      	subs	r1, #1
    6b24:	1c3a      	adds	r2, r7, #0
    6b26:	3050      	adds	r0, #80	; 0x50
    6b28:	910f      	str	r1, [sp, #60]	; 0x3c
    6b2a:	f7ff ff39 	bl	69a0 <__exponent>
    6b2e:	9a10      	ldr	r2, [sp, #64]	; 0x40
    6b30:	1c06      	adds	r6, r0, #0
    6b32:	1883      	adds	r3, r0, r2
    6b34:	6123      	str	r3, [r4, #16]
    6b36:	2a01      	cmp	r2, #1
    6b38:	dc02      	bgt.n	6b40 <_printf_float+0x13c>
    6b3a:	6822      	ldr	r2, [r4, #0]
    6b3c:	07d2      	lsls	r2, r2, #31
    6b3e:	d52e      	bpl.n	6b9e <_printf_float+0x19a>
    6b40:	3301      	adds	r3, #1
    6b42:	6123      	str	r3, [r4, #16]
    6b44:	e02b      	b.n	6b9e <_printf_float+0x19a>
    6b46:	2f66      	cmp	r7, #102	; 0x66
    6b48:	d114      	bne.n	6b74 <_printf_float+0x170>
    6b4a:	6863      	ldr	r3, [r4, #4]
    6b4c:	2900      	cmp	r1, #0
    6b4e:	dd08      	ble.n	6b62 <_printf_float+0x15e>
    6b50:	6121      	str	r1, [r4, #16]
    6b52:	2b00      	cmp	r3, #0
    6b54:	d102      	bne.n	6b5c <_printf_float+0x158>
    6b56:	6822      	ldr	r2, [r4, #0]
    6b58:	07d2      	lsls	r2, r2, #31
    6b5a:	d51d      	bpl.n	6b98 <_printf_float+0x194>
    6b5c:	3301      	adds	r3, #1
    6b5e:	18cb      	adds	r3, r1, r3
    6b60:	e011      	b.n	6b86 <_printf_float+0x182>
    6b62:	2b00      	cmp	r3, #0
    6b64:	d103      	bne.n	6b6e <_printf_float+0x16a>
    6b66:	2201      	movs	r2, #1
    6b68:	6821      	ldr	r1, [r4, #0]
    6b6a:	4211      	tst	r1, r2
    6b6c:	d013      	beq.n	6b96 <_printf_float+0x192>
    6b6e:	1c9a      	adds	r2, r3, #2
    6b70:	e011      	b.n	6b96 <_printf_float+0x192>
    6b72:	2767      	movs	r7, #103	; 0x67
    6b74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6b76:	9810      	ldr	r0, [sp, #64]	; 0x40
    6b78:	4283      	cmp	r3, r0
    6b7a:	db06      	blt.n	6b8a <_printf_float+0x186>
    6b7c:	6822      	ldr	r2, [r4, #0]
    6b7e:	6123      	str	r3, [r4, #16]
    6b80:	07d2      	lsls	r2, r2, #31
    6b82:	d509      	bpl.n	6b98 <_printf_float+0x194>
    6b84:	3301      	adds	r3, #1
    6b86:	6123      	str	r3, [r4, #16]
    6b88:	e006      	b.n	6b98 <_printf_float+0x194>
    6b8a:	2201      	movs	r2, #1
    6b8c:	2b00      	cmp	r3, #0
    6b8e:	dc01      	bgt.n	6b94 <_printf_float+0x190>
    6b90:	2102      	movs	r1, #2
    6b92:	1aca      	subs	r2, r1, r3
    6b94:	1882      	adds	r2, r0, r2
    6b96:	6122      	str	r2, [r4, #16]
    6b98:	2600      	movs	r6, #0
    6b9a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6b9c:	65a3      	str	r3, [r4, #88]	; 0x58
    6b9e:	2323      	movs	r3, #35	; 0x23
    6ba0:	aa06      	add	r2, sp, #24
    6ba2:	189b      	adds	r3, r3, r2
    6ba4:	781b      	ldrb	r3, [r3, #0]
    6ba6:	2b00      	cmp	r3, #0
    6ba8:	d003      	beq.n	6bb2 <_printf_float+0x1ae>
    6baa:	1c23      	adds	r3, r4, #0
    6bac:	222d      	movs	r2, #45	; 0x2d
    6bae:	3343      	adds	r3, #67	; 0x43
    6bb0:	701a      	strb	r2, [r3, #0]
    6bb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6bb4:	1c28      	adds	r0, r5, #0
    6bb6:	9300      	str	r3, [sp, #0]
    6bb8:	1c21      	adds	r1, r4, #0
    6bba:	9b08      	ldr	r3, [sp, #32]
    6bbc:	aa11      	add	r2, sp, #68	; 0x44
    6bbe:	f000 f95f 	bl	6e80 <_printf_common>
    6bc2:	1c43      	adds	r3, r0, #1
    6bc4:	d102      	bne.n	6bcc <_printf_float+0x1c8>
    6bc6:	2001      	movs	r0, #1
    6bc8:	4240      	negs	r0, r0
    6bca:	e156      	b.n	6e7a <_printf_float+0x476>
    6bcc:	6822      	ldr	r2, [r4, #0]
    6bce:	0553      	lsls	r3, r2, #21
    6bd0:	d404      	bmi.n	6bdc <_printf_float+0x1d8>
    6bd2:	1c28      	adds	r0, r5, #0
    6bd4:	9908      	ldr	r1, [sp, #32]
    6bd6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6bd8:	6923      	ldr	r3, [r4, #16]
    6bda:	e116      	b.n	6e0a <_printf_float+0x406>
    6bdc:	2f65      	cmp	r7, #101	; 0x65
    6bde:	d800      	bhi.n	6be2 <_printf_float+0x1de>
    6be0:	e0d4      	b.n	6d8c <_printf_float+0x388>
    6be2:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    6be4:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    6be6:	2200      	movs	r2, #0
    6be8:	2300      	movs	r3, #0
    6bea:	f004 fba3 	bl	b334 <__aeabi_dcmpeq>
    6bee:	2800      	cmp	r0, #0
    6bf0:	d02b      	beq.n	6c4a <_printf_float+0x246>
    6bf2:	2301      	movs	r3, #1
    6bf4:	1c28      	adds	r0, r5, #0
    6bf6:	9908      	ldr	r1, [sp, #32]
    6bf8:	4a57      	ldr	r2, [pc, #348]	; (6d58 <_printf_float+0x354>)
    6bfa:	9e09      	ldr	r6, [sp, #36]	; 0x24
    6bfc:	47b0      	blx	r6
    6bfe:	1c43      	adds	r3, r0, #1
    6c00:	d0e1      	beq.n	6bc6 <_printf_float+0x1c2>
    6c02:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6c04:	9a10      	ldr	r2, [sp, #64]	; 0x40
    6c06:	4293      	cmp	r3, r2
    6c08:	db07      	blt.n	6c1a <_printf_float+0x216>
    6c0a:	6823      	ldr	r3, [r4, #0]
    6c0c:	07db      	lsls	r3, r3, #31
    6c0e:	d404      	bmi.n	6c1a <_printf_float+0x216>
    6c10:	6823      	ldr	r3, [r4, #0]
    6c12:	079b      	lsls	r3, r3, #30
    6c14:	d500      	bpl.n	6c18 <_printf_float+0x214>
    6c16:	e11a      	b.n	6e4e <_printf_float+0x44a>
    6c18:	e113      	b.n	6e42 <_printf_float+0x43e>
    6c1a:	9e09      	ldr	r6, [sp, #36]	; 0x24
    6c1c:	1c28      	adds	r0, r5, #0
    6c1e:	9908      	ldr	r1, [sp, #32]
    6c20:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    6c22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6c24:	47b0      	blx	r6
    6c26:	2600      	movs	r6, #0
    6c28:	1c43      	adds	r3, r0, #1
    6c2a:	d0cc      	beq.n	6bc6 <_printf_float+0x1c2>
    6c2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6c2e:	3b01      	subs	r3, #1
    6c30:	429e      	cmp	r6, r3
    6c32:	daed      	bge.n	6c10 <_printf_float+0x20c>
    6c34:	1c22      	adds	r2, r4, #0
    6c36:	2301      	movs	r3, #1
    6c38:	1c28      	adds	r0, r5, #0
    6c3a:	9908      	ldr	r1, [sp, #32]
    6c3c:	321a      	adds	r2, #26
    6c3e:	9f09      	ldr	r7, [sp, #36]	; 0x24
    6c40:	47b8      	blx	r7
    6c42:	1c43      	adds	r3, r0, #1
    6c44:	d0bf      	beq.n	6bc6 <_printf_float+0x1c2>
    6c46:	3601      	adds	r6, #1
    6c48:	e7f0      	b.n	6c2c <_printf_float+0x228>
    6c4a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6c4c:	2b00      	cmp	r3, #0
    6c4e:	dc2b      	bgt.n	6ca8 <_printf_float+0x2a4>
    6c50:	2301      	movs	r3, #1
    6c52:	1c28      	adds	r0, r5, #0
    6c54:	9908      	ldr	r1, [sp, #32]
    6c56:	4a40      	ldr	r2, [pc, #256]	; (6d58 <_printf_float+0x354>)
    6c58:	9e09      	ldr	r6, [sp, #36]	; 0x24
    6c5a:	47b0      	blx	r6
    6c5c:	1c43      	adds	r3, r0, #1
    6c5e:	d0b2      	beq.n	6bc6 <_printf_float+0x1c2>
    6c60:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6c62:	2b00      	cmp	r3, #0
    6c64:	d105      	bne.n	6c72 <_printf_float+0x26e>
    6c66:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6c68:	2b00      	cmp	r3, #0
    6c6a:	d102      	bne.n	6c72 <_printf_float+0x26e>
    6c6c:	6823      	ldr	r3, [r4, #0]
    6c6e:	07db      	lsls	r3, r3, #31
    6c70:	d5ce      	bpl.n	6c10 <_printf_float+0x20c>
    6c72:	9e09      	ldr	r6, [sp, #36]	; 0x24
    6c74:	1c28      	adds	r0, r5, #0
    6c76:	9908      	ldr	r1, [sp, #32]
    6c78:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    6c7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6c7c:	47b0      	blx	r6
    6c7e:	2600      	movs	r6, #0
    6c80:	1c43      	adds	r3, r0, #1
    6c82:	d0a0      	beq.n	6bc6 <_printf_float+0x1c2>
    6c84:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6c86:	1c28      	adds	r0, r5, #0
    6c88:	425b      	negs	r3, r3
    6c8a:	9908      	ldr	r1, [sp, #32]
    6c8c:	429e      	cmp	r6, r3
    6c8e:	da08      	bge.n	6ca2 <_printf_float+0x29e>
    6c90:	1c22      	adds	r2, r4, #0
    6c92:	2301      	movs	r3, #1
    6c94:	321a      	adds	r2, #26
    6c96:	9f09      	ldr	r7, [sp, #36]	; 0x24
    6c98:	47b8      	blx	r7
    6c9a:	1c43      	adds	r3, r0, #1
    6c9c:	d093      	beq.n	6bc6 <_printf_float+0x1c2>
    6c9e:	3601      	adds	r6, #1
    6ca0:	e7f0      	b.n	6c84 <_printf_float+0x280>
    6ca2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6ca4:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6ca6:	e0b0      	b.n	6e0a <_printf_float+0x406>
    6ca8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6caa:	6da6      	ldr	r6, [r4, #88]	; 0x58
    6cac:	429e      	cmp	r6, r3
    6cae:	dd00      	ble.n	6cb2 <_printf_float+0x2ae>
    6cb0:	1c1e      	adds	r6, r3, #0
    6cb2:	2e00      	cmp	r6, #0
    6cb4:	dc01      	bgt.n	6cba <_printf_float+0x2b6>
    6cb6:	2300      	movs	r3, #0
    6cb8:	e014      	b.n	6ce4 <_printf_float+0x2e0>
    6cba:	1c33      	adds	r3, r6, #0
    6cbc:	1c28      	adds	r0, r5, #0
    6cbe:	9908      	ldr	r1, [sp, #32]
    6cc0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6cc2:	9f09      	ldr	r7, [sp, #36]	; 0x24
    6cc4:	47b8      	blx	r7
    6cc6:	1c43      	adds	r3, r0, #1
    6cc8:	d1f5      	bne.n	6cb6 <_printf_float+0x2b2>
    6cca:	e77c      	b.n	6bc6 <_printf_float+0x1c2>
    6ccc:	1c22      	adds	r2, r4, #0
    6cce:	2301      	movs	r3, #1
    6cd0:	1c28      	adds	r0, r5, #0
    6cd2:	9908      	ldr	r1, [sp, #32]
    6cd4:	321a      	adds	r2, #26
    6cd6:	9f09      	ldr	r7, [sp, #36]	; 0x24
    6cd8:	47b8      	blx	r7
    6cda:	1c43      	adds	r3, r0, #1
    6cdc:	d100      	bne.n	6ce0 <_printf_float+0x2dc>
    6cde:	e772      	b.n	6bc6 <_printf_float+0x1c2>
    6ce0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6ce2:	3301      	adds	r3, #1
    6ce4:	930d      	str	r3, [sp, #52]	; 0x34
    6ce6:	43f3      	mvns	r3, r6
    6ce8:	6da2      	ldr	r2, [r4, #88]	; 0x58
    6cea:	17db      	asrs	r3, r3, #31
    6cec:	990d      	ldr	r1, [sp, #52]	; 0x34
    6cee:	4033      	ands	r3, r6
    6cf0:	1ad3      	subs	r3, r2, r3
    6cf2:	4299      	cmp	r1, r3
    6cf4:	dbea      	blt.n	6ccc <_printf_float+0x2c8>
    6cf6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6cf8:	189e      	adds	r6, r3, r2
    6cfa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6cfc:	9a10      	ldr	r2, [sp, #64]	; 0x40
    6cfe:	4293      	cmp	r3, r2
    6d00:	db0e      	blt.n	6d20 <_printf_float+0x31c>
    6d02:	6823      	ldr	r3, [r4, #0]
    6d04:	07db      	lsls	r3, r3, #31
    6d06:	d40b      	bmi.n	6d20 <_printf_float+0x31c>
    6d08:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6d0a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6d0c:	18d7      	adds	r7, r2, r3
    6d0e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    6d10:	1bbf      	subs	r7, r7, r6
    6d12:	1a9b      	subs	r3, r3, r2
    6d14:	429f      	cmp	r7, r3
    6d16:	dd00      	ble.n	6d1a <_printf_float+0x316>
    6d18:	1c1f      	adds	r7, r3, #0
    6d1a:	2f00      	cmp	r7, #0
    6d1c:	dc09      	bgt.n	6d32 <_printf_float+0x32e>
    6d1e:	e011      	b.n	6d44 <_printf_float+0x340>
    6d20:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6d22:	1c28      	adds	r0, r5, #0
    6d24:	9908      	ldr	r1, [sp, #32]
    6d26:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    6d28:	9f09      	ldr	r7, [sp, #36]	; 0x24
    6d2a:	47b8      	blx	r7
    6d2c:	1c43      	adds	r3, r0, #1
    6d2e:	d1eb      	bne.n	6d08 <_printf_float+0x304>
    6d30:	e749      	b.n	6bc6 <_printf_float+0x1c2>
    6d32:	1c32      	adds	r2, r6, #0
    6d34:	1c3b      	adds	r3, r7, #0
    6d36:	1c28      	adds	r0, r5, #0
    6d38:	9908      	ldr	r1, [sp, #32]
    6d3a:	9e09      	ldr	r6, [sp, #36]	; 0x24
    6d3c:	47b0      	blx	r6
    6d3e:	1c43      	adds	r3, r0, #1
    6d40:	d100      	bne.n	6d44 <_printf_float+0x340>
    6d42:	e740      	b.n	6bc6 <_printf_float+0x1c2>
    6d44:	2300      	movs	r3, #0
    6d46:	e015      	b.n	6d74 <_printf_float+0x370>
    6d48:	0000e089 	.word	0x0000e089
    6d4c:	0000e08d 	.word	0x0000e08d
    6d50:	0000e091 	.word	0x0000e091
    6d54:	0000e095 	.word	0x0000e095
    6d58:	0000e0e2 	.word	0x0000e0e2
    6d5c:	1c22      	adds	r2, r4, #0
    6d5e:	2301      	movs	r3, #1
    6d60:	1c28      	adds	r0, r5, #0
    6d62:	9908      	ldr	r1, [sp, #32]
    6d64:	321a      	adds	r2, #26
    6d66:	9e09      	ldr	r6, [sp, #36]	; 0x24
    6d68:	47b0      	blx	r6
    6d6a:	1c43      	adds	r3, r0, #1
    6d6c:	d100      	bne.n	6d70 <_printf_float+0x36c>
    6d6e:	e72a      	b.n	6bc6 <_printf_float+0x1c2>
    6d70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6d72:	3301      	adds	r3, #1
    6d74:	930a      	str	r3, [sp, #40]	; 0x28
    6d76:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    6d78:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6d7a:	1a9a      	subs	r2, r3, r2
    6d7c:	43fb      	mvns	r3, r7
    6d7e:	17db      	asrs	r3, r3, #31
    6d80:	403b      	ands	r3, r7
    6d82:	1ad3      	subs	r3, r2, r3
    6d84:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6d86:	429a      	cmp	r2, r3
    6d88:	dbe8      	blt.n	6d5c <_printf_float+0x358>
    6d8a:	e741      	b.n	6c10 <_printf_float+0x20c>
    6d8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6d8e:	1c28      	adds	r0, r5, #0
    6d90:	9908      	ldr	r1, [sp, #32]
    6d92:	2b01      	cmp	r3, #1
    6d94:	dc02      	bgt.n	6d9c <_printf_float+0x398>
    6d96:	2301      	movs	r3, #1
    6d98:	421a      	tst	r2, r3
    6d9a:	d03c      	beq.n	6e16 <_printf_float+0x412>
    6d9c:	2301      	movs	r3, #1
    6d9e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6da0:	9f09      	ldr	r7, [sp, #36]	; 0x24
    6da2:	47b8      	blx	r7
    6da4:	1c43      	adds	r3, r0, #1
    6da6:	d100      	bne.n	6daa <_printf_float+0x3a6>
    6da8:	e70d      	b.n	6bc6 <_printf_float+0x1c2>
    6daa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6dac:	1c28      	adds	r0, r5, #0
    6dae:	9908      	ldr	r1, [sp, #32]
    6db0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    6db2:	9f09      	ldr	r7, [sp, #36]	; 0x24
    6db4:	47b8      	blx	r7
    6db6:	1c43      	adds	r3, r0, #1
    6db8:	d100      	bne.n	6dbc <_printf_float+0x3b8>
    6dba:	e704      	b.n	6bc6 <_printf_float+0x1c2>
    6dbc:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    6dbe:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    6dc0:	2300      	movs	r3, #0
    6dc2:	2200      	movs	r2, #0
    6dc4:	f004 fab6 	bl	b334 <__aeabi_dcmpeq>
    6dc8:	2300      	movs	r3, #0
    6dca:	2800      	cmp	r0, #0
    6dcc:	d112      	bne.n	6df4 <_printf_float+0x3f0>
    6dce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6dd0:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6dd2:	3201      	adds	r2, #1
    6dd4:	3b01      	subs	r3, #1
    6dd6:	1c28      	adds	r0, r5, #0
    6dd8:	9908      	ldr	r1, [sp, #32]
    6dda:	e01d      	b.n	6e18 <_printf_float+0x414>
    6ddc:	1c22      	adds	r2, r4, #0
    6dde:	2301      	movs	r3, #1
    6de0:	1c28      	adds	r0, r5, #0
    6de2:	9908      	ldr	r1, [sp, #32]
    6de4:	321a      	adds	r2, #26
    6de6:	9f09      	ldr	r7, [sp, #36]	; 0x24
    6de8:	47b8      	blx	r7
    6dea:	1c43      	adds	r3, r0, #1
    6dec:	d100      	bne.n	6df0 <_printf_float+0x3ec>
    6dee:	e6ea      	b.n	6bc6 <_printf_float+0x1c2>
    6df0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6df2:	3301      	adds	r3, #1
    6df4:	930a      	str	r3, [sp, #40]	; 0x28
    6df6:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6df8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6dfa:	3b01      	subs	r3, #1
    6dfc:	429a      	cmp	r2, r3
    6dfe:	dbed      	blt.n	6ddc <_printf_float+0x3d8>
    6e00:	1c22      	adds	r2, r4, #0
    6e02:	1c28      	adds	r0, r5, #0
    6e04:	1c33      	adds	r3, r6, #0
    6e06:	9908      	ldr	r1, [sp, #32]
    6e08:	3250      	adds	r2, #80	; 0x50
    6e0a:	9e09      	ldr	r6, [sp, #36]	; 0x24
    6e0c:	47b0      	blx	r6
    6e0e:	1c43      	adds	r3, r0, #1
    6e10:	d000      	beq.n	6e14 <_printf_float+0x410>
    6e12:	e6fd      	b.n	6c10 <_printf_float+0x20c>
    6e14:	e6d7      	b.n	6bc6 <_printf_float+0x1c2>
    6e16:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6e18:	9f09      	ldr	r7, [sp, #36]	; 0x24
    6e1a:	47b8      	blx	r7
    6e1c:	1c43      	adds	r3, r0, #1
    6e1e:	d1ef      	bne.n	6e00 <_printf_float+0x3fc>
    6e20:	e6d1      	b.n	6bc6 <_printf_float+0x1c2>
    6e22:	1c22      	adds	r2, r4, #0
    6e24:	2301      	movs	r3, #1
    6e26:	1c28      	adds	r0, r5, #0
    6e28:	9908      	ldr	r1, [sp, #32]
    6e2a:	3219      	adds	r2, #25
    6e2c:	9f09      	ldr	r7, [sp, #36]	; 0x24
    6e2e:	47b8      	blx	r7
    6e30:	1c43      	adds	r3, r0, #1
    6e32:	d100      	bne.n	6e36 <_printf_float+0x432>
    6e34:	e6c7      	b.n	6bc6 <_printf_float+0x1c2>
    6e36:	3601      	adds	r6, #1
    6e38:	68e3      	ldr	r3, [r4, #12]
    6e3a:	9a11      	ldr	r2, [sp, #68]	; 0x44
    6e3c:	1a9b      	subs	r3, r3, r2
    6e3e:	429e      	cmp	r6, r3
    6e40:	dbef      	blt.n	6e22 <_printf_float+0x41e>
    6e42:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6e44:	68e0      	ldr	r0, [r4, #12]
    6e46:	4298      	cmp	r0, r3
    6e48:	da17      	bge.n	6e7a <_printf_float+0x476>
    6e4a:	1c18      	adds	r0, r3, #0
    6e4c:	e015      	b.n	6e7a <_printf_float+0x476>
    6e4e:	2600      	movs	r6, #0
    6e50:	e7f2      	b.n	6e38 <_printf_float+0x434>
    6e52:	4331      	orrs	r1, r6
    6e54:	6021      	str	r1, [r4, #0]
    6e56:	9101      	str	r1, [sp, #4]
    6e58:	2123      	movs	r1, #35	; 0x23
    6e5a:	9000      	str	r0, [sp, #0]
    6e5c:	a806      	add	r0, sp, #24
    6e5e:	1809      	adds	r1, r1, r0
    6e60:	9102      	str	r1, [sp, #8]
    6e62:	a90f      	add	r1, sp, #60	; 0x3c
    6e64:	9103      	str	r1, [sp, #12]
    6e66:	a910      	add	r1, sp, #64	; 0x40
    6e68:	9105      	str	r1, [sp, #20]
    6e6a:	2100      	movs	r1, #0
    6e6c:	9704      	str	r7, [sp, #16]
    6e6e:	9106      	str	r1, [sp, #24]
    6e70:	1c28      	adds	r0, r5, #0
    6e72:	f7ff fd31 	bl	68d8 <__cvt>
    6e76:	900a      	str	r0, [sp, #40]	; 0x28
    6e78:	e647      	b.n	6b0a <_printf_float+0x106>
    6e7a:	b013      	add	sp, #76	; 0x4c
    6e7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6e7e:	46c0      	nop			; (mov r8, r8)

00006e80 <_printf_common>:
    6e80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    6e82:	1c17      	adds	r7, r2, #0
    6e84:	9301      	str	r3, [sp, #4]
    6e86:	690a      	ldr	r2, [r1, #16]
    6e88:	688b      	ldr	r3, [r1, #8]
    6e8a:	9000      	str	r0, [sp, #0]
    6e8c:	1c0c      	adds	r4, r1, #0
    6e8e:	4293      	cmp	r3, r2
    6e90:	da00      	bge.n	6e94 <_printf_common+0x14>
    6e92:	1c13      	adds	r3, r2, #0
    6e94:	1c22      	adds	r2, r4, #0
    6e96:	603b      	str	r3, [r7, #0]
    6e98:	3243      	adds	r2, #67	; 0x43
    6e9a:	7812      	ldrb	r2, [r2, #0]
    6e9c:	2a00      	cmp	r2, #0
    6e9e:	d001      	beq.n	6ea4 <_printf_common+0x24>
    6ea0:	3301      	adds	r3, #1
    6ea2:	603b      	str	r3, [r7, #0]
    6ea4:	6823      	ldr	r3, [r4, #0]
    6ea6:	069b      	lsls	r3, r3, #26
    6ea8:	d502      	bpl.n	6eb0 <_printf_common+0x30>
    6eaa:	683b      	ldr	r3, [r7, #0]
    6eac:	3302      	adds	r3, #2
    6eae:	603b      	str	r3, [r7, #0]
    6eb0:	2506      	movs	r5, #6
    6eb2:	6823      	ldr	r3, [r4, #0]
    6eb4:	401d      	ands	r5, r3
    6eb6:	d01e      	beq.n	6ef6 <_printf_common+0x76>
    6eb8:	1c23      	adds	r3, r4, #0
    6eba:	3343      	adds	r3, #67	; 0x43
    6ebc:	781b      	ldrb	r3, [r3, #0]
    6ebe:	1e5a      	subs	r2, r3, #1
    6ec0:	4193      	sbcs	r3, r2
    6ec2:	6822      	ldr	r2, [r4, #0]
    6ec4:	0692      	lsls	r2, r2, #26
    6ec6:	d51c      	bpl.n	6f02 <_printf_common+0x82>
    6ec8:	2030      	movs	r0, #48	; 0x30
    6eca:	18e1      	adds	r1, r4, r3
    6ecc:	3140      	adds	r1, #64	; 0x40
    6ece:	70c8      	strb	r0, [r1, #3]
    6ed0:	1c21      	adds	r1, r4, #0
    6ed2:	1c5a      	adds	r2, r3, #1
    6ed4:	3145      	adds	r1, #69	; 0x45
    6ed6:	7809      	ldrb	r1, [r1, #0]
    6ed8:	18a2      	adds	r2, r4, r2
    6eda:	3240      	adds	r2, #64	; 0x40
    6edc:	3302      	adds	r3, #2
    6ede:	70d1      	strb	r1, [r2, #3]
    6ee0:	e00f      	b.n	6f02 <_printf_common+0x82>
    6ee2:	1c22      	adds	r2, r4, #0
    6ee4:	2301      	movs	r3, #1
    6ee6:	9800      	ldr	r0, [sp, #0]
    6ee8:	9901      	ldr	r1, [sp, #4]
    6eea:	3219      	adds	r2, #25
    6eec:	9e08      	ldr	r6, [sp, #32]
    6eee:	47b0      	blx	r6
    6ef0:	1c43      	adds	r3, r0, #1
    6ef2:	d00e      	beq.n	6f12 <_printf_common+0x92>
    6ef4:	3501      	adds	r5, #1
    6ef6:	68e3      	ldr	r3, [r4, #12]
    6ef8:	683a      	ldr	r2, [r7, #0]
    6efa:	1a9b      	subs	r3, r3, r2
    6efc:	429d      	cmp	r5, r3
    6efe:	dbf0      	blt.n	6ee2 <_printf_common+0x62>
    6f00:	e7da      	b.n	6eb8 <_printf_common+0x38>
    6f02:	1c22      	adds	r2, r4, #0
    6f04:	9800      	ldr	r0, [sp, #0]
    6f06:	9901      	ldr	r1, [sp, #4]
    6f08:	3243      	adds	r2, #67	; 0x43
    6f0a:	9d08      	ldr	r5, [sp, #32]
    6f0c:	47a8      	blx	r5
    6f0e:	1c43      	adds	r3, r0, #1
    6f10:	d102      	bne.n	6f18 <_printf_common+0x98>
    6f12:	2001      	movs	r0, #1
    6f14:	4240      	negs	r0, r0
    6f16:	e020      	b.n	6f5a <_printf_common+0xda>
    6f18:	2306      	movs	r3, #6
    6f1a:	6820      	ldr	r0, [r4, #0]
    6f1c:	68e1      	ldr	r1, [r4, #12]
    6f1e:	683a      	ldr	r2, [r7, #0]
    6f20:	4003      	ands	r3, r0
    6f22:	2500      	movs	r5, #0
    6f24:	2b04      	cmp	r3, #4
    6f26:	d103      	bne.n	6f30 <_printf_common+0xb0>
    6f28:	1a8d      	subs	r5, r1, r2
    6f2a:	43eb      	mvns	r3, r5
    6f2c:	17db      	asrs	r3, r3, #31
    6f2e:	401d      	ands	r5, r3
    6f30:	68a3      	ldr	r3, [r4, #8]
    6f32:	6922      	ldr	r2, [r4, #16]
    6f34:	4293      	cmp	r3, r2
    6f36:	dd01      	ble.n	6f3c <_printf_common+0xbc>
    6f38:	1a9b      	subs	r3, r3, r2
    6f3a:	18ed      	adds	r5, r5, r3
    6f3c:	2700      	movs	r7, #0
    6f3e:	42af      	cmp	r7, r5
    6f40:	da0a      	bge.n	6f58 <_printf_common+0xd8>
    6f42:	1c22      	adds	r2, r4, #0
    6f44:	2301      	movs	r3, #1
    6f46:	9800      	ldr	r0, [sp, #0]
    6f48:	9901      	ldr	r1, [sp, #4]
    6f4a:	321a      	adds	r2, #26
    6f4c:	9e08      	ldr	r6, [sp, #32]
    6f4e:	47b0      	blx	r6
    6f50:	1c43      	adds	r3, r0, #1
    6f52:	d0de      	beq.n	6f12 <_printf_common+0x92>
    6f54:	3701      	adds	r7, #1
    6f56:	e7f2      	b.n	6f3e <_printf_common+0xbe>
    6f58:	2000      	movs	r0, #0
    6f5a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

00006f5c <_printf_i>:
    6f5c:	b5f0      	push	{r4, r5, r6, r7, lr}
    6f5e:	b08b      	sub	sp, #44	; 0x2c
    6f60:	9206      	str	r2, [sp, #24]
    6f62:	1c0a      	adds	r2, r1, #0
    6f64:	3243      	adds	r2, #67	; 0x43
    6f66:	9307      	str	r3, [sp, #28]
    6f68:	9005      	str	r0, [sp, #20]
    6f6a:	9204      	str	r2, [sp, #16]
    6f6c:	7e0a      	ldrb	r2, [r1, #24]
    6f6e:	1c0c      	adds	r4, r1, #0
    6f70:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6f72:	2a6e      	cmp	r2, #110	; 0x6e
    6f74:	d100      	bne.n	6f78 <_printf_i+0x1c>
    6f76:	e0a8      	b.n	70ca <_printf_i+0x16e>
    6f78:	d811      	bhi.n	6f9e <_printf_i+0x42>
    6f7a:	2a63      	cmp	r2, #99	; 0x63
    6f7c:	d022      	beq.n	6fc4 <_printf_i+0x68>
    6f7e:	d809      	bhi.n	6f94 <_printf_i+0x38>
    6f80:	2a00      	cmp	r2, #0
    6f82:	d100      	bne.n	6f86 <_printf_i+0x2a>
    6f84:	e0b2      	b.n	70ec <_printf_i+0x190>
    6f86:	2a58      	cmp	r2, #88	; 0x58
    6f88:	d000      	beq.n	6f8c <_printf_i+0x30>
    6f8a:	e0c2      	b.n	7112 <_printf_i+0x1b6>
    6f8c:	3145      	adds	r1, #69	; 0x45
    6f8e:	700a      	strb	r2, [r1, #0]
    6f90:	4a7c      	ldr	r2, [pc, #496]	; (7184 <_printf_i+0x228>)
    6f92:	e04f      	b.n	7034 <_printf_i+0xd8>
    6f94:	2a64      	cmp	r2, #100	; 0x64
    6f96:	d01d      	beq.n	6fd4 <_printf_i+0x78>
    6f98:	2a69      	cmp	r2, #105	; 0x69
    6f9a:	d01b      	beq.n	6fd4 <_printf_i+0x78>
    6f9c:	e0b9      	b.n	7112 <_printf_i+0x1b6>
    6f9e:	2a73      	cmp	r2, #115	; 0x73
    6fa0:	d100      	bne.n	6fa4 <_printf_i+0x48>
    6fa2:	e0a7      	b.n	70f4 <_printf_i+0x198>
    6fa4:	d809      	bhi.n	6fba <_printf_i+0x5e>
    6fa6:	2a6f      	cmp	r2, #111	; 0x6f
    6fa8:	d029      	beq.n	6ffe <_printf_i+0xa2>
    6faa:	2a70      	cmp	r2, #112	; 0x70
    6fac:	d000      	beq.n	6fb0 <_printf_i+0x54>
    6fae:	e0b0      	b.n	7112 <_printf_i+0x1b6>
    6fb0:	2220      	movs	r2, #32
    6fb2:	6809      	ldr	r1, [r1, #0]
    6fb4:	430a      	orrs	r2, r1
    6fb6:	6022      	str	r2, [r4, #0]
    6fb8:	e037      	b.n	702a <_printf_i+0xce>
    6fba:	2a75      	cmp	r2, #117	; 0x75
    6fbc:	d01f      	beq.n	6ffe <_printf_i+0xa2>
    6fbe:	2a78      	cmp	r2, #120	; 0x78
    6fc0:	d033      	beq.n	702a <_printf_i+0xce>
    6fc2:	e0a6      	b.n	7112 <_printf_i+0x1b6>
    6fc4:	1c0e      	adds	r6, r1, #0
    6fc6:	681a      	ldr	r2, [r3, #0]
    6fc8:	3642      	adds	r6, #66	; 0x42
    6fca:	1d11      	adds	r1, r2, #4
    6fcc:	6019      	str	r1, [r3, #0]
    6fce:	6813      	ldr	r3, [r2, #0]
    6fd0:	7033      	strb	r3, [r6, #0]
    6fd2:	e0a1      	b.n	7118 <_printf_i+0x1bc>
    6fd4:	6821      	ldr	r1, [r4, #0]
    6fd6:	681a      	ldr	r2, [r3, #0]
    6fd8:	0608      	lsls	r0, r1, #24
    6fda:	d406      	bmi.n	6fea <_printf_i+0x8e>
    6fdc:	0649      	lsls	r1, r1, #25
    6fde:	d504      	bpl.n	6fea <_printf_i+0x8e>
    6fe0:	1d11      	adds	r1, r2, #4
    6fe2:	6019      	str	r1, [r3, #0]
    6fe4:	2300      	movs	r3, #0
    6fe6:	5ed5      	ldrsh	r5, [r2, r3]
    6fe8:	e002      	b.n	6ff0 <_printf_i+0x94>
    6fea:	1d11      	adds	r1, r2, #4
    6fec:	6019      	str	r1, [r3, #0]
    6fee:	6815      	ldr	r5, [r2, #0]
    6ff0:	2d00      	cmp	r5, #0
    6ff2:	da3b      	bge.n	706c <_printf_i+0x110>
    6ff4:	232d      	movs	r3, #45	; 0x2d
    6ff6:	9a04      	ldr	r2, [sp, #16]
    6ff8:	426d      	negs	r5, r5
    6ffa:	7013      	strb	r3, [r2, #0]
    6ffc:	e036      	b.n	706c <_printf_i+0x110>
    6ffe:	6821      	ldr	r1, [r4, #0]
    7000:	681a      	ldr	r2, [r3, #0]
    7002:	0608      	lsls	r0, r1, #24
    7004:	d406      	bmi.n	7014 <_printf_i+0xb8>
    7006:	0649      	lsls	r1, r1, #25
    7008:	d504      	bpl.n	7014 <_printf_i+0xb8>
    700a:	6815      	ldr	r5, [r2, #0]
    700c:	1d11      	adds	r1, r2, #4
    700e:	6019      	str	r1, [r3, #0]
    7010:	b2ad      	uxth	r5, r5
    7012:	e002      	b.n	701a <_printf_i+0xbe>
    7014:	1d11      	adds	r1, r2, #4
    7016:	6019      	str	r1, [r3, #0]
    7018:	6815      	ldr	r5, [r2, #0]
    701a:	4b5a      	ldr	r3, [pc, #360]	; (7184 <_printf_i+0x228>)
    701c:	7e22      	ldrb	r2, [r4, #24]
    701e:	9303      	str	r3, [sp, #12]
    7020:	270a      	movs	r7, #10
    7022:	2a6f      	cmp	r2, #111	; 0x6f
    7024:	d11d      	bne.n	7062 <_printf_i+0x106>
    7026:	2708      	movs	r7, #8
    7028:	e01b      	b.n	7062 <_printf_i+0x106>
    702a:	1c22      	adds	r2, r4, #0
    702c:	2178      	movs	r1, #120	; 0x78
    702e:	3245      	adds	r2, #69	; 0x45
    7030:	7011      	strb	r1, [r2, #0]
    7032:	4a55      	ldr	r2, [pc, #340]	; (7188 <_printf_i+0x22c>)
    7034:	6819      	ldr	r1, [r3, #0]
    7036:	9203      	str	r2, [sp, #12]
    7038:	1d08      	adds	r0, r1, #4
    703a:	6822      	ldr	r2, [r4, #0]
    703c:	6018      	str	r0, [r3, #0]
    703e:	680d      	ldr	r5, [r1, #0]
    7040:	0610      	lsls	r0, r2, #24
    7042:	d402      	bmi.n	704a <_printf_i+0xee>
    7044:	0650      	lsls	r0, r2, #25
    7046:	d500      	bpl.n	704a <_printf_i+0xee>
    7048:	b2ad      	uxth	r5, r5
    704a:	07d3      	lsls	r3, r2, #31
    704c:	d502      	bpl.n	7054 <_printf_i+0xf8>
    704e:	2320      	movs	r3, #32
    7050:	431a      	orrs	r2, r3
    7052:	6022      	str	r2, [r4, #0]
    7054:	2710      	movs	r7, #16
    7056:	2d00      	cmp	r5, #0
    7058:	d103      	bne.n	7062 <_printf_i+0x106>
    705a:	2320      	movs	r3, #32
    705c:	6822      	ldr	r2, [r4, #0]
    705e:	439a      	bics	r2, r3
    7060:	6022      	str	r2, [r4, #0]
    7062:	1c23      	adds	r3, r4, #0
    7064:	2200      	movs	r2, #0
    7066:	3343      	adds	r3, #67	; 0x43
    7068:	701a      	strb	r2, [r3, #0]
    706a:	e002      	b.n	7072 <_printf_i+0x116>
    706c:	270a      	movs	r7, #10
    706e:	4b45      	ldr	r3, [pc, #276]	; (7184 <_printf_i+0x228>)
    7070:	9303      	str	r3, [sp, #12]
    7072:	6863      	ldr	r3, [r4, #4]
    7074:	60a3      	str	r3, [r4, #8]
    7076:	2b00      	cmp	r3, #0
    7078:	db03      	blt.n	7082 <_printf_i+0x126>
    707a:	2204      	movs	r2, #4
    707c:	6821      	ldr	r1, [r4, #0]
    707e:	4391      	bics	r1, r2
    7080:	6021      	str	r1, [r4, #0]
    7082:	2d00      	cmp	r5, #0
    7084:	d102      	bne.n	708c <_printf_i+0x130>
    7086:	9e04      	ldr	r6, [sp, #16]
    7088:	2b00      	cmp	r3, #0
    708a:	d00e      	beq.n	70aa <_printf_i+0x14e>
    708c:	9e04      	ldr	r6, [sp, #16]
    708e:	1c28      	adds	r0, r5, #0
    7090:	1c39      	adds	r1, r7, #0
    7092:	f7fe fcab 	bl	59ec <__aeabi_uidivmod>
    7096:	9b03      	ldr	r3, [sp, #12]
    7098:	3e01      	subs	r6, #1
    709a:	5c5b      	ldrb	r3, [r3, r1]
    709c:	1c28      	adds	r0, r5, #0
    709e:	7033      	strb	r3, [r6, #0]
    70a0:	1c39      	adds	r1, r7, #0
    70a2:	f7fe fc1d 	bl	58e0 <__aeabi_uidiv>
    70a6:	1e05      	subs	r5, r0, #0
    70a8:	d1f1      	bne.n	708e <_printf_i+0x132>
    70aa:	2f08      	cmp	r7, #8
    70ac:	d109      	bne.n	70c2 <_printf_i+0x166>
    70ae:	6823      	ldr	r3, [r4, #0]
    70b0:	07db      	lsls	r3, r3, #31
    70b2:	d506      	bpl.n	70c2 <_printf_i+0x166>
    70b4:	6863      	ldr	r3, [r4, #4]
    70b6:	6922      	ldr	r2, [r4, #16]
    70b8:	4293      	cmp	r3, r2
    70ba:	dc02      	bgt.n	70c2 <_printf_i+0x166>
    70bc:	2330      	movs	r3, #48	; 0x30
    70be:	3e01      	subs	r6, #1
    70c0:	7033      	strb	r3, [r6, #0]
    70c2:	9b04      	ldr	r3, [sp, #16]
    70c4:	1b9b      	subs	r3, r3, r6
    70c6:	6123      	str	r3, [r4, #16]
    70c8:	e02b      	b.n	7122 <_printf_i+0x1c6>
    70ca:	6809      	ldr	r1, [r1, #0]
    70cc:	681a      	ldr	r2, [r3, #0]
    70ce:	0608      	lsls	r0, r1, #24
    70d0:	d407      	bmi.n	70e2 <_printf_i+0x186>
    70d2:	0649      	lsls	r1, r1, #25
    70d4:	d505      	bpl.n	70e2 <_printf_i+0x186>
    70d6:	1d11      	adds	r1, r2, #4
    70d8:	6019      	str	r1, [r3, #0]
    70da:	6813      	ldr	r3, [r2, #0]
    70dc:	8aa2      	ldrh	r2, [r4, #20]
    70de:	801a      	strh	r2, [r3, #0]
    70e0:	e004      	b.n	70ec <_printf_i+0x190>
    70e2:	1d11      	adds	r1, r2, #4
    70e4:	6019      	str	r1, [r3, #0]
    70e6:	6813      	ldr	r3, [r2, #0]
    70e8:	6962      	ldr	r2, [r4, #20]
    70ea:	601a      	str	r2, [r3, #0]
    70ec:	2300      	movs	r3, #0
    70ee:	9e04      	ldr	r6, [sp, #16]
    70f0:	6123      	str	r3, [r4, #16]
    70f2:	e016      	b.n	7122 <_printf_i+0x1c6>
    70f4:	681a      	ldr	r2, [r3, #0]
    70f6:	1d11      	adds	r1, r2, #4
    70f8:	6019      	str	r1, [r3, #0]
    70fa:	6816      	ldr	r6, [r2, #0]
    70fc:	2100      	movs	r1, #0
    70fe:	1c30      	adds	r0, r6, #0
    7100:	6862      	ldr	r2, [r4, #4]
    7102:	f7ff f9e9 	bl	64d8 <memchr>
    7106:	2800      	cmp	r0, #0
    7108:	d001      	beq.n	710e <_printf_i+0x1b2>
    710a:	1b80      	subs	r0, r0, r6
    710c:	6060      	str	r0, [r4, #4]
    710e:	6863      	ldr	r3, [r4, #4]
    7110:	e003      	b.n	711a <_printf_i+0x1be>
    7112:	1c26      	adds	r6, r4, #0
    7114:	3642      	adds	r6, #66	; 0x42
    7116:	7032      	strb	r2, [r6, #0]
    7118:	2301      	movs	r3, #1
    711a:	6123      	str	r3, [r4, #16]
    711c:	2300      	movs	r3, #0
    711e:	9a04      	ldr	r2, [sp, #16]
    7120:	7013      	strb	r3, [r2, #0]
    7122:	9b07      	ldr	r3, [sp, #28]
    7124:	9805      	ldr	r0, [sp, #20]
    7126:	9300      	str	r3, [sp, #0]
    7128:	1c21      	adds	r1, r4, #0
    712a:	9b06      	ldr	r3, [sp, #24]
    712c:	aa09      	add	r2, sp, #36	; 0x24
    712e:	f7ff fea7 	bl	6e80 <_printf_common>
    7132:	1c43      	adds	r3, r0, #1
    7134:	d102      	bne.n	713c <_printf_i+0x1e0>
    7136:	2001      	movs	r0, #1
    7138:	4240      	negs	r0, r0
    713a:	e021      	b.n	7180 <_printf_i+0x224>
    713c:	6923      	ldr	r3, [r4, #16]
    713e:	9805      	ldr	r0, [sp, #20]
    7140:	9906      	ldr	r1, [sp, #24]
    7142:	1c32      	adds	r2, r6, #0
    7144:	9d07      	ldr	r5, [sp, #28]
    7146:	47a8      	blx	r5
    7148:	1c43      	adds	r3, r0, #1
    714a:	d0f4      	beq.n	7136 <_printf_i+0x1da>
    714c:	6823      	ldr	r3, [r4, #0]
    714e:	079b      	lsls	r3, r3, #30
    7150:	d405      	bmi.n	715e <_printf_i+0x202>
    7152:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7154:	68e0      	ldr	r0, [r4, #12]
    7156:	4298      	cmp	r0, r3
    7158:	da12      	bge.n	7180 <_printf_i+0x224>
    715a:	1c18      	adds	r0, r3, #0
    715c:	e010      	b.n	7180 <_printf_i+0x224>
    715e:	2500      	movs	r5, #0
    7160:	68e3      	ldr	r3, [r4, #12]
    7162:	9a09      	ldr	r2, [sp, #36]	; 0x24
    7164:	1a9b      	subs	r3, r3, r2
    7166:	429d      	cmp	r5, r3
    7168:	daf3      	bge.n	7152 <_printf_i+0x1f6>
    716a:	1c22      	adds	r2, r4, #0
    716c:	2301      	movs	r3, #1
    716e:	9805      	ldr	r0, [sp, #20]
    7170:	9906      	ldr	r1, [sp, #24]
    7172:	3219      	adds	r2, #25
    7174:	9e07      	ldr	r6, [sp, #28]
    7176:	47b0      	blx	r6
    7178:	1c43      	adds	r3, r0, #1
    717a:	d0dc      	beq.n	7136 <_printf_i+0x1da>
    717c:	3501      	adds	r5, #1
    717e:	e7ef      	b.n	7160 <_printf_i+0x204>
    7180:	b00b      	add	sp, #44	; 0x2c
    7182:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7184:	0000e099 	.word	0x0000e099
    7188:	0000e0aa 	.word	0x0000e0aa

0000718c <_scanf_float>:
    718c:	b5f0      	push	{r4, r5, r6, r7, lr}
    718e:	1c15      	adds	r5, r2, #0
    7190:	2200      	movs	r2, #0
    7192:	b08b      	sub	sp, #44	; 0x2c
    7194:	9306      	str	r3, [sp, #24]
    7196:	688b      	ldr	r3, [r1, #8]
    7198:	9205      	str	r2, [sp, #20]
    719a:	325d      	adds	r2, #93	; 0x5d
    719c:	1c0e      	adds	r6, r1, #0
    719e:	32ff      	adds	r2, #255	; 0xff
    71a0:	1e59      	subs	r1, r3, #1
    71a2:	9002      	str	r0, [sp, #8]
    71a4:	4291      	cmp	r1, r2
    71a6:	d905      	bls.n	71b4 <_scanf_float+0x28>
    71a8:	3b5e      	subs	r3, #94	; 0x5e
    71aa:	3bff      	subs	r3, #255	; 0xff
    71ac:	9305      	str	r3, [sp, #20]
    71ae:	235e      	movs	r3, #94	; 0x5e
    71b0:	33ff      	adds	r3, #255	; 0xff
    71b2:	60b3      	str	r3, [r6, #8]
    71b4:	23f0      	movs	r3, #240	; 0xf0
    71b6:	6832      	ldr	r2, [r6, #0]
    71b8:	00db      	lsls	r3, r3, #3
    71ba:	4313      	orrs	r3, r2
    71bc:	6033      	str	r3, [r6, #0]
    71be:	1c33      	adds	r3, r6, #0
    71c0:	2400      	movs	r4, #0
    71c2:	331c      	adds	r3, #28
    71c4:	1c1f      	adds	r7, r3, #0
    71c6:	9304      	str	r3, [sp, #16]
    71c8:	9403      	str	r4, [sp, #12]
    71ca:	9409      	str	r4, [sp, #36]	; 0x24
    71cc:	9408      	str	r4, [sp, #32]
    71ce:	9400      	str	r4, [sp, #0]
    71d0:	9407      	str	r4, [sp, #28]
    71d2:	68b2      	ldr	r2, [r6, #8]
    71d4:	2a00      	cmp	r2, #0
    71d6:	d100      	bne.n	71da <_scanf_float+0x4e>
    71d8:	e0e1      	b.n	739e <_scanf_float+0x212>
    71da:	682b      	ldr	r3, [r5, #0]
    71dc:	781b      	ldrb	r3, [r3, #0]
    71de:	2b49      	cmp	r3, #73	; 0x49
    71e0:	d077      	beq.n	72d2 <_scanf_float+0x146>
    71e2:	d818      	bhi.n	7216 <_scanf_float+0x8a>
    71e4:	2b39      	cmp	r3, #57	; 0x39
    71e6:	d80d      	bhi.n	7204 <_scanf_float+0x78>
    71e8:	2b31      	cmp	r3, #49	; 0x31
    71ea:	d242      	bcs.n	7272 <_scanf_float+0xe6>
    71ec:	2b2d      	cmp	r3, #45	; 0x2d
    71ee:	d049      	beq.n	7284 <_scanf_float+0xf8>
    71f0:	d802      	bhi.n	71f8 <_scanf_float+0x6c>
    71f2:	2b2b      	cmp	r3, #43	; 0x2b
    71f4:	d046      	beq.n	7284 <_scanf_float+0xf8>
    71f6:	e0d2      	b.n	739e <_scanf_float+0x212>
    71f8:	2b2e      	cmp	r3, #46	; 0x2e
    71fa:	d100      	bne.n	71fe <_scanf_float+0x72>
    71fc:	e08d      	b.n	731a <_scanf_float+0x18e>
    71fe:	2b30      	cmp	r3, #48	; 0x30
    7200:	d025      	beq.n	724e <_scanf_float+0xc2>
    7202:	e0cc      	b.n	739e <_scanf_float+0x212>
    7204:	2b45      	cmp	r3, #69	; 0x45
    7206:	d100      	bne.n	720a <_scanf_float+0x7e>
    7208:	e090      	b.n	732c <_scanf_float+0x1a0>
    720a:	2b46      	cmp	r3, #70	; 0x46
    720c:	d079      	beq.n	7302 <_scanf_float+0x176>
    720e:	2b41      	cmp	r3, #65	; 0x41
    7210:	d000      	beq.n	7214 <_scanf_float+0x88>
    7212:	e0c4      	b.n	739e <_scanf_float+0x212>
    7214:	e058      	b.n	72c8 <_scanf_float+0x13c>
    7216:	2b65      	cmp	r3, #101	; 0x65
    7218:	d100      	bne.n	721c <_scanf_float+0x90>
    721a:	e087      	b.n	732c <_scanf_float+0x1a0>
    721c:	d80a      	bhi.n	7234 <_scanf_float+0xa8>
    721e:	2b54      	cmp	r3, #84	; 0x54
    7220:	d073      	beq.n	730a <_scanf_float+0x17e>
    7222:	d802      	bhi.n	722a <_scanf_float+0x9e>
    7224:	2b4e      	cmp	r3, #78	; 0x4e
    7226:	d035      	beq.n	7294 <_scanf_float+0x108>
    7228:	e0b9      	b.n	739e <_scanf_float+0x212>
    722a:	2b59      	cmp	r3, #89	; 0x59
    722c:	d071      	beq.n	7312 <_scanf_float+0x186>
    722e:	2b61      	cmp	r3, #97	; 0x61
    7230:	d04a      	beq.n	72c8 <_scanf_float+0x13c>
    7232:	e0b4      	b.n	739e <_scanf_float+0x212>
    7234:	2b6e      	cmp	r3, #110	; 0x6e
    7236:	d02d      	beq.n	7294 <_scanf_float+0x108>
    7238:	d804      	bhi.n	7244 <_scanf_float+0xb8>
    723a:	2b66      	cmp	r3, #102	; 0x66
    723c:	d061      	beq.n	7302 <_scanf_float+0x176>
    723e:	2b69      	cmp	r3, #105	; 0x69
    7240:	d047      	beq.n	72d2 <_scanf_float+0x146>
    7242:	e0ac      	b.n	739e <_scanf_float+0x212>
    7244:	2b74      	cmp	r3, #116	; 0x74
    7246:	d060      	beq.n	730a <_scanf_float+0x17e>
    7248:	2b79      	cmp	r3, #121	; 0x79
    724a:	d062      	beq.n	7312 <_scanf_float+0x186>
    724c:	e0a7      	b.n	739e <_scanf_float+0x212>
    724e:	6831      	ldr	r1, [r6, #0]
    7250:	05c8      	lsls	r0, r1, #23
    7252:	d50e      	bpl.n	7272 <_scanf_float+0xe6>
    7254:	2380      	movs	r3, #128	; 0x80
    7256:	4399      	bics	r1, r3
    7258:	9b00      	ldr	r3, [sp, #0]
    725a:	6031      	str	r1, [r6, #0]
    725c:	3301      	adds	r3, #1
    725e:	9300      	str	r3, [sp, #0]
    7260:	9b05      	ldr	r3, [sp, #20]
    7262:	2b00      	cmp	r3, #0
    7264:	d100      	bne.n	7268 <_scanf_float+0xdc>
    7266:	e082      	b.n	736e <_scanf_float+0x1e2>
    7268:	3b01      	subs	r3, #1
    726a:	3201      	adds	r2, #1
    726c:	9305      	str	r3, [sp, #20]
    726e:	60b2      	str	r2, [r6, #8]
    7270:	e07d      	b.n	736e <_scanf_float+0x1e2>
    7272:	9a03      	ldr	r2, [sp, #12]
    7274:	1912      	adds	r2, r2, r4
    7276:	2a00      	cmp	r2, #0
    7278:	d000      	beq.n	727c <_scanf_float+0xf0>
    727a:	e090      	b.n	739e <_scanf_float+0x212>
    727c:	4ab3      	ldr	r2, [pc, #716]	; (754c <_scanf_float+0x3c0>)
    727e:	6831      	ldr	r1, [r6, #0]
    7280:	400a      	ands	r2, r1
    7282:	e005      	b.n	7290 <_scanf_float+0x104>
    7284:	2180      	movs	r1, #128	; 0x80
    7286:	6832      	ldr	r2, [r6, #0]
    7288:	420a      	tst	r2, r1
    728a:	d100      	bne.n	728e <_scanf_float+0x102>
    728c:	e087      	b.n	739e <_scanf_float+0x212>
    728e:	438a      	bics	r2, r1
    7290:	6032      	str	r2, [r6, #0]
    7292:	e06a      	b.n	736a <_scanf_float+0x1de>
    7294:	9a03      	ldr	r2, [sp, #12]
    7296:	2a00      	cmp	r2, #0
    7298:	d10e      	bne.n	72b8 <_scanf_float+0x12c>
    729a:	9a00      	ldr	r2, [sp, #0]
    729c:	2a00      	cmp	r2, #0
    729e:	d10e      	bne.n	72be <_scanf_float+0x132>
    72a0:	6831      	ldr	r1, [r6, #0]
    72a2:	22e0      	movs	r2, #224	; 0xe0
    72a4:	1c08      	adds	r0, r1, #0
    72a6:	00d2      	lsls	r2, r2, #3
    72a8:	4010      	ands	r0, r2
    72aa:	4290      	cmp	r0, r2
    72ac:	d107      	bne.n	72be <_scanf_float+0x132>
    72ae:	4aa8      	ldr	r2, [pc, #672]	; (7550 <_scanf_float+0x3c4>)
    72b0:	400a      	ands	r2, r1
    72b2:	6032      	str	r2, [r6, #0]
    72b4:	2201      	movs	r2, #1
    72b6:	e057      	b.n	7368 <_scanf_float+0x1dc>
    72b8:	9a03      	ldr	r2, [sp, #12]
    72ba:	2a02      	cmp	r2, #2
    72bc:	d053      	beq.n	7366 <_scanf_float+0x1da>
    72be:	2c01      	cmp	r4, #1
    72c0:	d01c      	beq.n	72fc <_scanf_float+0x170>
    72c2:	2c04      	cmp	r4, #4
    72c4:	d01a      	beq.n	72fc <_scanf_float+0x170>
    72c6:	e06a      	b.n	739e <_scanf_float+0x212>
    72c8:	9a03      	ldr	r2, [sp, #12]
    72ca:	2a01      	cmp	r2, #1
    72cc:	d167      	bne.n	739e <_scanf_float+0x212>
    72ce:	2202      	movs	r2, #2
    72d0:	e04a      	b.n	7368 <_scanf_float+0x1dc>
    72d2:	2c00      	cmp	r4, #0
    72d4:	d10e      	bne.n	72f4 <_scanf_float+0x168>
    72d6:	9a00      	ldr	r2, [sp, #0]
    72d8:	2a00      	cmp	r2, #0
    72da:	d163      	bne.n	73a4 <_scanf_float+0x218>
    72dc:	6831      	ldr	r1, [r6, #0]
    72de:	22e0      	movs	r2, #224	; 0xe0
    72e0:	1c08      	adds	r0, r1, #0
    72e2:	00d2      	lsls	r2, r2, #3
    72e4:	4010      	ands	r0, r2
    72e6:	4290      	cmp	r0, r2
    72e8:	d160      	bne.n	73ac <_scanf_float+0x220>
    72ea:	4a99      	ldr	r2, [pc, #612]	; (7550 <_scanf_float+0x3c4>)
    72ec:	3401      	adds	r4, #1
    72ee:	400a      	ands	r2, r1
    72f0:	6032      	str	r2, [r6, #0]
    72f2:	e03a      	b.n	736a <_scanf_float+0x1de>
    72f4:	21fd      	movs	r1, #253	; 0xfd
    72f6:	1ee2      	subs	r2, r4, #3
    72f8:	420a      	tst	r2, r1
    72fa:	d150      	bne.n	739e <_scanf_float+0x212>
    72fc:	3401      	adds	r4, #1
    72fe:	b2e4      	uxtb	r4, r4
    7300:	e033      	b.n	736a <_scanf_float+0x1de>
    7302:	2c02      	cmp	r4, #2
    7304:	d14b      	bne.n	739e <_scanf_float+0x212>
    7306:	2403      	movs	r4, #3
    7308:	e02f      	b.n	736a <_scanf_float+0x1de>
    730a:	2c06      	cmp	r4, #6
    730c:	d147      	bne.n	739e <_scanf_float+0x212>
    730e:	2407      	movs	r4, #7
    7310:	e02b      	b.n	736a <_scanf_float+0x1de>
    7312:	2c07      	cmp	r4, #7
    7314:	d143      	bne.n	739e <_scanf_float+0x212>
    7316:	2408      	movs	r4, #8
    7318:	e027      	b.n	736a <_scanf_float+0x1de>
    731a:	6831      	ldr	r1, [r6, #0]
    731c:	058a      	lsls	r2, r1, #22
    731e:	d53e      	bpl.n	739e <_scanf_float+0x212>
    7320:	4a8c      	ldr	r2, [pc, #560]	; (7554 <_scanf_float+0x3c8>)
    7322:	400a      	ands	r2, r1
    7324:	6032      	str	r2, [r6, #0]
    7326:	9a00      	ldr	r2, [sp, #0]
    7328:	9207      	str	r2, [sp, #28]
    732a:	e01e      	b.n	736a <_scanf_float+0x1de>
    732c:	22a0      	movs	r2, #160	; 0xa0
    732e:	2080      	movs	r0, #128	; 0x80
    7330:	6831      	ldr	r1, [r6, #0]
    7332:	00d2      	lsls	r2, r2, #3
    7334:	400a      	ands	r2, r1
    7336:	00c0      	lsls	r0, r0, #3
    7338:	4282      	cmp	r2, r0
    733a:	d004      	beq.n	7346 <_scanf_float+0x1ba>
    733c:	4201      	tst	r1, r0
    733e:	d02e      	beq.n	739e <_scanf_float+0x212>
    7340:	9a00      	ldr	r2, [sp, #0]
    7342:	2a00      	cmp	r2, #0
    7344:	d032      	beq.n	73ac <_scanf_float+0x220>
    7346:	058a      	lsls	r2, r1, #22
    7348:	d404      	bmi.n	7354 <_scanf_float+0x1c8>
    734a:	9a00      	ldr	r2, [sp, #0]
    734c:	9807      	ldr	r0, [sp, #28]
    734e:	9709      	str	r7, [sp, #36]	; 0x24
    7350:	1a12      	subs	r2, r2, r0
    7352:	9208      	str	r2, [sp, #32]
    7354:	4a7e      	ldr	r2, [pc, #504]	; (7550 <_scanf_float+0x3c4>)
    7356:	400a      	ands	r2, r1
    7358:	21c0      	movs	r1, #192	; 0xc0
    735a:	0049      	lsls	r1, r1, #1
    735c:	430a      	orrs	r2, r1
    735e:	6032      	str	r2, [r6, #0]
    7360:	2200      	movs	r2, #0
    7362:	9200      	str	r2, [sp, #0]
    7364:	e001      	b.n	736a <_scanf_float+0x1de>
    7366:	2203      	movs	r2, #3
    7368:	9203      	str	r2, [sp, #12]
    736a:	703b      	strb	r3, [r7, #0]
    736c:	3701      	adds	r7, #1
    736e:	68b3      	ldr	r3, [r6, #8]
    7370:	3b01      	subs	r3, #1
    7372:	60b3      	str	r3, [r6, #8]
    7374:	6933      	ldr	r3, [r6, #16]
    7376:	3301      	adds	r3, #1
    7378:	6133      	str	r3, [r6, #16]
    737a:	686b      	ldr	r3, [r5, #4]
    737c:	3b01      	subs	r3, #1
    737e:	606b      	str	r3, [r5, #4]
    7380:	2b00      	cmp	r3, #0
    7382:	dd03      	ble.n	738c <_scanf_float+0x200>
    7384:	682b      	ldr	r3, [r5, #0]
    7386:	3301      	adds	r3, #1
    7388:	602b      	str	r3, [r5, #0]
    738a:	e722      	b.n	71d2 <_scanf_float+0x46>
    738c:	23c0      	movs	r3, #192	; 0xc0
    738e:	005b      	lsls	r3, r3, #1
    7390:	58f3      	ldr	r3, [r6, r3]
    7392:	9802      	ldr	r0, [sp, #8]
    7394:	1c29      	adds	r1, r5, #0
    7396:	4798      	blx	r3
    7398:	2800      	cmp	r0, #0
    739a:	d100      	bne.n	739e <_scanf_float+0x212>
    739c:	e719      	b.n	71d2 <_scanf_float+0x46>
    739e:	9b00      	ldr	r3, [sp, #0]
    73a0:	2b00      	cmp	r3, #0
    73a2:	d003      	beq.n	73ac <_scanf_float+0x220>
    73a4:	6832      	ldr	r2, [r6, #0]
    73a6:	4b6c      	ldr	r3, [pc, #432]	; (7558 <_scanf_float+0x3cc>)
    73a8:	4013      	ands	r3, r2
    73aa:	6033      	str	r3, [r6, #0]
    73ac:	9b03      	ldr	r3, [sp, #12]
    73ae:	3b01      	subs	r3, #1
    73b0:	2b01      	cmp	r3, #1
    73b2:	d810      	bhi.n	73d6 <_scanf_float+0x24a>
    73b4:	9b04      	ldr	r3, [sp, #16]
    73b6:	429f      	cmp	r7, r3
    73b8:	d90b      	bls.n	73d2 <_scanf_float+0x246>
    73ba:	23be      	movs	r3, #190	; 0xbe
    73bc:	3f01      	subs	r7, #1
    73be:	005b      	lsls	r3, r3, #1
    73c0:	58f3      	ldr	r3, [r6, r3]
    73c2:	7839      	ldrb	r1, [r7, #0]
    73c4:	9802      	ldr	r0, [sp, #8]
    73c6:	1c2a      	adds	r2, r5, #0
    73c8:	4798      	blx	r3
    73ca:	6933      	ldr	r3, [r6, #16]
    73cc:	3b01      	subs	r3, #1
    73ce:	6133      	str	r3, [r6, #16]
    73d0:	e7f0      	b.n	73b4 <_scanf_float+0x228>
    73d2:	2401      	movs	r4, #1
    73d4:	e0b7      	b.n	7546 <_scanf_float+0x3ba>
    73d6:	1e63      	subs	r3, r4, #1
    73d8:	2b06      	cmp	r3, #6
    73da:	d82a      	bhi.n	7432 <_scanf_float+0x2a6>
    73dc:	2c02      	cmp	r4, #2
    73de:	d919      	bls.n	7414 <_scanf_float+0x288>
    73e0:	9405      	str	r4, [sp, #20]
    73e2:	9703      	str	r7, [sp, #12]
    73e4:	9b05      	ldr	r3, [sp, #20]
    73e6:	3b01      	subs	r3, #1
    73e8:	b2db      	uxtb	r3, r3
    73ea:	9305      	str	r3, [sp, #20]
    73ec:	2b02      	cmp	r3, #2
    73ee:	d00d      	beq.n	740c <_scanf_float+0x280>
    73f0:	9b03      	ldr	r3, [sp, #12]
    73f2:	9802      	ldr	r0, [sp, #8]
    73f4:	3b01      	subs	r3, #1
    73f6:	9303      	str	r3, [sp, #12]
    73f8:	7819      	ldrb	r1, [r3, #0]
    73fa:	23be      	movs	r3, #190	; 0xbe
    73fc:	005b      	lsls	r3, r3, #1
    73fe:	58f3      	ldr	r3, [r6, r3]
    7400:	1c2a      	adds	r2, r5, #0
    7402:	4798      	blx	r3
    7404:	6933      	ldr	r3, [r6, #16]
    7406:	3b01      	subs	r3, #1
    7408:	6133      	str	r3, [r6, #16]
    740a:	e7eb      	b.n	73e4 <_scanf_float+0x258>
    740c:	3c03      	subs	r4, #3
    740e:	b2e4      	uxtb	r4, r4
    7410:	1b3f      	subs	r7, r7, r4
    7412:	e00e      	b.n	7432 <_scanf_float+0x2a6>
    7414:	9b04      	ldr	r3, [sp, #16]
    7416:	429f      	cmp	r7, r3
    7418:	d9db      	bls.n	73d2 <_scanf_float+0x246>
    741a:	23be      	movs	r3, #190	; 0xbe
    741c:	3f01      	subs	r7, #1
    741e:	005b      	lsls	r3, r3, #1
    7420:	58f3      	ldr	r3, [r6, r3]
    7422:	7839      	ldrb	r1, [r7, #0]
    7424:	9802      	ldr	r0, [sp, #8]
    7426:	1c2a      	adds	r2, r5, #0
    7428:	4798      	blx	r3
    742a:	6933      	ldr	r3, [r6, #16]
    742c:	3b01      	subs	r3, #1
    742e:	6133      	str	r3, [r6, #16]
    7430:	e7f0      	b.n	7414 <_scanf_float+0x288>
    7432:	6833      	ldr	r3, [r6, #0]
    7434:	05da      	lsls	r2, r3, #23
    7436:	d52b      	bpl.n	7490 <_scanf_float+0x304>
    7438:	055b      	lsls	r3, r3, #21
    743a:	d50e      	bpl.n	745a <_scanf_float+0x2ce>
    743c:	9b04      	ldr	r3, [sp, #16]
    743e:	429f      	cmp	r7, r3
    7440:	d9c7      	bls.n	73d2 <_scanf_float+0x246>
    7442:	23be      	movs	r3, #190	; 0xbe
    7444:	3f01      	subs	r7, #1
    7446:	005b      	lsls	r3, r3, #1
    7448:	58f3      	ldr	r3, [r6, r3]
    744a:	7839      	ldrb	r1, [r7, #0]
    744c:	9802      	ldr	r0, [sp, #8]
    744e:	1c2a      	adds	r2, r5, #0
    7450:	4798      	blx	r3
    7452:	6933      	ldr	r3, [r6, #16]
    7454:	3b01      	subs	r3, #1
    7456:	6133      	str	r3, [r6, #16]
    7458:	e7f0      	b.n	743c <_scanf_float+0x2b0>
    745a:	6933      	ldr	r3, [r6, #16]
    745c:	1e7c      	subs	r4, r7, #1
    745e:	7821      	ldrb	r1, [r4, #0]
    7460:	3b01      	subs	r3, #1
    7462:	6133      	str	r3, [r6, #16]
    7464:	2965      	cmp	r1, #101	; 0x65
    7466:	d00c      	beq.n	7482 <_scanf_float+0x2f6>
    7468:	2945      	cmp	r1, #69	; 0x45
    746a:	d00a      	beq.n	7482 <_scanf_float+0x2f6>
    746c:	23be      	movs	r3, #190	; 0xbe
    746e:	005b      	lsls	r3, r3, #1
    7470:	58f3      	ldr	r3, [r6, r3]
    7472:	9802      	ldr	r0, [sp, #8]
    7474:	1c2a      	adds	r2, r5, #0
    7476:	4798      	blx	r3
    7478:	6933      	ldr	r3, [r6, #16]
    747a:	1ebc      	subs	r4, r7, #2
    747c:	3b01      	subs	r3, #1
    747e:	7821      	ldrb	r1, [r4, #0]
    7480:	6133      	str	r3, [r6, #16]
    7482:	23be      	movs	r3, #190	; 0xbe
    7484:	005b      	lsls	r3, r3, #1
    7486:	58f3      	ldr	r3, [r6, r3]
    7488:	9802      	ldr	r0, [sp, #8]
    748a:	1c2a      	adds	r2, r5, #0
    748c:	4798      	blx	r3
    748e:	1c27      	adds	r7, r4, #0
    7490:	2410      	movs	r4, #16
    7492:	6833      	ldr	r3, [r6, #0]
    7494:	401c      	ands	r4, r3
    7496:	d155      	bne.n	7544 <_scanf_float+0x3b8>
    7498:	23c0      	movs	r3, #192	; 0xc0
    749a:	703c      	strb	r4, [r7, #0]
    749c:	6832      	ldr	r2, [r6, #0]
    749e:	00db      	lsls	r3, r3, #3
    74a0:	4013      	ands	r3, r2
    74a2:	2280      	movs	r2, #128	; 0x80
    74a4:	00d2      	lsls	r2, r2, #3
    74a6:	4293      	cmp	r3, r2
    74a8:	d106      	bne.n	74b8 <_scanf_float+0x32c>
    74aa:	9a07      	ldr	r2, [sp, #28]
    74ac:	9b00      	ldr	r3, [sp, #0]
    74ae:	1a9b      	subs	r3, r3, r2
    74b0:	425a      	negs	r2, r3
    74b2:	2b00      	cmp	r3, #0
    74b4:	d10d      	bne.n	74d2 <_scanf_float+0x346>
    74b6:	e018      	b.n	74ea <_scanf_float+0x35e>
    74b8:	9b08      	ldr	r3, [sp, #32]
    74ba:	2b00      	cmp	r3, #0
    74bc:	d015      	beq.n	74ea <_scanf_float+0x35e>
    74be:	9b09      	ldr	r3, [sp, #36]	; 0x24
    74c0:	1c22      	adds	r2, r4, #0
    74c2:	1c59      	adds	r1, r3, #1
    74c4:	9802      	ldr	r0, [sp, #8]
    74c6:	230a      	movs	r3, #10
    74c8:	f001 fb1e 	bl	8b08 <_strtol_r>
    74cc:	9b08      	ldr	r3, [sp, #32]
    74ce:	9f09      	ldr	r7, [sp, #36]	; 0x24
    74d0:	1ac2      	subs	r2, r0, r3
    74d2:	1c33      	adds	r3, r6, #0
    74d4:	3370      	adds	r3, #112	; 0x70
    74d6:	33ff      	adds	r3, #255	; 0xff
    74d8:	429f      	cmp	r7, r3
    74da:	d302      	bcc.n	74e2 <_scanf_float+0x356>
    74dc:	1c37      	adds	r7, r6, #0
    74de:	376f      	adds	r7, #111	; 0x6f
    74e0:	37ff      	adds	r7, #255	; 0xff
    74e2:	1c38      	adds	r0, r7, #0
    74e4:	491d      	ldr	r1, [pc, #116]	; (755c <_scanf_float+0x3d0>)
    74e6:	f000 fbf9 	bl	7cdc <siprintf>
    74ea:	2200      	movs	r2, #0
    74ec:	9802      	ldr	r0, [sp, #8]
    74ee:	9904      	ldr	r1, [sp, #16]
    74f0:	f000 fcf0 	bl	7ed4 <_strtod_r>
    74f4:	9b06      	ldr	r3, [sp, #24]
    74f6:	6832      	ldr	r2, [r6, #0]
    74f8:	9000      	str	r0, [sp, #0]
    74fa:	9101      	str	r1, [sp, #4]
    74fc:	681b      	ldr	r3, [r3, #0]
    74fe:	0791      	lsls	r1, r2, #30
    7500:	d401      	bmi.n	7506 <_scanf_float+0x37a>
    7502:	0752      	lsls	r2, r2, #29
    7504:	d508      	bpl.n	7518 <_scanf_float+0x38c>
    7506:	9906      	ldr	r1, [sp, #24]
    7508:	1d1a      	adds	r2, r3, #4
    750a:	600a      	str	r2, [r1, #0]
    750c:	681b      	ldr	r3, [r3, #0]
    750e:	9900      	ldr	r1, [sp, #0]
    7510:	9a01      	ldr	r2, [sp, #4]
    7512:	6019      	str	r1, [r3, #0]
    7514:	605a      	str	r2, [r3, #4]
    7516:	e011      	b.n	753c <_scanf_float+0x3b0>
    7518:	9906      	ldr	r1, [sp, #24]
    751a:	1d1a      	adds	r2, r3, #4
    751c:	600a      	str	r2, [r1, #0]
    751e:	9800      	ldr	r0, [sp, #0]
    7520:	9901      	ldr	r1, [sp, #4]
    7522:	681d      	ldr	r5, [r3, #0]
    7524:	f000 fa90 	bl	7a48 <__fpclassifyd>
    7528:	2800      	cmp	r0, #0
    752a:	d102      	bne.n	7532 <_scanf_float+0x3a6>
    752c:	f000 fb88 	bl	7c40 <nanf>
    7530:	e003      	b.n	753a <_scanf_float+0x3ae>
    7532:	9800      	ldr	r0, [sp, #0]
    7534:	9901      	ldr	r1, [sp, #4]
    7536:	f005 fd67 	bl	d008 <__aeabi_d2f>
    753a:	6028      	str	r0, [r5, #0]
    753c:	68f3      	ldr	r3, [r6, #12]
    753e:	3301      	adds	r3, #1
    7540:	60f3      	str	r3, [r6, #12]
    7542:	e000      	b.n	7546 <_scanf_float+0x3ba>
    7544:	2400      	movs	r4, #0
    7546:	1c20      	adds	r0, r4, #0
    7548:	b00b      	add	sp, #44	; 0x2c
    754a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    754c:	fffffe7f 	.word	0xfffffe7f
    7550:	fffff87f 	.word	0xfffff87f
    7554:	fffffd7f 	.word	0xfffffd7f
    7558:	fffffeff 	.word	0xfffffeff
    755c:	0000e0bb 	.word	0x0000e0bb

00007560 <_scanf_chars>:
    7560:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    7562:	1c15      	adds	r5, r2, #0
    7564:	688a      	ldr	r2, [r1, #8]
    7566:	9001      	str	r0, [sp, #4]
    7568:	1c0c      	adds	r4, r1, #0
    756a:	2a00      	cmp	r2, #0
    756c:	d106      	bne.n	757c <_scanf_chars+0x1c>
    756e:	698a      	ldr	r2, [r1, #24]
    7570:	1e51      	subs	r1, r2, #1
    7572:	418a      	sbcs	r2, r1
    7574:	2101      	movs	r1, #1
    7576:	4252      	negs	r2, r2
    7578:	430a      	orrs	r2, r1
    757a:	60a2      	str	r2, [r4, #8]
    757c:	6822      	ldr	r2, [r4, #0]
    757e:	06d2      	lsls	r2, r2, #27
    7580:	d403      	bmi.n	758a <_scanf_chars+0x2a>
    7582:	681a      	ldr	r2, [r3, #0]
    7584:	1d11      	adds	r1, r2, #4
    7586:	6019      	str	r1, [r3, #0]
    7588:	6817      	ldr	r7, [r2, #0]
    758a:	2600      	movs	r6, #0
    758c:	69a0      	ldr	r0, [r4, #24]
    758e:	2800      	cmp	r0, #0
    7590:	d11d      	bne.n	75ce <_scanf_chars+0x6e>
    7592:	6823      	ldr	r3, [r4, #0]
    7594:	3601      	adds	r6, #1
    7596:	06db      	lsls	r3, r3, #27
    7598:	d403      	bmi.n	75a2 <_scanf_chars+0x42>
    759a:	682b      	ldr	r3, [r5, #0]
    759c:	781b      	ldrb	r3, [r3, #0]
    759e:	703b      	strb	r3, [r7, #0]
    75a0:	3701      	adds	r7, #1
    75a2:	682a      	ldr	r2, [r5, #0]
    75a4:	686b      	ldr	r3, [r5, #4]
    75a6:	3201      	adds	r2, #1
    75a8:	602a      	str	r2, [r5, #0]
    75aa:	68a2      	ldr	r2, [r4, #8]
    75ac:	3b01      	subs	r3, #1
    75ae:	3a01      	subs	r2, #1
    75b0:	606b      	str	r3, [r5, #4]
    75b2:	60a2      	str	r2, [r4, #8]
    75b4:	2a00      	cmp	r2, #0
    75b6:	d01f      	beq.n	75f8 <_scanf_chars+0x98>
    75b8:	2b00      	cmp	r3, #0
    75ba:	dce7      	bgt.n	758c <_scanf_chars+0x2c>
    75bc:	23c0      	movs	r3, #192	; 0xc0
    75be:	005b      	lsls	r3, r3, #1
    75c0:	58e3      	ldr	r3, [r4, r3]
    75c2:	9801      	ldr	r0, [sp, #4]
    75c4:	1c29      	adds	r1, r5, #0
    75c6:	4798      	blx	r3
    75c8:	2800      	cmp	r0, #0
    75ca:	d0df      	beq.n	758c <_scanf_chars+0x2c>
    75cc:	e014      	b.n	75f8 <_scanf_chars+0x98>
    75ce:	2801      	cmp	r0, #1
    75d0:	d108      	bne.n	75e4 <_scanf_chars+0x84>
    75d2:	682b      	ldr	r3, [r5, #0]
    75d4:	6962      	ldr	r2, [r4, #20]
    75d6:	781b      	ldrb	r3, [r3, #0]
    75d8:	5cd3      	ldrb	r3, [r2, r3]
    75da:	2b00      	cmp	r3, #0
    75dc:	d1d9      	bne.n	7592 <_scanf_chars+0x32>
    75de:	2e00      	cmp	r6, #0
    75e0:	d019      	beq.n	7616 <_scanf_chars+0xb6>
    75e2:	e009      	b.n	75f8 <_scanf_chars+0x98>
    75e4:	2802      	cmp	r0, #2
    75e6:	d107      	bne.n	75f8 <_scanf_chars+0x98>
    75e8:	682b      	ldr	r3, [r5, #0]
    75ea:	4a0b      	ldr	r2, [pc, #44]	; (7618 <_scanf_chars+0xb8>)
    75ec:	781b      	ldrb	r3, [r3, #0]
    75ee:	6812      	ldr	r2, [r2, #0]
    75f0:	18d3      	adds	r3, r2, r3
    75f2:	785b      	ldrb	r3, [r3, #1]
    75f4:	071b      	lsls	r3, r3, #28
    75f6:	d5cc      	bpl.n	7592 <_scanf_chars+0x32>
    75f8:	2310      	movs	r3, #16
    75fa:	6822      	ldr	r2, [r4, #0]
    75fc:	4013      	ands	r3, r2
    75fe:	d106      	bne.n	760e <_scanf_chars+0xae>
    7600:	68e2      	ldr	r2, [r4, #12]
    7602:	3201      	adds	r2, #1
    7604:	60e2      	str	r2, [r4, #12]
    7606:	69a2      	ldr	r2, [r4, #24]
    7608:	2a00      	cmp	r2, #0
    760a:	d000      	beq.n	760e <_scanf_chars+0xae>
    760c:	703b      	strb	r3, [r7, #0]
    760e:	2000      	movs	r0, #0
    7610:	6923      	ldr	r3, [r4, #16]
    7612:	199e      	adds	r6, r3, r6
    7614:	6126      	str	r6, [r4, #16]
    7616:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    7618:	20000138 	.word	0x20000138

0000761c <_scanf_i>:
    761c:	b5f0      	push	{r4, r5, r6, r7, lr}
    761e:	1c0c      	adds	r4, r1, #0
    7620:	b08b      	sub	sp, #44	; 0x2c
    7622:	9301      	str	r3, [sp, #4]
    7624:	4b74      	ldr	r3, [pc, #464]	; (77f8 <_scanf_i+0x1dc>)
    7626:	9004      	str	r0, [sp, #16]
    7628:	1c16      	adds	r6, r2, #0
    762a:	aa07      	add	r2, sp, #28
    762c:	cb23      	ldmia	r3!, {r0, r1, r5}
    762e:	c223      	stmia	r2!, {r0, r1, r5}
    7630:	4b72      	ldr	r3, [pc, #456]	; (77fc <_scanf_i+0x1e0>)
    7632:	9305      	str	r3, [sp, #20]
    7634:	69a3      	ldr	r3, [r4, #24]
    7636:	2b03      	cmp	r3, #3
    7638:	d001      	beq.n	763e <_scanf_i+0x22>
    763a:	4b71      	ldr	r3, [pc, #452]	; (7800 <_scanf_i+0x1e4>)
    763c:	9305      	str	r3, [sp, #20]
    763e:	2200      	movs	r2, #0
    7640:	68a3      	ldr	r3, [r4, #8]
    7642:	9203      	str	r2, [sp, #12]
    7644:	325d      	adds	r2, #93	; 0x5d
    7646:	1e59      	subs	r1, r3, #1
    7648:	32ff      	adds	r2, #255	; 0xff
    764a:	4291      	cmp	r1, r2
    764c:	d905      	bls.n	765a <_scanf_i+0x3e>
    764e:	3b5e      	subs	r3, #94	; 0x5e
    7650:	3bff      	subs	r3, #255	; 0xff
    7652:	9303      	str	r3, [sp, #12]
    7654:	235e      	movs	r3, #94	; 0x5e
    7656:	33ff      	adds	r3, #255	; 0xff
    7658:	60a3      	str	r3, [r4, #8]
    765a:	1c23      	adds	r3, r4, #0
    765c:	331c      	adds	r3, #28
    765e:	9300      	str	r3, [sp, #0]
    7660:	23d0      	movs	r3, #208	; 0xd0
    7662:	2700      	movs	r7, #0
    7664:	6822      	ldr	r2, [r4, #0]
    7666:	011b      	lsls	r3, r3, #4
    7668:	4313      	orrs	r3, r2
    766a:	6023      	str	r3, [r4, #0]
    766c:	9b00      	ldr	r3, [sp, #0]
    766e:	9302      	str	r3, [sp, #8]
    7670:	6832      	ldr	r2, [r6, #0]
    7672:	00bb      	lsls	r3, r7, #2
    7674:	7811      	ldrb	r1, [r2, #0]
    7676:	aa07      	add	r2, sp, #28
    7678:	5898      	ldr	r0, [r3, r2]
    767a:	2202      	movs	r2, #2
    767c:	f7fe ff2c 	bl	64d8 <memchr>
    7680:	2800      	cmp	r0, #0
    7682:	d039      	beq.n	76f8 <_scanf_i+0xdc>
    7684:	2f01      	cmp	r7, #1
    7686:	d10d      	bne.n	76a4 <_scanf_i+0x88>
    7688:	6863      	ldr	r3, [r4, #4]
    768a:	2b00      	cmp	r3, #0
    768c:	d106      	bne.n	769c <_scanf_i+0x80>
    768e:	3308      	adds	r3, #8
    7690:	6822      	ldr	r2, [r4, #0]
    7692:	6063      	str	r3, [r4, #4]
    7694:	33f9      	adds	r3, #249	; 0xf9
    7696:	33ff      	adds	r3, #255	; 0xff
    7698:	4313      	orrs	r3, r2
    769a:	6023      	str	r3, [r4, #0]
    769c:	4b59      	ldr	r3, [pc, #356]	; (7804 <_scanf_i+0x1e8>)
    769e:	6822      	ldr	r2, [r4, #0]
    76a0:	4013      	ands	r3, r2
    76a2:	e00d      	b.n	76c0 <_scanf_i+0xa4>
    76a4:	2f02      	cmp	r7, #2
    76a6:	d10c      	bne.n	76c2 <_scanf_i+0xa6>
    76a8:	22c0      	movs	r2, #192	; 0xc0
    76aa:	2180      	movs	r1, #128	; 0x80
    76ac:	6823      	ldr	r3, [r4, #0]
    76ae:	00d2      	lsls	r2, r2, #3
    76b0:	401a      	ands	r2, r3
    76b2:	0089      	lsls	r1, r1, #2
    76b4:	428a      	cmp	r2, r1
    76b6:	d122      	bne.n	76fe <_scanf_i+0xe2>
    76b8:	2210      	movs	r2, #16
    76ba:	6062      	str	r2, [r4, #4]
    76bc:	32f0      	adds	r2, #240	; 0xf0
    76be:	4313      	orrs	r3, r2
    76c0:	6023      	str	r3, [r4, #0]
    76c2:	68a3      	ldr	r3, [r4, #8]
    76c4:	1e5a      	subs	r2, r3, #1
    76c6:	60a2      	str	r2, [r4, #8]
    76c8:	2b00      	cmp	r3, #0
    76ca:	d015      	beq.n	76f8 <_scanf_i+0xdc>
    76cc:	9b02      	ldr	r3, [sp, #8]
    76ce:	1c5d      	adds	r5, r3, #1
    76d0:	6833      	ldr	r3, [r6, #0]
    76d2:	1c5a      	adds	r2, r3, #1
    76d4:	6032      	str	r2, [r6, #0]
    76d6:	781b      	ldrb	r3, [r3, #0]
    76d8:	9a02      	ldr	r2, [sp, #8]
    76da:	9502      	str	r5, [sp, #8]
    76dc:	7013      	strb	r3, [r2, #0]
    76de:	6873      	ldr	r3, [r6, #4]
    76e0:	3b01      	subs	r3, #1
    76e2:	6073      	str	r3, [r6, #4]
    76e4:	2b00      	cmp	r3, #0
    76e6:	dc07      	bgt.n	76f8 <_scanf_i+0xdc>
    76e8:	23c0      	movs	r3, #192	; 0xc0
    76ea:	005b      	lsls	r3, r3, #1
    76ec:	58e3      	ldr	r3, [r4, r3]
    76ee:	9804      	ldr	r0, [sp, #16]
    76f0:	1c31      	adds	r1, r6, #0
    76f2:	4798      	blx	r3
    76f4:	2800      	cmp	r0, #0
    76f6:	d144      	bne.n	7782 <_scanf_i+0x166>
    76f8:	3701      	adds	r7, #1
    76fa:	2f03      	cmp	r7, #3
    76fc:	d1b8      	bne.n	7670 <_scanf_i+0x54>
    76fe:	6863      	ldr	r3, [r4, #4]
    7700:	2b00      	cmp	r3, #0
    7702:	d101      	bne.n	7708 <_scanf_i+0xec>
    7704:	330a      	adds	r3, #10
    7706:	6063      	str	r3, [r4, #4]
    7708:	2110      	movs	r1, #16
    770a:	2700      	movs	r7, #0
    770c:	6863      	ldr	r3, [r4, #4]
    770e:	6960      	ldr	r0, [r4, #20]
    7710:	1ac9      	subs	r1, r1, r3
    7712:	4b3d      	ldr	r3, [pc, #244]	; (7808 <_scanf_i+0x1ec>)
    7714:	18c9      	adds	r1, r1, r3
    7716:	f000 f9d1 	bl	7abc <__sccl>
    771a:	9d02      	ldr	r5, [sp, #8]
    771c:	68a3      	ldr	r3, [r4, #8]
    771e:	2b00      	cmp	r3, #0
    7720:	d030      	beq.n	7784 <_scanf_i+0x168>
    7722:	6832      	ldr	r2, [r6, #0]
    7724:	6960      	ldr	r0, [r4, #20]
    7726:	7811      	ldrb	r1, [r2, #0]
    7728:	5c40      	ldrb	r0, [r0, r1]
    772a:	2800      	cmp	r0, #0
    772c:	d02a      	beq.n	7784 <_scanf_i+0x168>
    772e:	2930      	cmp	r1, #48	; 0x30
    7730:	d10b      	bne.n	774a <_scanf_i+0x12e>
    7732:	6821      	ldr	r1, [r4, #0]
    7734:	0509      	lsls	r1, r1, #20
    7736:	d508      	bpl.n	774a <_scanf_i+0x12e>
    7738:	9a03      	ldr	r2, [sp, #12]
    773a:	3701      	adds	r7, #1
    773c:	2a00      	cmp	r2, #0
    773e:	d00b      	beq.n	7758 <_scanf_i+0x13c>
    7740:	3a01      	subs	r2, #1
    7742:	3301      	adds	r3, #1
    7744:	9203      	str	r2, [sp, #12]
    7746:	60a3      	str	r3, [r4, #8]
    7748:	e006      	b.n	7758 <_scanf_i+0x13c>
    774a:	6821      	ldr	r1, [r4, #0]
    774c:	4b2f      	ldr	r3, [pc, #188]	; (780c <_scanf_i+0x1f0>)
    774e:	400b      	ands	r3, r1
    7750:	6023      	str	r3, [r4, #0]
    7752:	7813      	ldrb	r3, [r2, #0]
    7754:	702b      	strb	r3, [r5, #0]
    7756:	3501      	adds	r5, #1
    7758:	6873      	ldr	r3, [r6, #4]
    775a:	3b01      	subs	r3, #1
    775c:	6073      	str	r3, [r6, #4]
    775e:	2b00      	cmp	r3, #0
    7760:	dd03      	ble.n	776a <_scanf_i+0x14e>
    7762:	6833      	ldr	r3, [r6, #0]
    7764:	3301      	adds	r3, #1
    7766:	6033      	str	r3, [r6, #0]
    7768:	e007      	b.n	777a <_scanf_i+0x15e>
    776a:	23c0      	movs	r3, #192	; 0xc0
    776c:	005b      	lsls	r3, r3, #1
    776e:	58e3      	ldr	r3, [r4, r3]
    7770:	9804      	ldr	r0, [sp, #16]
    7772:	1c31      	adds	r1, r6, #0
    7774:	4798      	blx	r3
    7776:	2800      	cmp	r0, #0
    7778:	d104      	bne.n	7784 <_scanf_i+0x168>
    777a:	68a3      	ldr	r3, [r4, #8]
    777c:	3b01      	subs	r3, #1
    777e:	60a3      	str	r3, [r4, #8]
    7780:	e7cc      	b.n	771c <_scanf_i+0x100>
    7782:	2700      	movs	r7, #0
    7784:	6823      	ldr	r3, [r4, #0]
    7786:	05db      	lsls	r3, r3, #23
    7788:	d50e      	bpl.n	77a8 <_scanf_i+0x18c>
    778a:	9b00      	ldr	r3, [sp, #0]
    778c:	429d      	cmp	r5, r3
    778e:	d907      	bls.n	77a0 <_scanf_i+0x184>
    7790:	23be      	movs	r3, #190	; 0xbe
    7792:	3d01      	subs	r5, #1
    7794:	005b      	lsls	r3, r3, #1
    7796:	7829      	ldrb	r1, [r5, #0]
    7798:	58e3      	ldr	r3, [r4, r3]
    779a:	9804      	ldr	r0, [sp, #16]
    779c:	1c32      	adds	r2, r6, #0
    779e:	4798      	blx	r3
    77a0:	9b00      	ldr	r3, [sp, #0]
    77a2:	2001      	movs	r0, #1
    77a4:	429d      	cmp	r5, r3
    77a6:	d025      	beq.n	77f4 <_scanf_i+0x1d8>
    77a8:	2210      	movs	r2, #16
    77aa:	6823      	ldr	r3, [r4, #0]
    77ac:	401a      	ands	r2, r3
    77ae:	d11a      	bne.n	77e6 <_scanf_i+0x1ca>
    77b0:	702a      	strb	r2, [r5, #0]
    77b2:	6863      	ldr	r3, [r4, #4]
    77b4:	9804      	ldr	r0, [sp, #16]
    77b6:	9900      	ldr	r1, [sp, #0]
    77b8:	9e05      	ldr	r6, [sp, #20]
    77ba:	47b0      	blx	r6
    77bc:	9b01      	ldr	r3, [sp, #4]
    77be:	6822      	ldr	r2, [r4, #0]
    77c0:	681b      	ldr	r3, [r3, #0]
    77c2:	0691      	lsls	r1, r2, #26
    77c4:	d407      	bmi.n	77d6 <_scanf_i+0x1ba>
    77c6:	07d1      	lsls	r1, r2, #31
    77c8:	d505      	bpl.n	77d6 <_scanf_i+0x1ba>
    77ca:	9901      	ldr	r1, [sp, #4]
    77cc:	1d1a      	adds	r2, r3, #4
    77ce:	600a      	str	r2, [r1, #0]
    77d0:	681b      	ldr	r3, [r3, #0]
    77d2:	8018      	strh	r0, [r3, #0]
    77d4:	e004      	b.n	77e0 <_scanf_i+0x1c4>
    77d6:	9901      	ldr	r1, [sp, #4]
    77d8:	1d1a      	adds	r2, r3, #4
    77da:	600a      	str	r2, [r1, #0]
    77dc:	681b      	ldr	r3, [r3, #0]
    77de:	6018      	str	r0, [r3, #0]
    77e0:	68e3      	ldr	r3, [r4, #12]
    77e2:	3301      	adds	r3, #1
    77e4:	60e3      	str	r3, [r4, #12]
    77e6:	2000      	movs	r0, #0
    77e8:	9b00      	ldr	r3, [sp, #0]
    77ea:	1aed      	subs	r5, r5, r3
    77ec:	6923      	ldr	r3, [r4, #16]
    77ee:	19ed      	adds	r5, r5, r7
    77f0:	195d      	adds	r5, r3, r5
    77f2:	6125      	str	r5, [r4, #16]
    77f4:	b00b      	add	sp, #44	; 0x2c
    77f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    77f8:	0000e0c0 	.word	0x0000e0c0
    77fc:	00008b09 	.word	0x00008b09
    7800:	00008c29 	.word	0x00008c29
    7804:	fffffaff 	.word	0xfffffaff
    7808:	0000e0cc 	.word	0x0000e0cc
    780c:	fffff6ff 	.word	0xfffff6ff

00007810 <_open_r>:
    7810:	b538      	push	{r3, r4, r5, lr}
    7812:	1c05      	adds	r5, r0, #0
    7814:	2000      	movs	r0, #0
    7816:	4c07      	ldr	r4, [pc, #28]	; (7834 <_open_r+0x24>)
    7818:	6020      	str	r0, [r4, #0]
    781a:	1c08      	adds	r0, r1, #0
    781c:	1c11      	adds	r1, r2, #0
    781e:	1c1a      	adds	r2, r3, #0
    7820:	f7fb f888 	bl	2934 <_open>
    7824:	1c43      	adds	r3, r0, #1
    7826:	d103      	bne.n	7830 <_open_r+0x20>
    7828:	6823      	ldr	r3, [r4, #0]
    782a:	2b00      	cmp	r3, #0
    782c:	d000      	beq.n	7830 <_open_r+0x20>
    782e:	602b      	str	r3, [r5, #0]
    7830:	bd38      	pop	{r3, r4, r5, pc}
    7832:	46c0      	nop			; (mov r8, r8)
    7834:	2000406c 	.word	0x2000406c

00007838 <_putc_r>:
    7838:	b570      	push	{r4, r5, r6, lr}
    783a:	1c05      	adds	r5, r0, #0
    783c:	1c0e      	adds	r6, r1, #0
    783e:	1c14      	adds	r4, r2, #0
    7840:	2800      	cmp	r0, #0
    7842:	d004      	beq.n	784e <_putc_r+0x16>
    7844:	6983      	ldr	r3, [r0, #24]
    7846:	2b00      	cmp	r3, #0
    7848:	d101      	bne.n	784e <_putc_r+0x16>
    784a:	f7fe fbeb 	bl	6024 <__sinit>
    784e:	4b15      	ldr	r3, [pc, #84]	; (78a4 <_putc_r+0x6c>)
    7850:	429c      	cmp	r4, r3
    7852:	d101      	bne.n	7858 <_putc_r+0x20>
    7854:	686c      	ldr	r4, [r5, #4]
    7856:	e008      	b.n	786a <_putc_r+0x32>
    7858:	4b13      	ldr	r3, [pc, #76]	; (78a8 <_putc_r+0x70>)
    785a:	429c      	cmp	r4, r3
    785c:	d101      	bne.n	7862 <_putc_r+0x2a>
    785e:	68ac      	ldr	r4, [r5, #8]
    7860:	e003      	b.n	786a <_putc_r+0x32>
    7862:	4b12      	ldr	r3, [pc, #72]	; (78ac <_putc_r+0x74>)
    7864:	429c      	cmp	r4, r3
    7866:	d100      	bne.n	786a <_putc_r+0x32>
    7868:	68ec      	ldr	r4, [r5, #12]
    786a:	68a3      	ldr	r3, [r4, #8]
    786c:	3b01      	subs	r3, #1
    786e:	60a3      	str	r3, [r4, #8]
    7870:	2b00      	cmp	r3, #0
    7872:	da10      	bge.n	7896 <_putc_r+0x5e>
    7874:	69a2      	ldr	r2, [r4, #24]
    7876:	4293      	cmp	r3, r2
    7878:	db07      	blt.n	788a <_putc_r+0x52>
    787a:	6823      	ldr	r3, [r4, #0]
    787c:	701e      	strb	r6, [r3, #0]
    787e:	6823      	ldr	r3, [r4, #0]
    7880:	7819      	ldrb	r1, [r3, #0]
    7882:	290a      	cmp	r1, #10
    7884:	d10a      	bne.n	789c <_putc_r+0x64>
    7886:	1c28      	adds	r0, r5, #0
    7888:	e001      	b.n	788e <_putc_r+0x56>
    788a:	1c28      	adds	r0, r5, #0
    788c:	1c31      	adds	r1, r6, #0
    788e:	1c22      	adds	r2, r4, #0
    7890:	f001 fa8a 	bl	8da8 <__swbuf_r>
    7894:	e005      	b.n	78a2 <_putc_r+0x6a>
    7896:	6823      	ldr	r3, [r4, #0]
    7898:	701e      	strb	r6, [r3, #0]
    789a:	6823      	ldr	r3, [r4, #0]
    789c:	1c5a      	adds	r2, r3, #1
    789e:	6022      	str	r2, [r4, #0]
    78a0:	7818      	ldrb	r0, [r3, #0]
    78a2:	bd70      	pop	{r4, r5, r6, pc}
    78a4:	0000e010 	.word	0x0000e010
    78a8:	0000e030 	.word	0x0000e030
    78ac:	0000e050 	.word	0x0000e050

000078b0 <lflush>:
    78b0:	2209      	movs	r2, #9
    78b2:	b508      	push	{r3, lr}
    78b4:	8981      	ldrh	r1, [r0, #12]
    78b6:	1c03      	adds	r3, r0, #0
    78b8:	400a      	ands	r2, r1
    78ba:	2000      	movs	r0, #0
    78bc:	2a09      	cmp	r2, #9
    78be:	d102      	bne.n	78c6 <lflush+0x16>
    78c0:	1c18      	adds	r0, r3, #0
    78c2:	f7fe fb21 	bl	5f08 <fflush>
    78c6:	bd08      	pop	{r3, pc}

000078c8 <__srefill_r>:
    78c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    78ca:	1c05      	adds	r5, r0, #0
    78cc:	1c0c      	adds	r4, r1, #0
    78ce:	2800      	cmp	r0, #0
    78d0:	d004      	beq.n	78dc <__srefill_r+0x14>
    78d2:	6983      	ldr	r3, [r0, #24]
    78d4:	2b00      	cmp	r3, #0
    78d6:	d101      	bne.n	78dc <__srefill_r+0x14>
    78d8:	f7fe fba4 	bl	6024 <__sinit>
    78dc:	4b3d      	ldr	r3, [pc, #244]	; (79d4 <__srefill_r+0x10c>)
    78de:	429c      	cmp	r4, r3
    78e0:	d101      	bne.n	78e6 <__srefill_r+0x1e>
    78e2:	686c      	ldr	r4, [r5, #4]
    78e4:	e008      	b.n	78f8 <__srefill_r+0x30>
    78e6:	4b3c      	ldr	r3, [pc, #240]	; (79d8 <__srefill_r+0x110>)
    78e8:	429c      	cmp	r4, r3
    78ea:	d101      	bne.n	78f0 <__srefill_r+0x28>
    78ec:	68ac      	ldr	r4, [r5, #8]
    78ee:	e003      	b.n	78f8 <__srefill_r+0x30>
    78f0:	4b3a      	ldr	r3, [pc, #232]	; (79dc <__srefill_r+0x114>)
    78f2:	429c      	cmp	r4, r3
    78f4:	d100      	bne.n	78f8 <__srefill_r+0x30>
    78f6:	68ec      	ldr	r4, [r5, #12]
    78f8:	2300      	movs	r3, #0
    78fa:	89a2      	ldrh	r2, [r4, #12]
    78fc:	6063      	str	r3, [r4, #4]
    78fe:	b293      	uxth	r3, r2
    7900:	0699      	lsls	r1, r3, #26
    7902:	d463      	bmi.n	79cc <__srefill_r+0x104>
    7904:	0759      	lsls	r1, r3, #29
    7906:	d41a      	bmi.n	793e <__srefill_r+0x76>
    7908:	06d9      	lsls	r1, r3, #27
    790a:	d405      	bmi.n	7918 <__srefill_r+0x50>
    790c:	2309      	movs	r3, #9
    790e:	602b      	str	r3, [r5, #0]
    7910:	3337      	adds	r3, #55	; 0x37
    7912:	431a      	orrs	r2, r3
    7914:	81a2      	strh	r2, [r4, #12]
    7916:	e059      	b.n	79cc <__srefill_r+0x104>
    7918:	2608      	movs	r6, #8
    791a:	4233      	tst	r3, r6
    791c:	d00a      	beq.n	7934 <__srefill_r+0x6c>
    791e:	1c28      	adds	r0, r5, #0
    7920:	1c21      	adds	r1, r4, #0
    7922:	f7fe fac5 	bl	5eb0 <_fflush_r>
    7926:	2800      	cmp	r0, #0
    7928:	d150      	bne.n	79cc <__srefill_r+0x104>
    792a:	89a3      	ldrh	r3, [r4, #12]
    792c:	60a0      	str	r0, [r4, #8]
    792e:	43b3      	bics	r3, r6
    7930:	81a3      	strh	r3, [r4, #12]
    7932:	61a0      	str	r0, [r4, #24]
    7934:	2204      	movs	r2, #4
    7936:	89a3      	ldrh	r3, [r4, #12]
    7938:	4313      	orrs	r3, r2
    793a:	81a3      	strh	r3, [r4, #12]
    793c:	e012      	b.n	7964 <__srefill_r+0x9c>
    793e:	6b61      	ldr	r1, [r4, #52]	; 0x34
    7940:	2900      	cmp	r1, #0
    7942:	d00f      	beq.n	7964 <__srefill_r+0x9c>
    7944:	1c23      	adds	r3, r4, #0
    7946:	3344      	adds	r3, #68	; 0x44
    7948:	4299      	cmp	r1, r3
    794a:	d002      	beq.n	7952 <__srefill_r+0x8a>
    794c:	1c28      	adds	r0, r5, #0
    794e:	f7fe fddf 	bl	6510 <_free_r>
    7952:	2000      	movs	r0, #0
    7954:	6c23      	ldr	r3, [r4, #64]	; 0x40
    7956:	6360      	str	r0, [r4, #52]	; 0x34
    7958:	6063      	str	r3, [r4, #4]
    795a:	4283      	cmp	r3, r0
    795c:	d002      	beq.n	7964 <__srefill_r+0x9c>
    795e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    7960:	6023      	str	r3, [r4, #0]
    7962:	e035      	b.n	79d0 <__srefill_r+0x108>
    7964:	6923      	ldr	r3, [r4, #16]
    7966:	2b00      	cmp	r3, #0
    7968:	d103      	bne.n	7972 <__srefill_r+0xaa>
    796a:	1c28      	adds	r0, r5, #0
    796c:	1c21      	adds	r1, r4, #0
    796e:	f7fe fd47 	bl	6400 <__smakebuf_r>
    7972:	89a7      	ldrh	r7, [r4, #12]
    7974:	b2be      	uxth	r6, r7
    7976:	07b3      	lsls	r3, r6, #30
    7978:	d00f      	beq.n	799a <__srefill_r+0xd2>
    797a:	2301      	movs	r3, #1
    797c:	81a3      	strh	r3, [r4, #12]
    797e:	4b18      	ldr	r3, [pc, #96]	; (79e0 <__srefill_r+0x118>)
    7980:	4918      	ldr	r1, [pc, #96]	; (79e4 <__srefill_r+0x11c>)
    7982:	6818      	ldr	r0, [r3, #0]
    7984:	f7fe fcd8 	bl	6338 <_fwalk>
    7988:	2309      	movs	r3, #9
    798a:	81a7      	strh	r7, [r4, #12]
    798c:	4033      	ands	r3, r6
    798e:	2b09      	cmp	r3, #9
    7990:	d103      	bne.n	799a <__srefill_r+0xd2>
    7992:	1c28      	adds	r0, r5, #0
    7994:	1c21      	adds	r1, r4, #0
    7996:	f7fe fa01 	bl	5d9c <__sflush_r>
    799a:	6923      	ldr	r3, [r4, #16]
    799c:	1c28      	adds	r0, r5, #0
    799e:	1c1a      	adds	r2, r3, #0
    79a0:	6023      	str	r3, [r4, #0]
    79a2:	6a21      	ldr	r1, [r4, #32]
    79a4:	6963      	ldr	r3, [r4, #20]
    79a6:	6a65      	ldr	r5, [r4, #36]	; 0x24
    79a8:	47a8      	blx	r5
    79aa:	1c02      	adds	r2, r0, #0
    79ac:	6060      	str	r0, [r4, #4]
    79ae:	2000      	movs	r0, #0
    79b0:	4282      	cmp	r2, r0
    79b2:	dc0d      	bgt.n	79d0 <__srefill_r+0x108>
    79b4:	89a3      	ldrh	r3, [r4, #12]
    79b6:	4282      	cmp	r2, r0
    79b8:	d104      	bne.n	79c4 <__srefill_r+0xfc>
    79ba:	2220      	movs	r2, #32
    79bc:	4313      	orrs	r3, r2
    79be:	81a3      	strh	r3, [r4, #12]
    79c0:	3801      	subs	r0, #1
    79c2:	e005      	b.n	79d0 <__srefill_r+0x108>
    79c4:	2240      	movs	r2, #64	; 0x40
    79c6:	4313      	orrs	r3, r2
    79c8:	6060      	str	r0, [r4, #4]
    79ca:	81a3      	strh	r3, [r4, #12]
    79cc:	2001      	movs	r0, #1
    79ce:	4240      	negs	r0, r0
    79d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    79d2:	46c0      	nop			; (mov r8, r8)
    79d4:	0000e010 	.word	0x0000e010
    79d8:	0000e030 	.word	0x0000e030
    79dc:	0000e050 	.word	0x0000e050
    79e0:	0000e074 	.word	0x0000e074
    79e4:	000078b1 	.word	0x000078b1

000079e8 <__srget_r>:
    79e8:	b538      	push	{r3, r4, r5, lr}
    79ea:	1c05      	adds	r5, r0, #0
    79ec:	1c0c      	adds	r4, r1, #0
    79ee:	2800      	cmp	r0, #0
    79f0:	d004      	beq.n	79fc <__srget_r+0x14>
    79f2:	6983      	ldr	r3, [r0, #24]
    79f4:	2b00      	cmp	r3, #0
    79f6:	d101      	bne.n	79fc <__srget_r+0x14>
    79f8:	f7fe fb14 	bl	6024 <__sinit>
    79fc:	4b0f      	ldr	r3, [pc, #60]	; (7a3c <__srget_r+0x54>)
    79fe:	429c      	cmp	r4, r3
    7a00:	d101      	bne.n	7a06 <__srget_r+0x1e>
    7a02:	686c      	ldr	r4, [r5, #4]
    7a04:	e008      	b.n	7a18 <__srget_r+0x30>
    7a06:	4b0e      	ldr	r3, [pc, #56]	; (7a40 <__srget_r+0x58>)
    7a08:	429c      	cmp	r4, r3
    7a0a:	d101      	bne.n	7a10 <__srget_r+0x28>
    7a0c:	68ac      	ldr	r4, [r5, #8]
    7a0e:	e003      	b.n	7a18 <__srget_r+0x30>
    7a10:	4b0c      	ldr	r3, [pc, #48]	; (7a44 <__srget_r+0x5c>)
    7a12:	429c      	cmp	r4, r3
    7a14:	d100      	bne.n	7a18 <__srget_r+0x30>
    7a16:	68ec      	ldr	r4, [r5, #12]
    7a18:	1c28      	adds	r0, r5, #0
    7a1a:	1c21      	adds	r1, r4, #0
    7a1c:	f7ff ff54 	bl	78c8 <__srefill_r>
    7a20:	2800      	cmp	r0, #0
    7a22:	d107      	bne.n	7a34 <__srget_r+0x4c>
    7a24:	6863      	ldr	r3, [r4, #4]
    7a26:	3b01      	subs	r3, #1
    7a28:	6063      	str	r3, [r4, #4]
    7a2a:	6823      	ldr	r3, [r4, #0]
    7a2c:	1c5a      	adds	r2, r3, #1
    7a2e:	6022      	str	r2, [r4, #0]
    7a30:	7818      	ldrb	r0, [r3, #0]
    7a32:	e001      	b.n	7a38 <__srget_r+0x50>
    7a34:	2001      	movs	r0, #1
    7a36:	4240      	negs	r0, r0
    7a38:	bd38      	pop	{r3, r4, r5, pc}
    7a3a:	46c0      	nop			; (mov r8, r8)
    7a3c:	0000e010 	.word	0x0000e010
    7a40:	0000e030 	.word	0x0000e030
    7a44:	0000e050 	.word	0x0000e050

00007a48 <__fpclassifyd>:
    7a48:	b530      	push	{r4, r5, lr}
    7a4a:	1c0c      	adds	r4, r1, #0
    7a4c:	2302      	movs	r3, #2
    7a4e:	4304      	orrs	r4, r0
    7a50:	d017      	beq.n	7a82 <__fpclassifyd+0x3a>
    7a52:	2480      	movs	r4, #128	; 0x80
    7a54:	0624      	lsls	r4, r4, #24
    7a56:	42a1      	cmp	r1, r4
    7a58:	d101      	bne.n	7a5e <__fpclassifyd+0x16>
    7a5a:	2800      	cmp	r0, #0
    7a5c:	d011      	beq.n	7a82 <__fpclassifyd+0x3a>
    7a5e:	4b0a      	ldr	r3, [pc, #40]	; (7a88 <__fpclassifyd+0x40>)
    7a60:	0049      	lsls	r1, r1, #1
    7a62:	0849      	lsrs	r1, r1, #1
    7a64:	4a09      	ldr	r2, [pc, #36]	; (7a8c <__fpclassifyd+0x44>)
    7a66:	18cc      	adds	r4, r1, r3
    7a68:	2304      	movs	r3, #4
    7a6a:	4294      	cmp	r4, r2
    7a6c:	d909      	bls.n	7a82 <__fpclassifyd+0x3a>
    7a6e:	4a08      	ldr	r2, [pc, #32]	; (7a90 <__fpclassifyd+0x48>)
    7a70:	3b01      	subs	r3, #1
    7a72:	4291      	cmp	r1, r2
    7a74:	d905      	bls.n	7a82 <__fpclassifyd+0x3a>
    7a76:	4a07      	ldr	r2, [pc, #28]	; (7a94 <__fpclassifyd+0x4c>)
    7a78:	2300      	movs	r3, #0
    7a7a:	4291      	cmp	r1, r2
    7a7c:	d101      	bne.n	7a82 <__fpclassifyd+0x3a>
    7a7e:	4243      	negs	r3, r0
    7a80:	4143      	adcs	r3, r0
    7a82:	1c18      	adds	r0, r3, #0
    7a84:	bd30      	pop	{r4, r5, pc}
    7a86:	46c0      	nop			; (mov r8, r8)
    7a88:	fff00000 	.word	0xfff00000
    7a8c:	7fdfffff 	.word	0x7fdfffff
    7a90:	000fffff 	.word	0x000fffff
    7a94:	7ff00000 	.word	0x7ff00000

00007a98 <_sbrk_r>:
    7a98:	b538      	push	{r3, r4, r5, lr}
    7a9a:	2300      	movs	r3, #0
    7a9c:	4c06      	ldr	r4, [pc, #24]	; (7ab8 <_sbrk_r+0x20>)
    7a9e:	1c05      	adds	r5, r0, #0
    7aa0:	1c08      	adds	r0, r1, #0
    7aa2:	6023      	str	r3, [r4, #0]
    7aa4:	f7fb f86e 	bl	2b84 <_sbrk>
    7aa8:	1c43      	adds	r3, r0, #1
    7aaa:	d103      	bne.n	7ab4 <_sbrk_r+0x1c>
    7aac:	6823      	ldr	r3, [r4, #0]
    7aae:	2b00      	cmp	r3, #0
    7ab0:	d000      	beq.n	7ab4 <_sbrk_r+0x1c>
    7ab2:	602b      	str	r3, [r5, #0]
    7ab4:	bd38      	pop	{r3, r4, r5, pc}
    7ab6:	46c0      	nop			; (mov r8, r8)
    7ab8:	2000406c 	.word	0x2000406c

00007abc <__sccl>:
    7abc:	b5f0      	push	{r4, r5, r6, r7, lr}
    7abe:	780a      	ldrb	r2, [r1, #0]
    7ac0:	2a5e      	cmp	r2, #94	; 0x5e
    7ac2:	d002      	beq.n	7aca <__sccl+0xe>
    7ac4:	1c4b      	adds	r3, r1, #1
    7ac6:	2400      	movs	r4, #0
    7ac8:	e002      	b.n	7ad0 <__sccl+0x14>
    7aca:	2401      	movs	r4, #1
    7acc:	784a      	ldrb	r2, [r1, #1]
    7ace:	1c8b      	adds	r3, r1, #2
    7ad0:	1c01      	adds	r1, r0, #0
    7ad2:	1c45      	adds	r5, r0, #1
    7ad4:	35ff      	adds	r5, #255	; 0xff
    7ad6:	700c      	strb	r4, [r1, #0]
    7ad8:	3101      	adds	r1, #1
    7ada:	42a9      	cmp	r1, r5
    7adc:	d1fb      	bne.n	7ad6 <__sccl+0x1a>
    7ade:	2a00      	cmp	r2, #0
    7ae0:	d101      	bne.n	7ae6 <__sccl+0x2a>
    7ae2:	1e58      	subs	r0, r3, #1
    7ae4:	e01c      	b.n	7b20 <__sccl+0x64>
    7ae6:	2101      	movs	r1, #1
    7ae8:	1b0c      	subs	r4, r1, r4
    7aea:	b2e7      	uxtb	r7, r4
    7aec:	5487      	strb	r7, [r0, r2]
    7aee:	7819      	ldrb	r1, [r3, #0]
    7af0:	1c5e      	adds	r6, r3, #1
    7af2:	292d      	cmp	r1, #45	; 0x2d
    7af4:	d006      	beq.n	7b04 <__sccl+0x48>
    7af6:	295d      	cmp	r1, #93	; 0x5d
    7af8:	d00f      	beq.n	7b1a <__sccl+0x5e>
    7afa:	2900      	cmp	r1, #0
    7afc:	d00f      	beq.n	7b1e <__sccl+0x62>
    7afe:	1c0a      	adds	r2, r1, #0
    7b00:	1c33      	adds	r3, r6, #0
    7b02:	e7f2      	b.n	7aea <__sccl+0x2e>
    7b04:	785d      	ldrb	r5, [r3, #1]
    7b06:	2d5d      	cmp	r5, #93	; 0x5d
    7b08:	d0f9      	beq.n	7afe <__sccl+0x42>
    7b0a:	4295      	cmp	r5, r2
    7b0c:	dbf7      	blt.n	7afe <__sccl+0x42>
    7b0e:	3302      	adds	r3, #2
    7b10:	3201      	adds	r2, #1
    7b12:	5487      	strb	r7, [r0, r2]
    7b14:	42aa      	cmp	r2, r5
    7b16:	dbfb      	blt.n	7b10 <__sccl+0x54>
    7b18:	e7e9      	b.n	7aee <__sccl+0x32>
    7b1a:	1c30      	adds	r0, r6, #0
    7b1c:	e000      	b.n	7b20 <__sccl+0x64>
    7b1e:	1c18      	adds	r0, r3, #0
    7b20:	bdf0      	pop	{r4, r5, r6, r7, pc}

00007b22 <setbuf>:
    7b22:	b508      	push	{r3, lr}
    7b24:	424a      	negs	r2, r1
    7b26:	414a      	adcs	r2, r1
    7b28:	2380      	movs	r3, #128	; 0x80
    7b2a:	0052      	lsls	r2, r2, #1
    7b2c:	00db      	lsls	r3, r3, #3
    7b2e:	f000 f801 	bl	7b34 <setvbuf>
    7b32:	bd08      	pop	{r3, pc}

00007b34 <setvbuf>:
    7b34:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    7b36:	1c1e      	adds	r6, r3, #0
    7b38:	4b3c      	ldr	r3, [pc, #240]	; (7c2c <setvbuf+0xf8>)
    7b3a:	1c04      	adds	r4, r0, #0
    7b3c:	681d      	ldr	r5, [r3, #0]
    7b3e:	1c0f      	adds	r7, r1, #0
    7b40:	9201      	str	r2, [sp, #4]
    7b42:	2d00      	cmp	r5, #0
    7b44:	d005      	beq.n	7b52 <setvbuf+0x1e>
    7b46:	69ab      	ldr	r3, [r5, #24]
    7b48:	2b00      	cmp	r3, #0
    7b4a:	d102      	bne.n	7b52 <setvbuf+0x1e>
    7b4c:	1c28      	adds	r0, r5, #0
    7b4e:	f7fe fa69 	bl	6024 <__sinit>
    7b52:	4b37      	ldr	r3, [pc, #220]	; (7c30 <setvbuf+0xfc>)
    7b54:	429c      	cmp	r4, r3
    7b56:	d101      	bne.n	7b5c <setvbuf+0x28>
    7b58:	686c      	ldr	r4, [r5, #4]
    7b5a:	e008      	b.n	7b6e <setvbuf+0x3a>
    7b5c:	4b35      	ldr	r3, [pc, #212]	; (7c34 <setvbuf+0x100>)
    7b5e:	429c      	cmp	r4, r3
    7b60:	d101      	bne.n	7b66 <setvbuf+0x32>
    7b62:	68ac      	ldr	r4, [r5, #8]
    7b64:	e003      	b.n	7b6e <setvbuf+0x3a>
    7b66:	4b34      	ldr	r3, [pc, #208]	; (7c38 <setvbuf+0x104>)
    7b68:	429c      	cmp	r4, r3
    7b6a:	d100      	bne.n	7b6e <setvbuf+0x3a>
    7b6c:	68ec      	ldr	r4, [r5, #12]
    7b6e:	9b01      	ldr	r3, [sp, #4]
    7b70:	2b02      	cmp	r3, #2
    7b72:	d858      	bhi.n	7c26 <setvbuf+0xf2>
    7b74:	2e00      	cmp	r6, #0
    7b76:	db56      	blt.n	7c26 <setvbuf+0xf2>
    7b78:	1c28      	adds	r0, r5, #0
    7b7a:	1c21      	adds	r1, r4, #0
    7b7c:	f7fe f998 	bl	5eb0 <_fflush_r>
    7b80:	2300      	movs	r3, #0
    7b82:	6063      	str	r3, [r4, #4]
    7b84:	61a3      	str	r3, [r4, #24]
    7b86:	89a3      	ldrh	r3, [r4, #12]
    7b88:	061b      	lsls	r3, r3, #24
    7b8a:	d503      	bpl.n	7b94 <setvbuf+0x60>
    7b8c:	1c28      	adds	r0, r5, #0
    7b8e:	6921      	ldr	r1, [r4, #16]
    7b90:	f7fe fcbe 	bl	6510 <_free_r>
    7b94:	2283      	movs	r2, #131	; 0x83
    7b96:	89a3      	ldrh	r3, [r4, #12]
    7b98:	4393      	bics	r3, r2
    7b9a:	81a3      	strh	r3, [r4, #12]
    7b9c:	9b01      	ldr	r3, [sp, #4]
    7b9e:	2b02      	cmp	r3, #2
    7ba0:	d013      	beq.n	7bca <setvbuf+0x96>
    7ba2:	2f00      	cmp	r7, #0
    7ba4:	d125      	bne.n	7bf2 <setvbuf+0xbe>
    7ba6:	2e00      	cmp	r6, #0
    7ba8:	d101      	bne.n	7bae <setvbuf+0x7a>
    7baa:	2680      	movs	r6, #128	; 0x80
    7bac:	00f6      	lsls	r6, r6, #3
    7bae:	1c30      	adds	r0, r6, #0
    7bb0:	f7fe fc7e 	bl	64b0 <malloc>
    7bb4:	1e07      	subs	r7, r0, #0
    7bb6:	d118      	bne.n	7bea <setvbuf+0xb6>
    7bb8:	2080      	movs	r0, #128	; 0x80
    7bba:	00c0      	lsls	r0, r0, #3
    7bbc:	f7fe fc78 	bl	64b0 <malloc>
    7bc0:	1e07      	subs	r7, r0, #0
    7bc2:	d110      	bne.n	7be6 <setvbuf+0xb2>
    7bc4:	2001      	movs	r0, #1
    7bc6:	4240      	negs	r0, r0
    7bc8:	e000      	b.n	7bcc <setvbuf+0x98>
    7bca:	2000      	movs	r0, #0
    7bcc:	2202      	movs	r2, #2
    7bce:	89a3      	ldrh	r3, [r4, #12]
    7bd0:	4313      	orrs	r3, r2
    7bd2:	81a3      	strh	r3, [r4, #12]
    7bd4:	2300      	movs	r3, #0
    7bd6:	60a3      	str	r3, [r4, #8]
    7bd8:	1c23      	adds	r3, r4, #0
    7bda:	3347      	adds	r3, #71	; 0x47
    7bdc:	6023      	str	r3, [r4, #0]
    7bde:	6123      	str	r3, [r4, #16]
    7be0:	2301      	movs	r3, #1
    7be2:	6163      	str	r3, [r4, #20]
    7be4:	e021      	b.n	7c2a <setvbuf+0xf6>
    7be6:	2680      	movs	r6, #128	; 0x80
    7be8:	00f6      	lsls	r6, r6, #3
    7bea:	2280      	movs	r2, #128	; 0x80
    7bec:	89a3      	ldrh	r3, [r4, #12]
    7bee:	4313      	orrs	r3, r2
    7bf0:	81a3      	strh	r3, [r4, #12]
    7bf2:	9b01      	ldr	r3, [sp, #4]
    7bf4:	2b01      	cmp	r3, #1
    7bf6:	d105      	bne.n	7c04 <setvbuf+0xd0>
    7bf8:	89a3      	ldrh	r3, [r4, #12]
    7bfa:	9a01      	ldr	r2, [sp, #4]
    7bfc:	431a      	orrs	r2, r3
    7bfe:	4273      	negs	r3, r6
    7c00:	81a2      	strh	r2, [r4, #12]
    7c02:	61a3      	str	r3, [r4, #24]
    7c04:	4b0d      	ldr	r3, [pc, #52]	; (7c3c <setvbuf+0x108>)
    7c06:	2000      	movs	r0, #0
    7c08:	62ab      	str	r3, [r5, #40]	; 0x28
    7c0a:	89a2      	ldrh	r2, [r4, #12]
    7c0c:	6027      	str	r7, [r4, #0]
    7c0e:	6127      	str	r7, [r4, #16]
    7c10:	6166      	str	r6, [r4, #20]
    7c12:	0713      	lsls	r3, r2, #28
    7c14:	d509      	bpl.n	7c2a <setvbuf+0xf6>
    7c16:	2303      	movs	r3, #3
    7c18:	401a      	ands	r2, r3
    7c1a:	4253      	negs	r3, r2
    7c1c:	4153      	adcs	r3, r2
    7c1e:	425b      	negs	r3, r3
    7c20:	401e      	ands	r6, r3
    7c22:	60a6      	str	r6, [r4, #8]
    7c24:	e001      	b.n	7c2a <setvbuf+0xf6>
    7c26:	2001      	movs	r0, #1
    7c28:	4240      	negs	r0, r0
    7c2a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    7c2c:	20000134 	.word	0x20000134
    7c30:	0000e010 	.word	0x0000e010
    7c34:	0000e030 	.word	0x0000e030
    7c38:	0000e050 	.word	0x0000e050
    7c3c:	00005fa1 	.word	0x00005fa1

00007c40 <nanf>:
    7c40:	4800      	ldr	r0, [pc, #0]	; (7c44 <nanf+0x4>)
    7c42:	4770      	bx	lr
    7c44:	7fc00000 	.word	0x7fc00000

00007c48 <_raise_r>:
    7c48:	b538      	push	{r3, r4, r5, lr}
    7c4a:	291f      	cmp	r1, #31
    7c4c:	d904      	bls.n	7c58 <_raise_r+0x10>
    7c4e:	2316      	movs	r3, #22
    7c50:	6003      	str	r3, [r0, #0]
    7c52:	2001      	movs	r0, #1
    7c54:	4240      	negs	r0, r0
    7c56:	e020      	b.n	7c9a <_raise_r+0x52>
    7c58:	6c42      	ldr	r2, [r0, #68]	; 0x44
    7c5a:	1c0d      	adds	r5, r1, #0
    7c5c:	1c04      	adds	r4, r0, #0
    7c5e:	2a00      	cmp	r2, #0
    7c60:	d004      	beq.n	7c6c <_raise_r+0x24>
    7c62:	008b      	lsls	r3, r1, #2
    7c64:	18d2      	adds	r2, r2, r3
    7c66:	6813      	ldr	r3, [r2, #0]
    7c68:	2b00      	cmp	r3, #0
    7c6a:	d108      	bne.n	7c7e <_raise_r+0x36>
    7c6c:	1c20      	adds	r0, r4, #0
    7c6e:	f000 f831 	bl	7cd4 <_getpid_r>
    7c72:	1c2a      	adds	r2, r5, #0
    7c74:	1c01      	adds	r1, r0, #0
    7c76:	1c20      	adds	r0, r4, #0
    7c78:	f000 f81a 	bl	7cb0 <_kill_r>
    7c7c:	e00d      	b.n	7c9a <_raise_r+0x52>
    7c7e:	2000      	movs	r0, #0
    7c80:	2b01      	cmp	r3, #1
    7c82:	d00a      	beq.n	7c9a <_raise_r+0x52>
    7c84:	1c59      	adds	r1, r3, #1
    7c86:	d103      	bne.n	7c90 <_raise_r+0x48>
    7c88:	3317      	adds	r3, #23
    7c8a:	6023      	str	r3, [r4, #0]
    7c8c:	3001      	adds	r0, #1
    7c8e:	e004      	b.n	7c9a <_raise_r+0x52>
    7c90:	2400      	movs	r4, #0
    7c92:	1c28      	adds	r0, r5, #0
    7c94:	6014      	str	r4, [r2, #0]
    7c96:	4798      	blx	r3
    7c98:	1c20      	adds	r0, r4, #0
    7c9a:	bd38      	pop	{r3, r4, r5, pc}

00007c9c <raise>:
    7c9c:	b508      	push	{r3, lr}
    7c9e:	4b03      	ldr	r3, [pc, #12]	; (7cac <raise+0x10>)
    7ca0:	1c01      	adds	r1, r0, #0
    7ca2:	6818      	ldr	r0, [r3, #0]
    7ca4:	f7ff ffd0 	bl	7c48 <_raise_r>
    7ca8:	bd08      	pop	{r3, pc}
    7caa:	46c0      	nop			; (mov r8, r8)
    7cac:	20000134 	.word	0x20000134

00007cb0 <_kill_r>:
    7cb0:	b538      	push	{r3, r4, r5, lr}
    7cb2:	2300      	movs	r3, #0
    7cb4:	4c06      	ldr	r4, [pc, #24]	; (7cd0 <_kill_r+0x20>)
    7cb6:	1c05      	adds	r5, r0, #0
    7cb8:	1c08      	adds	r0, r1, #0
    7cba:	1c11      	adds	r1, r2, #0
    7cbc:	6023      	str	r3, [r4, #0]
    7cbe:	f003 fb17 	bl	b2f0 <_kill>
    7cc2:	1c43      	adds	r3, r0, #1
    7cc4:	d103      	bne.n	7cce <_kill_r+0x1e>
    7cc6:	6823      	ldr	r3, [r4, #0]
    7cc8:	2b00      	cmp	r3, #0
    7cca:	d000      	beq.n	7cce <_kill_r+0x1e>
    7ccc:	602b      	str	r3, [r5, #0]
    7cce:	bd38      	pop	{r3, r4, r5, pc}
    7cd0:	2000406c 	.word	0x2000406c

00007cd4 <_getpid_r>:
    7cd4:	b508      	push	{r3, lr}
    7cd6:	f003 fb03 	bl	b2e0 <_getpid>
    7cda:	bd08      	pop	{r3, pc}

00007cdc <siprintf>:
    7cdc:	b40e      	push	{r1, r2, r3}
    7cde:	b510      	push	{r4, lr}
    7ce0:	b09d      	sub	sp, #116	; 0x74
    7ce2:	a902      	add	r1, sp, #8
    7ce4:	9002      	str	r0, [sp, #8]
    7ce6:	6108      	str	r0, [r1, #16]
    7ce8:	480b      	ldr	r0, [pc, #44]	; (7d18 <siprintf+0x3c>)
    7cea:	2482      	movs	r4, #130	; 0x82
    7cec:	6088      	str	r0, [r1, #8]
    7cee:	6148      	str	r0, [r1, #20]
    7cf0:	2001      	movs	r0, #1
    7cf2:	4240      	negs	r0, r0
    7cf4:	ab1f      	add	r3, sp, #124	; 0x7c
    7cf6:	81c8      	strh	r0, [r1, #14]
    7cf8:	4808      	ldr	r0, [pc, #32]	; (7d1c <siprintf+0x40>)
    7cfa:	cb04      	ldmia	r3!, {r2}
    7cfc:	00a4      	lsls	r4, r4, #2
    7cfe:	6800      	ldr	r0, [r0, #0]
    7d00:	9301      	str	r3, [sp, #4]
    7d02:	818c      	strh	r4, [r1, #12]
    7d04:	f003 f802 	bl	ad0c <_svfiprintf_r>
    7d08:	2300      	movs	r3, #0
    7d0a:	9a02      	ldr	r2, [sp, #8]
    7d0c:	7013      	strb	r3, [r2, #0]
    7d0e:	b01d      	add	sp, #116	; 0x74
    7d10:	bc10      	pop	{r4}
    7d12:	bc08      	pop	{r3}
    7d14:	b003      	add	sp, #12
    7d16:	4718      	bx	r3
    7d18:	7fffffff 	.word	0x7fffffff
    7d1c:	20000134 	.word	0x20000134

00007d20 <siscanf>:
    7d20:	b40e      	push	{r1, r2, r3}
    7d22:	2381      	movs	r3, #129	; 0x81
    7d24:	b570      	push	{r4, r5, r6, lr}
    7d26:	b09d      	sub	sp, #116	; 0x74
    7d28:	ac02      	add	r4, sp, #8
    7d2a:	ad21      	add	r5, sp, #132	; 0x84
    7d2c:	009b      	lsls	r3, r3, #2
    7d2e:	cd40      	ldmia	r5!, {r6}
    7d30:	81a3      	strh	r3, [r4, #12]
    7d32:	9002      	str	r0, [sp, #8]
    7d34:	9006      	str	r0, [sp, #24]
    7d36:	f000 f873 	bl	7e20 <strlen>
    7d3a:	4b0b      	ldr	r3, [pc, #44]	; (7d68 <siscanf+0x48>)
    7d3c:	6060      	str	r0, [r4, #4]
    7d3e:	6263      	str	r3, [r4, #36]	; 0x24
    7d40:	2300      	movs	r3, #0
    7d42:	6363      	str	r3, [r4, #52]	; 0x34
    7d44:	64a3      	str	r3, [r4, #72]	; 0x48
    7d46:	3b01      	subs	r3, #1
    7d48:	81e3      	strh	r3, [r4, #14]
    7d4a:	4b08      	ldr	r3, [pc, #32]	; (7d6c <siscanf+0x4c>)
    7d4c:	6160      	str	r0, [r4, #20]
    7d4e:	1c21      	adds	r1, r4, #0
    7d50:	6818      	ldr	r0, [r3, #0]
    7d52:	1c32      	adds	r2, r6, #0
    7d54:	1c2b      	adds	r3, r5, #0
    7d56:	9501      	str	r5, [sp, #4]
    7d58:	f003 f92a 	bl	afb0 <__ssvfiscanf_r>
    7d5c:	b01d      	add	sp, #116	; 0x74
    7d5e:	bc70      	pop	{r4, r5, r6}
    7d60:	bc08      	pop	{r3}
    7d62:	b003      	add	sp, #12
    7d64:	4718      	bx	r3
    7d66:	46c0      	nop			; (mov r8, r8)
    7d68:	00007d99 	.word	0x00007d99
    7d6c:	20000134 	.word	0x20000134

00007d70 <__sread>:
    7d70:	b538      	push	{r3, r4, r5, lr}
    7d72:	1c0c      	adds	r4, r1, #0
    7d74:	250e      	movs	r5, #14
    7d76:	5f49      	ldrsh	r1, [r1, r5]
    7d78:	f003 fa92 	bl	b2a0 <_read_r>
    7d7c:	2800      	cmp	r0, #0
    7d7e:	db03      	blt.n	7d88 <__sread+0x18>
    7d80:	6d63      	ldr	r3, [r4, #84]	; 0x54
    7d82:	181b      	adds	r3, r3, r0
    7d84:	6563      	str	r3, [r4, #84]	; 0x54
    7d86:	e003      	b.n	7d90 <__sread+0x20>
    7d88:	89a2      	ldrh	r2, [r4, #12]
    7d8a:	4b02      	ldr	r3, [pc, #8]	; (7d94 <__sread+0x24>)
    7d8c:	4013      	ands	r3, r2
    7d8e:	81a3      	strh	r3, [r4, #12]
    7d90:	bd38      	pop	{r3, r4, r5, pc}
    7d92:	46c0      	nop			; (mov r8, r8)
    7d94:	ffffefff 	.word	0xffffefff

00007d98 <__seofread>:
    7d98:	2000      	movs	r0, #0
    7d9a:	4770      	bx	lr

00007d9c <__swrite>:
    7d9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7d9e:	1c1e      	adds	r6, r3, #0
    7da0:	898b      	ldrh	r3, [r1, #12]
    7da2:	1c05      	adds	r5, r0, #0
    7da4:	1c0c      	adds	r4, r1, #0
    7da6:	1c17      	adds	r7, r2, #0
    7da8:	05db      	lsls	r3, r3, #23
    7daa:	d505      	bpl.n	7db8 <__swrite+0x1c>
    7dac:	230e      	movs	r3, #14
    7dae:	5ec9      	ldrsh	r1, [r1, r3]
    7db0:	2200      	movs	r2, #0
    7db2:	2302      	movs	r3, #2
    7db4:	f002 faea 	bl	a38c <_lseek_r>
    7db8:	89a2      	ldrh	r2, [r4, #12]
    7dba:	4b05      	ldr	r3, [pc, #20]	; (7dd0 <__swrite+0x34>)
    7dbc:	1c28      	adds	r0, r5, #0
    7dbe:	4013      	ands	r3, r2
    7dc0:	81a3      	strh	r3, [r4, #12]
    7dc2:	1c3a      	adds	r2, r7, #0
    7dc4:	230e      	movs	r3, #14
    7dc6:	5ee1      	ldrsh	r1, [r4, r3]
    7dc8:	1c33      	adds	r3, r6, #0
    7dca:	f001 f845 	bl	8e58 <_write_r>
    7dce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7dd0:	ffffefff 	.word	0xffffefff

00007dd4 <__sseek>:
    7dd4:	b538      	push	{r3, r4, r5, lr}
    7dd6:	1c0c      	adds	r4, r1, #0
    7dd8:	250e      	movs	r5, #14
    7dda:	5f49      	ldrsh	r1, [r1, r5]
    7ddc:	f002 fad6 	bl	a38c <_lseek_r>
    7de0:	89a3      	ldrh	r3, [r4, #12]
    7de2:	1c42      	adds	r2, r0, #1
    7de4:	d103      	bne.n	7dee <__sseek+0x1a>
    7de6:	4a05      	ldr	r2, [pc, #20]	; (7dfc <__sseek+0x28>)
    7de8:	4013      	ands	r3, r2
    7dea:	81a3      	strh	r3, [r4, #12]
    7dec:	e004      	b.n	7df8 <__sseek+0x24>
    7dee:	2280      	movs	r2, #128	; 0x80
    7df0:	0152      	lsls	r2, r2, #5
    7df2:	4313      	orrs	r3, r2
    7df4:	81a3      	strh	r3, [r4, #12]
    7df6:	6560      	str	r0, [r4, #84]	; 0x54
    7df8:	bd38      	pop	{r3, r4, r5, pc}
    7dfa:	46c0      	nop			; (mov r8, r8)
    7dfc:	ffffefff 	.word	0xffffefff

00007e00 <__sclose>:
    7e00:	b508      	push	{r3, lr}
    7e02:	230e      	movs	r3, #14
    7e04:	5ec9      	ldrsh	r1, [r1, r3]
    7e06:	f001 f8af 	bl	8f68 <_close_r>
    7e0a:	bd08      	pop	{r3, pc}

00007e0c <strcmp>:
    7e0c:	7802      	ldrb	r2, [r0, #0]
    7e0e:	780b      	ldrb	r3, [r1, #0]
    7e10:	2a00      	cmp	r2, #0
    7e12:	d003      	beq.n	7e1c <strcmp+0x10>
    7e14:	3001      	adds	r0, #1
    7e16:	3101      	adds	r1, #1
    7e18:	429a      	cmp	r2, r3
    7e1a:	d0f7      	beq.n	7e0c <strcmp>
    7e1c:	1ad0      	subs	r0, r2, r3
    7e1e:	4770      	bx	lr

00007e20 <strlen>:
    7e20:	2300      	movs	r3, #0
    7e22:	5cc2      	ldrb	r2, [r0, r3]
    7e24:	3301      	adds	r3, #1
    7e26:	2a00      	cmp	r2, #0
    7e28:	d1fb      	bne.n	7e22 <strlen+0x2>
    7e2a:	1e58      	subs	r0, r3, #1
    7e2c:	4770      	bx	lr

00007e2e <strncmp>:
    7e2e:	2300      	movs	r3, #0
    7e30:	b530      	push	{r4, r5, lr}
    7e32:	429a      	cmp	r2, r3
    7e34:	d00d      	beq.n	7e52 <strncmp+0x24>
    7e36:	3a01      	subs	r2, #1
    7e38:	5cc4      	ldrb	r4, [r0, r3]
    7e3a:	5ccd      	ldrb	r5, [r1, r3]
    7e3c:	42ac      	cmp	r4, r5
    7e3e:	d102      	bne.n	7e46 <strncmp+0x18>
    7e40:	4293      	cmp	r3, r2
    7e42:	d102      	bne.n	7e4a <strncmp+0x1c>
    7e44:	1c25      	adds	r5, r4, #0
    7e46:	1b63      	subs	r3, r4, r5
    7e48:	e003      	b.n	7e52 <strncmp+0x24>
    7e4a:	3301      	adds	r3, #1
    7e4c:	2c00      	cmp	r4, #0
    7e4e:	d1f3      	bne.n	7e38 <strncmp+0xa>
    7e50:	e7f8      	b.n	7e44 <strncmp+0x16>
    7e52:	1c18      	adds	r0, r3, #0
    7e54:	bd30      	pop	{r4, r5, pc}

00007e56 <strncpy>:
    7e56:	1c03      	adds	r3, r0, #0
    7e58:	b530      	push	{r4, r5, lr}
    7e5a:	2a00      	cmp	r2, #0
    7e5c:	d007      	beq.n	7e6e <strncpy+0x18>
    7e5e:	780c      	ldrb	r4, [r1, #0]
    7e60:	3301      	adds	r3, #1
    7e62:	1e5d      	subs	r5, r3, #1
    7e64:	3a01      	subs	r2, #1
    7e66:	702c      	strb	r4, [r5, #0]
    7e68:	3101      	adds	r1, #1
    7e6a:	2c00      	cmp	r4, #0
    7e6c:	d1f5      	bne.n	7e5a <strncpy+0x4>
    7e6e:	189a      	adds	r2, r3, r2
    7e70:	4293      	cmp	r3, r2
    7e72:	d003      	beq.n	7e7c <strncpy+0x26>
    7e74:	2100      	movs	r1, #0
    7e76:	7019      	strb	r1, [r3, #0]
    7e78:	3301      	adds	r3, #1
    7e7a:	e7f9      	b.n	7e70 <strncpy+0x1a>
    7e7c:	bd30      	pop	{r4, r5, pc}

00007e7e <match>:
    7e7e:	b530      	push	{r4, r5, lr}
    7e80:	6803      	ldr	r3, [r0, #0]
    7e82:	780c      	ldrb	r4, [r1, #0]
    7e84:	3301      	adds	r3, #1
    7e86:	2c00      	cmp	r4, #0
    7e88:	d00a      	beq.n	7ea0 <match+0x22>
    7e8a:	781a      	ldrb	r2, [r3, #0]
    7e8c:	1c15      	adds	r5, r2, #0
    7e8e:	3d41      	subs	r5, #65	; 0x41
    7e90:	2d19      	cmp	r5, #25
    7e92:	d800      	bhi.n	7e96 <match+0x18>
    7e94:	3220      	adds	r2, #32
    7e96:	3101      	adds	r1, #1
    7e98:	42a2      	cmp	r2, r4
    7e9a:	d0f2      	beq.n	7e82 <match+0x4>
    7e9c:	2000      	movs	r0, #0
    7e9e:	e001      	b.n	7ea4 <match+0x26>
    7ea0:	6003      	str	r3, [r0, #0]
    7ea2:	2001      	movs	r0, #1
    7ea4:	bd30      	pop	{r4, r5, pc}
	...

00007ea8 <sulp>:
    7ea8:	b570      	push	{r4, r5, r6, lr}
    7eaa:	1c16      	adds	r6, r2, #0
    7eac:	1c0d      	adds	r5, r1, #0
    7eae:	f002 fd6d 	bl	a98c <__ulp>
    7eb2:	2e00      	cmp	r6, #0
    7eb4:	d00b      	beq.n	7ece <sulp+0x26>
    7eb6:	226b      	movs	r2, #107	; 0x6b
    7eb8:	006b      	lsls	r3, r5, #1
    7eba:	0d5b      	lsrs	r3, r3, #21
    7ebc:	1ad3      	subs	r3, r2, r3
    7ebe:	2b00      	cmp	r3, #0
    7ec0:	dd05      	ble.n	7ece <sulp+0x26>
    7ec2:	4d03      	ldr	r5, [pc, #12]	; (7ed0 <sulp+0x28>)
    7ec4:	051c      	lsls	r4, r3, #20
    7ec6:	2200      	movs	r2, #0
    7ec8:	1963      	adds	r3, r4, r5
    7eca:	f004 f9e5 	bl	c298 <__aeabi_dmul>
    7ece:	bd70      	pop	{r4, r5, r6, pc}
    7ed0:	3ff00000 	.word	0x3ff00000

00007ed4 <_strtod_r>:
    7ed4:	2300      	movs	r3, #0
    7ed6:	b5f0      	push	{r4, r5, r6, r7, lr}
    7ed8:	b0a3      	sub	sp, #140	; 0x8c
    7eda:	931e      	str	r3, [sp, #120]	; 0x78
    7edc:	2600      	movs	r6, #0
    7ede:	2700      	movs	r7, #0
    7ee0:	1c0b      	adds	r3, r1, #0
    7ee2:	9003      	str	r0, [sp, #12]
    7ee4:	9106      	str	r1, [sp, #24]
    7ee6:	9219      	str	r2, [sp, #100]	; 0x64
    7ee8:	931d      	str	r3, [sp, #116]	; 0x74
    7eea:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    7eec:	781a      	ldrb	r2, [r3, #0]
    7eee:	2a0d      	cmp	r2, #13
    7ef0:	d805      	bhi.n	7efe <_strtod_r+0x2a>
    7ef2:	2a09      	cmp	r2, #9
    7ef4:	d214      	bcs.n	7f20 <_strtod_r+0x4c>
    7ef6:	2a00      	cmp	r2, #0
    7ef8:	d100      	bne.n	7efc <_strtod_r+0x28>
    7efa:	e1c3      	b.n	8284 <_strtod_r+0x3b0>
    7efc:	e012      	b.n	7f24 <_strtod_r+0x50>
    7efe:	2a2b      	cmp	r2, #43	; 0x2b
    7f00:	d006      	beq.n	7f10 <_strtod_r+0x3c>
    7f02:	2a2d      	cmp	r2, #45	; 0x2d
    7f04:	d002      	beq.n	7f0c <_strtod_r+0x38>
    7f06:	2a20      	cmp	r2, #32
    7f08:	d10c      	bne.n	7f24 <_strtod_r+0x50>
    7f0a:	e009      	b.n	7f20 <_strtod_r+0x4c>
    7f0c:	2201      	movs	r2, #1
    7f0e:	e000      	b.n	7f12 <_strtod_r+0x3e>
    7f10:	2200      	movs	r2, #0
    7f12:	920d      	str	r2, [sp, #52]	; 0x34
    7f14:	1c5a      	adds	r2, r3, #1
    7f16:	921d      	str	r2, [sp, #116]	; 0x74
    7f18:	785b      	ldrb	r3, [r3, #1]
    7f1a:	2b00      	cmp	r3, #0
    7f1c:	d104      	bne.n	7f28 <_strtod_r+0x54>
    7f1e:	e1b1      	b.n	8284 <_strtod_r+0x3b0>
    7f20:	3301      	adds	r3, #1
    7f22:	e7e1      	b.n	7ee8 <_strtod_r+0x14>
    7f24:	2300      	movs	r3, #0
    7f26:	930d      	str	r3, [sp, #52]	; 0x34
    7f28:	2200      	movs	r2, #0
    7f2a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
    7f2c:	920a      	str	r2, [sp, #40]	; 0x28
    7f2e:	782b      	ldrb	r3, [r5, #0]
    7f30:	2b30      	cmp	r3, #48	; 0x30
    7f32:	d15d      	bne.n	7ff0 <_strtod_r+0x11c>
    7f34:	786b      	ldrb	r3, [r5, #1]
    7f36:	2b58      	cmp	r3, #88	; 0x58
    7f38:	d001      	beq.n	7f3e <_strtod_r+0x6a>
    7f3a:	2b78      	cmp	r3, #120	; 0x78
    7f3c:	d14c      	bne.n	7fd8 <_strtod_r+0x104>
    7f3e:	ab1e      	add	r3, sp, #120	; 0x78
    7f40:	9300      	str	r3, [sp, #0]
    7f42:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7f44:	9803      	ldr	r0, [sp, #12]
    7f46:	9301      	str	r3, [sp, #4]
    7f48:	a91d      	add	r1, sp, #116	; 0x74
    7f4a:	4ac2      	ldr	r2, [pc, #776]	; (8254 <_strtod_r+0x380>)
    7f4c:	ab1f      	add	r3, sp, #124	; 0x7c
    7f4e:	f001 ff38 	bl	9dc2 <__gethex>
    7f52:	2407      	movs	r4, #7
    7f54:	9004      	str	r0, [sp, #16]
    7f56:	4004      	ands	r4, r0
    7f58:	d101      	bne.n	7f5e <_strtod_r+0x8a>
    7f5a:	f000 fda7 	bl	8aac <_strtod_r+0xbd8>
    7f5e:	2c06      	cmp	r4, #6
    7f60:	d105      	bne.n	7f6e <_strtod_r+0x9a>
    7f62:	2300      	movs	r3, #0
    7f64:	3501      	adds	r5, #1
    7f66:	951d      	str	r5, [sp, #116]	; 0x74
    7f68:	930d      	str	r3, [sp, #52]	; 0x34
    7f6a:	f000 fd9f 	bl	8aac <_strtod_r+0xbd8>
    7f6e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    7f70:	2a00      	cmp	r2, #0
    7f72:	d007      	beq.n	7f84 <_strtod_r+0xb0>
    7f74:	a820      	add	r0, sp, #128	; 0x80
    7f76:	2135      	movs	r1, #53	; 0x35
    7f78:	f002 fdfc 	bl	ab74 <__copybits>
    7f7c:	9803      	ldr	r0, [sp, #12]
    7f7e:	991e      	ldr	r1, [sp, #120]	; 0x78
    7f80:	f002 fa64 	bl	a44c <_Bfree>
    7f84:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    7f86:	2c06      	cmp	r4, #6
    7f88:	d81c      	bhi.n	7fc4 <_strtod_r+0xf0>
    7f8a:	1c20      	adds	r0, r4, #0
    7f8c:	f003 f9b8 	bl	b300 <__gnu_thumb1_case_uqi>
    7f90:	14070a04 	.word	0x14070a04
    7f94:	0a17      	.short	0x0a17
    7f96:	04          	.byte	0x04
    7f97:	00          	.byte	0x00
    7f98:	2700      	movs	r7, #0
    7f9a:	1c3e      	adds	r6, r7, #0
    7f9c:	e012      	b.n	7fc4 <_strtod_r+0xf0>
    7f9e:	9e20      	ldr	r6, [sp, #128]	; 0x80
    7fa0:	9f21      	ldr	r7, [sp, #132]	; 0x84
    7fa2:	e00f      	b.n	7fc4 <_strtod_r+0xf0>
    7fa4:	4aac      	ldr	r2, [pc, #688]	; (8258 <_strtod_r+0x384>)
    7fa6:	9921      	ldr	r1, [sp, #132]	; 0x84
    7fa8:	189b      	adds	r3, r3, r2
    7faa:	4aac      	ldr	r2, [pc, #688]	; (825c <_strtod_r+0x388>)
    7fac:	051b      	lsls	r3, r3, #20
    7fae:	400a      	ands	r2, r1
    7fb0:	4313      	orrs	r3, r2
    7fb2:	9e20      	ldr	r6, [sp, #128]	; 0x80
    7fb4:	1c1f      	adds	r7, r3, #0
    7fb6:	e005      	b.n	7fc4 <_strtod_r+0xf0>
    7fb8:	4fa9      	ldr	r7, [pc, #676]	; (8260 <_strtod_r+0x38c>)
    7fba:	2600      	movs	r6, #0
    7fbc:	e002      	b.n	7fc4 <_strtod_r+0xf0>
    7fbe:	2601      	movs	r6, #1
    7fc0:	4fa8      	ldr	r7, [pc, #672]	; (8264 <_strtod_r+0x390>)
    7fc2:	4276      	negs	r6, r6
    7fc4:	9b04      	ldr	r3, [sp, #16]
    7fc6:	071b      	lsls	r3, r3, #28
    7fc8:	d401      	bmi.n	7fce <_strtod_r+0xfa>
    7fca:	f000 fd6f 	bl	8aac <_strtod_r+0xbd8>
    7fce:	2380      	movs	r3, #128	; 0x80
    7fd0:	061b      	lsls	r3, r3, #24
    7fd2:	431f      	orrs	r7, r3
    7fd4:	f000 fd6a 	bl	8aac <_strtod_r+0xbd8>
    7fd8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    7fda:	1c5a      	adds	r2, r3, #1
    7fdc:	921d      	str	r2, [sp, #116]	; 0x74
    7fde:	785b      	ldrb	r3, [r3, #1]
    7fe0:	2b30      	cmp	r3, #48	; 0x30
    7fe2:	d0f9      	beq.n	7fd8 <_strtod_r+0x104>
    7fe4:	2b00      	cmp	r3, #0
    7fe6:	d101      	bne.n	7fec <_strtod_r+0x118>
    7fe8:	f000 fd60 	bl	8aac <_strtod_r+0xbd8>
    7fec:	2301      	movs	r3, #1
    7fee:	930a      	str	r3, [sp, #40]	; 0x28
    7ff0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    7ff2:	930c      	str	r3, [sp, #48]	; 0x30
    7ff4:	2300      	movs	r3, #0
    7ff6:	9305      	str	r3, [sp, #20]
    7ff8:	9307      	str	r3, [sp, #28]
    7ffa:	9304      	str	r3, [sp, #16]
    7ffc:	9c1d      	ldr	r4, [sp, #116]	; 0x74
    7ffe:	7823      	ldrb	r3, [r4, #0]
    8000:	1c1a      	adds	r2, r3, #0
    8002:	3a30      	subs	r2, #48	; 0x30
    8004:	9308      	str	r3, [sp, #32]
    8006:	b2d3      	uxtb	r3, r2
    8008:	2b09      	cmp	r3, #9
    800a:	d812      	bhi.n	8032 <_strtod_r+0x15e>
    800c:	9904      	ldr	r1, [sp, #16]
    800e:	230a      	movs	r3, #10
    8010:	2908      	cmp	r1, #8
    8012:	dc04      	bgt.n	801e <_strtod_r+0x14a>
    8014:	9907      	ldr	r1, [sp, #28]
    8016:	434b      	muls	r3, r1
    8018:	18d3      	adds	r3, r2, r3
    801a:	9307      	str	r3, [sp, #28]
    801c:	e003      	b.n	8026 <_strtod_r+0x152>
    801e:	9905      	ldr	r1, [sp, #20]
    8020:	434b      	muls	r3, r1
    8022:	18d3      	adds	r3, r2, r3
    8024:	9305      	str	r3, [sp, #20]
    8026:	9b04      	ldr	r3, [sp, #16]
    8028:	3401      	adds	r4, #1
    802a:	3301      	adds	r3, #1
    802c:	9304      	str	r3, [sp, #16]
    802e:	941d      	str	r4, [sp, #116]	; 0x74
    8030:	e7e4      	b.n	7ffc <_strtod_r+0x128>
    8032:	9803      	ldr	r0, [sp, #12]
    8034:	f002 f9a6 	bl	a384 <_localeconv_r>
    8038:	6805      	ldr	r5, [r0, #0]
    803a:	9803      	ldr	r0, [sp, #12]
    803c:	f002 f9a2 	bl	a384 <_localeconv_r>
    8040:	6800      	ldr	r0, [r0, #0]
    8042:	f7ff feed 	bl	7e20 <strlen>
    8046:	1c29      	adds	r1, r5, #0
    8048:	1c02      	adds	r2, r0, #0
    804a:	1c20      	adds	r0, r4, #0
    804c:	f7ff feef 	bl	7e2e <strncmp>
    8050:	1e05      	subs	r5, r0, #0
    8052:	d005      	beq.n	8060 <_strtod_r+0x18c>
    8054:	2000      	movs	r0, #0
    8056:	9b08      	ldr	r3, [sp, #32]
    8058:	9c04      	ldr	r4, [sp, #16]
    805a:	1c01      	adds	r1, r0, #0
    805c:	9008      	str	r0, [sp, #32]
    805e:	e05a      	b.n	8116 <_strtod_r+0x242>
    8060:	9803      	ldr	r0, [sp, #12]
    8062:	f002 f98f 	bl	a384 <_localeconv_r>
    8066:	6800      	ldr	r0, [r0, #0]
    8068:	f7ff feda 	bl	7e20 <strlen>
    806c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    806e:	9a04      	ldr	r2, [sp, #16]
    8070:	1818      	adds	r0, r3, r0
    8072:	901d      	str	r0, [sp, #116]	; 0x74
    8074:	7803      	ldrb	r3, [r0, #0]
    8076:	1e10      	subs	r0, r2, #0
    8078:	d141      	bne.n	80fe <_strtod_r+0x22a>
    807a:	2b30      	cmp	r3, #48	; 0x30
    807c:	d105      	bne.n	808a <_strtod_r+0x1b6>
    807e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    8080:	3001      	adds	r0, #1
    8082:	1c5a      	adds	r2, r3, #1
    8084:	921d      	str	r2, [sp, #116]	; 0x74
    8086:	785b      	ldrb	r3, [r3, #1]
    8088:	e7f7      	b.n	807a <_strtod_r+0x1a6>
    808a:	1c1a      	adds	r2, r3, #0
    808c:	3a31      	subs	r2, #49	; 0x31
    808e:	2a08      	cmp	r2, #8
    8090:	d83d      	bhi.n	810e <_strtod_r+0x23a>
    8092:	1c01      	adds	r1, r0, #0
    8094:	2000      	movs	r0, #0
    8096:	1c04      	adds	r4, r0, #0
    8098:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    809a:	920c      	str	r2, [sp, #48]	; 0x30
    809c:	3b30      	subs	r3, #48	; 0x30
    809e:	1c42      	adds	r2, r0, #1
    80a0:	2b00      	cmp	r3, #0
    80a2:	d026      	beq.n	80f2 <_strtod_r+0x21e>
    80a4:	1889      	adds	r1, r1, r2
    80a6:	1c22      	adds	r2, r4, #0
    80a8:	1900      	adds	r0, r0, r4
    80aa:	4282      	cmp	r2, r0
    80ac:	d00f      	beq.n	80ce <_strtod_r+0x1fa>
    80ae:	3201      	adds	r2, #1
    80b0:	1e54      	subs	r4, r2, #1
    80b2:	2c08      	cmp	r4, #8
    80b4:	dc04      	bgt.n	80c0 <_strtod_r+0x1ec>
    80b6:	240a      	movs	r4, #10
    80b8:	9d07      	ldr	r5, [sp, #28]
    80ba:	4365      	muls	r5, r4
    80bc:	9507      	str	r5, [sp, #28]
    80be:	e7f4      	b.n	80aa <_strtod_r+0x1d6>
    80c0:	2a10      	cmp	r2, #16
    80c2:	dcf2      	bgt.n	80aa <_strtod_r+0x1d6>
    80c4:	240a      	movs	r4, #10
    80c6:	9d05      	ldr	r5, [sp, #20]
    80c8:	4365      	muls	r5, r4
    80ca:	9505      	str	r5, [sp, #20]
    80cc:	e7ed      	b.n	80aa <_strtod_r+0x1d6>
    80ce:	1c54      	adds	r4, r2, #1
    80d0:	2a08      	cmp	r2, #8
    80d2:	dc06      	bgt.n	80e2 <_strtod_r+0x20e>
    80d4:	220a      	movs	r2, #10
    80d6:	9807      	ldr	r0, [sp, #28]
    80d8:	4342      	muls	r2, r0
    80da:	18d3      	adds	r3, r2, r3
    80dc:	9307      	str	r3, [sp, #28]
    80de:	2200      	movs	r2, #0
    80e0:	e007      	b.n	80f2 <_strtod_r+0x21e>
    80e2:	2200      	movs	r2, #0
    80e4:	2c10      	cmp	r4, #16
    80e6:	dc04      	bgt.n	80f2 <_strtod_r+0x21e>
    80e8:	200a      	movs	r0, #10
    80ea:	9d05      	ldr	r5, [sp, #20]
    80ec:	4368      	muls	r0, r5
    80ee:	18c3      	adds	r3, r0, r3
    80f0:	9305      	str	r3, [sp, #20]
    80f2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    80f4:	1c58      	adds	r0, r3, #1
    80f6:	901d      	str	r0, [sp, #116]	; 0x74
    80f8:	785b      	ldrb	r3, [r3, #1]
    80fa:	1c10      	adds	r0, r2, #0
    80fc:	e002      	b.n	8104 <_strtod_r+0x230>
    80fe:	1c28      	adds	r0, r5, #0
    8100:	1c29      	adds	r1, r5, #0
    8102:	9c04      	ldr	r4, [sp, #16]
    8104:	1c1a      	adds	r2, r3, #0
    8106:	3a30      	subs	r2, #48	; 0x30
    8108:	2a09      	cmp	r2, #9
    810a:	d9c7      	bls.n	809c <_strtod_r+0x1c8>
    810c:	e001      	b.n	8112 <_strtod_r+0x23e>
    810e:	2400      	movs	r4, #0
    8110:	1c21      	adds	r1, r4, #0
    8112:	2201      	movs	r2, #1
    8114:	9208      	str	r2, [sp, #32]
    8116:	2220      	movs	r2, #32
    8118:	1c1d      	adds	r5, r3, #0
    811a:	4395      	bics	r5, r2
    811c:	2200      	movs	r2, #0
    811e:	2d45      	cmp	r5, #69	; 0x45
    8120:	d157      	bne.n	81d2 <_strtod_r+0x2fe>
    8122:	1c23      	adds	r3, r4, #0
    8124:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    8126:	4303      	orrs	r3, r0
    8128:	432b      	orrs	r3, r5
    812a:	4293      	cmp	r3, r2
    812c:	d100      	bne.n	8130 <_strtod_r+0x25c>
    812e:	e0a9      	b.n	8284 <_strtod_r+0x3b0>
    8130:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    8132:	9306      	str	r3, [sp, #24]
    8134:	3301      	adds	r3, #1
    8136:	931d      	str	r3, [sp, #116]	; 0x74
    8138:	9b06      	ldr	r3, [sp, #24]
    813a:	785b      	ldrb	r3, [r3, #1]
    813c:	2b2b      	cmp	r3, #43	; 0x2b
    813e:	d006      	beq.n	814e <_strtod_r+0x27a>
    8140:	2b2d      	cmp	r3, #45	; 0x2d
    8142:	d001      	beq.n	8148 <_strtod_r+0x274>
    8144:	9209      	str	r2, [sp, #36]	; 0x24
    8146:	e008      	b.n	815a <_strtod_r+0x286>
    8148:	2301      	movs	r3, #1
    814a:	9309      	str	r3, [sp, #36]	; 0x24
    814c:	e000      	b.n	8150 <_strtod_r+0x27c>
    814e:	9209      	str	r2, [sp, #36]	; 0x24
    8150:	9b06      	ldr	r3, [sp, #24]
    8152:	3302      	adds	r3, #2
    8154:	931d      	str	r3, [sp, #116]	; 0x74
    8156:	9b06      	ldr	r3, [sp, #24]
    8158:	789b      	ldrb	r3, [r3, #2]
    815a:	1c1a      	adds	r2, r3, #0
    815c:	3a30      	subs	r2, #48	; 0x30
    815e:	2a09      	cmp	r2, #9
    8160:	d834      	bhi.n	81cc <_strtod_r+0x2f8>
    8162:	2b30      	cmp	r3, #48	; 0x30
    8164:	d104      	bne.n	8170 <_strtod_r+0x29c>
    8166:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    8168:	1c5a      	adds	r2, r3, #1
    816a:	921d      	str	r2, [sp, #116]	; 0x74
    816c:	785b      	ldrb	r3, [r3, #1]
    816e:	e7f8      	b.n	8162 <_strtod_r+0x28e>
    8170:	2531      	movs	r5, #49	; 0x31
    8172:	426d      	negs	r5, r5
    8174:	46ac      	mov	ip, r5
    8176:	449c      	add	ip, r3
    8178:	4665      	mov	r5, ip
    817a:	2200      	movs	r2, #0
    817c:	2d08      	cmp	r5, #8
    817e:	d828      	bhi.n	81d2 <_strtod_r+0x2fe>
    8180:	3b30      	subs	r3, #48	; 0x30
    8182:	930b      	str	r3, [sp, #44]	; 0x2c
    8184:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    8186:	930e      	str	r3, [sp, #56]	; 0x38
    8188:	2530      	movs	r5, #48	; 0x30
    818a:	426d      	negs	r5, r5
    818c:	46ac      	mov	ip, r5
    818e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    8190:	1c5a      	adds	r2, r3, #1
    8192:	921d      	str	r2, [sp, #116]	; 0x74
    8194:	785b      	ldrb	r3, [r3, #1]
    8196:	449c      	add	ip, r3
    8198:	4665      	mov	r5, ip
    819a:	2d09      	cmp	r5, #9
    819c:	d806      	bhi.n	81ac <_strtod_r+0x2d8>
    819e:	220a      	movs	r2, #10
    81a0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    81a2:	436a      	muls	r2, r5
    81a4:	18d3      	adds	r3, r2, r3
    81a6:	3b30      	subs	r3, #48	; 0x30
    81a8:	930b      	str	r3, [sp, #44]	; 0x2c
    81aa:	e7ed      	b.n	8188 <_strtod_r+0x2b4>
    81ac:	9d0e      	ldr	r5, [sp, #56]	; 0x38
    81ae:	1b52      	subs	r2, r2, r5
    81b0:	1e15      	subs	r5, r2, #0
    81b2:	4a2d      	ldr	r2, [pc, #180]	; (8268 <_strtod_r+0x394>)
    81b4:	4694      	mov	ip, r2
    81b6:	2d08      	cmp	r5, #8
    81b8:	dc03      	bgt.n	81c2 <_strtod_r+0x2ee>
    81ba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    81bc:	4562      	cmp	r2, ip
    81be:	dd00      	ble.n	81c2 <_strtod_r+0x2ee>
    81c0:	4662      	mov	r2, ip
    81c2:	9d09      	ldr	r5, [sp, #36]	; 0x24
    81c4:	2d00      	cmp	r5, #0
    81c6:	d004      	beq.n	81d2 <_strtod_r+0x2fe>
    81c8:	4252      	negs	r2, r2
    81ca:	e002      	b.n	81d2 <_strtod_r+0x2fe>
    81cc:	9a06      	ldr	r2, [sp, #24]
    81ce:	921d      	str	r2, [sp, #116]	; 0x74
    81d0:	2200      	movs	r2, #0
    81d2:	2c00      	cmp	r4, #0
    81d4:	d161      	bne.n	829a <_strtod_r+0x3c6>
    81d6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    81d8:	4310      	orrs	r0, r2
    81da:	d001      	beq.n	81e0 <_strtod_r+0x30c>
    81dc:	f000 fc66 	bl	8aac <_strtod_r+0xbd8>
    81e0:	9a08      	ldr	r2, [sp, #32]
    81e2:	2a00      	cmp	r2, #0
    81e4:	d14e      	bne.n	8284 <_strtod_r+0x3b0>
    81e6:	2b4e      	cmp	r3, #78	; 0x4e
    81e8:	d01c      	beq.n	8224 <_strtod_r+0x350>
    81ea:	dc02      	bgt.n	81f2 <_strtod_r+0x31e>
    81ec:	2b49      	cmp	r3, #73	; 0x49
    81ee:	d005      	beq.n	81fc <_strtod_r+0x328>
    81f0:	e048      	b.n	8284 <_strtod_r+0x3b0>
    81f2:	2b69      	cmp	r3, #105	; 0x69
    81f4:	d002      	beq.n	81fc <_strtod_r+0x328>
    81f6:	2b6e      	cmp	r3, #110	; 0x6e
    81f8:	d014      	beq.n	8224 <_strtod_r+0x350>
    81fa:	e043      	b.n	8284 <_strtod_r+0x3b0>
    81fc:	a81d      	add	r0, sp, #116	; 0x74
    81fe:	491b      	ldr	r1, [pc, #108]	; (826c <_strtod_r+0x398>)
    8200:	f7ff fe3d 	bl	7e7e <match>
    8204:	2800      	cmp	r0, #0
    8206:	d03d      	beq.n	8284 <_strtod_r+0x3b0>
    8208:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    820a:	a81d      	add	r0, sp, #116	; 0x74
    820c:	3b01      	subs	r3, #1
    820e:	4918      	ldr	r1, [pc, #96]	; (8270 <_strtod_r+0x39c>)
    8210:	931d      	str	r3, [sp, #116]	; 0x74
    8212:	f7ff fe34 	bl	7e7e <match>
    8216:	2800      	cmp	r0, #0
    8218:	d102      	bne.n	8220 <_strtod_r+0x34c>
    821a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    821c:	3301      	adds	r3, #1
    821e:	931d      	str	r3, [sp, #116]	; 0x74
    8220:	4f0f      	ldr	r7, [pc, #60]	; (8260 <_strtod_r+0x38c>)
    8222:	e02c      	b.n	827e <_strtod_r+0x3aa>
    8224:	a81d      	add	r0, sp, #116	; 0x74
    8226:	4913      	ldr	r1, [pc, #76]	; (8274 <_strtod_r+0x3a0>)
    8228:	f7ff fe29 	bl	7e7e <match>
    822c:	2800      	cmp	r0, #0
    822e:	d029      	beq.n	8284 <_strtod_r+0x3b0>
    8230:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    8232:	781b      	ldrb	r3, [r3, #0]
    8234:	2b28      	cmp	r3, #40	; 0x28
    8236:	d121      	bne.n	827c <_strtod_r+0x3a8>
    8238:	a81d      	add	r0, sp, #116	; 0x74
    823a:	490f      	ldr	r1, [pc, #60]	; (8278 <_strtod_r+0x3a4>)
    823c:	aa20      	add	r2, sp, #128	; 0x80
    823e:	f001 fff6 	bl	a22e <__hexnan>
    8242:	2805      	cmp	r0, #5
    8244:	d11a      	bne.n	827c <_strtod_r+0x3a8>
    8246:	9b21      	ldr	r3, [sp, #132]	; 0x84
    8248:	4a05      	ldr	r2, [pc, #20]	; (8260 <_strtod_r+0x38c>)
    824a:	9e20      	ldr	r6, [sp, #128]	; 0x80
    824c:	431a      	orrs	r2, r3
    824e:	1c17      	adds	r7, r2, #0
    8250:	f000 fc2c 	bl	8aac <_strtod_r+0xbd8>
    8254:	0000e128 	.word	0x0000e128
    8258:	00000433 	.word	0x00000433
    825c:	ffefffff 	.word	0xffefffff
    8260:	7ff00000 	.word	0x7ff00000
    8264:	7fffffff 	.word	0x7fffffff
    8268:	00004e1f 	.word	0x00004e1f
    826c:	0000e08e 	.word	0x0000e08e
    8270:	0000e240 	.word	0x0000e240
    8274:	0000e096 	.word	0x0000e096
    8278:	0000e0e8 	.word	0x0000e0e8
    827c:	4f92      	ldr	r7, [pc, #584]	; (84c8 <_strtod_r+0x5f4>)
    827e:	2600      	movs	r6, #0
    8280:	f000 fc14 	bl	8aac <_strtod_r+0xbd8>
    8284:	9b06      	ldr	r3, [sp, #24]
    8286:	931d      	str	r3, [sp, #116]	; 0x74
    8288:	2300      	movs	r3, #0
    828a:	930d      	str	r3, [sp, #52]	; 0x34
    828c:	9b19      	ldr	r3, [sp, #100]	; 0x64
    828e:	2b00      	cmp	r3, #0
    8290:	d001      	beq.n	8296 <_strtod_r+0x3c2>
    8292:	f000 fc0e 	bl	8ab2 <_strtod_r+0xbde>
    8296:	f000 fc17 	bl	8ac8 <_strtod_r+0xbf4>
    829a:	1a53      	subs	r3, r2, r1
    829c:	9309      	str	r3, [sp, #36]	; 0x24
    829e:	9b04      	ldr	r3, [sp, #16]
    82a0:	2b00      	cmp	r3, #0
    82a2:	d100      	bne.n	82a6 <_strtod_r+0x3d2>
    82a4:	9404      	str	r4, [sp, #16]
    82a6:	1e25      	subs	r5, r4, #0
    82a8:	2d10      	cmp	r5, #16
    82aa:	dd00      	ble.n	82ae <_strtod_r+0x3da>
    82ac:	2510      	movs	r5, #16
    82ae:	9807      	ldr	r0, [sp, #28]
    82b0:	f004 fe78 	bl	cfa4 <__aeabi_ui2d>
    82b4:	1c06      	adds	r6, r0, #0
    82b6:	1c0f      	adds	r7, r1, #0
    82b8:	2d09      	cmp	r5, #9
    82ba:	dd15      	ble.n	82e8 <_strtod_r+0x414>
    82bc:	1c2b      	adds	r3, r5, #0
    82be:	4a83      	ldr	r2, [pc, #524]	; (84cc <_strtod_r+0x5f8>)
    82c0:	3b09      	subs	r3, #9
    82c2:	00db      	lsls	r3, r3, #3
    82c4:	18d3      	adds	r3, r2, r3
    82c6:	681a      	ldr	r2, [r3, #0]
    82c8:	685b      	ldr	r3, [r3, #4]
    82ca:	f003 ffe5 	bl	c298 <__aeabi_dmul>
    82ce:	1c06      	adds	r6, r0, #0
    82d0:	9805      	ldr	r0, [sp, #20]
    82d2:	1c0f      	adds	r7, r1, #0
    82d4:	f004 fe66 	bl	cfa4 <__aeabi_ui2d>
    82d8:	1c02      	adds	r2, r0, #0
    82da:	1c0b      	adds	r3, r1, #0
    82dc:	1c30      	adds	r0, r6, #0
    82de:	1c39      	adds	r1, r7, #0
    82e0:	f003 f874 	bl	b3cc <__aeabi_dadd>
    82e4:	1c06      	adds	r6, r0, #0
    82e6:	1c0f      	adds	r7, r1, #0
    82e8:	2c0f      	cmp	r4, #15
    82ea:	dc37      	bgt.n	835c <_strtod_r+0x488>
    82ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
    82ee:	2b00      	cmp	r3, #0
    82f0:	d100      	bne.n	82f4 <_strtod_r+0x420>
    82f2:	e3db      	b.n	8aac <_strtod_r+0xbd8>
    82f4:	dd24      	ble.n	8340 <_strtod_r+0x46c>
    82f6:	2b16      	cmp	r3, #22
    82f8:	dc07      	bgt.n	830a <_strtod_r+0x436>
    82fa:	4974      	ldr	r1, [pc, #464]	; (84cc <_strtod_r+0x5f8>)
    82fc:	00da      	lsls	r2, r3, #3
    82fe:	188a      	adds	r2, r1, r2
    8300:	6810      	ldr	r0, [r2, #0]
    8302:	6851      	ldr	r1, [r2, #4]
    8304:	1c3b      	adds	r3, r7, #0
    8306:	1c32      	adds	r2, r6, #0
    8308:	e015      	b.n	8336 <_strtod_r+0x462>
    830a:	2325      	movs	r3, #37	; 0x25
    830c:	9a09      	ldr	r2, [sp, #36]	; 0x24
    830e:	1b1b      	subs	r3, r3, r4
    8310:	429a      	cmp	r2, r3
    8312:	dc23      	bgt.n	835c <_strtod_r+0x488>
    8314:	220f      	movs	r2, #15
    8316:	4d6d      	ldr	r5, [pc, #436]	; (84cc <_strtod_r+0x5f8>)
    8318:	1b14      	subs	r4, r2, r4
    831a:	00e3      	lsls	r3, r4, #3
    831c:	18eb      	adds	r3, r5, r3
    831e:	6818      	ldr	r0, [r3, #0]
    8320:	6859      	ldr	r1, [r3, #4]
    8322:	1c32      	adds	r2, r6, #0
    8324:	1c3b      	adds	r3, r7, #0
    8326:	f003 ffb7 	bl	c298 <__aeabi_dmul>
    832a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    832c:	1b1c      	subs	r4, r3, r4
    832e:	00e4      	lsls	r4, r4, #3
    8330:	192d      	adds	r5, r5, r4
    8332:	682a      	ldr	r2, [r5, #0]
    8334:	686b      	ldr	r3, [r5, #4]
    8336:	f003 ffaf 	bl	c298 <__aeabi_dmul>
    833a:	1c06      	adds	r6, r0, #0
    833c:	1c0f      	adds	r7, r1, #0
    833e:	e3b5      	b.n	8aac <_strtod_r+0xbd8>
    8340:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8342:	3316      	adds	r3, #22
    8344:	db0a      	blt.n	835c <_strtod_r+0x488>
    8346:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8348:	1c30      	adds	r0, r6, #0
    834a:	00da      	lsls	r2, r3, #3
    834c:	4b5f      	ldr	r3, [pc, #380]	; (84cc <_strtod_r+0x5f8>)
    834e:	1c39      	adds	r1, r7, #0
    8350:	1a9a      	subs	r2, r3, r2
    8352:	6853      	ldr	r3, [r2, #4]
    8354:	6812      	ldr	r2, [r2, #0]
    8356:	f003 fb61 	bl	ba1c <__aeabi_ddiv>
    835a:	e7ee      	b.n	833a <_strtod_r+0x466>
    835c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    835e:	1b65      	subs	r5, r4, r5
    8360:	195d      	adds	r5, r3, r5
    8362:	2d00      	cmp	r5, #0
    8364:	dd59      	ble.n	841a <_strtod_r+0x546>
    8366:	230f      	movs	r3, #15
    8368:	402b      	ands	r3, r5
    836a:	d00a      	beq.n	8382 <_strtod_r+0x4ae>
    836c:	4a57      	ldr	r2, [pc, #348]	; (84cc <_strtod_r+0x5f8>)
    836e:	00db      	lsls	r3, r3, #3
    8370:	18d3      	adds	r3, r2, r3
    8372:	6818      	ldr	r0, [r3, #0]
    8374:	6859      	ldr	r1, [r3, #4]
    8376:	1c32      	adds	r2, r6, #0
    8378:	1c3b      	adds	r3, r7, #0
    837a:	f003 ff8d 	bl	c298 <__aeabi_dmul>
    837e:	1c06      	adds	r6, r0, #0
    8380:	1c0f      	adds	r7, r1, #0
    8382:	230f      	movs	r3, #15
    8384:	439d      	bics	r5, r3
    8386:	d100      	bne.n	838a <_strtod_r+0x4b6>
    8388:	e0b0      	b.n	84ec <_strtod_r+0x618>
    838a:	3326      	adds	r3, #38	; 0x26
    838c:	33ff      	adds	r3, #255	; 0xff
    838e:	429d      	cmp	r5, r3
    8390:	dd0e      	ble.n	83b0 <_strtod_r+0x4dc>
    8392:	2300      	movs	r3, #0
    8394:	9304      	str	r3, [sp, #16]
    8396:	9305      	str	r3, [sp, #20]
    8398:	930b      	str	r3, [sp, #44]	; 0x2c
    839a:	9308      	str	r3, [sp, #32]
    839c:	2322      	movs	r3, #34	; 0x22
    839e:	2600      	movs	r6, #0
    83a0:	9a03      	ldr	r2, [sp, #12]
    83a2:	4f4b      	ldr	r7, [pc, #300]	; (84d0 <_strtod_r+0x5fc>)
    83a4:	6013      	str	r3, [r2, #0]
    83a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    83a8:	42b3      	cmp	r3, r6
    83aa:	d000      	beq.n	83ae <_strtod_r+0x4da>
    83ac:	e36a      	b.n	8a84 <_strtod_r+0xbb0>
    83ae:	e37d      	b.n	8aac <_strtod_r+0xbd8>
    83b0:	2300      	movs	r3, #0
    83b2:	1c30      	adds	r0, r6, #0
    83b4:	1c39      	adds	r1, r7, #0
    83b6:	112d      	asrs	r5, r5, #4
    83b8:	9305      	str	r3, [sp, #20]
    83ba:	2d01      	cmp	r5, #1
    83bc:	dd0e      	ble.n	83dc <_strtod_r+0x508>
    83be:	07eb      	lsls	r3, r5, #31
    83c0:	d507      	bpl.n	83d2 <_strtod_r+0x4fe>
    83c2:	9b05      	ldr	r3, [sp, #20]
    83c4:	00da      	lsls	r2, r3, #3
    83c6:	4b43      	ldr	r3, [pc, #268]	; (84d4 <_strtod_r+0x600>)
    83c8:	18d3      	adds	r3, r2, r3
    83ca:	681a      	ldr	r2, [r3, #0]
    83cc:	685b      	ldr	r3, [r3, #4]
    83ce:	f003 ff63 	bl	c298 <__aeabi_dmul>
    83d2:	9b05      	ldr	r3, [sp, #20]
    83d4:	106d      	asrs	r5, r5, #1
    83d6:	3301      	adds	r3, #1
    83d8:	9305      	str	r3, [sp, #20]
    83da:	e7ee      	b.n	83ba <_strtod_r+0x4e6>
    83dc:	1c06      	adds	r6, r0, #0
    83de:	4b3e      	ldr	r3, [pc, #248]	; (84d8 <_strtod_r+0x604>)
    83e0:	18cf      	adds	r7, r1, r3
    83e2:	9b05      	ldr	r3, [sp, #20]
    83e4:	00da      	lsls	r2, r3, #3
    83e6:	4b3b      	ldr	r3, [pc, #236]	; (84d4 <_strtod_r+0x600>)
    83e8:	189b      	adds	r3, r3, r2
    83ea:	6818      	ldr	r0, [r3, #0]
    83ec:	6859      	ldr	r1, [r3, #4]
    83ee:	1c32      	adds	r2, r6, #0
    83f0:	1c3b      	adds	r3, r7, #0
    83f2:	f003 ff51 	bl	c298 <__aeabi_dmul>
    83f6:	4b36      	ldr	r3, [pc, #216]	; (84d0 <_strtod_r+0x5fc>)
    83f8:	1c0f      	adds	r7, r1, #0
    83fa:	400b      	ands	r3, r1
    83fc:	4937      	ldr	r1, [pc, #220]	; (84dc <_strtod_r+0x608>)
    83fe:	1c06      	adds	r6, r0, #0
    8400:	428b      	cmp	r3, r1
    8402:	d8c6      	bhi.n	8392 <_strtod_r+0x4be>
    8404:	4936      	ldr	r1, [pc, #216]	; (84e0 <_strtod_r+0x60c>)
    8406:	428b      	cmp	r3, r1
    8408:	d903      	bls.n	8412 <_strtod_r+0x53e>
    840a:	2601      	movs	r6, #1
    840c:	4f35      	ldr	r7, [pc, #212]	; (84e4 <_strtod_r+0x610>)
    840e:	4276      	negs	r6, r6
    8410:	e06c      	b.n	84ec <_strtod_r+0x618>
    8412:	23d4      	movs	r3, #212	; 0xd4
    8414:	049b      	lsls	r3, r3, #18
    8416:	18ff      	adds	r7, r7, r3
    8418:	e068      	b.n	84ec <_strtod_r+0x618>
    841a:	2d00      	cmp	r5, #0
    841c:	d066      	beq.n	84ec <_strtod_r+0x618>
    841e:	230f      	movs	r3, #15
    8420:	426d      	negs	r5, r5
    8422:	402b      	ands	r3, r5
    8424:	d00a      	beq.n	843c <_strtod_r+0x568>
    8426:	4a29      	ldr	r2, [pc, #164]	; (84cc <_strtod_r+0x5f8>)
    8428:	00db      	lsls	r3, r3, #3
    842a:	18d3      	adds	r3, r2, r3
    842c:	1c30      	adds	r0, r6, #0
    842e:	681a      	ldr	r2, [r3, #0]
    8430:	685b      	ldr	r3, [r3, #4]
    8432:	1c39      	adds	r1, r7, #0
    8434:	f003 faf2 	bl	ba1c <__aeabi_ddiv>
    8438:	1c06      	adds	r6, r0, #0
    843a:	1c0f      	adds	r7, r1, #0
    843c:	112d      	asrs	r5, r5, #4
    843e:	d055      	beq.n	84ec <_strtod_r+0x618>
    8440:	2d1f      	cmp	r5, #31
    8442:	dd05      	ble.n	8450 <_strtod_r+0x57c>
    8444:	2300      	movs	r3, #0
    8446:	9304      	str	r3, [sp, #16]
    8448:	9305      	str	r3, [sp, #20]
    844a:	930b      	str	r3, [sp, #44]	; 0x2c
    844c:	9308      	str	r3, [sp, #32]
    844e:	e118      	b.n	8682 <_strtod_r+0x7ae>
    8450:	2300      	movs	r3, #0
    8452:	9306      	str	r3, [sp, #24]
    8454:	06eb      	lsls	r3, r5, #27
    8456:	d501      	bpl.n	845c <_strtod_r+0x588>
    8458:	236a      	movs	r3, #106	; 0x6a
    845a:	9306      	str	r3, [sp, #24]
    845c:	1c39      	adds	r1, r7, #0
    845e:	1c30      	adds	r0, r6, #0
    8460:	4e21      	ldr	r6, [pc, #132]	; (84e8 <_strtod_r+0x614>)
    8462:	2d00      	cmp	r5, #0
    8464:	dd08      	ble.n	8478 <_strtod_r+0x5a4>
    8466:	07eb      	lsls	r3, r5, #31
    8468:	d503      	bpl.n	8472 <_strtod_r+0x59e>
    846a:	6832      	ldr	r2, [r6, #0]
    846c:	6873      	ldr	r3, [r6, #4]
    846e:	f003 ff13 	bl	c298 <__aeabi_dmul>
    8472:	106d      	asrs	r5, r5, #1
    8474:	3608      	adds	r6, #8
    8476:	e7f4      	b.n	8462 <_strtod_r+0x58e>
    8478:	9b06      	ldr	r3, [sp, #24]
    847a:	1c06      	adds	r6, r0, #0
    847c:	1c0f      	adds	r7, r1, #0
    847e:	2b00      	cmp	r3, #0
    8480:	d019      	beq.n	84b6 <_strtod_r+0x5e2>
    8482:	226b      	movs	r2, #107	; 0x6b
    8484:	004b      	lsls	r3, r1, #1
    8486:	0d5b      	lsrs	r3, r3, #21
    8488:	1c08      	adds	r0, r1, #0
    848a:	1ad3      	subs	r3, r2, r3
    848c:	2b00      	cmp	r3, #0
    848e:	dd12      	ble.n	84b6 <_strtod_r+0x5e2>
    8490:	2b1f      	cmp	r3, #31
    8492:	dd0c      	ble.n	84ae <_strtod_r+0x5da>
    8494:	2600      	movs	r6, #0
    8496:	2b34      	cmp	r3, #52	; 0x34
    8498:	dd02      	ble.n	84a0 <_strtod_r+0x5cc>
    849a:	27dc      	movs	r7, #220	; 0xdc
    849c:	04bf      	lsls	r7, r7, #18
    849e:	e00a      	b.n	84b6 <_strtod_r+0x5e2>
    84a0:	2201      	movs	r2, #1
    84a2:	3b20      	subs	r3, #32
    84a4:	4252      	negs	r2, r2
    84a6:	409a      	lsls	r2, r3
    84a8:	4010      	ands	r0, r2
    84aa:	1c07      	adds	r7, r0, #0
    84ac:	e003      	b.n	84b6 <_strtod_r+0x5e2>
    84ae:	2201      	movs	r2, #1
    84b0:	4252      	negs	r2, r2
    84b2:	409a      	lsls	r2, r3
    84b4:	4016      	ands	r6, r2
    84b6:	1c30      	adds	r0, r6, #0
    84b8:	1c39      	adds	r1, r7, #0
    84ba:	2200      	movs	r2, #0
    84bc:	2300      	movs	r3, #0
    84be:	f002 ff39 	bl	b334 <__aeabi_dcmpeq>
    84c2:	2800      	cmp	r0, #0
    84c4:	d1be      	bne.n	8444 <_strtod_r+0x570>
    84c6:	e013      	b.n	84f0 <_strtod_r+0x61c>
    84c8:	fff80000 	.word	0xfff80000
    84cc:	0000e258 	.word	0x0000e258
    84d0:	7ff00000 	.word	0x7ff00000
    84d4:	0000e320 	.word	0x0000e320
    84d8:	fcb00000 	.word	0xfcb00000
    84dc:	7ca00000 	.word	0x7ca00000
    84e0:	7c900000 	.word	0x7c900000
    84e4:	7fefffff 	.word	0x7fefffff
    84e8:	0000e100 	.word	0x0000e100
    84ec:	2300      	movs	r3, #0
    84ee:	9306      	str	r3, [sp, #24]
    84f0:	9b07      	ldr	r3, [sp, #28]
    84f2:	9803      	ldr	r0, [sp, #12]
    84f4:	9300      	str	r3, [sp, #0]
    84f6:	990c      	ldr	r1, [sp, #48]	; 0x30
    84f8:	9a04      	ldr	r2, [sp, #16]
    84fa:	1c23      	adds	r3, r4, #0
    84fc:	f001 fffb 	bl	a4f6 <__s2b>
    8500:	900b      	str	r0, [sp, #44]	; 0x2c
    8502:	2800      	cmp	r0, #0
    8504:	d100      	bne.n	8508 <_strtod_r+0x634>
    8506:	e744      	b.n	8392 <_strtod_r+0x4be>
    8508:	9b09      	ldr	r3, [sp, #36]	; 0x24
    850a:	9a09      	ldr	r2, [sp, #36]	; 0x24
    850c:	425b      	negs	r3, r3
    850e:	17d2      	asrs	r2, r2, #31
    8510:	4013      	ands	r3, r2
    8512:	9313      	str	r3, [sp, #76]	; 0x4c
    8514:	2300      	movs	r3, #0
    8516:	9304      	str	r3, [sp, #16]
    8518:	9305      	str	r3, [sp, #20]
    851a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    851c:	9803      	ldr	r0, [sp, #12]
    851e:	6859      	ldr	r1, [r3, #4]
    8520:	f001 ff5c 	bl	a3dc <_Balloc>
    8524:	9008      	str	r0, [sp, #32]
    8526:	2800      	cmp	r0, #0
    8528:	d100      	bne.n	852c <_strtod_r+0x658>
    852a:	e737      	b.n	839c <_strtod_r+0x4c8>
    852c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    852e:	990b      	ldr	r1, [sp, #44]	; 0x2c
    8530:	691b      	ldr	r3, [r3, #16]
    8532:	310c      	adds	r1, #12
    8534:	1c9a      	adds	r2, r3, #2
    8536:	0092      	lsls	r2, r2, #2
    8538:	300c      	adds	r0, #12
    853a:	9307      	str	r3, [sp, #28]
    853c:	f7fd ffd7 	bl	64ee <memcpy>
    8540:	ab1f      	add	r3, sp, #124	; 0x7c
    8542:	9300      	str	r3, [sp, #0]
    8544:	ab20      	add	r3, sp, #128	; 0x80
    8546:	9301      	str	r3, [sp, #4]
    8548:	9803      	ldr	r0, [sp, #12]
    854a:	1c32      	adds	r2, r6, #0
    854c:	1c3b      	adds	r3, r7, #0
    854e:	960e      	str	r6, [sp, #56]	; 0x38
    8550:	970f      	str	r7, [sp, #60]	; 0x3c
    8552:	f002 fa91 	bl	aa78 <__d2b>
    8556:	901e      	str	r0, [sp, #120]	; 0x78
    8558:	2800      	cmp	r0, #0
    855a:	d100      	bne.n	855e <_strtod_r+0x68a>
    855c:	e71e      	b.n	839c <_strtod_r+0x4c8>
    855e:	9803      	ldr	r0, [sp, #12]
    8560:	2101      	movs	r1, #1
    8562:	f002 f852 	bl	a60a <__i2b>
    8566:	9005      	str	r0, [sp, #20]
    8568:	2800      	cmp	r0, #0
    856a:	d100      	bne.n	856e <_strtod_r+0x69a>
    856c:	e716      	b.n	839c <_strtod_r+0x4c8>
    856e:	2300      	movs	r3, #0
    8570:	9a09      	ldr	r2, [sp, #36]	; 0x24
    8572:	930a      	str	r3, [sp, #40]	; 0x28
    8574:	4293      	cmp	r3, r2
    8576:	da00      	bge.n	857a <_strtod_r+0x6a6>
    8578:	920a      	str	r2, [sp, #40]	; 0x28
    857a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    857c:	2b00      	cmp	r3, #0
    857e:	da00      	bge.n	8582 <_strtod_r+0x6ae>
    8580:	e089      	b.n	8696 <_strtod_r+0x7c2>
    8582:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    8584:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    8586:	18d5      	adds	r5, r2, r3
    8588:	9a06      	ldr	r2, [sp, #24]
    858a:	9920      	ldr	r1, [sp, #128]	; 0x80
    858c:	1a9b      	subs	r3, r3, r2
    858e:	2236      	movs	r2, #54	; 0x36
    8590:	185b      	adds	r3, r3, r1
    8592:	1a52      	subs	r2, r2, r1
    8594:	49c8      	ldr	r1, [pc, #800]	; (88b8 <_strtod_r+0x9e4>)
    8596:	2001      	movs	r0, #1
    8598:	428b      	cmp	r3, r1
    859a:	db00      	blt.n	859e <_strtod_r+0x6ca>
    859c:	e085      	b.n	86aa <_strtod_r+0x7d6>
    859e:	1ac9      	subs	r1, r1, r3
    85a0:	1a52      	subs	r2, r2, r1
    85a2:	291f      	cmp	r1, #31
    85a4:	dc7b      	bgt.n	869e <_strtod_r+0x7ca>
    85a6:	4088      	lsls	r0, r1
    85a8:	2300      	movs	r3, #0
    85aa:	9018      	str	r0, [sp, #96]	; 0x60
    85ac:	9312      	str	r3, [sp, #72]	; 0x48
    85ae:	18ab      	adds	r3, r5, r2
    85b0:	9307      	str	r3, [sp, #28]
    85b2:	9b06      	ldr	r3, [sp, #24]
    85b4:	18a4      	adds	r4, r4, r2
    85b6:	18e4      	adds	r4, r4, r3
    85b8:	9b07      	ldr	r3, [sp, #28]
    85ba:	42ab      	cmp	r3, r5
    85bc:	dd00      	ble.n	85c0 <_strtod_r+0x6ec>
    85be:	1c2b      	adds	r3, r5, #0
    85c0:	42a3      	cmp	r3, r4
    85c2:	dd00      	ble.n	85c6 <_strtod_r+0x6f2>
    85c4:	1c23      	adds	r3, r4, #0
    85c6:	2b00      	cmp	r3, #0
    85c8:	dd04      	ble.n	85d4 <_strtod_r+0x700>
    85ca:	9a07      	ldr	r2, [sp, #28]
    85cc:	1ae4      	subs	r4, r4, r3
    85ce:	1ad2      	subs	r2, r2, r3
    85d0:	9207      	str	r2, [sp, #28]
    85d2:	1aed      	subs	r5, r5, r3
    85d4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    85d6:	2b00      	cmp	r3, #0
    85d8:	d16b      	bne.n	86b2 <_strtod_r+0x7de>
    85da:	9b07      	ldr	r3, [sp, #28]
    85dc:	2b00      	cmp	r3, #0
    85de:	dd00      	ble.n	85e2 <_strtod_r+0x70e>
    85e0:	e080      	b.n	86e4 <_strtod_r+0x810>
    85e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    85e4:	2b00      	cmp	r3, #0
    85e6:	d000      	beq.n	85ea <_strtod_r+0x716>
    85e8:	e086      	b.n	86f8 <_strtod_r+0x824>
    85ea:	2c00      	cmp	r4, #0
    85ec:	dd00      	ble.n	85f0 <_strtod_r+0x71c>
    85ee:	e08d      	b.n	870c <_strtod_r+0x838>
    85f0:	2d00      	cmp	r5, #0
    85f2:	dd00      	ble.n	85f6 <_strtod_r+0x722>
    85f4:	e094      	b.n	8720 <_strtod_r+0x84c>
    85f6:	9803      	ldr	r0, [sp, #12]
    85f8:	991e      	ldr	r1, [sp, #120]	; 0x78
    85fa:	9a08      	ldr	r2, [sp, #32]
    85fc:	f002 f95b 	bl	a8b6 <__mdiff>
    8600:	9004      	str	r0, [sp, #16]
    8602:	2800      	cmp	r0, #0
    8604:	d100      	bne.n	8608 <_strtod_r+0x734>
    8606:	e6c9      	b.n	839c <_strtod_r+0x4c8>
    8608:	2200      	movs	r2, #0
    860a:	68c3      	ldr	r3, [r0, #12]
    860c:	9905      	ldr	r1, [sp, #20]
    860e:	60c2      	str	r2, [r0, #12]
    8610:	930c      	str	r3, [sp, #48]	; 0x30
    8612:	f002 f935 	bl	a880 <__mcmp>
    8616:	2800      	cmp	r0, #0
    8618:	db00      	blt.n	861c <_strtod_r+0x748>
    861a:	e091      	b.n	8740 <_strtod_r+0x86c>
    861c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    861e:	2b00      	cmp	r3, #0
    8620:	d000      	beq.n	8624 <_strtod_r+0x750>
    8622:	e21a      	b.n	8a5a <_strtod_r+0xb86>
    8624:	2e00      	cmp	r6, #0
    8626:	d000      	beq.n	862a <_strtod_r+0x756>
    8628:	e217      	b.n	8a5a <_strtod_r+0xb86>
    862a:	033b      	lsls	r3, r7, #12
    862c:	d000      	beq.n	8630 <_strtod_r+0x75c>
    862e:	e214      	b.n	8a5a <_strtod_r+0xb86>
    8630:	22d6      	movs	r2, #214	; 0xd6
    8632:	4ba2      	ldr	r3, [pc, #648]	; (88bc <_strtod_r+0x9e8>)
    8634:	04d2      	lsls	r2, r2, #19
    8636:	403b      	ands	r3, r7
    8638:	4293      	cmp	r3, r2
    863a:	d800      	bhi.n	863e <_strtod_r+0x76a>
    863c:	e20d      	b.n	8a5a <_strtod_r+0xb86>
    863e:	9b04      	ldr	r3, [sp, #16]
    8640:	695b      	ldr	r3, [r3, #20]
    8642:	9307      	str	r3, [sp, #28]
    8644:	2b00      	cmp	r3, #0
    8646:	d075      	beq.n	8734 <_strtod_r+0x860>
    8648:	9904      	ldr	r1, [sp, #16]
    864a:	9803      	ldr	r0, [sp, #12]
    864c:	2201      	movs	r2, #1
    864e:	f002 f8c5 	bl	a7dc <__lshift>
    8652:	9905      	ldr	r1, [sp, #20]
    8654:	9004      	str	r0, [sp, #16]
    8656:	f002 f913 	bl	a880 <__mcmp>
    865a:	2800      	cmp	r0, #0
    865c:	dc00      	bgt.n	8660 <_strtod_r+0x78c>
    865e:	e1fc      	b.n	8a5a <_strtod_r+0xb86>
    8660:	9a06      	ldr	r2, [sp, #24]
    8662:	4b96      	ldr	r3, [pc, #600]	; (88bc <_strtod_r+0x9e8>)
    8664:	2a00      	cmp	r2, #0
    8666:	d100      	bne.n	866a <_strtod_r+0x796>
    8668:	e09a      	b.n	87a0 <_strtod_r+0x8cc>
    866a:	1c1a      	adds	r2, r3, #0
    866c:	21d6      	movs	r1, #214	; 0xd6
    866e:	403a      	ands	r2, r7
    8670:	04c9      	lsls	r1, r1, #19
    8672:	428a      	cmp	r2, r1
    8674:	dd00      	ble.n	8678 <_strtod_r+0x7a4>
    8676:	e093      	b.n	87a0 <_strtod_r+0x8cc>
    8678:	23dc      	movs	r3, #220	; 0xdc
    867a:	049b      	lsls	r3, r3, #18
    867c:	429a      	cmp	r2, r3
    867e:	dd00      	ble.n	8682 <_strtod_r+0x7ae>
    8680:	e1ee      	b.n	8a60 <_strtod_r+0xb8c>
    8682:	2322      	movs	r3, #34	; 0x22
    8684:	9a03      	ldr	r2, [sp, #12]
    8686:	2600      	movs	r6, #0
    8688:	6013      	str	r3, [r2, #0]
    868a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    868c:	2700      	movs	r7, #0
    868e:	2b00      	cmp	r3, #0
    8690:	d000      	beq.n	8694 <_strtod_r+0x7c0>
    8692:	e1f7      	b.n	8a84 <_strtod_r+0xbb0>
    8694:	e20a      	b.n	8aac <_strtod_r+0xbd8>
    8696:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8698:	9d13      	ldr	r5, [sp, #76]	; 0x4c
    869a:	1ad4      	subs	r4, r2, r3
    869c:	e774      	b.n	8588 <_strtod_r+0x6b4>
    869e:	4988      	ldr	r1, [pc, #544]	; (88c0 <_strtod_r+0x9ec>)
    86a0:	1acb      	subs	r3, r1, r3
    86a2:	1c01      	adds	r1, r0, #0
    86a4:	4099      	lsls	r1, r3
    86a6:	9112      	str	r1, [sp, #72]	; 0x48
    86a8:	e001      	b.n	86ae <_strtod_r+0x7da>
    86aa:	2300      	movs	r3, #0
    86ac:	9312      	str	r3, [sp, #72]	; 0x48
    86ae:	9018      	str	r0, [sp, #96]	; 0x60
    86b0:	e77d      	b.n	85ae <_strtod_r+0x6da>
    86b2:	1c1a      	adds	r2, r3, #0
    86b4:	9803      	ldr	r0, [sp, #12]
    86b6:	9905      	ldr	r1, [sp, #20]
    86b8:	f002 f83e 	bl	a738 <__pow5mult>
    86bc:	9005      	str	r0, [sp, #20]
    86be:	1e03      	subs	r3, r0, #0
    86c0:	d100      	bne.n	86c4 <_strtod_r+0x7f0>
    86c2:	e66b      	b.n	839c <_strtod_r+0x4c8>
    86c4:	9803      	ldr	r0, [sp, #12]
    86c6:	1c19      	adds	r1, r3, #0
    86c8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    86ca:	f001 ffa7 	bl	a61c <__multiply>
    86ce:	900c      	str	r0, [sp, #48]	; 0x30
    86d0:	2800      	cmp	r0, #0
    86d2:	d100      	bne.n	86d6 <_strtod_r+0x802>
    86d4:	e662      	b.n	839c <_strtod_r+0x4c8>
    86d6:	9803      	ldr	r0, [sp, #12]
    86d8:	991e      	ldr	r1, [sp, #120]	; 0x78
    86da:	f001 feb7 	bl	a44c <_Bfree>
    86de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    86e0:	931e      	str	r3, [sp, #120]	; 0x78
    86e2:	e77a      	b.n	85da <_strtod_r+0x706>
    86e4:	9803      	ldr	r0, [sp, #12]
    86e6:	991e      	ldr	r1, [sp, #120]	; 0x78
    86e8:	9a07      	ldr	r2, [sp, #28]
    86ea:	f002 f877 	bl	a7dc <__lshift>
    86ee:	901e      	str	r0, [sp, #120]	; 0x78
    86f0:	2800      	cmp	r0, #0
    86f2:	d000      	beq.n	86f6 <_strtod_r+0x822>
    86f4:	e775      	b.n	85e2 <_strtod_r+0x70e>
    86f6:	e651      	b.n	839c <_strtod_r+0x4c8>
    86f8:	9803      	ldr	r0, [sp, #12]
    86fa:	9908      	ldr	r1, [sp, #32]
    86fc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    86fe:	f002 f81b 	bl	a738 <__pow5mult>
    8702:	9008      	str	r0, [sp, #32]
    8704:	2800      	cmp	r0, #0
    8706:	d000      	beq.n	870a <_strtod_r+0x836>
    8708:	e76f      	b.n	85ea <_strtod_r+0x716>
    870a:	e647      	b.n	839c <_strtod_r+0x4c8>
    870c:	9803      	ldr	r0, [sp, #12]
    870e:	9908      	ldr	r1, [sp, #32]
    8710:	1c22      	adds	r2, r4, #0
    8712:	f002 f863 	bl	a7dc <__lshift>
    8716:	9008      	str	r0, [sp, #32]
    8718:	2800      	cmp	r0, #0
    871a:	d000      	beq.n	871e <_strtod_r+0x84a>
    871c:	e768      	b.n	85f0 <_strtod_r+0x71c>
    871e:	e63d      	b.n	839c <_strtod_r+0x4c8>
    8720:	9803      	ldr	r0, [sp, #12]
    8722:	9905      	ldr	r1, [sp, #20]
    8724:	1c2a      	adds	r2, r5, #0
    8726:	f002 f859 	bl	a7dc <__lshift>
    872a:	9005      	str	r0, [sp, #20]
    872c:	2800      	cmp	r0, #0
    872e:	d000      	beq.n	8732 <_strtod_r+0x85e>
    8730:	e761      	b.n	85f6 <_strtod_r+0x722>
    8732:	e633      	b.n	839c <_strtod_r+0x4c8>
    8734:	9b04      	ldr	r3, [sp, #16]
    8736:	691b      	ldr	r3, [r3, #16]
    8738:	9307      	str	r3, [sp, #28]
    873a:	2b01      	cmp	r3, #1
    873c:	dc84      	bgt.n	8648 <_strtod_r+0x774>
    873e:	e18c      	b.n	8a5a <_strtod_r+0xb86>
    8740:	2800      	cmp	r0, #0
    8742:	d164      	bne.n	880e <_strtod_r+0x93a>
    8744:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    8746:	033b      	lsls	r3, r7, #12
    8748:	2a00      	cmp	r2, #0
    874a:	d024      	beq.n	8796 <_strtod_r+0x8c2>
    874c:	4a5d      	ldr	r2, [pc, #372]	; (88c4 <_strtod_r+0x9f0>)
    874e:	1c39      	adds	r1, r7, #0
    8750:	0b1b      	lsrs	r3, r3, #12
    8752:	4293      	cmp	r3, r2
    8754:	d12d      	bne.n	87b2 <_strtod_r+0x8de>
    8756:	9a06      	ldr	r2, [sp, #24]
    8758:	3801      	subs	r0, #1
    875a:	1c34      	adds	r4, r6, #0
    875c:	1c03      	adds	r3, r0, #0
    875e:	2a00      	cmp	r2, #0
    8760:	d00a      	beq.n	8778 <_strtod_r+0x8a4>
    8762:	25d4      	movs	r5, #212	; 0xd4
    8764:	4a55      	ldr	r2, [pc, #340]	; (88bc <_strtod_r+0x9e8>)
    8766:	04ed      	lsls	r5, r5, #19
    8768:	403a      	ands	r2, r7
    876a:	42aa      	cmp	r2, r5
    876c:	d804      	bhi.n	8778 <_strtod_r+0x8a4>
    876e:	336c      	adds	r3, #108	; 0x6c
    8770:	0d12      	lsrs	r2, r2, #20
    8772:	1a9a      	subs	r2, r3, r2
    8774:	1c03      	adds	r3, r0, #0
    8776:	4093      	lsls	r3, r2
    8778:	429c      	cmp	r4, r3
    877a:	d11a      	bne.n	87b2 <_strtod_r+0x8de>
    877c:	4b52      	ldr	r3, [pc, #328]	; (88c8 <_strtod_r+0x9f4>)
    877e:	4299      	cmp	r1, r3
    8780:	d102      	bne.n	8788 <_strtod_r+0x8b4>
    8782:	1c63      	adds	r3, r4, #1
    8784:	d100      	bne.n	8788 <_strtod_r+0x8b4>
    8786:	e609      	b.n	839c <_strtod_r+0x4c8>
    8788:	4b4c      	ldr	r3, [pc, #304]	; (88bc <_strtod_r+0x9e8>)
    878a:	2600      	movs	r6, #0
    878c:	4019      	ands	r1, r3
    878e:	2380      	movs	r3, #128	; 0x80
    8790:	035b      	lsls	r3, r3, #13
    8792:	18cf      	adds	r7, r1, r3
    8794:	e161      	b.n	8a5a <_strtod_r+0xb86>
    8796:	2b00      	cmp	r3, #0
    8798:	d10b      	bne.n	87b2 <_strtod_r+0x8de>
    879a:	2e00      	cmp	r6, #0
    879c:	d109      	bne.n	87b2 <_strtod_r+0x8de>
    879e:	e75f      	b.n	8660 <_strtod_r+0x78c>
    87a0:	2601      	movs	r6, #1
    87a2:	4a4a      	ldr	r2, [pc, #296]	; (88cc <_strtod_r+0x9f8>)
    87a4:	403b      	ands	r3, r7
    87a6:	189b      	adds	r3, r3, r2
    87a8:	4a46      	ldr	r2, [pc, #280]	; (88c4 <_strtod_r+0x9f0>)
    87aa:	4276      	negs	r6, r6
    87ac:	431a      	orrs	r2, r3
    87ae:	1c17      	adds	r7, r2, #0
    87b0:	e153      	b.n	8a5a <_strtod_r+0xb86>
    87b2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    87b4:	2b00      	cmp	r3, #0
    87b6:	d003      	beq.n	87c0 <_strtod_r+0x8ec>
    87b8:	423b      	tst	r3, r7
    87ba:	d100      	bne.n	87be <_strtod_r+0x8ea>
    87bc:	e14d      	b.n	8a5a <_strtod_r+0xb86>
    87be:	e003      	b.n	87c8 <_strtod_r+0x8f4>
    87c0:	9b18      	ldr	r3, [sp, #96]	; 0x60
    87c2:	4233      	tst	r3, r6
    87c4:	d100      	bne.n	87c8 <_strtod_r+0x8f4>
    87c6:	e148      	b.n	8a5a <_strtod_r+0xb86>
    87c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    87ca:	1c30      	adds	r0, r6, #0
    87cc:	1c39      	adds	r1, r7, #0
    87ce:	9a06      	ldr	r2, [sp, #24]
    87d0:	2b00      	cmp	r3, #0
    87d2:	d00a      	beq.n	87ea <_strtod_r+0x916>
    87d4:	f7ff fb68 	bl	7ea8 <sulp>
    87d8:	1c02      	adds	r2, r0, #0
    87da:	1c0b      	adds	r3, r1, #0
    87dc:	980e      	ldr	r0, [sp, #56]	; 0x38
    87de:	990f      	ldr	r1, [sp, #60]	; 0x3c
    87e0:	f002 fdf4 	bl	b3cc <__aeabi_dadd>
    87e4:	1c06      	adds	r6, r0, #0
    87e6:	1c0f      	adds	r7, r1, #0
    87e8:	e137      	b.n	8a5a <_strtod_r+0xb86>
    87ea:	f7ff fb5d 	bl	7ea8 <sulp>
    87ee:	1c02      	adds	r2, r0, #0
    87f0:	1c0b      	adds	r3, r1, #0
    87f2:	980e      	ldr	r0, [sp, #56]	; 0x38
    87f4:	990f      	ldr	r1, [sp, #60]	; 0x3c
    87f6:	f003 ffe9 	bl	c7cc <__aeabi_dsub>
    87fa:	2200      	movs	r2, #0
    87fc:	2300      	movs	r3, #0
    87fe:	1c06      	adds	r6, r0, #0
    8800:	1c0f      	adds	r7, r1, #0
    8802:	f002 fd97 	bl	b334 <__aeabi_dcmpeq>
    8806:	2800      	cmp	r0, #0
    8808:	d000      	beq.n	880c <_strtod_r+0x938>
    880a:	e73a      	b.n	8682 <_strtod_r+0x7ae>
    880c:	e125      	b.n	8a5a <_strtod_r+0xb86>
    880e:	9804      	ldr	r0, [sp, #16]
    8810:	9905      	ldr	r1, [sp, #20]
    8812:	f002 f985 	bl	ab20 <__ratio>
    8816:	2380      	movs	r3, #128	; 0x80
    8818:	2200      	movs	r2, #0
    881a:	05db      	lsls	r3, r3, #23
    881c:	1c04      	adds	r4, r0, #0
    881e:	1c0d      	adds	r5, r1, #0
    8820:	f002 fd98 	bl	b354 <__aeabi_dcmple>
    8824:	2800      	cmp	r0, #0
    8826:	d036      	beq.n	8896 <_strtod_r+0x9c2>
    8828:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    882a:	2b00      	cmp	r3, #0
    882c:	d002      	beq.n	8834 <_strtod_r+0x960>
    882e:	2400      	movs	r4, #0
    8830:	4d27      	ldr	r5, [pc, #156]	; (88d0 <_strtod_r+0x9fc>)
    8832:	e00b      	b.n	884c <_strtod_r+0x978>
    8834:	2e00      	cmp	r6, #0
    8836:	d102      	bne.n	883e <_strtod_r+0x96a>
    8838:	033b      	lsls	r3, r7, #12
    883a:	d105      	bne.n	8848 <_strtod_r+0x974>
    883c:	e00b      	b.n	8856 <_strtod_r+0x982>
    883e:	2e01      	cmp	r6, #1
    8840:	d102      	bne.n	8848 <_strtod_r+0x974>
    8842:	2f00      	cmp	r7, #0
    8844:	d100      	bne.n	8848 <_strtod_r+0x974>
    8846:	e71c      	b.n	8682 <_strtod_r+0x7ae>
    8848:	2400      	movs	r4, #0
    884a:	4d22      	ldr	r5, [pc, #136]	; (88d4 <_strtod_r+0xa00>)
    884c:	2300      	movs	r3, #0
    884e:	9307      	str	r3, [sp, #28]
    8850:	4b1f      	ldr	r3, [pc, #124]	; (88d0 <_strtod_r+0x9fc>)
    8852:	930a      	str	r3, [sp, #40]	; 0x28
    8854:	e048      	b.n	88e8 <_strtod_r+0xa14>
    8856:	1c20      	adds	r0, r4, #0
    8858:	1c29      	adds	r1, r5, #0
    885a:	2200      	movs	r2, #0
    885c:	4b1c      	ldr	r3, [pc, #112]	; (88d0 <_strtod_r+0x9fc>)
    885e:	f002 fd6f 	bl	b340 <__aeabi_dcmplt>
    8862:	2800      	cmp	r0, #0
    8864:	d108      	bne.n	8878 <_strtod_r+0x9a4>
    8866:	1c20      	adds	r0, r4, #0
    8868:	1c29      	adds	r1, r5, #0
    886a:	2200      	movs	r2, #0
    886c:	4b1a      	ldr	r3, [pc, #104]	; (88d8 <_strtod_r+0xa04>)
    886e:	f003 fd13 	bl	c298 <__aeabi_dmul>
    8872:	9007      	str	r0, [sp, #28]
    8874:	910a      	str	r1, [sp, #40]	; 0x28
    8876:	e003      	b.n	8880 <_strtod_r+0x9ac>
    8878:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    887a:	9307      	str	r3, [sp, #28]
    887c:	4b16      	ldr	r3, [pc, #88]	; (88d8 <_strtod_r+0xa04>)
    887e:	930a      	str	r3, [sp, #40]	; 0x28
    8880:	2280      	movs	r2, #128	; 0x80
    8882:	0612      	lsls	r2, r2, #24
    8884:	4694      	mov	ip, r2
    8886:	9b07      	ldr	r3, [sp, #28]
    8888:	931a      	str	r3, [sp, #104]	; 0x68
    888a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    888c:	4463      	add	r3, ip
    888e:	931b      	str	r3, [sp, #108]	; 0x6c
    8890:	9c1a      	ldr	r4, [sp, #104]	; 0x68
    8892:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
    8894:	e028      	b.n	88e8 <_strtod_r+0xa14>
    8896:	4b10      	ldr	r3, [pc, #64]	; (88d8 <_strtod_r+0xa04>)
    8898:	1c20      	adds	r0, r4, #0
    889a:	1c29      	adds	r1, r5, #0
    889c:	2200      	movs	r2, #0
    889e:	f003 fcfb 	bl	c298 <__aeabi_dmul>
    88a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    88a4:	9007      	str	r0, [sp, #28]
    88a6:	910a      	str	r1, [sp, #40]	; 0x28
    88a8:	2b00      	cmp	r3, #0
    88aa:	d117      	bne.n	88dc <_strtod_r+0xa08>
    88ac:	2380      	movs	r3, #128	; 0x80
    88ae:	061b      	lsls	r3, r3, #24
    88b0:	18cb      	adds	r3, r1, r3
    88b2:	9014      	str	r0, [sp, #80]	; 0x50
    88b4:	9315      	str	r3, [sp, #84]	; 0x54
    88b6:	e015      	b.n	88e4 <_strtod_r+0xa10>
    88b8:	fffffc03 	.word	0xfffffc03
    88bc:	7ff00000 	.word	0x7ff00000
    88c0:	fffffbe3 	.word	0xfffffbe3
    88c4:	000fffff 	.word	0x000fffff
    88c8:	7fefffff 	.word	0x7fefffff
    88cc:	fff00000 	.word	0xfff00000
    88d0:	3ff00000 	.word	0x3ff00000
    88d4:	bff00000 	.word	0xbff00000
    88d8:	3fe00000 	.word	0x3fe00000
    88dc:	9a07      	ldr	r2, [sp, #28]
    88de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    88e0:	9214      	str	r2, [sp, #80]	; 0x50
    88e2:	9315      	str	r3, [sp, #84]	; 0x54
    88e4:	9c14      	ldr	r4, [sp, #80]	; 0x50
    88e6:	9d15      	ldr	r5, [sp, #84]	; 0x54
    88e8:	4b7a      	ldr	r3, [pc, #488]	; (8ad4 <_strtod_r+0xc00>)
    88ea:	403b      	ands	r3, r7
    88ec:	9312      	str	r3, [sp, #72]	; 0x48
    88ee:	9a12      	ldr	r2, [sp, #72]	; 0x48
    88f0:	4b79      	ldr	r3, [pc, #484]	; (8ad8 <_strtod_r+0xc04>)
    88f2:	429a      	cmp	r2, r3
    88f4:	d12b      	bne.n	894e <_strtod_r+0xa7a>
    88f6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    88f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    88fa:	9210      	str	r2, [sp, #64]	; 0x40
    88fc:	9311      	str	r3, [sp, #68]	; 0x44
    88fe:	4b77      	ldr	r3, [pc, #476]	; (8adc <_strtod_r+0xc08>)
    8900:	1c30      	adds	r0, r6, #0
    8902:	18ff      	adds	r7, r7, r3
    8904:	1c39      	adds	r1, r7, #0
    8906:	f002 f841 	bl	a98c <__ulp>
    890a:	1c02      	adds	r2, r0, #0
    890c:	1c0b      	adds	r3, r1, #0
    890e:	1c20      	adds	r0, r4, #0
    8910:	1c29      	adds	r1, r5, #0
    8912:	f003 fcc1 	bl	c298 <__aeabi_dmul>
    8916:	1c02      	adds	r2, r0, #0
    8918:	1c0b      	adds	r3, r1, #0
    891a:	1c30      	adds	r0, r6, #0
    891c:	1c39      	adds	r1, r7, #0
    891e:	f002 fd55 	bl	b3cc <__aeabi_dadd>
    8922:	4b6c      	ldr	r3, [pc, #432]	; (8ad4 <_strtod_r+0xc00>)
    8924:	4a6e      	ldr	r2, [pc, #440]	; (8ae0 <_strtod_r+0xc0c>)
    8926:	1c06      	adds	r6, r0, #0
    8928:	400b      	ands	r3, r1
    892a:	4293      	cmp	r3, r2
    892c:	d90b      	bls.n	8946 <_strtod_r+0xa72>
    892e:	4b6d      	ldr	r3, [pc, #436]	; (8ae4 <_strtod_r+0xc10>)
    8930:	9a11      	ldr	r2, [sp, #68]	; 0x44
    8932:	429a      	cmp	r2, r3
    8934:	d103      	bne.n	893e <_strtod_r+0xa6a>
    8936:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8938:	3301      	adds	r3, #1
    893a:	d100      	bne.n	893e <_strtod_r+0xa6a>
    893c:	e52e      	b.n	839c <_strtod_r+0x4c8>
    893e:	2601      	movs	r6, #1
    8940:	4f68      	ldr	r7, [pc, #416]	; (8ae4 <_strtod_r+0xc10>)
    8942:	4276      	negs	r6, r6
    8944:	e078      	b.n	8a38 <_strtod_r+0xb64>
    8946:	23d4      	movs	r3, #212	; 0xd4
    8948:	049b      	lsls	r3, r3, #18
    894a:	18cf      	adds	r7, r1, r3
    894c:	e040      	b.n	89d0 <_strtod_r+0xafc>
    894e:	9b06      	ldr	r3, [sp, #24]
    8950:	2b00      	cmp	r3, #0
    8952:	d02b      	beq.n	89ac <_strtod_r+0xad8>
    8954:	23d4      	movs	r3, #212	; 0xd4
    8956:	9a12      	ldr	r2, [sp, #72]	; 0x48
    8958:	04db      	lsls	r3, r3, #19
    895a:	429a      	cmp	r2, r3
    895c:	d826      	bhi.n	89ac <_strtod_r+0xad8>
    895e:	9807      	ldr	r0, [sp, #28]
    8960:	990a      	ldr	r1, [sp, #40]	; 0x28
    8962:	4a61      	ldr	r2, [pc, #388]	; (8ae8 <_strtod_r+0xc14>)
    8964:	4b61      	ldr	r3, [pc, #388]	; (8aec <_strtod_r+0xc18>)
    8966:	f002 fcf5 	bl	b354 <__aeabi_dcmple>
    896a:	2800      	cmp	r0, #0
    896c:	d019      	beq.n	89a2 <_strtod_r+0xace>
    896e:	9807      	ldr	r0, [sp, #28]
    8970:	990a      	ldr	r1, [sp, #40]	; 0x28
    8972:	f002 fd0d 	bl	b390 <__aeabi_d2uiz>
    8976:	2800      	cmp	r0, #0
    8978:	d100      	bne.n	897c <_strtod_r+0xaa8>
    897a:	3001      	adds	r0, #1
    897c:	f004 fb12 	bl	cfa4 <__aeabi_ui2d>
    8980:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8982:	9007      	str	r0, [sp, #28]
    8984:	910a      	str	r1, [sp, #40]	; 0x28
    8986:	2b00      	cmp	r3, #0
    8988:	d105      	bne.n	8996 <_strtod_r+0xac2>
    898a:	2380      	movs	r3, #128	; 0x80
    898c:	061b      	lsls	r3, r3, #24
    898e:	18cb      	adds	r3, r1, r3
    8990:	9016      	str	r0, [sp, #88]	; 0x58
    8992:	9317      	str	r3, [sp, #92]	; 0x5c
    8994:	e003      	b.n	899e <_strtod_r+0xaca>
    8996:	9a07      	ldr	r2, [sp, #28]
    8998:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    899a:	9216      	str	r2, [sp, #88]	; 0x58
    899c:	9317      	str	r3, [sp, #92]	; 0x5c
    899e:	9c16      	ldr	r4, [sp, #88]	; 0x58
    89a0:	9d17      	ldr	r5, [sp, #92]	; 0x5c
    89a2:	23d6      	movs	r3, #214	; 0xd6
    89a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
    89a6:	04db      	lsls	r3, r3, #19
    89a8:	18eb      	adds	r3, r5, r3
    89aa:	1a9d      	subs	r5, r3, r2
    89ac:	980e      	ldr	r0, [sp, #56]	; 0x38
    89ae:	990f      	ldr	r1, [sp, #60]	; 0x3c
    89b0:	f001 ffec 	bl	a98c <__ulp>
    89b4:	1c02      	adds	r2, r0, #0
    89b6:	1c0b      	adds	r3, r1, #0
    89b8:	1c20      	adds	r0, r4, #0
    89ba:	1c29      	adds	r1, r5, #0
    89bc:	f003 fc6c 	bl	c298 <__aeabi_dmul>
    89c0:	1c02      	adds	r2, r0, #0
    89c2:	1c0b      	adds	r3, r1, #0
    89c4:	980e      	ldr	r0, [sp, #56]	; 0x38
    89c6:	990f      	ldr	r1, [sp, #60]	; 0x3c
    89c8:	f002 fd00 	bl	b3cc <__aeabi_dadd>
    89cc:	1c06      	adds	r6, r0, #0
    89ce:	1c0f      	adds	r7, r1, #0
    89d0:	9b06      	ldr	r3, [sp, #24]
    89d2:	970e      	str	r7, [sp, #56]	; 0x38
    89d4:	2b00      	cmp	r3, #0
    89d6:	d12f      	bne.n	8a38 <_strtod_r+0xb64>
    89d8:	4b3e      	ldr	r3, [pc, #248]	; (8ad4 <_strtod_r+0xc00>)
    89da:	9a12      	ldr	r2, [sp, #72]	; 0x48
    89dc:	403b      	ands	r3, r7
    89de:	429a      	cmp	r2, r3
    89e0:	d12a      	bne.n	8a38 <_strtod_r+0xb64>
    89e2:	990a      	ldr	r1, [sp, #40]	; 0x28
    89e4:	9807      	ldr	r0, [sp, #28]
    89e6:	f004 fa6b 	bl	cec0 <__aeabi_d2iz>
    89ea:	f004 fa9f 	bl	cf2c <__aeabi_i2d>
    89ee:	1c0b      	adds	r3, r1, #0
    89f0:	1c02      	adds	r2, r0, #0
    89f2:	990a      	ldr	r1, [sp, #40]	; 0x28
    89f4:	9807      	ldr	r0, [sp, #28]
    89f6:	f003 fee9 	bl	c7cc <__aeabi_dsub>
    89fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    89fc:	1c04      	adds	r4, r0, #0
    89fe:	1c0d      	adds	r5, r1, #0
    8a00:	2b00      	cmp	r3, #0
    8a02:	d104      	bne.n	8a0e <_strtod_r+0xb3a>
    8a04:	2e00      	cmp	r6, #0
    8a06:	d102      	bne.n	8a0e <_strtod_r+0xb3a>
    8a08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    8a0a:	031b      	lsls	r3, r3, #12
    8a0c:	d00e      	beq.n	8a2c <_strtod_r+0xb58>
    8a0e:	1c20      	adds	r0, r4, #0
    8a10:	1c29      	adds	r1, r5, #0
    8a12:	4a37      	ldr	r2, [pc, #220]	; (8af0 <_strtod_r+0xc1c>)
    8a14:	4b37      	ldr	r3, [pc, #220]	; (8af4 <_strtod_r+0xc20>)
    8a16:	f002 fc93 	bl	b340 <__aeabi_dcmplt>
    8a1a:	2800      	cmp	r0, #0
    8a1c:	d132      	bne.n	8a84 <_strtod_r+0xbb0>
    8a1e:	1c20      	adds	r0, r4, #0
    8a20:	1c29      	adds	r1, r5, #0
    8a22:	4a35      	ldr	r2, [pc, #212]	; (8af8 <_strtod_r+0xc24>)
    8a24:	4b35      	ldr	r3, [pc, #212]	; (8afc <_strtod_r+0xc28>)
    8a26:	f002 fc9f 	bl	b368 <__aeabi_dcmpgt>
    8a2a:	e003      	b.n	8a34 <_strtod_r+0xb60>
    8a2c:	4a30      	ldr	r2, [pc, #192]	; (8af0 <_strtod_r+0xc1c>)
    8a2e:	4b34      	ldr	r3, [pc, #208]	; (8b00 <_strtod_r+0xc2c>)
    8a30:	f002 fc86 	bl	b340 <__aeabi_dcmplt>
    8a34:	2800      	cmp	r0, #0
    8a36:	d125      	bne.n	8a84 <_strtod_r+0xbb0>
    8a38:	9803      	ldr	r0, [sp, #12]
    8a3a:	991e      	ldr	r1, [sp, #120]	; 0x78
    8a3c:	f001 fd06 	bl	a44c <_Bfree>
    8a40:	9803      	ldr	r0, [sp, #12]
    8a42:	9908      	ldr	r1, [sp, #32]
    8a44:	f001 fd02 	bl	a44c <_Bfree>
    8a48:	9803      	ldr	r0, [sp, #12]
    8a4a:	9905      	ldr	r1, [sp, #20]
    8a4c:	f001 fcfe 	bl	a44c <_Bfree>
    8a50:	9803      	ldr	r0, [sp, #12]
    8a52:	9904      	ldr	r1, [sp, #16]
    8a54:	f001 fcfa 	bl	a44c <_Bfree>
    8a58:	e55f      	b.n	851a <_strtod_r+0x646>
    8a5a:	9b06      	ldr	r3, [sp, #24]
    8a5c:	2b00      	cmp	r3, #0
    8a5e:	d011      	beq.n	8a84 <_strtod_r+0xbb0>
    8a60:	4b28      	ldr	r3, [pc, #160]	; (8b04 <_strtod_r+0xc30>)
    8a62:	1c30      	adds	r0, r6, #0
    8a64:	9311      	str	r3, [sp, #68]	; 0x44
    8a66:	2300      	movs	r3, #0
    8a68:	9310      	str	r3, [sp, #64]	; 0x40
    8a6a:	1c39      	adds	r1, r7, #0
    8a6c:	9a10      	ldr	r2, [sp, #64]	; 0x40
    8a6e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    8a70:	f003 fc12 	bl	c298 <__aeabi_dmul>
    8a74:	1c06      	adds	r6, r0, #0
    8a76:	1e0f      	subs	r7, r1, #0
    8a78:	d104      	bne.n	8a84 <_strtod_r+0xbb0>
    8a7a:	2800      	cmp	r0, #0
    8a7c:	d102      	bne.n	8a84 <_strtod_r+0xbb0>
    8a7e:	2322      	movs	r3, #34	; 0x22
    8a80:	9a03      	ldr	r2, [sp, #12]
    8a82:	6013      	str	r3, [r2, #0]
    8a84:	9803      	ldr	r0, [sp, #12]
    8a86:	991e      	ldr	r1, [sp, #120]	; 0x78
    8a88:	f001 fce0 	bl	a44c <_Bfree>
    8a8c:	9803      	ldr	r0, [sp, #12]
    8a8e:	9908      	ldr	r1, [sp, #32]
    8a90:	f001 fcdc 	bl	a44c <_Bfree>
    8a94:	9803      	ldr	r0, [sp, #12]
    8a96:	9905      	ldr	r1, [sp, #20]
    8a98:	f001 fcd8 	bl	a44c <_Bfree>
    8a9c:	9803      	ldr	r0, [sp, #12]
    8a9e:	990b      	ldr	r1, [sp, #44]	; 0x2c
    8aa0:	f001 fcd4 	bl	a44c <_Bfree>
    8aa4:	9803      	ldr	r0, [sp, #12]
    8aa6:	9904      	ldr	r1, [sp, #16]
    8aa8:	f001 fcd0 	bl	a44c <_Bfree>
    8aac:	9b19      	ldr	r3, [sp, #100]	; 0x64
    8aae:	2b00      	cmp	r3, #0
    8ab0:	d002      	beq.n	8ab8 <_strtod_r+0xbe4>
    8ab2:	9b19      	ldr	r3, [sp, #100]	; 0x64
    8ab4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    8ab6:	601a      	str	r2, [r3, #0]
    8ab8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8aba:	2b00      	cmp	r3, #0
    8abc:	d004      	beq.n	8ac8 <_strtod_r+0xbf4>
    8abe:	2380      	movs	r3, #128	; 0x80
    8ac0:	061b      	lsls	r3, r3, #24
    8ac2:	1c32      	adds	r2, r6, #0
    8ac4:	18fb      	adds	r3, r7, r3
    8ac6:	e001      	b.n	8acc <_strtod_r+0xbf8>
    8ac8:	1c32      	adds	r2, r6, #0
    8aca:	1c3b      	adds	r3, r7, #0
    8acc:	1c10      	adds	r0, r2, #0
    8ace:	1c19      	adds	r1, r3, #0
    8ad0:	b023      	add	sp, #140	; 0x8c
    8ad2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8ad4:	7ff00000 	.word	0x7ff00000
    8ad8:	7fe00000 	.word	0x7fe00000
    8adc:	fcb00000 	.word	0xfcb00000
    8ae0:	7c9fffff 	.word	0x7c9fffff
    8ae4:	7fefffff 	.word	0x7fefffff
    8ae8:	ffc00000 	.word	0xffc00000
    8aec:	41dfffff 	.word	0x41dfffff
    8af0:	94a03595 	.word	0x94a03595
    8af4:	3fdfffff 	.word	0x3fdfffff
    8af8:	35afe535 	.word	0x35afe535
    8afc:	3fe00000 	.word	0x3fe00000
    8b00:	3fcfffff 	.word	0x3fcfffff
    8b04:	39500000 	.word	0x39500000

00008b08 <_strtol_r>:
    8b08:	b5f0      	push	{r4, r5, r6, r7, lr}
    8b0a:	1c1e      	adds	r6, r3, #0
    8b0c:	4b44      	ldr	r3, [pc, #272]	; (8c20 <_strtol_r+0x118>)
    8b0e:	b087      	sub	sp, #28
    8b10:	681b      	ldr	r3, [r3, #0]
    8b12:	9005      	str	r0, [sp, #20]
    8b14:	9302      	str	r3, [sp, #8]
    8b16:	1c0b      	adds	r3, r1, #0
    8b18:	9103      	str	r1, [sp, #12]
    8b1a:	9201      	str	r2, [sp, #4]
    8b1c:	781c      	ldrb	r4, [r3, #0]
    8b1e:	9a02      	ldr	r2, [sp, #8]
    8b20:	1c5d      	adds	r5, r3, #1
    8b22:	1912      	adds	r2, r2, r4
    8b24:	7850      	ldrb	r0, [r2, #1]
    8b26:	2208      	movs	r2, #8
    8b28:	4010      	ands	r0, r2
    8b2a:	d001      	beq.n	8b30 <_strtol_r+0x28>
    8b2c:	1c2b      	adds	r3, r5, #0
    8b2e:	e7f5      	b.n	8b1c <_strtol_r+0x14>
    8b30:	2c2d      	cmp	r4, #45	; 0x2d
    8b32:	d104      	bne.n	8b3e <_strtol_r+0x36>
    8b34:	1c9d      	adds	r5, r3, #2
    8b36:	785c      	ldrb	r4, [r3, #1]
    8b38:	2301      	movs	r3, #1
    8b3a:	9300      	str	r3, [sp, #0]
    8b3c:	e004      	b.n	8b48 <_strtol_r+0x40>
    8b3e:	9000      	str	r0, [sp, #0]
    8b40:	2c2b      	cmp	r4, #43	; 0x2b
    8b42:	d101      	bne.n	8b48 <_strtol_r+0x40>
    8b44:	785c      	ldrb	r4, [r3, #1]
    8b46:	1c9d      	adds	r5, r3, #2
    8b48:	2e00      	cmp	r6, #0
    8b4a:	d002      	beq.n	8b52 <_strtol_r+0x4a>
    8b4c:	2e10      	cmp	r6, #16
    8b4e:	d10a      	bne.n	8b66 <_strtol_r+0x5e>
    8b50:	e060      	b.n	8c14 <_strtol_r+0x10c>
    8b52:	2c30      	cmp	r4, #48	; 0x30
    8b54:	d15c      	bne.n	8c10 <_strtol_r+0x108>
    8b56:	2220      	movs	r2, #32
    8b58:	782b      	ldrb	r3, [r5, #0]
    8b5a:	4393      	bics	r3, r2
    8b5c:	2b58      	cmp	r3, #88	; 0x58
    8b5e:	d152      	bne.n	8c06 <_strtol_r+0xfe>
    8b60:	2610      	movs	r6, #16
    8b62:	786c      	ldrb	r4, [r5, #1]
    8b64:	3502      	adds	r5, #2
    8b66:	9f00      	ldr	r7, [sp, #0]
    8b68:	1c31      	adds	r1, r6, #0
    8b6a:	1e7b      	subs	r3, r7, #1
    8b6c:	419f      	sbcs	r7, r3
    8b6e:	4b2d      	ldr	r3, [pc, #180]	; (8c24 <_strtol_r+0x11c>)
    8b70:	18ff      	adds	r7, r7, r3
    8b72:	1c38      	adds	r0, r7, #0
    8b74:	f7fc ff3a 	bl	59ec <__aeabi_uidivmod>
    8b78:	1c38      	adds	r0, r7, #0
    8b7a:	9104      	str	r1, [sp, #16]
    8b7c:	1c31      	adds	r1, r6, #0
    8b7e:	f7fc feaf 	bl	58e0 <__aeabi_uidiv>
    8b82:	2200      	movs	r2, #0
    8b84:	1c07      	adds	r7, r0, #0
    8b86:	1c13      	adds	r3, r2, #0
    8b88:	9902      	ldr	r1, [sp, #8]
    8b8a:	1909      	adds	r1, r1, r4
    8b8c:	7849      	ldrb	r1, [r1, #1]
    8b8e:	0748      	lsls	r0, r1, #29
    8b90:	d501      	bpl.n	8b96 <_strtol_r+0x8e>
    8b92:	3c30      	subs	r4, #48	; 0x30
    8b94:	e007      	b.n	8ba6 <_strtol_r+0x9e>
    8b96:	2003      	movs	r0, #3
    8b98:	4008      	ands	r0, r1
    8b9a:	d017      	beq.n	8bcc <_strtol_r+0xc4>
    8b9c:	2137      	movs	r1, #55	; 0x37
    8b9e:	2801      	cmp	r0, #1
    8ba0:	d000      	beq.n	8ba4 <_strtol_r+0x9c>
    8ba2:	3120      	adds	r1, #32
    8ba4:	1a64      	subs	r4, r4, r1
    8ba6:	42b4      	cmp	r4, r6
    8ba8:	da10      	bge.n	8bcc <_strtol_r+0xc4>
    8baa:	1c51      	adds	r1, r2, #1
    8bac:	d00b      	beq.n	8bc6 <_strtol_r+0xbe>
    8bae:	42bb      	cmp	r3, r7
    8bb0:	d807      	bhi.n	8bc2 <_strtol_r+0xba>
    8bb2:	d102      	bne.n	8bba <_strtol_r+0xb2>
    8bb4:	9a04      	ldr	r2, [sp, #16]
    8bb6:	4294      	cmp	r4, r2
    8bb8:	dc03      	bgt.n	8bc2 <_strtol_r+0xba>
    8bba:	4373      	muls	r3, r6
    8bbc:	2201      	movs	r2, #1
    8bbe:	18e3      	adds	r3, r4, r3
    8bc0:	e001      	b.n	8bc6 <_strtol_r+0xbe>
    8bc2:	2201      	movs	r2, #1
    8bc4:	4252      	negs	r2, r2
    8bc6:	782c      	ldrb	r4, [r5, #0]
    8bc8:	3501      	adds	r5, #1
    8bca:	e7dd      	b.n	8b88 <_strtol_r+0x80>
    8bcc:	1c18      	adds	r0, r3, #0
    8bce:	1c51      	adds	r1, r2, #1
    8bd0:	d10b      	bne.n	8bea <_strtol_r+0xe2>
    8bd2:	9800      	ldr	r0, [sp, #0]
    8bd4:	9a05      	ldr	r2, [sp, #20]
    8bd6:	1e43      	subs	r3, r0, #1
    8bd8:	4198      	sbcs	r0, r3
    8bda:	4b12      	ldr	r3, [pc, #72]	; (8c24 <_strtol_r+0x11c>)
    8bdc:	18c0      	adds	r0, r0, r3
    8bde:	2322      	movs	r3, #34	; 0x22
    8be0:	6013      	str	r3, [r2, #0]
    8be2:	9b01      	ldr	r3, [sp, #4]
    8be4:	2b00      	cmp	r3, #0
    8be6:	d10a      	bne.n	8bfe <_strtol_r+0xf6>
    8be8:	e017      	b.n	8c1a <_strtol_r+0x112>
    8bea:	9900      	ldr	r1, [sp, #0]
    8bec:	2900      	cmp	r1, #0
    8bee:	d000      	beq.n	8bf2 <_strtol_r+0xea>
    8bf0:	4258      	negs	r0, r3
    8bf2:	9b01      	ldr	r3, [sp, #4]
    8bf4:	2b00      	cmp	r3, #0
    8bf6:	d010      	beq.n	8c1a <_strtol_r+0x112>
    8bf8:	9b03      	ldr	r3, [sp, #12]
    8bfa:	2a00      	cmp	r2, #0
    8bfc:	d000      	beq.n	8c00 <_strtol_r+0xf8>
    8bfe:	1e6b      	subs	r3, r5, #1
    8c00:	9a01      	ldr	r2, [sp, #4]
    8c02:	6013      	str	r3, [r2, #0]
    8c04:	e009      	b.n	8c1a <_strtol_r+0x112>
    8c06:	2430      	movs	r4, #48	; 0x30
    8c08:	2e00      	cmp	r6, #0
    8c0a:	d1ac      	bne.n	8b66 <_strtol_r+0x5e>
    8c0c:	2608      	movs	r6, #8
    8c0e:	e7aa      	b.n	8b66 <_strtol_r+0x5e>
    8c10:	260a      	movs	r6, #10
    8c12:	e7a8      	b.n	8b66 <_strtol_r+0x5e>
    8c14:	2c30      	cmp	r4, #48	; 0x30
    8c16:	d1a6      	bne.n	8b66 <_strtol_r+0x5e>
    8c18:	e79d      	b.n	8b56 <_strtol_r+0x4e>
    8c1a:	b007      	add	sp, #28
    8c1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8c1e:	46c0      	nop			; (mov r8, r8)
    8c20:	20000138 	.word	0x20000138
    8c24:	7fffffff 	.word	0x7fffffff

00008c28 <_strtoul_r>:
    8c28:	b5f0      	push	{r4, r5, r6, r7, lr}
    8c2a:	1c1e      	adds	r6, r3, #0
    8c2c:	4b3e      	ldr	r3, [pc, #248]	; (8d28 <_strtoul_r+0x100>)
    8c2e:	b087      	sub	sp, #28
    8c30:	681b      	ldr	r3, [r3, #0]
    8c32:	1c17      	adds	r7, r2, #0
    8c34:	9302      	str	r3, [sp, #8]
    8c36:	1c0b      	adds	r3, r1, #0
    8c38:	9005      	str	r0, [sp, #20]
    8c3a:	9104      	str	r1, [sp, #16]
    8c3c:	781c      	ldrb	r4, [r3, #0]
    8c3e:	9a02      	ldr	r2, [sp, #8]
    8c40:	1c5d      	adds	r5, r3, #1
    8c42:	1912      	adds	r2, r2, r4
    8c44:	7851      	ldrb	r1, [r2, #1]
    8c46:	2208      	movs	r2, #8
    8c48:	400a      	ands	r2, r1
    8c4a:	d001      	beq.n	8c50 <_strtoul_r+0x28>
    8c4c:	1c2b      	adds	r3, r5, #0
    8c4e:	e7f5      	b.n	8c3c <_strtoul_r+0x14>
    8c50:	2c2d      	cmp	r4, #45	; 0x2d
    8c52:	d104      	bne.n	8c5e <_strtoul_r+0x36>
    8c54:	1c9d      	adds	r5, r3, #2
    8c56:	785c      	ldrb	r4, [r3, #1]
    8c58:	2301      	movs	r3, #1
    8c5a:	9301      	str	r3, [sp, #4]
    8c5c:	e004      	b.n	8c68 <_strtoul_r+0x40>
    8c5e:	9201      	str	r2, [sp, #4]
    8c60:	2c2b      	cmp	r4, #43	; 0x2b
    8c62:	d101      	bne.n	8c68 <_strtoul_r+0x40>
    8c64:	785c      	ldrb	r4, [r3, #1]
    8c66:	1c9d      	adds	r5, r3, #2
    8c68:	2e00      	cmp	r6, #0
    8c6a:	d002      	beq.n	8c72 <_strtoul_r+0x4a>
    8c6c:	2e10      	cmp	r6, #16
    8c6e:	d10a      	bne.n	8c86 <_strtoul_r+0x5e>
    8c70:	e054      	b.n	8d1c <_strtoul_r+0xf4>
    8c72:	2c30      	cmp	r4, #48	; 0x30
    8c74:	d150      	bne.n	8d18 <_strtoul_r+0xf0>
    8c76:	2220      	movs	r2, #32
    8c78:	782b      	ldrb	r3, [r5, #0]
    8c7a:	4393      	bics	r3, r2
    8c7c:	2b58      	cmp	r3, #88	; 0x58
    8c7e:	d146      	bne.n	8d0e <_strtoul_r+0xe6>
    8c80:	2610      	movs	r6, #16
    8c82:	786c      	ldrb	r4, [r5, #1]
    8c84:	3502      	adds	r5, #2
    8c86:	2001      	movs	r0, #1
    8c88:	1c31      	adds	r1, r6, #0
    8c8a:	4240      	negs	r0, r0
    8c8c:	f7fc fe28 	bl	58e0 <__aeabi_uidiv>
    8c90:	9003      	str	r0, [sp, #12]
    8c92:	2001      	movs	r0, #1
    8c94:	1c31      	adds	r1, r6, #0
    8c96:	4240      	negs	r0, r0
    8c98:	f7fc fea8 	bl	59ec <__aeabi_uidivmod>
    8c9c:	2200      	movs	r2, #0
    8c9e:	468c      	mov	ip, r1
    8ca0:	1c13      	adds	r3, r2, #0
    8ca2:	9902      	ldr	r1, [sp, #8]
    8ca4:	1909      	adds	r1, r1, r4
    8ca6:	7849      	ldrb	r1, [r1, #1]
    8ca8:	0748      	lsls	r0, r1, #29
    8caa:	d501      	bpl.n	8cb0 <_strtoul_r+0x88>
    8cac:	3c30      	subs	r4, #48	; 0x30
    8cae:	e007      	b.n	8cc0 <_strtoul_r+0x98>
    8cb0:	2003      	movs	r0, #3
    8cb2:	4008      	ands	r0, r1
    8cb4:	d017      	beq.n	8ce6 <_strtoul_r+0xbe>
    8cb6:	2137      	movs	r1, #55	; 0x37
    8cb8:	2801      	cmp	r0, #1
    8cba:	d000      	beq.n	8cbe <_strtoul_r+0x96>
    8cbc:	3120      	adds	r1, #32
    8cbe:	1a64      	subs	r4, r4, r1
    8cc0:	42b4      	cmp	r4, r6
    8cc2:	da10      	bge.n	8ce6 <_strtoul_r+0xbe>
    8cc4:	1c51      	adds	r1, r2, #1
    8cc6:	d00b      	beq.n	8ce0 <_strtoul_r+0xb8>
    8cc8:	9a03      	ldr	r2, [sp, #12]
    8cca:	4293      	cmp	r3, r2
    8ccc:	d806      	bhi.n	8cdc <_strtoul_r+0xb4>
    8cce:	d101      	bne.n	8cd4 <_strtoul_r+0xac>
    8cd0:	4564      	cmp	r4, ip
    8cd2:	dc03      	bgt.n	8cdc <_strtoul_r+0xb4>
    8cd4:	4373      	muls	r3, r6
    8cd6:	2201      	movs	r2, #1
    8cd8:	18e3      	adds	r3, r4, r3
    8cda:	e001      	b.n	8ce0 <_strtoul_r+0xb8>
    8cdc:	2201      	movs	r2, #1
    8cde:	4252      	negs	r2, r2
    8ce0:	782c      	ldrb	r4, [r5, #0]
    8ce2:	3501      	adds	r5, #1
    8ce4:	e7dd      	b.n	8ca2 <_strtoul_r+0x7a>
    8ce6:	1c18      	adds	r0, r3, #0
    8ce8:	1c51      	adds	r1, r2, #1
    8cea:	d104      	bne.n	8cf6 <_strtoul_r+0xce>
    8cec:	2322      	movs	r3, #34	; 0x22
    8cee:	9905      	ldr	r1, [sp, #20]
    8cf0:	1c10      	adds	r0, r2, #0
    8cf2:	600b      	str	r3, [r1, #0]
    8cf4:	e003      	b.n	8cfe <_strtoul_r+0xd6>
    8cf6:	9901      	ldr	r1, [sp, #4]
    8cf8:	2900      	cmp	r1, #0
    8cfa:	d000      	beq.n	8cfe <_strtoul_r+0xd6>
    8cfc:	4258      	negs	r0, r3
    8cfe:	2f00      	cmp	r7, #0
    8d00:	d00f      	beq.n	8d22 <_strtoul_r+0xfa>
    8d02:	9b04      	ldr	r3, [sp, #16]
    8d04:	2a00      	cmp	r2, #0
    8d06:	d000      	beq.n	8d0a <_strtoul_r+0xe2>
    8d08:	1e6b      	subs	r3, r5, #1
    8d0a:	603b      	str	r3, [r7, #0]
    8d0c:	e009      	b.n	8d22 <_strtoul_r+0xfa>
    8d0e:	2430      	movs	r4, #48	; 0x30
    8d10:	2e00      	cmp	r6, #0
    8d12:	d1b8      	bne.n	8c86 <_strtoul_r+0x5e>
    8d14:	2608      	movs	r6, #8
    8d16:	e7b6      	b.n	8c86 <_strtoul_r+0x5e>
    8d18:	260a      	movs	r6, #10
    8d1a:	e7b4      	b.n	8c86 <_strtoul_r+0x5e>
    8d1c:	2c30      	cmp	r4, #48	; 0x30
    8d1e:	d1b2      	bne.n	8c86 <_strtoul_r+0x5e>
    8d20:	e7a9      	b.n	8c76 <_strtoul_r+0x4e>
    8d22:	b007      	add	sp, #28
    8d24:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8d26:	46c0      	nop			; (mov r8, r8)
    8d28:	20000138 	.word	0x20000138

00008d2c <__submore>:
    8d2c:	1c0b      	adds	r3, r1, #0
    8d2e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    8d30:	6b4d      	ldr	r5, [r1, #52]	; 0x34
    8d32:	3344      	adds	r3, #68	; 0x44
    8d34:	1c0c      	adds	r4, r1, #0
    8d36:	429d      	cmp	r5, r3
    8d38:	d11b      	bne.n	8d72 <__submore+0x46>
    8d3a:	2680      	movs	r6, #128	; 0x80
    8d3c:	00f6      	lsls	r6, r6, #3
    8d3e:	1c31      	adds	r1, r6, #0
    8d40:	f7fd fc2c 	bl	659c <_malloc_r>
    8d44:	2800      	cmp	r0, #0
    8d46:	d102      	bne.n	8d4e <__submore+0x22>
    8d48:	2001      	movs	r0, #1
    8d4a:	4240      	negs	r0, r0
    8d4c:	e025      	b.n	8d9a <__submore+0x6e>
    8d4e:	1c23      	adds	r3, r4, #0
    8d50:	6360      	str	r0, [r4, #52]	; 0x34
    8d52:	63a6      	str	r6, [r4, #56]	; 0x38
    8d54:	3346      	adds	r3, #70	; 0x46
    8d56:	781a      	ldrb	r2, [r3, #0]
    8d58:	4b10      	ldr	r3, [pc, #64]	; (8d9c <__submore+0x70>)
    8d5a:	54c2      	strb	r2, [r0, r3]
    8d5c:	1c23      	adds	r3, r4, #0
    8d5e:	3345      	adds	r3, #69	; 0x45
    8d60:	781a      	ldrb	r2, [r3, #0]
    8d62:	4b0f      	ldr	r3, [pc, #60]	; (8da0 <__submore+0x74>)
    8d64:	54c2      	strb	r2, [r0, r3]
    8d66:	782a      	ldrb	r2, [r5, #0]
    8d68:	4b0e      	ldr	r3, [pc, #56]	; (8da4 <__submore+0x78>)
    8d6a:	54c2      	strb	r2, [r0, r3]
    8d6c:	18c0      	adds	r0, r0, r3
    8d6e:	6020      	str	r0, [r4, #0]
    8d70:	e012      	b.n	8d98 <__submore+0x6c>
    8d72:	6b8e      	ldr	r6, [r1, #56]	; 0x38
    8d74:	1c29      	adds	r1, r5, #0
    8d76:	0073      	lsls	r3, r6, #1
    8d78:	1c1a      	adds	r2, r3, #0
    8d7a:	9301      	str	r3, [sp, #4]
    8d7c:	f001 ff3f 	bl	abfe <_realloc_r>
    8d80:	1e05      	subs	r5, r0, #0
    8d82:	d0e1      	beq.n	8d48 <__submore+0x1c>
    8d84:	1987      	adds	r7, r0, r6
    8d86:	1c38      	adds	r0, r7, #0
    8d88:	1c29      	adds	r1, r5, #0
    8d8a:	1c32      	adds	r2, r6, #0
    8d8c:	f7fd fbaf 	bl	64ee <memcpy>
    8d90:	9b01      	ldr	r3, [sp, #4]
    8d92:	6027      	str	r7, [r4, #0]
    8d94:	6365      	str	r5, [r4, #52]	; 0x34
    8d96:	63a3      	str	r3, [r4, #56]	; 0x38
    8d98:	2000      	movs	r0, #0
    8d9a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    8d9c:	000003ff 	.word	0x000003ff
    8da0:	000003fe 	.word	0x000003fe
    8da4:	000003fd 	.word	0x000003fd

00008da8 <__swbuf_r>:
    8da8:	b570      	push	{r4, r5, r6, lr}
    8daa:	1c05      	adds	r5, r0, #0
    8dac:	1c0e      	adds	r6, r1, #0
    8dae:	1c14      	adds	r4, r2, #0
    8db0:	2800      	cmp	r0, #0
    8db2:	d004      	beq.n	8dbe <__swbuf_r+0x16>
    8db4:	6983      	ldr	r3, [r0, #24]
    8db6:	2b00      	cmp	r3, #0
    8db8:	d101      	bne.n	8dbe <__swbuf_r+0x16>
    8dba:	f7fd f933 	bl	6024 <__sinit>
    8dbe:	4b23      	ldr	r3, [pc, #140]	; (8e4c <__swbuf_r+0xa4>)
    8dc0:	429c      	cmp	r4, r3
    8dc2:	d101      	bne.n	8dc8 <__swbuf_r+0x20>
    8dc4:	686c      	ldr	r4, [r5, #4]
    8dc6:	e008      	b.n	8dda <__swbuf_r+0x32>
    8dc8:	4b21      	ldr	r3, [pc, #132]	; (8e50 <__swbuf_r+0xa8>)
    8dca:	429c      	cmp	r4, r3
    8dcc:	d101      	bne.n	8dd2 <__swbuf_r+0x2a>
    8dce:	68ac      	ldr	r4, [r5, #8]
    8dd0:	e003      	b.n	8dda <__swbuf_r+0x32>
    8dd2:	4b20      	ldr	r3, [pc, #128]	; (8e54 <__swbuf_r+0xac>)
    8dd4:	429c      	cmp	r4, r3
    8dd6:	d100      	bne.n	8dda <__swbuf_r+0x32>
    8dd8:	68ec      	ldr	r4, [r5, #12]
    8dda:	69a3      	ldr	r3, [r4, #24]
    8ddc:	60a3      	str	r3, [r4, #8]
    8dde:	89a3      	ldrh	r3, [r4, #12]
    8de0:	071b      	lsls	r3, r3, #28
    8de2:	d50a      	bpl.n	8dfa <__swbuf_r+0x52>
    8de4:	6923      	ldr	r3, [r4, #16]
    8de6:	2b00      	cmp	r3, #0
    8de8:	d007      	beq.n	8dfa <__swbuf_r+0x52>
    8dea:	6823      	ldr	r3, [r4, #0]
    8dec:	6922      	ldr	r2, [r4, #16]
    8dee:	b2f6      	uxtb	r6, r6
    8df0:	1a98      	subs	r0, r3, r2
    8df2:	6963      	ldr	r3, [r4, #20]
    8df4:	4298      	cmp	r0, r3
    8df6:	db0f      	blt.n	8e18 <__swbuf_r+0x70>
    8df8:	e008      	b.n	8e0c <__swbuf_r+0x64>
    8dfa:	1c28      	adds	r0, r5, #0
    8dfc:	1c21      	adds	r1, r4, #0
    8dfe:	f000 f83f 	bl	8e80 <__swsetup_r>
    8e02:	2800      	cmp	r0, #0
    8e04:	d0f1      	beq.n	8dea <__swbuf_r+0x42>
    8e06:	2001      	movs	r0, #1
    8e08:	4240      	negs	r0, r0
    8e0a:	e01d      	b.n	8e48 <__swbuf_r+0xa0>
    8e0c:	1c28      	adds	r0, r5, #0
    8e0e:	1c21      	adds	r1, r4, #0
    8e10:	f7fd f84e 	bl	5eb0 <_fflush_r>
    8e14:	2800      	cmp	r0, #0
    8e16:	d1f6      	bne.n	8e06 <__swbuf_r+0x5e>
    8e18:	68a3      	ldr	r3, [r4, #8]
    8e1a:	3001      	adds	r0, #1
    8e1c:	3b01      	subs	r3, #1
    8e1e:	60a3      	str	r3, [r4, #8]
    8e20:	6823      	ldr	r3, [r4, #0]
    8e22:	1c5a      	adds	r2, r3, #1
    8e24:	6022      	str	r2, [r4, #0]
    8e26:	701e      	strb	r6, [r3, #0]
    8e28:	6963      	ldr	r3, [r4, #20]
    8e2a:	4298      	cmp	r0, r3
    8e2c:	d005      	beq.n	8e3a <__swbuf_r+0x92>
    8e2e:	89a3      	ldrh	r3, [r4, #12]
    8e30:	1c30      	adds	r0, r6, #0
    8e32:	07db      	lsls	r3, r3, #31
    8e34:	d508      	bpl.n	8e48 <__swbuf_r+0xa0>
    8e36:	2e0a      	cmp	r6, #10
    8e38:	d106      	bne.n	8e48 <__swbuf_r+0xa0>
    8e3a:	1c28      	adds	r0, r5, #0
    8e3c:	1c21      	adds	r1, r4, #0
    8e3e:	f7fd f837 	bl	5eb0 <_fflush_r>
    8e42:	2800      	cmp	r0, #0
    8e44:	d1df      	bne.n	8e06 <__swbuf_r+0x5e>
    8e46:	1c30      	adds	r0, r6, #0
    8e48:	bd70      	pop	{r4, r5, r6, pc}
    8e4a:	46c0      	nop			; (mov r8, r8)
    8e4c:	0000e010 	.word	0x0000e010
    8e50:	0000e030 	.word	0x0000e030
    8e54:	0000e050 	.word	0x0000e050

00008e58 <_write_r>:
    8e58:	b538      	push	{r3, r4, r5, lr}
    8e5a:	1c05      	adds	r5, r0, #0
    8e5c:	2000      	movs	r0, #0
    8e5e:	4c07      	ldr	r4, [pc, #28]	; (8e7c <_write_r+0x24>)
    8e60:	6020      	str	r0, [r4, #0]
    8e62:	1c08      	adds	r0, r1, #0
    8e64:	1c11      	adds	r1, r2, #0
    8e66:	1c1a      	adds	r2, r3, #0
    8e68:	f7f9 fdf6 	bl	2a58 <_write>
    8e6c:	1c43      	adds	r3, r0, #1
    8e6e:	d103      	bne.n	8e78 <_write_r+0x20>
    8e70:	6823      	ldr	r3, [r4, #0]
    8e72:	2b00      	cmp	r3, #0
    8e74:	d000      	beq.n	8e78 <_write_r+0x20>
    8e76:	602b      	str	r3, [r5, #0]
    8e78:	bd38      	pop	{r3, r4, r5, pc}
    8e7a:	46c0      	nop			; (mov r8, r8)
    8e7c:	2000406c 	.word	0x2000406c

00008e80 <__swsetup_r>:
    8e80:	4b35      	ldr	r3, [pc, #212]	; (8f58 <__swsetup_r+0xd8>)
    8e82:	b570      	push	{r4, r5, r6, lr}
    8e84:	681d      	ldr	r5, [r3, #0]
    8e86:	1c06      	adds	r6, r0, #0
    8e88:	1c0c      	adds	r4, r1, #0
    8e8a:	2d00      	cmp	r5, #0
    8e8c:	d005      	beq.n	8e9a <__swsetup_r+0x1a>
    8e8e:	69ab      	ldr	r3, [r5, #24]
    8e90:	2b00      	cmp	r3, #0
    8e92:	d102      	bne.n	8e9a <__swsetup_r+0x1a>
    8e94:	1c28      	adds	r0, r5, #0
    8e96:	f7fd f8c5 	bl	6024 <__sinit>
    8e9a:	4b30      	ldr	r3, [pc, #192]	; (8f5c <__swsetup_r+0xdc>)
    8e9c:	429c      	cmp	r4, r3
    8e9e:	d101      	bne.n	8ea4 <__swsetup_r+0x24>
    8ea0:	686c      	ldr	r4, [r5, #4]
    8ea2:	e008      	b.n	8eb6 <__swsetup_r+0x36>
    8ea4:	4b2e      	ldr	r3, [pc, #184]	; (8f60 <__swsetup_r+0xe0>)
    8ea6:	429c      	cmp	r4, r3
    8ea8:	d101      	bne.n	8eae <__swsetup_r+0x2e>
    8eaa:	68ac      	ldr	r4, [r5, #8]
    8eac:	e003      	b.n	8eb6 <__swsetup_r+0x36>
    8eae:	4b2d      	ldr	r3, [pc, #180]	; (8f64 <__swsetup_r+0xe4>)
    8eb0:	429c      	cmp	r4, r3
    8eb2:	d100      	bne.n	8eb6 <__swsetup_r+0x36>
    8eb4:	68ec      	ldr	r4, [r5, #12]
    8eb6:	89a3      	ldrh	r3, [r4, #12]
    8eb8:	b29a      	uxth	r2, r3
    8eba:	0711      	lsls	r1, r2, #28
    8ebc:	d423      	bmi.n	8f06 <__swsetup_r+0x86>
    8ebe:	06d1      	lsls	r1, r2, #27
    8ec0:	d407      	bmi.n	8ed2 <__swsetup_r+0x52>
    8ec2:	2209      	movs	r2, #9
    8ec4:	2001      	movs	r0, #1
    8ec6:	6032      	str	r2, [r6, #0]
    8ec8:	3237      	adds	r2, #55	; 0x37
    8eca:	4313      	orrs	r3, r2
    8ecc:	81a3      	strh	r3, [r4, #12]
    8ece:	4240      	negs	r0, r0
    8ed0:	e040      	b.n	8f54 <__swsetup_r+0xd4>
    8ed2:	0753      	lsls	r3, r2, #29
    8ed4:	d513      	bpl.n	8efe <__swsetup_r+0x7e>
    8ed6:	6b61      	ldr	r1, [r4, #52]	; 0x34
    8ed8:	2900      	cmp	r1, #0
    8eda:	d008      	beq.n	8eee <__swsetup_r+0x6e>
    8edc:	1c23      	adds	r3, r4, #0
    8ede:	3344      	adds	r3, #68	; 0x44
    8ee0:	4299      	cmp	r1, r3
    8ee2:	d002      	beq.n	8eea <__swsetup_r+0x6a>
    8ee4:	1c30      	adds	r0, r6, #0
    8ee6:	f7fd fb13 	bl	6510 <_free_r>
    8eea:	2300      	movs	r3, #0
    8eec:	6363      	str	r3, [r4, #52]	; 0x34
    8eee:	2224      	movs	r2, #36	; 0x24
    8ef0:	89a3      	ldrh	r3, [r4, #12]
    8ef2:	4393      	bics	r3, r2
    8ef4:	81a3      	strh	r3, [r4, #12]
    8ef6:	2300      	movs	r3, #0
    8ef8:	6063      	str	r3, [r4, #4]
    8efa:	6923      	ldr	r3, [r4, #16]
    8efc:	6023      	str	r3, [r4, #0]
    8efe:	2208      	movs	r2, #8
    8f00:	89a3      	ldrh	r3, [r4, #12]
    8f02:	4313      	orrs	r3, r2
    8f04:	81a3      	strh	r3, [r4, #12]
    8f06:	6923      	ldr	r3, [r4, #16]
    8f08:	2b00      	cmp	r3, #0
    8f0a:	d10b      	bne.n	8f24 <__swsetup_r+0xa4>
    8f0c:	23a0      	movs	r3, #160	; 0xa0
    8f0e:	89a2      	ldrh	r2, [r4, #12]
    8f10:	009b      	lsls	r3, r3, #2
    8f12:	4013      	ands	r3, r2
    8f14:	2280      	movs	r2, #128	; 0x80
    8f16:	0092      	lsls	r2, r2, #2
    8f18:	4293      	cmp	r3, r2
    8f1a:	d003      	beq.n	8f24 <__swsetup_r+0xa4>
    8f1c:	1c30      	adds	r0, r6, #0
    8f1e:	1c21      	adds	r1, r4, #0
    8f20:	f7fd fa6e 	bl	6400 <__smakebuf_r>
    8f24:	2301      	movs	r3, #1
    8f26:	89a2      	ldrh	r2, [r4, #12]
    8f28:	4013      	ands	r3, r2
    8f2a:	d005      	beq.n	8f38 <__swsetup_r+0xb8>
    8f2c:	2300      	movs	r3, #0
    8f2e:	60a3      	str	r3, [r4, #8]
    8f30:	6963      	ldr	r3, [r4, #20]
    8f32:	425b      	negs	r3, r3
    8f34:	61a3      	str	r3, [r4, #24]
    8f36:	e003      	b.n	8f40 <__swsetup_r+0xc0>
    8f38:	0791      	lsls	r1, r2, #30
    8f3a:	d400      	bmi.n	8f3e <__swsetup_r+0xbe>
    8f3c:	6963      	ldr	r3, [r4, #20]
    8f3e:	60a3      	str	r3, [r4, #8]
    8f40:	2000      	movs	r0, #0
    8f42:	6923      	ldr	r3, [r4, #16]
    8f44:	4283      	cmp	r3, r0
    8f46:	d105      	bne.n	8f54 <__swsetup_r+0xd4>
    8f48:	0613      	lsls	r3, r2, #24
    8f4a:	d503      	bpl.n	8f54 <__swsetup_r+0xd4>
    8f4c:	2340      	movs	r3, #64	; 0x40
    8f4e:	431a      	orrs	r2, r3
    8f50:	81a2      	strh	r2, [r4, #12]
    8f52:	3801      	subs	r0, #1
    8f54:	bd70      	pop	{r4, r5, r6, pc}
    8f56:	46c0      	nop			; (mov r8, r8)
    8f58:	20000134 	.word	0x20000134
    8f5c:	0000e010 	.word	0x0000e010
    8f60:	0000e030 	.word	0x0000e030
    8f64:	0000e050 	.word	0x0000e050

00008f68 <_close_r>:
    8f68:	b538      	push	{r3, r4, r5, lr}
    8f6a:	2300      	movs	r3, #0
    8f6c:	4c06      	ldr	r4, [pc, #24]	; (8f88 <_close_r+0x20>)
    8f6e:	1c05      	adds	r5, r0, #0
    8f70:	1c08      	adds	r0, r1, #0
    8f72:	6023      	str	r3, [r4, #0]
    8f74:	f7f9 fd5a 	bl	2a2c <_close>
    8f78:	1c43      	adds	r3, r0, #1
    8f7a:	d103      	bne.n	8f84 <_close_r+0x1c>
    8f7c:	6823      	ldr	r3, [r4, #0]
    8f7e:	2b00      	cmp	r3, #0
    8f80:	d000      	beq.n	8f84 <_close_r+0x1c>
    8f82:	602b      	str	r3, [r5, #0]
    8f84:	bd38      	pop	{r3, r4, r5, pc}
    8f86:	46c0      	nop			; (mov r8, r8)
    8f88:	2000406c 	.word	0x2000406c

00008f8c <quorem>:
    8f8c:	b5f0      	push	{r4, r5, r6, r7, lr}
    8f8e:	6903      	ldr	r3, [r0, #16]
    8f90:	690c      	ldr	r4, [r1, #16]
    8f92:	b089      	sub	sp, #36	; 0x24
    8f94:	2600      	movs	r6, #0
    8f96:	42a3      	cmp	r3, r4
    8f98:	db7c      	blt.n	9094 <quorem+0x108>
    8f9a:	1c0b      	adds	r3, r1, #0
    8f9c:	3c01      	subs	r4, #1
    8f9e:	3314      	adds	r3, #20
    8fa0:	00a5      	lsls	r5, r4, #2
    8fa2:	9303      	str	r3, [sp, #12]
    8fa4:	195b      	adds	r3, r3, r5
    8fa6:	9304      	str	r3, [sp, #16]
    8fa8:	1c03      	adds	r3, r0, #0
    8faa:	3314      	adds	r3, #20
    8fac:	9301      	str	r3, [sp, #4]
    8fae:	195d      	adds	r5, r3, r5
    8fb0:	9b04      	ldr	r3, [sp, #16]
    8fb2:	9107      	str	r1, [sp, #28]
    8fb4:	681b      	ldr	r3, [r3, #0]
    8fb6:	9002      	str	r0, [sp, #8]
    8fb8:	1c59      	adds	r1, r3, #1
    8fba:	6828      	ldr	r0, [r5, #0]
    8fbc:	9305      	str	r3, [sp, #20]
    8fbe:	f7fc fc8f 	bl	58e0 <__aeabi_uidiv>
    8fc2:	1e07      	subs	r7, r0, #0
    8fc4:	42b7      	cmp	r7, r6
    8fc6:	d035      	beq.n	9034 <quorem+0xa8>
    8fc8:	9b03      	ldr	r3, [sp, #12]
    8fca:	9801      	ldr	r0, [sp, #4]
    8fcc:	469c      	mov	ip, r3
    8fce:	9605      	str	r6, [sp, #20]
    8fd0:	4663      	mov	r3, ip
    8fd2:	cb04      	ldmia	r3!, {r2}
    8fd4:	b291      	uxth	r1, r2
    8fd6:	4379      	muls	r1, r7
    8fd8:	0c12      	lsrs	r2, r2, #16
    8fda:	437a      	muls	r2, r7
    8fdc:	1871      	adds	r1, r6, r1
    8fde:	0c0e      	lsrs	r6, r1, #16
    8fe0:	469c      	mov	ip, r3
    8fe2:	18b3      	adds	r3, r6, r2
    8fe4:	9306      	str	r3, [sp, #24]
    8fe6:	8802      	ldrh	r2, [r0, #0]
    8fe8:	0c1e      	lsrs	r6, r3, #16
    8fea:	9b05      	ldr	r3, [sp, #20]
    8fec:	b289      	uxth	r1, r1
    8fee:	18d2      	adds	r2, r2, r3
    8ff0:	6803      	ldr	r3, [r0, #0]
    8ff2:	1a52      	subs	r2, r2, r1
    8ff4:	0c19      	lsrs	r1, r3, #16
    8ff6:	466b      	mov	r3, sp
    8ff8:	8b1b      	ldrh	r3, [r3, #24]
    8ffa:	1acb      	subs	r3, r1, r3
    8ffc:	1411      	asrs	r1, r2, #16
    8ffe:	185b      	adds	r3, r3, r1
    9000:	1419      	asrs	r1, r3, #16
    9002:	b292      	uxth	r2, r2
    9004:	041b      	lsls	r3, r3, #16
    9006:	431a      	orrs	r2, r3
    9008:	9b04      	ldr	r3, [sp, #16]
    900a:	9105      	str	r1, [sp, #20]
    900c:	c004      	stmia	r0!, {r2}
    900e:	4563      	cmp	r3, ip
    9010:	d2de      	bcs.n	8fd0 <quorem+0x44>
    9012:	682b      	ldr	r3, [r5, #0]
    9014:	2b00      	cmp	r3, #0
    9016:	d10d      	bne.n	9034 <quorem+0xa8>
    9018:	1c23      	adds	r3, r4, #0
    901a:	9a01      	ldr	r2, [sp, #4]
    901c:	3d04      	subs	r5, #4
    901e:	4295      	cmp	r5, r2
    9020:	d803      	bhi.n	902a <quorem+0x9e>
    9022:	9a02      	ldr	r2, [sp, #8]
    9024:	1c1c      	adds	r4, r3, #0
    9026:	6113      	str	r3, [r2, #16]
    9028:	e004      	b.n	9034 <quorem+0xa8>
    902a:	682a      	ldr	r2, [r5, #0]
    902c:	2a00      	cmp	r2, #0
    902e:	d1f8      	bne.n	9022 <quorem+0x96>
    9030:	3b01      	subs	r3, #1
    9032:	e7f2      	b.n	901a <quorem+0x8e>
    9034:	9802      	ldr	r0, [sp, #8]
    9036:	9907      	ldr	r1, [sp, #28]
    9038:	f001 fc22 	bl	a880 <__mcmp>
    903c:	2800      	cmp	r0, #0
    903e:	db28      	blt.n	9092 <quorem+0x106>
    9040:	2000      	movs	r0, #0
    9042:	9901      	ldr	r1, [sp, #4]
    9044:	9a03      	ldr	r2, [sp, #12]
    9046:	3701      	adds	r7, #1
    9048:	ca20      	ldmia	r2!, {r5}
    904a:	880b      	ldrh	r3, [r1, #0]
    904c:	1818      	adds	r0, r3, r0
    904e:	b2ab      	uxth	r3, r5
    9050:	1ac3      	subs	r3, r0, r3
    9052:	6808      	ldr	r0, [r1, #0]
    9054:	0c2d      	lsrs	r5, r5, #16
    9056:	0c00      	lsrs	r0, r0, #16
    9058:	1b45      	subs	r5, r0, r5
    905a:	141e      	asrs	r6, r3, #16
    905c:	19ad      	adds	r5, r5, r6
    905e:	1428      	asrs	r0, r5, #16
    9060:	b29b      	uxth	r3, r3
    9062:	042d      	lsls	r5, r5, #16
    9064:	432b      	orrs	r3, r5
    9066:	c108      	stmia	r1!, {r3}
    9068:	9b04      	ldr	r3, [sp, #16]
    906a:	4293      	cmp	r3, r2
    906c:	d2ec      	bcs.n	9048 <quorem+0xbc>
    906e:	9a01      	ldr	r2, [sp, #4]
    9070:	00a3      	lsls	r3, r4, #2
    9072:	18d3      	adds	r3, r2, r3
    9074:	681a      	ldr	r2, [r3, #0]
    9076:	2a00      	cmp	r2, #0
    9078:	d10b      	bne.n	9092 <quorem+0x106>
    907a:	9a01      	ldr	r2, [sp, #4]
    907c:	3b04      	subs	r3, #4
    907e:	4293      	cmp	r3, r2
    9080:	d802      	bhi.n	9088 <quorem+0xfc>
    9082:	9b02      	ldr	r3, [sp, #8]
    9084:	611c      	str	r4, [r3, #16]
    9086:	e004      	b.n	9092 <quorem+0x106>
    9088:	681a      	ldr	r2, [r3, #0]
    908a:	2a00      	cmp	r2, #0
    908c:	d1f9      	bne.n	9082 <quorem+0xf6>
    908e:	3c01      	subs	r4, #1
    9090:	e7f3      	b.n	907a <quorem+0xee>
    9092:	1c3e      	adds	r6, r7, #0
    9094:	1c30      	adds	r0, r6, #0
    9096:	b009      	add	sp, #36	; 0x24
    9098:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0000909c <_dtoa_r>:
    909c:	b5f0      	push	{r4, r5, r6, r7, lr}
    909e:	1c16      	adds	r6, r2, #0
    90a0:	1c1f      	adds	r7, r3, #0
    90a2:	6a44      	ldr	r4, [r0, #36]	; 0x24
    90a4:	b09b      	sub	sp, #108	; 0x6c
    90a6:	9008      	str	r0, [sp, #32]
    90a8:	9d23      	ldr	r5, [sp, #140]	; 0x8c
    90aa:	9606      	str	r6, [sp, #24]
    90ac:	9707      	str	r7, [sp, #28]
    90ae:	2c00      	cmp	r4, #0
    90b0:	d108      	bne.n	90c4 <_dtoa_r+0x28>
    90b2:	2010      	movs	r0, #16
    90b4:	f7fd f9fc 	bl	64b0 <malloc>
    90b8:	9b08      	ldr	r3, [sp, #32]
    90ba:	6258      	str	r0, [r3, #36]	; 0x24
    90bc:	6044      	str	r4, [r0, #4]
    90be:	6084      	str	r4, [r0, #8]
    90c0:	6004      	str	r4, [r0, #0]
    90c2:	60c4      	str	r4, [r0, #12]
    90c4:	9b08      	ldr	r3, [sp, #32]
    90c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    90c8:	6819      	ldr	r1, [r3, #0]
    90ca:	2900      	cmp	r1, #0
    90cc:	d00b      	beq.n	90e6 <_dtoa_r+0x4a>
    90ce:	685a      	ldr	r2, [r3, #4]
    90d0:	2301      	movs	r3, #1
    90d2:	4093      	lsls	r3, r2
    90d4:	604a      	str	r2, [r1, #4]
    90d6:	608b      	str	r3, [r1, #8]
    90d8:	9808      	ldr	r0, [sp, #32]
    90da:	f001 f9b7 	bl	a44c <_Bfree>
    90de:	2200      	movs	r2, #0
    90e0:	9b08      	ldr	r3, [sp, #32]
    90e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    90e4:	601a      	str	r2, [r3, #0]
    90e6:	9b07      	ldr	r3, [sp, #28]
    90e8:	2b00      	cmp	r3, #0
    90ea:	da05      	bge.n	90f8 <_dtoa_r+0x5c>
    90ec:	2301      	movs	r3, #1
    90ee:	602b      	str	r3, [r5, #0]
    90f0:	007b      	lsls	r3, r7, #1
    90f2:	085b      	lsrs	r3, r3, #1
    90f4:	9307      	str	r3, [sp, #28]
    90f6:	e001      	b.n	90fc <_dtoa_r+0x60>
    90f8:	2300      	movs	r3, #0
    90fa:	602b      	str	r3, [r5, #0]
    90fc:	9c07      	ldr	r4, [sp, #28]
    90fe:	4bc6      	ldr	r3, [pc, #792]	; (9418 <_dtoa_r+0x37c>)
    9100:	1c22      	adds	r2, r4, #0
    9102:	9317      	str	r3, [sp, #92]	; 0x5c
    9104:	401a      	ands	r2, r3
    9106:	429a      	cmp	r2, r3
    9108:	d119      	bne.n	913e <_dtoa_r+0xa2>
    910a:	4bc4      	ldr	r3, [pc, #784]	; (941c <_dtoa_r+0x380>)
    910c:	9a22      	ldr	r2, [sp, #136]	; 0x88
    910e:	6013      	str	r3, [r2, #0]
    9110:	9a06      	ldr	r2, [sp, #24]
    9112:	4bc3      	ldr	r3, [pc, #780]	; (9420 <_dtoa_r+0x384>)
    9114:	2a00      	cmp	r2, #0
    9116:	d102      	bne.n	911e <_dtoa_r+0x82>
    9118:	0324      	lsls	r4, r4, #12
    911a:	d100      	bne.n	911e <_dtoa_r+0x82>
    911c:	4bc1      	ldr	r3, [pc, #772]	; (9424 <_dtoa_r+0x388>)
    911e:	9a24      	ldr	r2, [sp, #144]	; 0x90
    9120:	1c18      	adds	r0, r3, #0
    9122:	2a00      	cmp	r2, #0
    9124:	d101      	bne.n	912a <_dtoa_r+0x8e>
    9126:	f000 fdb6 	bl	9c96 <_dtoa_r+0xbfa>
    912a:	78d9      	ldrb	r1, [r3, #3]
    912c:	1cda      	adds	r2, r3, #3
    912e:	2900      	cmp	r1, #0
    9130:	d000      	beq.n	9134 <_dtoa_r+0x98>
    9132:	3205      	adds	r2, #5
    9134:	9924      	ldr	r1, [sp, #144]	; 0x90
    9136:	1c18      	adds	r0, r3, #0
    9138:	600a      	str	r2, [r1, #0]
    913a:	f000 fdac 	bl	9c96 <_dtoa_r+0xbfa>
    913e:	9e06      	ldr	r6, [sp, #24]
    9140:	9f07      	ldr	r7, [sp, #28]
    9142:	2200      	movs	r2, #0
    9144:	1c30      	adds	r0, r6, #0
    9146:	1c39      	adds	r1, r7, #0
    9148:	2300      	movs	r3, #0
    914a:	f002 f8f3 	bl	b334 <__aeabi_dcmpeq>
    914e:	1e05      	subs	r5, r0, #0
    9150:	d00e      	beq.n	9170 <_dtoa_r+0xd4>
    9152:	2301      	movs	r3, #1
    9154:	9a22      	ldr	r2, [sp, #136]	; 0x88
    9156:	6013      	str	r3, [r2, #0]
    9158:	4bb3      	ldr	r3, [pc, #716]	; (9428 <_dtoa_r+0x38c>)
    915a:	9a24      	ldr	r2, [sp, #144]	; 0x90
    915c:	1c18      	adds	r0, r3, #0
    915e:	2a00      	cmp	r2, #0
    9160:	d101      	bne.n	9166 <_dtoa_r+0xca>
    9162:	f000 fd98 	bl	9c96 <_dtoa_r+0xbfa>
    9166:	4ab1      	ldr	r2, [pc, #708]	; (942c <_dtoa_r+0x390>)
    9168:	9924      	ldr	r1, [sp, #144]	; 0x90
    916a:	600a      	str	r2, [r1, #0]
    916c:	f000 fd93 	bl	9c96 <_dtoa_r+0xbfa>
    9170:	ab19      	add	r3, sp, #100	; 0x64
    9172:	9300      	str	r3, [sp, #0]
    9174:	ab18      	add	r3, sp, #96	; 0x60
    9176:	9301      	str	r3, [sp, #4]
    9178:	9808      	ldr	r0, [sp, #32]
    917a:	1c32      	adds	r2, r6, #0
    917c:	1c3b      	adds	r3, r7, #0
    917e:	f001 fc7b 	bl	aa78 <__d2b>
    9182:	0061      	lsls	r1, r4, #1
    9184:	900a      	str	r0, [sp, #40]	; 0x28
    9186:	0d49      	lsrs	r1, r1, #21
    9188:	d009      	beq.n	919e <_dtoa_r+0x102>
    918a:	0338      	lsls	r0, r7, #12
    918c:	4ca8      	ldr	r4, [pc, #672]	; (9430 <_dtoa_r+0x394>)
    918e:	0b00      	lsrs	r0, r0, #12
    9190:	4304      	orrs	r4, r0
    9192:	48a8      	ldr	r0, [pc, #672]	; (9434 <_dtoa_r+0x398>)
    9194:	1c32      	adds	r2, r6, #0
    9196:	1c23      	adds	r3, r4, #0
    9198:	180e      	adds	r6, r1, r0
    919a:	9516      	str	r5, [sp, #88]	; 0x58
    919c:	e01c      	b.n	91d8 <_dtoa_r+0x13c>
    919e:	9b18      	ldr	r3, [sp, #96]	; 0x60
    91a0:	9a19      	ldr	r2, [sp, #100]	; 0x64
    91a2:	189e      	adds	r6, r3, r2
    91a4:	4ba4      	ldr	r3, [pc, #656]	; (9438 <_dtoa_r+0x39c>)
    91a6:	429e      	cmp	r6, r3
    91a8:	db09      	blt.n	91be <_dtoa_r+0x122>
    91aa:	4ba4      	ldr	r3, [pc, #656]	; (943c <_dtoa_r+0x3a0>)
    91ac:	18f0      	adds	r0, r6, r3
    91ae:	9b06      	ldr	r3, [sp, #24]
    91b0:	40c3      	lsrs	r3, r0
    91b2:	1c18      	adds	r0, r3, #0
    91b4:	4ba2      	ldr	r3, [pc, #648]	; (9440 <_dtoa_r+0x3a4>)
    91b6:	1b9b      	subs	r3, r3, r6
    91b8:	409c      	lsls	r4, r3
    91ba:	4320      	orrs	r0, r4
    91bc:	e004      	b.n	91c8 <_dtoa_r+0x12c>
    91be:	48a1      	ldr	r0, [pc, #644]	; (9444 <_dtoa_r+0x3a8>)
    91c0:	9b06      	ldr	r3, [sp, #24]
    91c2:	1b80      	subs	r0, r0, r6
    91c4:	4083      	lsls	r3, r0
    91c6:	1c18      	adds	r0, r3, #0
    91c8:	f003 feec 	bl	cfa4 <__aeabi_ui2d>
    91cc:	4c9e      	ldr	r4, [pc, #632]	; (9448 <_dtoa_r+0x3ac>)
    91ce:	1c02      	adds	r2, r0, #0
    91d0:	190b      	adds	r3, r1, r4
    91d2:	2101      	movs	r1, #1
    91d4:	3e01      	subs	r6, #1
    91d6:	9116      	str	r1, [sp, #88]	; 0x58
    91d8:	1c10      	adds	r0, r2, #0
    91da:	1c19      	adds	r1, r3, #0
    91dc:	2200      	movs	r2, #0
    91de:	4b9b      	ldr	r3, [pc, #620]	; (944c <_dtoa_r+0x3b0>)
    91e0:	f003 faf4 	bl	c7cc <__aeabi_dsub>
    91e4:	4a9a      	ldr	r2, [pc, #616]	; (9450 <_dtoa_r+0x3b4>)
    91e6:	4b9b      	ldr	r3, [pc, #620]	; (9454 <_dtoa_r+0x3b8>)
    91e8:	f003 f856 	bl	c298 <__aeabi_dmul>
    91ec:	4a9a      	ldr	r2, [pc, #616]	; (9458 <_dtoa_r+0x3bc>)
    91ee:	4b9b      	ldr	r3, [pc, #620]	; (945c <_dtoa_r+0x3c0>)
    91f0:	f002 f8ec 	bl	b3cc <__aeabi_dadd>
    91f4:	1c04      	adds	r4, r0, #0
    91f6:	1c30      	adds	r0, r6, #0
    91f8:	1c0d      	adds	r5, r1, #0
    91fa:	f003 fe97 	bl	cf2c <__aeabi_i2d>
    91fe:	4a98      	ldr	r2, [pc, #608]	; (9460 <_dtoa_r+0x3c4>)
    9200:	4b98      	ldr	r3, [pc, #608]	; (9464 <_dtoa_r+0x3c8>)
    9202:	f003 f849 	bl	c298 <__aeabi_dmul>
    9206:	1c02      	adds	r2, r0, #0
    9208:	1c0b      	adds	r3, r1, #0
    920a:	1c20      	adds	r0, r4, #0
    920c:	1c29      	adds	r1, r5, #0
    920e:	f002 f8dd 	bl	b3cc <__aeabi_dadd>
    9212:	1c04      	adds	r4, r0, #0
    9214:	1c0d      	adds	r5, r1, #0
    9216:	f003 fe53 	bl	cec0 <__aeabi_d2iz>
    921a:	1c29      	adds	r1, r5, #0
    921c:	9003      	str	r0, [sp, #12]
    921e:	2200      	movs	r2, #0
    9220:	1c20      	adds	r0, r4, #0
    9222:	2300      	movs	r3, #0
    9224:	f002 f88c 	bl	b340 <__aeabi_dcmplt>
    9228:	2800      	cmp	r0, #0
    922a:	d00d      	beq.n	9248 <_dtoa_r+0x1ac>
    922c:	9803      	ldr	r0, [sp, #12]
    922e:	f003 fe7d 	bl	cf2c <__aeabi_i2d>
    9232:	1c02      	adds	r2, r0, #0
    9234:	1c0b      	adds	r3, r1, #0
    9236:	1c20      	adds	r0, r4, #0
    9238:	1c29      	adds	r1, r5, #0
    923a:	f002 f87b 	bl	b334 <__aeabi_dcmpeq>
    923e:	4243      	negs	r3, r0
    9240:	4143      	adcs	r3, r0
    9242:	9a03      	ldr	r2, [sp, #12]
    9244:	1ad3      	subs	r3, r2, r3
    9246:	9303      	str	r3, [sp, #12]
    9248:	2301      	movs	r3, #1
    924a:	9313      	str	r3, [sp, #76]	; 0x4c
    924c:	9b03      	ldr	r3, [sp, #12]
    924e:	2b16      	cmp	r3, #22
    9250:	d811      	bhi.n	9276 <_dtoa_r+0x1da>
    9252:	4a85      	ldr	r2, [pc, #532]	; (9468 <_dtoa_r+0x3cc>)
    9254:	00db      	lsls	r3, r3, #3
    9256:	18d3      	adds	r3, r2, r3
    9258:	6818      	ldr	r0, [r3, #0]
    925a:	6859      	ldr	r1, [r3, #4]
    925c:	9a06      	ldr	r2, [sp, #24]
    925e:	9b07      	ldr	r3, [sp, #28]
    9260:	f002 f882 	bl	b368 <__aeabi_dcmpgt>
    9264:	2800      	cmp	r0, #0
    9266:	d005      	beq.n	9274 <_dtoa_r+0x1d8>
    9268:	9b03      	ldr	r3, [sp, #12]
    926a:	3b01      	subs	r3, #1
    926c:	9303      	str	r3, [sp, #12]
    926e:	2300      	movs	r3, #0
    9270:	9313      	str	r3, [sp, #76]	; 0x4c
    9272:	e000      	b.n	9276 <_dtoa_r+0x1da>
    9274:	9013      	str	r0, [sp, #76]	; 0x4c
    9276:	9b18      	ldr	r3, [sp, #96]	; 0x60
    9278:	1b9e      	subs	r6, r3, r6
    927a:	2300      	movs	r3, #0
    927c:	930d      	str	r3, [sp, #52]	; 0x34
    927e:	3e01      	subs	r6, #1
    9280:	960e      	str	r6, [sp, #56]	; 0x38
    9282:	d504      	bpl.n	928e <_dtoa_r+0x1f2>
    9284:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9286:	425b      	negs	r3, r3
    9288:	930d      	str	r3, [sp, #52]	; 0x34
    928a:	2300      	movs	r3, #0
    928c:	930e      	str	r3, [sp, #56]	; 0x38
    928e:	9b03      	ldr	r3, [sp, #12]
    9290:	2b00      	cmp	r3, #0
    9292:	db08      	blt.n	92a6 <_dtoa_r+0x20a>
    9294:	9a03      	ldr	r2, [sp, #12]
    9296:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9298:	4694      	mov	ip, r2
    929a:	4463      	add	r3, ip
    929c:	930e      	str	r3, [sp, #56]	; 0x38
    929e:	2300      	movs	r3, #0
    92a0:	9212      	str	r2, [sp, #72]	; 0x48
    92a2:	930f      	str	r3, [sp, #60]	; 0x3c
    92a4:	e007      	b.n	92b6 <_dtoa_r+0x21a>
    92a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    92a8:	9a03      	ldr	r2, [sp, #12]
    92aa:	1a9b      	subs	r3, r3, r2
    92ac:	930d      	str	r3, [sp, #52]	; 0x34
    92ae:	4253      	negs	r3, r2
    92b0:	930f      	str	r3, [sp, #60]	; 0x3c
    92b2:	2300      	movs	r3, #0
    92b4:	9312      	str	r3, [sp, #72]	; 0x48
    92b6:	9b20      	ldr	r3, [sp, #128]	; 0x80
    92b8:	2501      	movs	r5, #1
    92ba:	2b09      	cmp	r3, #9
    92bc:	d827      	bhi.n	930e <_dtoa_r+0x272>
    92be:	2b05      	cmp	r3, #5
    92c0:	dd02      	ble.n	92c8 <_dtoa_r+0x22c>
    92c2:	2500      	movs	r5, #0
    92c4:	3b04      	subs	r3, #4
    92c6:	9320      	str	r3, [sp, #128]	; 0x80
    92c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
    92ca:	1e98      	subs	r0, r3, #2
    92cc:	2803      	cmp	r0, #3
    92ce:	d823      	bhi.n	9318 <_dtoa_r+0x27c>
    92d0:	f002 f816 	bl	b300 <__gnu_thumb1_case_uqi>
    92d4:	10040e02 	.word	0x10040e02
    92d8:	2300      	movs	r3, #0
    92da:	e000      	b.n	92de <_dtoa_r+0x242>
    92dc:	2301      	movs	r3, #1
    92de:	9310      	str	r3, [sp, #64]	; 0x40
    92e0:	9b21      	ldr	r3, [sp, #132]	; 0x84
    92e2:	2b00      	cmp	r3, #0
    92e4:	dc21      	bgt.n	932a <_dtoa_r+0x28e>
    92e6:	2301      	movs	r3, #1
    92e8:	930b      	str	r3, [sp, #44]	; 0x2c
    92ea:	9309      	str	r3, [sp, #36]	; 0x24
    92ec:	1c1a      	adds	r2, r3, #0
    92ee:	e01a      	b.n	9326 <_dtoa_r+0x28a>
    92f0:	2300      	movs	r3, #0
    92f2:	e000      	b.n	92f6 <_dtoa_r+0x25a>
    92f4:	2301      	movs	r3, #1
    92f6:	9a03      	ldr	r2, [sp, #12]
    92f8:	9310      	str	r3, [sp, #64]	; 0x40
    92fa:	4694      	mov	ip, r2
    92fc:	9b21      	ldr	r3, [sp, #132]	; 0x84
    92fe:	4463      	add	r3, ip
    9300:	930b      	str	r3, [sp, #44]	; 0x2c
    9302:	3301      	adds	r3, #1
    9304:	9309      	str	r3, [sp, #36]	; 0x24
    9306:	2b00      	cmp	r3, #0
    9308:	dc12      	bgt.n	9330 <_dtoa_r+0x294>
    930a:	2301      	movs	r3, #1
    930c:	e010      	b.n	9330 <_dtoa_r+0x294>
    930e:	2300      	movs	r3, #0
    9310:	9510      	str	r5, [sp, #64]	; 0x40
    9312:	9320      	str	r3, [sp, #128]	; 0x80
    9314:	3b01      	subs	r3, #1
    9316:	e002      	b.n	931e <_dtoa_r+0x282>
    9318:	2301      	movs	r3, #1
    931a:	9310      	str	r3, [sp, #64]	; 0x40
    931c:	3b02      	subs	r3, #2
    931e:	2200      	movs	r2, #0
    9320:	930b      	str	r3, [sp, #44]	; 0x2c
    9322:	9309      	str	r3, [sp, #36]	; 0x24
    9324:	3313      	adds	r3, #19
    9326:	9221      	str	r2, [sp, #132]	; 0x84
    9328:	e002      	b.n	9330 <_dtoa_r+0x294>
    932a:	9b21      	ldr	r3, [sp, #132]	; 0x84
    932c:	930b      	str	r3, [sp, #44]	; 0x2c
    932e:	9309      	str	r3, [sp, #36]	; 0x24
    9330:	9a08      	ldr	r2, [sp, #32]
    9332:	6a54      	ldr	r4, [r2, #36]	; 0x24
    9334:	2200      	movs	r2, #0
    9336:	6062      	str	r2, [r4, #4]
    9338:	3204      	adds	r2, #4
    933a:	1c11      	adds	r1, r2, #0
    933c:	3114      	adds	r1, #20
    933e:	4299      	cmp	r1, r3
    9340:	d804      	bhi.n	934c <_dtoa_r+0x2b0>
    9342:	6861      	ldr	r1, [r4, #4]
    9344:	0052      	lsls	r2, r2, #1
    9346:	3101      	adds	r1, #1
    9348:	6061      	str	r1, [r4, #4]
    934a:	e7f6      	b.n	933a <_dtoa_r+0x29e>
    934c:	9808      	ldr	r0, [sp, #32]
    934e:	6861      	ldr	r1, [r4, #4]
    9350:	f001 f844 	bl	a3dc <_Balloc>
    9354:	9b08      	ldr	r3, [sp, #32]
    9356:	6020      	str	r0, [r4, #0]
    9358:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    935a:	681b      	ldr	r3, [r3, #0]
    935c:	930c      	str	r3, [sp, #48]	; 0x30
    935e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9360:	2b0e      	cmp	r3, #14
    9362:	d900      	bls.n	9366 <_dtoa_r+0x2ca>
    9364:	e188      	b.n	9678 <_dtoa_r+0x5dc>
    9366:	2d00      	cmp	r5, #0
    9368:	d100      	bne.n	936c <_dtoa_r+0x2d0>
    936a:	e185      	b.n	9678 <_dtoa_r+0x5dc>
    936c:	9b06      	ldr	r3, [sp, #24]
    936e:	9c07      	ldr	r4, [sp, #28]
    9370:	9314      	str	r3, [sp, #80]	; 0x50
    9372:	9415      	str	r4, [sp, #84]	; 0x54
    9374:	9b03      	ldr	r3, [sp, #12]
    9376:	2b00      	cmp	r3, #0
    9378:	dd30      	ble.n	93dc <_dtoa_r+0x340>
    937a:	220f      	movs	r2, #15
    937c:	493a      	ldr	r1, [pc, #232]	; (9468 <_dtoa_r+0x3cc>)
    937e:	4013      	ands	r3, r2
    9380:	00db      	lsls	r3, r3, #3
    9382:	18cb      	adds	r3, r1, r3
    9384:	685c      	ldr	r4, [r3, #4]
    9386:	681b      	ldr	r3, [r3, #0]
    9388:	9304      	str	r3, [sp, #16]
    938a:	9405      	str	r4, [sp, #20]
    938c:	9b03      	ldr	r3, [sp, #12]
    938e:	2702      	movs	r7, #2
    9390:	111d      	asrs	r5, r3, #4
    9392:	06eb      	lsls	r3, r5, #27
    9394:	d50a      	bpl.n	93ac <_dtoa_r+0x310>
    9396:	9814      	ldr	r0, [sp, #80]	; 0x50
    9398:	9915      	ldr	r1, [sp, #84]	; 0x54
    939a:	4b34      	ldr	r3, [pc, #208]	; (946c <_dtoa_r+0x3d0>)
    939c:	4015      	ands	r5, r2
    939e:	6a1a      	ldr	r2, [r3, #32]
    93a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    93a2:	f002 fb3b 	bl	ba1c <__aeabi_ddiv>
    93a6:	9006      	str	r0, [sp, #24]
    93a8:	9107      	str	r1, [sp, #28]
    93aa:	3701      	adds	r7, #1
    93ac:	4c2f      	ldr	r4, [pc, #188]	; (946c <_dtoa_r+0x3d0>)
    93ae:	2d00      	cmp	r5, #0
    93b0:	d00d      	beq.n	93ce <_dtoa_r+0x332>
    93b2:	07eb      	lsls	r3, r5, #31
    93b4:	d508      	bpl.n	93c8 <_dtoa_r+0x32c>
    93b6:	9804      	ldr	r0, [sp, #16]
    93b8:	9905      	ldr	r1, [sp, #20]
    93ba:	6822      	ldr	r2, [r4, #0]
    93bc:	6863      	ldr	r3, [r4, #4]
    93be:	f002 ff6b 	bl	c298 <__aeabi_dmul>
    93c2:	9004      	str	r0, [sp, #16]
    93c4:	9105      	str	r1, [sp, #20]
    93c6:	3701      	adds	r7, #1
    93c8:	106d      	asrs	r5, r5, #1
    93ca:	3408      	adds	r4, #8
    93cc:	e7ef      	b.n	93ae <_dtoa_r+0x312>
    93ce:	9806      	ldr	r0, [sp, #24]
    93d0:	9907      	ldr	r1, [sp, #28]
    93d2:	9a04      	ldr	r2, [sp, #16]
    93d4:	9b05      	ldr	r3, [sp, #20]
    93d6:	f002 fb21 	bl	ba1c <__aeabi_ddiv>
    93da:	e049      	b.n	9470 <_dtoa_r+0x3d4>
    93dc:	9b03      	ldr	r3, [sp, #12]
    93de:	2702      	movs	r7, #2
    93e0:	425d      	negs	r5, r3
    93e2:	2d00      	cmp	r5, #0
    93e4:	d046      	beq.n	9474 <_dtoa_r+0x3d8>
    93e6:	9814      	ldr	r0, [sp, #80]	; 0x50
    93e8:	9915      	ldr	r1, [sp, #84]	; 0x54
    93ea:	230f      	movs	r3, #15
    93ec:	4a1e      	ldr	r2, [pc, #120]	; (9468 <_dtoa_r+0x3cc>)
    93ee:	402b      	ands	r3, r5
    93f0:	00db      	lsls	r3, r3, #3
    93f2:	18d3      	adds	r3, r2, r3
    93f4:	681a      	ldr	r2, [r3, #0]
    93f6:	685b      	ldr	r3, [r3, #4]
    93f8:	f002 ff4e 	bl	c298 <__aeabi_dmul>
    93fc:	4c1b      	ldr	r4, [pc, #108]	; (946c <_dtoa_r+0x3d0>)
    93fe:	112d      	asrs	r5, r5, #4
    9400:	2d00      	cmp	r5, #0
    9402:	d035      	beq.n	9470 <_dtoa_r+0x3d4>
    9404:	07eb      	lsls	r3, r5, #31
    9406:	d504      	bpl.n	9412 <_dtoa_r+0x376>
    9408:	6822      	ldr	r2, [r4, #0]
    940a:	6863      	ldr	r3, [r4, #4]
    940c:	3701      	adds	r7, #1
    940e:	f002 ff43 	bl	c298 <__aeabi_dmul>
    9412:	106d      	asrs	r5, r5, #1
    9414:	3408      	adds	r4, #8
    9416:	e7f3      	b.n	9400 <_dtoa_r+0x364>
    9418:	7ff00000 	.word	0x7ff00000
    941c:	0000270f 	.word	0x0000270f
    9420:	0000e246 	.word	0x0000e246
    9424:	0000e23d 	.word	0x0000e23d
    9428:	0000e0e2 	.word	0x0000e0e2
    942c:	0000e0e3 	.word	0x0000e0e3
    9430:	3ff00000 	.word	0x3ff00000
    9434:	fffffc01 	.word	0xfffffc01
    9438:	fffffbef 	.word	0xfffffbef
    943c:	00000412 	.word	0x00000412
    9440:	fffffc0e 	.word	0xfffffc0e
    9444:	fffffbee 	.word	0xfffffbee
    9448:	fe100000 	.word	0xfe100000
    944c:	3ff80000 	.word	0x3ff80000
    9450:	636f4361 	.word	0x636f4361
    9454:	3fd287a7 	.word	0x3fd287a7
    9458:	8b60c8b3 	.word	0x8b60c8b3
    945c:	3fc68a28 	.word	0x3fc68a28
    9460:	509f79fb 	.word	0x509f79fb
    9464:	3fd34413 	.word	0x3fd34413
    9468:	0000e258 	.word	0x0000e258
    946c:	0000e320 	.word	0x0000e320
    9470:	9006      	str	r0, [sp, #24]
    9472:	9107      	str	r1, [sp, #28]
    9474:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    9476:	2b00      	cmp	r3, #0
    9478:	d01e      	beq.n	94b8 <_dtoa_r+0x41c>
    947a:	9c06      	ldr	r4, [sp, #24]
    947c:	9d07      	ldr	r5, [sp, #28]
    947e:	2200      	movs	r2, #0
    9480:	1c20      	adds	r0, r4, #0
    9482:	1c29      	adds	r1, r5, #0
    9484:	4bce      	ldr	r3, [pc, #824]	; (97c0 <_dtoa_r+0x724>)
    9486:	f001 ff5b 	bl	b340 <__aeabi_dcmplt>
    948a:	2800      	cmp	r0, #0
    948c:	d014      	beq.n	94b8 <_dtoa_r+0x41c>
    948e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9490:	2b00      	cmp	r3, #0
    9492:	d011      	beq.n	94b8 <_dtoa_r+0x41c>
    9494:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9496:	2b00      	cmp	r3, #0
    9498:	dc00      	bgt.n	949c <_dtoa_r+0x400>
    949a:	e0e9      	b.n	9670 <_dtoa_r+0x5d4>
    949c:	9b03      	ldr	r3, [sp, #12]
    949e:	1c29      	adds	r1, r5, #0
    94a0:	3b01      	subs	r3, #1
    94a2:	9311      	str	r3, [sp, #68]	; 0x44
    94a4:	1c20      	adds	r0, r4, #0
    94a6:	2200      	movs	r2, #0
    94a8:	4bc6      	ldr	r3, [pc, #792]	; (97c4 <_dtoa_r+0x728>)
    94aa:	f002 fef5 	bl	c298 <__aeabi_dmul>
    94ae:	3701      	adds	r7, #1
    94b0:	9006      	str	r0, [sp, #24]
    94b2:	9107      	str	r1, [sp, #28]
    94b4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    94b6:	e002      	b.n	94be <_dtoa_r+0x422>
    94b8:	9b03      	ldr	r3, [sp, #12]
    94ba:	9d09      	ldr	r5, [sp, #36]	; 0x24
    94bc:	9311      	str	r3, [sp, #68]	; 0x44
    94be:	1c38      	adds	r0, r7, #0
    94c0:	9b06      	ldr	r3, [sp, #24]
    94c2:	9c07      	ldr	r4, [sp, #28]
    94c4:	9304      	str	r3, [sp, #16]
    94c6:	9405      	str	r4, [sp, #20]
    94c8:	f003 fd30 	bl	cf2c <__aeabi_i2d>
    94cc:	9a04      	ldr	r2, [sp, #16]
    94ce:	9b05      	ldr	r3, [sp, #20]
    94d0:	f002 fee2 	bl	c298 <__aeabi_dmul>
    94d4:	2200      	movs	r2, #0
    94d6:	4bbc      	ldr	r3, [pc, #752]	; (97c8 <_dtoa_r+0x72c>)
    94d8:	f001 ff78 	bl	b3cc <__aeabi_dadd>
    94dc:	9006      	str	r0, [sp, #24]
    94de:	9107      	str	r1, [sp, #28]
    94e0:	9e06      	ldr	r6, [sp, #24]
    94e2:	9f07      	ldr	r7, [sp, #28]
    94e4:	9b07      	ldr	r3, [sp, #28]
    94e6:	4ab9      	ldr	r2, [pc, #740]	; (97cc <_dtoa_r+0x730>)
    94e8:	189c      	adds	r4, r3, r2
    94ea:	2d00      	cmp	r5, #0
    94ec:	d11c      	bne.n	9528 <_dtoa_r+0x48c>
    94ee:	9804      	ldr	r0, [sp, #16]
    94f0:	9905      	ldr	r1, [sp, #20]
    94f2:	2200      	movs	r2, #0
    94f4:	4bb6      	ldr	r3, [pc, #728]	; (97d0 <_dtoa_r+0x734>)
    94f6:	f003 f969 	bl	c7cc <__aeabi_dsub>
    94fa:	1c32      	adds	r2, r6, #0
    94fc:	1c23      	adds	r3, r4, #0
    94fe:	9004      	str	r0, [sp, #16]
    9500:	9105      	str	r1, [sp, #20]
    9502:	f001 ff31 	bl	b368 <__aeabi_dcmpgt>
    9506:	2800      	cmp	r0, #0
    9508:	d000      	beq.n	950c <_dtoa_r+0x470>
    950a:	e263      	b.n	99d4 <_dtoa_r+0x938>
    950c:	9804      	ldr	r0, [sp, #16]
    950e:	9905      	ldr	r1, [sp, #20]
    9510:	1c32      	adds	r2, r6, #0
    9512:	4eb0      	ldr	r6, [pc, #704]	; (97d4 <_dtoa_r+0x738>)
    9514:	9c07      	ldr	r4, [sp, #28]
    9516:	46b4      	mov	ip, r6
    9518:	4464      	add	r4, ip
    951a:	1c23      	adds	r3, r4, #0
    951c:	f001 ff10 	bl	b340 <__aeabi_dcmplt>
    9520:	2800      	cmp	r0, #0
    9522:	d000      	beq.n	9526 <_dtoa_r+0x48a>
    9524:	e24c      	b.n	99c0 <_dtoa_r+0x924>
    9526:	e0a3      	b.n	9670 <_dtoa_r+0x5d4>
    9528:	4aab      	ldr	r2, [pc, #684]	; (97d8 <_dtoa_r+0x73c>)
    952a:	1e6b      	subs	r3, r5, #1
    952c:	9910      	ldr	r1, [sp, #64]	; 0x40
    952e:	00db      	lsls	r3, r3, #3
    9530:	18d3      	adds	r3, r2, r3
    9532:	2900      	cmp	r1, #0
    9534:	d04e      	beq.n	95d4 <_dtoa_r+0x538>
    9536:	681a      	ldr	r2, [r3, #0]
    9538:	685b      	ldr	r3, [r3, #4]
    953a:	2000      	movs	r0, #0
    953c:	49a7      	ldr	r1, [pc, #668]	; (97dc <_dtoa_r+0x740>)
    953e:	f002 fa6d 	bl	ba1c <__aeabi_ddiv>
    9542:	1c32      	adds	r2, r6, #0
    9544:	1c23      	adds	r3, r4, #0
    9546:	f003 f941 	bl	c7cc <__aeabi_dsub>
    954a:	9e04      	ldr	r6, [sp, #16]
    954c:	9f05      	ldr	r7, [sp, #20]
    954e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9550:	9006      	str	r0, [sp, #24]
    9552:	9107      	str	r1, [sp, #28]
    9554:	9304      	str	r3, [sp, #16]
    9556:	1c39      	adds	r1, r7, #0
    9558:	1c30      	adds	r0, r6, #0
    955a:	f003 fcb1 	bl	cec0 <__aeabi_d2iz>
    955e:	1c04      	adds	r4, r0, #0
    9560:	f003 fce4 	bl	cf2c <__aeabi_i2d>
    9564:	1c02      	adds	r2, r0, #0
    9566:	1c0b      	adds	r3, r1, #0
    9568:	1c30      	adds	r0, r6, #0
    956a:	1c39      	adds	r1, r7, #0
    956c:	f003 f92e 	bl	c7cc <__aeabi_dsub>
    9570:	9b04      	ldr	r3, [sp, #16]
    9572:	3430      	adds	r4, #48	; 0x30
    9574:	3301      	adds	r3, #1
    9576:	9304      	str	r3, [sp, #16]
    9578:	3b01      	subs	r3, #1
    957a:	701c      	strb	r4, [r3, #0]
    957c:	9a06      	ldr	r2, [sp, #24]
    957e:	9b07      	ldr	r3, [sp, #28]
    9580:	1c06      	adds	r6, r0, #0
    9582:	1c0f      	adds	r7, r1, #0
    9584:	f001 fedc 	bl	b340 <__aeabi_dcmplt>
    9588:	2800      	cmp	r0, #0
    958a:	d000      	beq.n	958e <_dtoa_r+0x4f2>
    958c:	e361      	b.n	9c52 <_dtoa_r+0xbb6>
    958e:	1c32      	adds	r2, r6, #0
    9590:	1c3b      	adds	r3, r7, #0
    9592:	2000      	movs	r0, #0
    9594:	498a      	ldr	r1, [pc, #552]	; (97c0 <_dtoa_r+0x724>)
    9596:	f003 f919 	bl	c7cc <__aeabi_dsub>
    959a:	9a06      	ldr	r2, [sp, #24]
    959c:	9b07      	ldr	r3, [sp, #28]
    959e:	f001 fecf 	bl	b340 <__aeabi_dcmplt>
    95a2:	2800      	cmp	r0, #0
    95a4:	d000      	beq.n	95a8 <_dtoa_r+0x50c>
    95a6:	e0cd      	b.n	9744 <_dtoa_r+0x6a8>
    95a8:	9b04      	ldr	r3, [sp, #16]
    95aa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    95ac:	1a9b      	subs	r3, r3, r2
    95ae:	42ab      	cmp	r3, r5
    95b0:	da5e      	bge.n	9670 <_dtoa_r+0x5d4>
    95b2:	9806      	ldr	r0, [sp, #24]
    95b4:	9907      	ldr	r1, [sp, #28]
    95b6:	2200      	movs	r2, #0
    95b8:	4b82      	ldr	r3, [pc, #520]	; (97c4 <_dtoa_r+0x728>)
    95ba:	f002 fe6d 	bl	c298 <__aeabi_dmul>
    95be:	2200      	movs	r2, #0
    95c0:	9006      	str	r0, [sp, #24]
    95c2:	9107      	str	r1, [sp, #28]
    95c4:	4b7f      	ldr	r3, [pc, #508]	; (97c4 <_dtoa_r+0x728>)
    95c6:	1c30      	adds	r0, r6, #0
    95c8:	1c39      	adds	r1, r7, #0
    95ca:	f002 fe65 	bl	c298 <__aeabi_dmul>
    95ce:	1c06      	adds	r6, r0, #0
    95d0:	1c0f      	adds	r7, r1, #0
    95d2:	e7c0      	b.n	9556 <_dtoa_r+0x4ba>
    95d4:	6818      	ldr	r0, [r3, #0]
    95d6:	6859      	ldr	r1, [r3, #4]
    95d8:	1c32      	adds	r2, r6, #0
    95da:	1c23      	adds	r3, r4, #0
    95dc:	f002 fe5c 	bl	c298 <__aeabi_dmul>
    95e0:	9e04      	ldr	r6, [sp, #16]
    95e2:	9f05      	ldr	r7, [sp, #20]
    95e4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    95e6:	9006      	str	r0, [sp, #24]
    95e8:	9107      	str	r1, [sp, #28]
    95ea:	1963      	adds	r3, r4, r5
    95ec:	9304      	str	r3, [sp, #16]
    95ee:	1c39      	adds	r1, r7, #0
    95f0:	1c30      	adds	r0, r6, #0
    95f2:	f003 fc65 	bl	cec0 <__aeabi_d2iz>
    95f6:	1c05      	adds	r5, r0, #0
    95f8:	f003 fc98 	bl	cf2c <__aeabi_i2d>
    95fc:	1c0b      	adds	r3, r1, #0
    95fe:	1c02      	adds	r2, r0, #0
    9600:	1c39      	adds	r1, r7, #0
    9602:	1c30      	adds	r0, r6, #0
    9604:	f003 f8e2 	bl	c7cc <__aeabi_dsub>
    9608:	3530      	adds	r5, #48	; 0x30
    960a:	9b04      	ldr	r3, [sp, #16]
    960c:	7025      	strb	r5, [r4, #0]
    960e:	3401      	adds	r4, #1
    9610:	1c06      	adds	r6, r0, #0
    9612:	1c0f      	adds	r7, r1, #0
    9614:	42a3      	cmp	r3, r4
    9616:	d124      	bne.n	9662 <_dtoa_r+0x5c6>
    9618:	2200      	movs	r2, #0
    961a:	9806      	ldr	r0, [sp, #24]
    961c:	9907      	ldr	r1, [sp, #28]
    961e:	4b6f      	ldr	r3, [pc, #444]	; (97dc <_dtoa_r+0x740>)
    9620:	f001 fed4 	bl	b3cc <__aeabi_dadd>
    9624:	1c02      	adds	r2, r0, #0
    9626:	1c0b      	adds	r3, r1, #0
    9628:	1c30      	adds	r0, r6, #0
    962a:	1c39      	adds	r1, r7, #0
    962c:	f001 fe9c 	bl	b368 <__aeabi_dcmpgt>
    9630:	2800      	cmp	r0, #0
    9632:	d000      	beq.n	9636 <_dtoa_r+0x59a>
    9634:	e086      	b.n	9744 <_dtoa_r+0x6a8>
    9636:	9a06      	ldr	r2, [sp, #24]
    9638:	9b07      	ldr	r3, [sp, #28]
    963a:	2000      	movs	r0, #0
    963c:	4967      	ldr	r1, [pc, #412]	; (97dc <_dtoa_r+0x740>)
    963e:	f003 f8c5 	bl	c7cc <__aeabi_dsub>
    9642:	1c02      	adds	r2, r0, #0
    9644:	1c0b      	adds	r3, r1, #0
    9646:	1c30      	adds	r0, r6, #0
    9648:	1c39      	adds	r1, r7, #0
    964a:	f001 fe79 	bl	b340 <__aeabi_dcmplt>
    964e:	2800      	cmp	r0, #0
    9650:	d00e      	beq.n	9670 <_dtoa_r+0x5d4>
    9652:	9b04      	ldr	r3, [sp, #16]
    9654:	3b01      	subs	r3, #1
    9656:	781a      	ldrb	r2, [r3, #0]
    9658:	2a30      	cmp	r2, #48	; 0x30
    965a:	d000      	beq.n	965e <_dtoa_r+0x5c2>
    965c:	e2f9      	b.n	9c52 <_dtoa_r+0xbb6>
    965e:	9304      	str	r3, [sp, #16]
    9660:	e7f7      	b.n	9652 <_dtoa_r+0x5b6>
    9662:	2200      	movs	r2, #0
    9664:	4b57      	ldr	r3, [pc, #348]	; (97c4 <_dtoa_r+0x728>)
    9666:	f002 fe17 	bl	c298 <__aeabi_dmul>
    966a:	1c06      	adds	r6, r0, #0
    966c:	1c0f      	adds	r7, r1, #0
    966e:	e7be      	b.n	95ee <_dtoa_r+0x552>
    9670:	9b14      	ldr	r3, [sp, #80]	; 0x50
    9672:	9c15      	ldr	r4, [sp, #84]	; 0x54
    9674:	9306      	str	r3, [sp, #24]
    9676:	9407      	str	r4, [sp, #28]
    9678:	9b19      	ldr	r3, [sp, #100]	; 0x64
    967a:	2b00      	cmp	r3, #0
    967c:	da00      	bge.n	9680 <_dtoa_r+0x5e4>
    967e:	e086      	b.n	978e <_dtoa_r+0x6f2>
    9680:	9a03      	ldr	r2, [sp, #12]
    9682:	2a0e      	cmp	r2, #14
    9684:	dd00      	ble.n	9688 <_dtoa_r+0x5ec>
    9686:	e082      	b.n	978e <_dtoa_r+0x6f2>
    9688:	00d3      	lsls	r3, r2, #3
    968a:	4a53      	ldr	r2, [pc, #332]	; (97d8 <_dtoa_r+0x73c>)
    968c:	18d3      	adds	r3, r2, r3
    968e:	681e      	ldr	r6, [r3, #0]
    9690:	685f      	ldr	r7, [r3, #4]
    9692:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9694:	2b00      	cmp	r3, #0
    9696:	da14      	bge.n	96c2 <_dtoa_r+0x626>
    9698:	9b09      	ldr	r3, [sp, #36]	; 0x24
    969a:	2b00      	cmp	r3, #0
    969c:	dc11      	bgt.n	96c2 <_dtoa_r+0x626>
    969e:	d000      	beq.n	96a2 <_dtoa_r+0x606>
    96a0:	e190      	b.n	99c4 <_dtoa_r+0x928>
    96a2:	1c30      	adds	r0, r6, #0
    96a4:	1c39      	adds	r1, r7, #0
    96a6:	2200      	movs	r2, #0
    96a8:	4b49      	ldr	r3, [pc, #292]	; (97d0 <_dtoa_r+0x734>)
    96aa:	f002 fdf5 	bl	c298 <__aeabi_dmul>
    96ae:	9a06      	ldr	r2, [sp, #24]
    96b0:	9b07      	ldr	r3, [sp, #28]
    96b2:	f001 fe63 	bl	b37c <__aeabi_dcmpge>
    96b6:	9f09      	ldr	r7, [sp, #36]	; 0x24
    96b8:	1c3e      	adds	r6, r7, #0
    96ba:	2800      	cmp	r0, #0
    96bc:	d000      	beq.n	96c0 <_dtoa_r+0x624>
    96be:	e183      	b.n	99c8 <_dtoa_r+0x92c>
    96c0:	e18c      	b.n	99dc <_dtoa_r+0x940>
    96c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    96c4:	9c06      	ldr	r4, [sp, #24]
    96c6:	9d07      	ldr	r5, [sp, #28]
    96c8:	9304      	str	r3, [sp, #16]
    96ca:	1c32      	adds	r2, r6, #0
    96cc:	1c3b      	adds	r3, r7, #0
    96ce:	1c20      	adds	r0, r4, #0
    96d0:	1c29      	adds	r1, r5, #0
    96d2:	f002 f9a3 	bl	ba1c <__aeabi_ddiv>
    96d6:	f003 fbf3 	bl	cec0 <__aeabi_d2iz>
    96da:	9006      	str	r0, [sp, #24]
    96dc:	f003 fc26 	bl	cf2c <__aeabi_i2d>
    96e0:	1c32      	adds	r2, r6, #0
    96e2:	1c3b      	adds	r3, r7, #0
    96e4:	f002 fdd8 	bl	c298 <__aeabi_dmul>
    96e8:	1c02      	adds	r2, r0, #0
    96ea:	1c0b      	adds	r3, r1, #0
    96ec:	1c20      	adds	r0, r4, #0
    96ee:	1c29      	adds	r1, r5, #0
    96f0:	f003 f86c 	bl	c7cc <__aeabi_dsub>
    96f4:	1c0b      	adds	r3, r1, #0
    96f6:	9904      	ldr	r1, [sp, #16]
    96f8:	1c02      	adds	r2, r0, #0
    96fa:	9806      	ldr	r0, [sp, #24]
    96fc:	3101      	adds	r1, #1
    96fe:	9104      	str	r1, [sp, #16]
    9700:	3030      	adds	r0, #48	; 0x30
    9702:	3901      	subs	r1, #1
    9704:	7008      	strb	r0, [r1, #0]
    9706:	980c      	ldr	r0, [sp, #48]	; 0x30
    9708:	9904      	ldr	r1, [sp, #16]
    970a:	1a09      	subs	r1, r1, r0
    970c:	9809      	ldr	r0, [sp, #36]	; 0x24
    970e:	4281      	cmp	r1, r0
    9710:	d12e      	bne.n	9770 <_dtoa_r+0x6d4>
    9712:	1c10      	adds	r0, r2, #0
    9714:	1c19      	adds	r1, r3, #0
    9716:	f001 fe59 	bl	b3cc <__aeabi_dadd>
    971a:	1c32      	adds	r2, r6, #0
    971c:	1c3b      	adds	r3, r7, #0
    971e:	1c04      	adds	r4, r0, #0
    9720:	1c0d      	adds	r5, r1, #0
    9722:	f001 fe21 	bl	b368 <__aeabi_dcmpgt>
    9726:	2800      	cmp	r0, #0
    9728:	d110      	bne.n	974c <_dtoa_r+0x6b0>
    972a:	1c20      	adds	r0, r4, #0
    972c:	1c29      	adds	r1, r5, #0
    972e:	1c32      	adds	r2, r6, #0
    9730:	1c3b      	adds	r3, r7, #0
    9732:	f001 fdff 	bl	b334 <__aeabi_dcmpeq>
    9736:	2800      	cmp	r0, #0
    9738:	d100      	bne.n	973c <_dtoa_r+0x6a0>
    973a:	e28c      	b.n	9c56 <_dtoa_r+0xbba>
    973c:	9b06      	ldr	r3, [sp, #24]
    973e:	07db      	lsls	r3, r3, #31
    9740:	d404      	bmi.n	974c <_dtoa_r+0x6b0>
    9742:	e288      	b.n	9c56 <_dtoa_r+0xbba>
    9744:	9b11      	ldr	r3, [sp, #68]	; 0x44
    9746:	9303      	str	r3, [sp, #12]
    9748:	e000      	b.n	974c <_dtoa_r+0x6b0>
    974a:	9304      	str	r3, [sp, #16]
    974c:	9b04      	ldr	r3, [sp, #16]
    974e:	3b01      	subs	r3, #1
    9750:	781a      	ldrb	r2, [r3, #0]
    9752:	2a39      	cmp	r2, #57	; 0x39
    9754:	d108      	bne.n	9768 <_dtoa_r+0x6cc>
    9756:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    9758:	4293      	cmp	r3, r2
    975a:	d1f6      	bne.n	974a <_dtoa_r+0x6ae>
    975c:	9b03      	ldr	r3, [sp, #12]
    975e:	3301      	adds	r3, #1
    9760:	9303      	str	r3, [sp, #12]
    9762:	2330      	movs	r3, #48	; 0x30
    9764:	7013      	strb	r3, [r2, #0]
    9766:	1c13      	adds	r3, r2, #0
    9768:	781a      	ldrb	r2, [r3, #0]
    976a:	3201      	adds	r2, #1
    976c:	701a      	strb	r2, [r3, #0]
    976e:	e272      	b.n	9c56 <_dtoa_r+0xbba>
    9770:	1c10      	adds	r0, r2, #0
    9772:	1c19      	adds	r1, r3, #0
    9774:	2200      	movs	r2, #0
    9776:	4b13      	ldr	r3, [pc, #76]	; (97c4 <_dtoa_r+0x728>)
    9778:	f002 fd8e 	bl	c298 <__aeabi_dmul>
    977c:	2200      	movs	r2, #0
    977e:	2300      	movs	r3, #0
    9780:	1c04      	adds	r4, r0, #0
    9782:	1c0d      	adds	r5, r1, #0
    9784:	f001 fdd6 	bl	b334 <__aeabi_dcmpeq>
    9788:	2800      	cmp	r0, #0
    978a:	d09e      	beq.n	96ca <_dtoa_r+0x62e>
    978c:	e263      	b.n	9c56 <_dtoa_r+0xbba>
    978e:	9a10      	ldr	r2, [sp, #64]	; 0x40
    9790:	2a00      	cmp	r2, #0
    9792:	d044      	beq.n	981e <_dtoa_r+0x782>
    9794:	9a20      	ldr	r2, [sp, #128]	; 0x80
    9796:	2a01      	cmp	r2, #1
    9798:	dc0b      	bgt.n	97b2 <_dtoa_r+0x716>
    979a:	9a16      	ldr	r2, [sp, #88]	; 0x58
    979c:	2a00      	cmp	r2, #0
    979e:	d002      	beq.n	97a6 <_dtoa_r+0x70a>
    97a0:	4a0f      	ldr	r2, [pc, #60]	; (97e0 <_dtoa_r+0x744>)
    97a2:	189b      	adds	r3, r3, r2
    97a4:	e002      	b.n	97ac <_dtoa_r+0x710>
    97a6:	2336      	movs	r3, #54	; 0x36
    97a8:	9a18      	ldr	r2, [sp, #96]	; 0x60
    97aa:	1a9b      	subs	r3, r3, r2
    97ac:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
    97ae:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    97b0:	e029      	b.n	9806 <_dtoa_r+0x76a>
    97b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    97b4:	1e5d      	subs	r5, r3, #1
    97b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    97b8:	42ab      	cmp	r3, r5
    97ba:	db13      	blt.n	97e4 <_dtoa_r+0x748>
    97bc:	1b5d      	subs	r5, r3, r5
    97be:	e018      	b.n	97f2 <_dtoa_r+0x756>
    97c0:	3ff00000 	.word	0x3ff00000
    97c4:	40240000 	.word	0x40240000
    97c8:	401c0000 	.word	0x401c0000
    97cc:	fcc00000 	.word	0xfcc00000
    97d0:	40140000 	.word	0x40140000
    97d4:	7cc00000 	.word	0x7cc00000
    97d8:	0000e258 	.word	0x0000e258
    97dc:	3fe00000 	.word	0x3fe00000
    97e0:	00000433 	.word	0x00000433
    97e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    97e6:	950f      	str	r5, [sp, #60]	; 0x3c
    97e8:	1aea      	subs	r2, r5, r3
    97ea:	2500      	movs	r5, #0
    97ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
    97ee:	189b      	adds	r3, r3, r2
    97f0:	9312      	str	r3, [sp, #72]	; 0x48
    97f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    97f4:	2b00      	cmp	r3, #0
    97f6:	da04      	bge.n	9802 <_dtoa_r+0x766>
    97f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    97fa:	9a09      	ldr	r2, [sp, #36]	; 0x24
    97fc:	1a9c      	subs	r4, r3, r2
    97fe:	2300      	movs	r3, #0
    9800:	e001      	b.n	9806 <_dtoa_r+0x76a>
    9802:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    9804:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9806:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    9808:	9808      	ldr	r0, [sp, #32]
    980a:	18d2      	adds	r2, r2, r3
    980c:	920d      	str	r2, [sp, #52]	; 0x34
    980e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    9810:	2101      	movs	r1, #1
    9812:	18d3      	adds	r3, r2, r3
    9814:	930e      	str	r3, [sp, #56]	; 0x38
    9816:	f000 fef8 	bl	a60a <__i2b>
    981a:	1c06      	adds	r6, r0, #0
    981c:	e002      	b.n	9824 <_dtoa_r+0x788>
    981e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
    9820:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    9822:	9e10      	ldr	r6, [sp, #64]	; 0x40
    9824:	2c00      	cmp	r4, #0
    9826:	d00c      	beq.n	9842 <_dtoa_r+0x7a6>
    9828:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    982a:	2b00      	cmp	r3, #0
    982c:	dd09      	ble.n	9842 <_dtoa_r+0x7a6>
    982e:	42a3      	cmp	r3, r4
    9830:	dd00      	ble.n	9834 <_dtoa_r+0x798>
    9832:	1c23      	adds	r3, r4, #0
    9834:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    9836:	1ae4      	subs	r4, r4, r3
    9838:	1ad2      	subs	r2, r2, r3
    983a:	920d      	str	r2, [sp, #52]	; 0x34
    983c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    983e:	1ad3      	subs	r3, r2, r3
    9840:	930e      	str	r3, [sp, #56]	; 0x38
    9842:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    9844:	2b00      	cmp	r3, #0
    9846:	dd21      	ble.n	988c <_dtoa_r+0x7f0>
    9848:	9b10      	ldr	r3, [sp, #64]	; 0x40
    984a:	2b00      	cmp	r3, #0
    984c:	d018      	beq.n	9880 <_dtoa_r+0x7e4>
    984e:	2d00      	cmp	r5, #0
    9850:	dd10      	ble.n	9874 <_dtoa_r+0x7d8>
    9852:	1c31      	adds	r1, r6, #0
    9854:	1c2a      	adds	r2, r5, #0
    9856:	9808      	ldr	r0, [sp, #32]
    9858:	f000 ff6e 	bl	a738 <__pow5mult>
    985c:	1c06      	adds	r6, r0, #0
    985e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    9860:	1c31      	adds	r1, r6, #0
    9862:	9808      	ldr	r0, [sp, #32]
    9864:	f000 feda 	bl	a61c <__multiply>
    9868:	1c07      	adds	r7, r0, #0
    986a:	990a      	ldr	r1, [sp, #40]	; 0x28
    986c:	9808      	ldr	r0, [sp, #32]
    986e:	f000 fded 	bl	a44c <_Bfree>
    9872:	970a      	str	r7, [sp, #40]	; 0x28
    9874:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    9876:	1b5a      	subs	r2, r3, r5
    9878:	d008      	beq.n	988c <_dtoa_r+0x7f0>
    987a:	9808      	ldr	r0, [sp, #32]
    987c:	990a      	ldr	r1, [sp, #40]	; 0x28
    987e:	e002      	b.n	9886 <_dtoa_r+0x7ea>
    9880:	9808      	ldr	r0, [sp, #32]
    9882:	990a      	ldr	r1, [sp, #40]	; 0x28
    9884:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    9886:	f000 ff57 	bl	a738 <__pow5mult>
    988a:	900a      	str	r0, [sp, #40]	; 0x28
    988c:	9808      	ldr	r0, [sp, #32]
    988e:	2101      	movs	r1, #1
    9890:	f000 febb 	bl	a60a <__i2b>
    9894:	9b12      	ldr	r3, [sp, #72]	; 0x48
    9896:	1c07      	adds	r7, r0, #0
    9898:	2b00      	cmp	r3, #0
    989a:	dd0a      	ble.n	98b2 <_dtoa_r+0x816>
    989c:	1c39      	adds	r1, r7, #0
    989e:	1c1a      	adds	r2, r3, #0
    98a0:	9808      	ldr	r0, [sp, #32]
    98a2:	f000 ff49 	bl	a738 <__pow5mult>
    98a6:	9b20      	ldr	r3, [sp, #128]	; 0x80
    98a8:	1c07      	adds	r7, r0, #0
    98aa:	2500      	movs	r5, #0
    98ac:	2b01      	cmp	r3, #1
    98ae:	dc1b      	bgt.n	98e8 <_dtoa_r+0x84c>
    98b0:	e003      	b.n	98ba <_dtoa_r+0x81e>
    98b2:	9b20      	ldr	r3, [sp, #128]	; 0x80
    98b4:	2500      	movs	r5, #0
    98b6:	2b01      	cmp	r3, #1
    98b8:	dc12      	bgt.n	98e0 <_dtoa_r+0x844>
    98ba:	2500      	movs	r5, #0
    98bc:	9b06      	ldr	r3, [sp, #24]
    98be:	42ab      	cmp	r3, r5
    98c0:	d10e      	bne.n	98e0 <_dtoa_r+0x844>
    98c2:	9b07      	ldr	r3, [sp, #28]
    98c4:	031b      	lsls	r3, r3, #12
    98c6:	42ab      	cmp	r3, r5
    98c8:	d10a      	bne.n	98e0 <_dtoa_r+0x844>
    98ca:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    98cc:	9a07      	ldr	r2, [sp, #28]
    98ce:	4213      	tst	r3, r2
    98d0:	d006      	beq.n	98e0 <_dtoa_r+0x844>
    98d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    98d4:	3501      	adds	r5, #1
    98d6:	3301      	adds	r3, #1
    98d8:	930d      	str	r3, [sp, #52]	; 0x34
    98da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    98dc:	3301      	adds	r3, #1
    98de:	930e      	str	r3, [sp, #56]	; 0x38
    98e0:	9b12      	ldr	r3, [sp, #72]	; 0x48
    98e2:	2001      	movs	r0, #1
    98e4:	2b00      	cmp	r3, #0
    98e6:	d008      	beq.n	98fa <_dtoa_r+0x85e>
    98e8:	693b      	ldr	r3, [r7, #16]
    98ea:	3303      	adds	r3, #3
    98ec:	009b      	lsls	r3, r3, #2
    98ee:	18fb      	adds	r3, r7, r3
    98f0:	6858      	ldr	r0, [r3, #4]
    98f2:	f000 fe40 	bl	a576 <__hi0bits>
    98f6:	2320      	movs	r3, #32
    98f8:	1a18      	subs	r0, r3, r0
    98fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    98fc:	18c0      	adds	r0, r0, r3
    98fe:	231f      	movs	r3, #31
    9900:	4018      	ands	r0, r3
    9902:	d009      	beq.n	9918 <_dtoa_r+0x87c>
    9904:	3301      	adds	r3, #1
    9906:	1a1b      	subs	r3, r3, r0
    9908:	2b04      	cmp	r3, #4
    990a:	dd02      	ble.n	9912 <_dtoa_r+0x876>
    990c:	231c      	movs	r3, #28
    990e:	1a18      	subs	r0, r3, r0
    9910:	e003      	b.n	991a <_dtoa_r+0x87e>
    9912:	2b04      	cmp	r3, #4
    9914:	d008      	beq.n	9928 <_dtoa_r+0x88c>
    9916:	1c18      	adds	r0, r3, #0
    9918:	301c      	adds	r0, #28
    991a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    991c:	1824      	adds	r4, r4, r0
    991e:	181b      	adds	r3, r3, r0
    9920:	930d      	str	r3, [sp, #52]	; 0x34
    9922:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9924:	181b      	adds	r3, r3, r0
    9926:	930e      	str	r3, [sp, #56]	; 0x38
    9928:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    992a:	2b00      	cmp	r3, #0
    992c:	dd05      	ble.n	993a <_dtoa_r+0x89e>
    992e:	9808      	ldr	r0, [sp, #32]
    9930:	990a      	ldr	r1, [sp, #40]	; 0x28
    9932:	1c1a      	adds	r2, r3, #0
    9934:	f000 ff52 	bl	a7dc <__lshift>
    9938:	900a      	str	r0, [sp, #40]	; 0x28
    993a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    993c:	2b00      	cmp	r3, #0
    993e:	dd05      	ble.n	994c <_dtoa_r+0x8b0>
    9940:	1c39      	adds	r1, r7, #0
    9942:	9808      	ldr	r0, [sp, #32]
    9944:	1c1a      	adds	r2, r3, #0
    9946:	f000 ff49 	bl	a7dc <__lshift>
    994a:	1c07      	adds	r7, r0, #0
    994c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    994e:	2b00      	cmp	r3, #0
    9950:	d01e      	beq.n	9990 <_dtoa_r+0x8f4>
    9952:	980a      	ldr	r0, [sp, #40]	; 0x28
    9954:	1c39      	adds	r1, r7, #0
    9956:	f000 ff93 	bl	a880 <__mcmp>
    995a:	2800      	cmp	r0, #0
    995c:	da18      	bge.n	9990 <_dtoa_r+0x8f4>
    995e:	9b03      	ldr	r3, [sp, #12]
    9960:	9808      	ldr	r0, [sp, #32]
    9962:	3b01      	subs	r3, #1
    9964:	9303      	str	r3, [sp, #12]
    9966:	990a      	ldr	r1, [sp, #40]	; 0x28
    9968:	2300      	movs	r3, #0
    996a:	220a      	movs	r2, #10
    996c:	f000 fd87 	bl	a47e <__multadd>
    9970:	9b10      	ldr	r3, [sp, #64]	; 0x40
    9972:	900a      	str	r0, [sp, #40]	; 0x28
    9974:	2b00      	cmp	r3, #0
    9976:	d100      	bne.n	997a <_dtoa_r+0x8de>
    9978:	e17f      	b.n	9c7a <_dtoa_r+0xbde>
    997a:	1c31      	adds	r1, r6, #0
    997c:	2300      	movs	r3, #0
    997e:	9808      	ldr	r0, [sp, #32]
    9980:	220a      	movs	r2, #10
    9982:	f000 fd7c 	bl	a47e <__multadd>
    9986:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9988:	1c06      	adds	r6, r0, #0
    998a:	2b00      	cmp	r3, #0
    998c:	dc3c      	bgt.n	9a08 <_dtoa_r+0x96c>
    998e:	e17d      	b.n	9c8c <_dtoa_r+0xbf0>
    9990:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9992:	2b00      	cmp	r3, #0
    9994:	dc2e      	bgt.n	99f4 <_dtoa_r+0x958>
    9996:	9b20      	ldr	r3, [sp, #128]	; 0x80
    9998:	2b02      	cmp	r3, #2
    999a:	dd2b      	ble.n	99f4 <_dtoa_r+0x958>
    999c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    999e:	930b      	str	r3, [sp, #44]	; 0x2c
    99a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    99a2:	2b00      	cmp	r3, #0
    99a4:	d110      	bne.n	99c8 <_dtoa_r+0x92c>
    99a6:	1c39      	adds	r1, r7, #0
    99a8:	9808      	ldr	r0, [sp, #32]
    99aa:	2205      	movs	r2, #5
    99ac:	f000 fd67 	bl	a47e <__multadd>
    99b0:	1c07      	adds	r7, r0, #0
    99b2:	980a      	ldr	r0, [sp, #40]	; 0x28
    99b4:	1c39      	adds	r1, r7, #0
    99b6:	f000 ff63 	bl	a880 <__mcmp>
    99ba:	2800      	cmp	r0, #0
    99bc:	dc0e      	bgt.n	99dc <_dtoa_r+0x940>
    99be:	e003      	b.n	99c8 <_dtoa_r+0x92c>
    99c0:	1c2f      	adds	r7, r5, #0
    99c2:	e000      	b.n	99c6 <_dtoa_r+0x92a>
    99c4:	2700      	movs	r7, #0
    99c6:	1c3e      	adds	r6, r7, #0
    99c8:	9b21      	ldr	r3, [sp, #132]	; 0x84
    99ca:	43db      	mvns	r3, r3
    99cc:	9303      	str	r3, [sp, #12]
    99ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    99d0:	9304      	str	r3, [sp, #16]
    99d2:	e00c      	b.n	99ee <_dtoa_r+0x952>
    99d4:	1c2f      	adds	r7, r5, #0
    99d6:	1c2e      	adds	r6, r5, #0
    99d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
    99da:	9303      	str	r3, [sp, #12]
    99dc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    99de:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    99e0:	3301      	adds	r3, #1
    99e2:	9304      	str	r3, [sp, #16]
    99e4:	2331      	movs	r3, #49	; 0x31
    99e6:	7013      	strb	r3, [r2, #0]
    99e8:	9b03      	ldr	r3, [sp, #12]
    99ea:	3301      	adds	r3, #1
    99ec:	9303      	str	r3, [sp, #12]
    99ee:	9609      	str	r6, [sp, #36]	; 0x24
    99f0:	2600      	movs	r6, #0
    99f2:	e11a      	b.n	9c2a <_dtoa_r+0xb8e>
    99f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
    99f6:	2b00      	cmp	r3, #0
    99f8:	d104      	bne.n	9a04 <_dtoa_r+0x968>
    99fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
    99fc:	930b      	str	r3, [sp, #44]	; 0x2c
    99fe:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    9a00:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    9a02:	e0d0      	b.n	9ba6 <_dtoa_r+0xb0a>
    9a04:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9a06:	930b      	str	r3, [sp, #44]	; 0x2c
    9a08:	2c00      	cmp	r4, #0
    9a0a:	dd05      	ble.n	9a18 <_dtoa_r+0x97c>
    9a0c:	1c31      	adds	r1, r6, #0
    9a0e:	9808      	ldr	r0, [sp, #32]
    9a10:	1c22      	adds	r2, r4, #0
    9a12:	f000 fee3 	bl	a7dc <__lshift>
    9a16:	1c06      	adds	r6, r0, #0
    9a18:	9609      	str	r6, [sp, #36]	; 0x24
    9a1a:	2d00      	cmp	r5, #0
    9a1c:	d012      	beq.n	9a44 <_dtoa_r+0x9a8>
    9a1e:	6871      	ldr	r1, [r6, #4]
    9a20:	9808      	ldr	r0, [sp, #32]
    9a22:	f000 fcdb 	bl	a3dc <_Balloc>
    9a26:	1c31      	adds	r1, r6, #0
    9a28:	1c04      	adds	r4, r0, #0
    9a2a:	6933      	ldr	r3, [r6, #16]
    9a2c:	310c      	adds	r1, #12
    9a2e:	1c9a      	adds	r2, r3, #2
    9a30:	0092      	lsls	r2, r2, #2
    9a32:	300c      	adds	r0, #12
    9a34:	f7fc fd5b 	bl	64ee <memcpy>
    9a38:	9808      	ldr	r0, [sp, #32]
    9a3a:	1c21      	adds	r1, r4, #0
    9a3c:	2201      	movs	r2, #1
    9a3e:	f000 fecd 	bl	a7dc <__lshift>
    9a42:	9009      	str	r0, [sp, #36]	; 0x24
    9a44:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9a46:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    9a48:	930e      	str	r3, [sp, #56]	; 0x38
    9a4a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9a4c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    9a4e:	3b01      	subs	r3, #1
    9a50:	18d3      	adds	r3, r2, r3
    9a52:	9310      	str	r3, [sp, #64]	; 0x40
    9a54:	1c39      	adds	r1, r7, #0
    9a56:	1c20      	adds	r0, r4, #0
    9a58:	f7ff fa98 	bl	8f8c <quorem>
    9a5c:	1c03      	adds	r3, r0, #0
    9a5e:	900f      	str	r0, [sp, #60]	; 0x3c
    9a60:	3330      	adds	r3, #48	; 0x30
    9a62:	1c31      	adds	r1, r6, #0
    9a64:	1c20      	adds	r0, r4, #0
    9a66:	930d      	str	r3, [sp, #52]	; 0x34
    9a68:	f000 ff0a 	bl	a880 <__mcmp>
    9a6c:	1c39      	adds	r1, r7, #0
    9a6e:	900b      	str	r0, [sp, #44]	; 0x2c
    9a70:	9a09      	ldr	r2, [sp, #36]	; 0x24
    9a72:	9808      	ldr	r0, [sp, #32]
    9a74:	f000 ff1f 	bl	a8b6 <__mdiff>
    9a78:	2301      	movs	r3, #1
    9a7a:	9304      	str	r3, [sp, #16]
    9a7c:	68c3      	ldr	r3, [r0, #12]
    9a7e:	1c05      	adds	r5, r0, #0
    9a80:	2b00      	cmp	r3, #0
    9a82:	d104      	bne.n	9a8e <_dtoa_r+0x9f2>
    9a84:	1c20      	adds	r0, r4, #0
    9a86:	1c29      	adds	r1, r5, #0
    9a88:	f000 fefa 	bl	a880 <__mcmp>
    9a8c:	9004      	str	r0, [sp, #16]
    9a8e:	9808      	ldr	r0, [sp, #32]
    9a90:	1c29      	adds	r1, r5, #0
    9a92:	f000 fcdb 	bl	a44c <_Bfree>
    9a96:	9b04      	ldr	r3, [sp, #16]
    9a98:	9a20      	ldr	r2, [sp, #128]	; 0x80
    9a9a:	4313      	orrs	r3, r2
    9a9c:	d110      	bne.n	9ac0 <_dtoa_r+0xa24>
    9a9e:	9a06      	ldr	r2, [sp, #24]
    9aa0:	3301      	adds	r3, #1
    9aa2:	4213      	tst	r3, r2
    9aa4:	d10c      	bne.n	9ac0 <_dtoa_r+0xa24>
    9aa6:	980d      	ldr	r0, [sp, #52]	; 0x34
    9aa8:	940a      	str	r4, [sp, #40]	; 0x28
    9aaa:	2839      	cmp	r0, #57	; 0x39
    9aac:	d03d      	beq.n	9b2a <_dtoa_r+0xa8e>
    9aae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9ab0:	2b00      	cmp	r3, #0
    9ab2:	dd01      	ble.n	9ab8 <_dtoa_r+0xa1c>
    9ab4:	980f      	ldr	r0, [sp, #60]	; 0x3c
    9ab6:	3031      	adds	r0, #49	; 0x31
    9ab8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9aba:	3301      	adds	r3, #1
    9abc:	9304      	str	r3, [sp, #16]
    9abe:	e03e      	b.n	9b3e <_dtoa_r+0xaa2>
    9ac0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9ac2:	2b00      	cmp	r3, #0
    9ac4:	da05      	bge.n	9ad2 <_dtoa_r+0xa36>
    9ac6:	9b04      	ldr	r3, [sp, #16]
    9ac8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    9aca:	940a      	str	r4, [sp, #40]	; 0x28
    9acc:	2b00      	cmp	r3, #0
    9ace:	dc09      	bgt.n	9ae4 <_dtoa_r+0xa48>
    9ad0:	e01c      	b.n	9b0c <_dtoa_r+0xa70>
    9ad2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    9ad4:	9b20      	ldr	r3, [sp, #128]	; 0x80
    9ad6:	431d      	orrs	r5, r3
    9ad8:	d11e      	bne.n	9b18 <_dtoa_r+0xa7c>
    9ada:	2301      	movs	r3, #1
    9adc:	9a06      	ldr	r2, [sp, #24]
    9ade:	4213      	tst	r3, r2
    9ae0:	d11a      	bne.n	9b18 <_dtoa_r+0xa7c>
    9ae2:	e7f0      	b.n	9ac6 <_dtoa_r+0xa2a>
    9ae4:	1c21      	adds	r1, r4, #0
    9ae6:	9808      	ldr	r0, [sp, #32]
    9ae8:	2201      	movs	r2, #1
    9aea:	f000 fe77 	bl	a7dc <__lshift>
    9aee:	1c39      	adds	r1, r7, #0
    9af0:	900a      	str	r0, [sp, #40]	; 0x28
    9af2:	f000 fec5 	bl	a880 <__mcmp>
    9af6:	2800      	cmp	r0, #0
    9af8:	dc03      	bgt.n	9b02 <_dtoa_r+0xa66>
    9afa:	d107      	bne.n	9b0c <_dtoa_r+0xa70>
    9afc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    9afe:	07db      	lsls	r3, r3, #31
    9b00:	d504      	bpl.n	9b0c <_dtoa_r+0xa70>
    9b02:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    9b04:	2b39      	cmp	r3, #57	; 0x39
    9b06:	d010      	beq.n	9b2a <_dtoa_r+0xa8e>
    9b08:	1c1d      	adds	r5, r3, #0
    9b0a:	3501      	adds	r5, #1
    9b0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9b0e:	3301      	adds	r3, #1
    9b10:	9304      	str	r3, [sp, #16]
    9b12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9b14:	701d      	strb	r5, [r3, #0]
    9b16:	e088      	b.n	9c2a <_dtoa_r+0xb8e>
    9b18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9b1a:	1c5d      	adds	r5, r3, #1
    9b1c:	9b04      	ldr	r3, [sp, #16]
    9b1e:	2b00      	cmp	r3, #0
    9b20:	dd10      	ble.n	9b44 <_dtoa_r+0xaa8>
    9b22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    9b24:	940a      	str	r4, [sp, #40]	; 0x28
    9b26:	2b39      	cmp	r3, #57	; 0x39
    9b28:	d106      	bne.n	9b38 <_dtoa_r+0xa9c>
    9b2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9b2c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    9b2e:	3301      	adds	r3, #1
    9b30:	9304      	str	r3, [sp, #16]
    9b32:	2339      	movs	r3, #57	; 0x39
    9b34:	7013      	strb	r3, [r2, #0]
    9b36:	e060      	b.n	9bfa <_dtoa_r+0xb5e>
    9b38:	980d      	ldr	r0, [sp, #52]	; 0x34
    9b3a:	9504      	str	r5, [sp, #16]
    9b3c:	3001      	adds	r0, #1
    9b3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9b40:	7018      	strb	r0, [r3, #0]
    9b42:	e072      	b.n	9c2a <_dtoa_r+0xb8e>
    9b44:	466a      	mov	r2, sp
    9b46:	2134      	movs	r1, #52	; 0x34
    9b48:	1852      	adds	r2, r2, r1
    9b4a:	7812      	ldrb	r2, [r2, #0]
    9b4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9b4e:	9504      	str	r5, [sp, #16]
    9b50:	701a      	strb	r2, [r3, #0]
    9b52:	9a10      	ldr	r2, [sp, #64]	; 0x40
    9b54:	4293      	cmp	r3, r2
    9b56:	d03f      	beq.n	9bd8 <_dtoa_r+0xb3c>
    9b58:	1c21      	adds	r1, r4, #0
    9b5a:	220a      	movs	r2, #10
    9b5c:	2300      	movs	r3, #0
    9b5e:	9808      	ldr	r0, [sp, #32]
    9b60:	f000 fc8d 	bl	a47e <__multadd>
    9b64:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9b66:	1c04      	adds	r4, r0, #0
    9b68:	1c31      	adds	r1, r6, #0
    9b6a:	9808      	ldr	r0, [sp, #32]
    9b6c:	220a      	movs	r2, #10
    9b6e:	429e      	cmp	r6, r3
    9b70:	d105      	bne.n	9b7e <_dtoa_r+0xae2>
    9b72:	2300      	movs	r3, #0
    9b74:	f000 fc83 	bl	a47e <__multadd>
    9b78:	1c06      	adds	r6, r0, #0
    9b7a:	9009      	str	r0, [sp, #36]	; 0x24
    9b7c:	e00a      	b.n	9b94 <_dtoa_r+0xaf8>
    9b7e:	2300      	movs	r3, #0
    9b80:	f000 fc7d 	bl	a47e <__multadd>
    9b84:	9909      	ldr	r1, [sp, #36]	; 0x24
    9b86:	1c06      	adds	r6, r0, #0
    9b88:	220a      	movs	r2, #10
    9b8a:	9808      	ldr	r0, [sp, #32]
    9b8c:	2300      	movs	r3, #0
    9b8e:	f000 fc76 	bl	a47e <__multadd>
    9b92:	9009      	str	r0, [sp, #36]	; 0x24
    9b94:	950e      	str	r5, [sp, #56]	; 0x38
    9b96:	e75d      	b.n	9a54 <_dtoa_r+0x9b8>
    9b98:	1c21      	adds	r1, r4, #0
    9b9a:	9808      	ldr	r0, [sp, #32]
    9b9c:	220a      	movs	r2, #10
    9b9e:	2300      	movs	r3, #0
    9ba0:	f000 fc6d 	bl	a47e <__multadd>
    9ba4:	1c04      	adds	r4, r0, #0
    9ba6:	1c20      	adds	r0, r4, #0
    9ba8:	1c39      	adds	r1, r7, #0
    9baa:	f7ff f9ef 	bl	8f8c <quorem>
    9bae:	2234      	movs	r2, #52	; 0x34
    9bb0:	466b      	mov	r3, sp
    9bb2:	3030      	adds	r0, #48	; 0x30
    9bb4:	189b      	adds	r3, r3, r2
    9bb6:	900d      	str	r0, [sp, #52]	; 0x34
    9bb8:	781b      	ldrb	r3, [r3, #0]
    9bba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    9bbc:	702b      	strb	r3, [r5, #0]
    9bbe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9bc0:	3501      	adds	r5, #1
    9bc2:	1aeb      	subs	r3, r5, r3
    9bc4:	4293      	cmp	r3, r2
    9bc6:	dbe7      	blt.n	9b98 <_dtoa_r+0xafc>
    9bc8:	1e13      	subs	r3, r2, #0
    9bca:	dc00      	bgt.n	9bce <_dtoa_r+0xb32>
    9bcc:	2301      	movs	r3, #1
    9bce:	9609      	str	r6, [sp, #36]	; 0x24
    9bd0:	2600      	movs	r6, #0
    9bd2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    9bd4:	18d3      	adds	r3, r2, r3
    9bd6:	9304      	str	r3, [sp, #16]
    9bd8:	1c21      	adds	r1, r4, #0
    9bda:	9808      	ldr	r0, [sp, #32]
    9bdc:	2201      	movs	r2, #1
    9bde:	f000 fdfd 	bl	a7dc <__lshift>
    9be2:	1c39      	adds	r1, r7, #0
    9be4:	900a      	str	r0, [sp, #40]	; 0x28
    9be6:	f000 fe4b 	bl	a880 <__mcmp>
    9bea:	2800      	cmp	r0, #0
    9bec:	dc05      	bgt.n	9bfa <_dtoa_r+0xb5e>
    9bee:	d115      	bne.n	9c1c <_dtoa_r+0xb80>
    9bf0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    9bf2:	07db      	lsls	r3, r3, #31
    9bf4:	d401      	bmi.n	9bfa <_dtoa_r+0xb5e>
    9bf6:	e011      	b.n	9c1c <_dtoa_r+0xb80>
    9bf8:	9304      	str	r3, [sp, #16]
    9bfa:	9b04      	ldr	r3, [sp, #16]
    9bfc:	3b01      	subs	r3, #1
    9bfe:	781a      	ldrb	r2, [r3, #0]
    9c00:	2a39      	cmp	r2, #57	; 0x39
    9c02:	d108      	bne.n	9c16 <_dtoa_r+0xb7a>
    9c04:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    9c06:	4293      	cmp	r3, r2
    9c08:	d1f6      	bne.n	9bf8 <_dtoa_r+0xb5c>
    9c0a:	9b03      	ldr	r3, [sp, #12]
    9c0c:	3301      	adds	r3, #1
    9c0e:	9303      	str	r3, [sp, #12]
    9c10:	2331      	movs	r3, #49	; 0x31
    9c12:	7013      	strb	r3, [r2, #0]
    9c14:	e009      	b.n	9c2a <_dtoa_r+0xb8e>
    9c16:	3201      	adds	r2, #1
    9c18:	701a      	strb	r2, [r3, #0]
    9c1a:	e006      	b.n	9c2a <_dtoa_r+0xb8e>
    9c1c:	9b04      	ldr	r3, [sp, #16]
    9c1e:	3b01      	subs	r3, #1
    9c20:	781a      	ldrb	r2, [r3, #0]
    9c22:	2a30      	cmp	r2, #48	; 0x30
    9c24:	d101      	bne.n	9c2a <_dtoa_r+0xb8e>
    9c26:	9304      	str	r3, [sp, #16]
    9c28:	e7f8      	b.n	9c1c <_dtoa_r+0xb80>
    9c2a:	9808      	ldr	r0, [sp, #32]
    9c2c:	1c39      	adds	r1, r7, #0
    9c2e:	f000 fc0d 	bl	a44c <_Bfree>
    9c32:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9c34:	2b00      	cmp	r3, #0
    9c36:	d00e      	beq.n	9c56 <_dtoa_r+0xbba>
    9c38:	2e00      	cmp	r6, #0
    9c3a:	d005      	beq.n	9c48 <_dtoa_r+0xbac>
    9c3c:	429e      	cmp	r6, r3
    9c3e:	d003      	beq.n	9c48 <_dtoa_r+0xbac>
    9c40:	9808      	ldr	r0, [sp, #32]
    9c42:	1c31      	adds	r1, r6, #0
    9c44:	f000 fc02 	bl	a44c <_Bfree>
    9c48:	9808      	ldr	r0, [sp, #32]
    9c4a:	9909      	ldr	r1, [sp, #36]	; 0x24
    9c4c:	f000 fbfe 	bl	a44c <_Bfree>
    9c50:	e001      	b.n	9c56 <_dtoa_r+0xbba>
    9c52:	9b11      	ldr	r3, [sp, #68]	; 0x44
    9c54:	9303      	str	r3, [sp, #12]
    9c56:	9808      	ldr	r0, [sp, #32]
    9c58:	990a      	ldr	r1, [sp, #40]	; 0x28
    9c5a:	f000 fbf7 	bl	a44c <_Bfree>
    9c5e:	2300      	movs	r3, #0
    9c60:	9a04      	ldr	r2, [sp, #16]
    9c62:	980c      	ldr	r0, [sp, #48]	; 0x30
    9c64:	7013      	strb	r3, [r2, #0]
    9c66:	9b03      	ldr	r3, [sp, #12]
    9c68:	9a22      	ldr	r2, [sp, #136]	; 0x88
    9c6a:	3301      	adds	r3, #1
    9c6c:	6013      	str	r3, [r2, #0]
    9c6e:	9b24      	ldr	r3, [sp, #144]	; 0x90
    9c70:	2b00      	cmp	r3, #0
    9c72:	d010      	beq.n	9c96 <_dtoa_r+0xbfa>
    9c74:	9a04      	ldr	r2, [sp, #16]
    9c76:	601a      	str	r2, [r3, #0]
    9c78:	e00d      	b.n	9c96 <_dtoa_r+0xbfa>
    9c7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9c7c:	2b00      	cmp	r3, #0
    9c7e:	dd00      	ble.n	9c82 <_dtoa_r+0xbe6>
    9c80:	e6bd      	b.n	99fe <_dtoa_r+0x962>
    9c82:	9b20      	ldr	r3, [sp, #128]	; 0x80
    9c84:	2b02      	cmp	r3, #2
    9c86:	dd00      	ble.n	9c8a <_dtoa_r+0xbee>
    9c88:	e68a      	b.n	99a0 <_dtoa_r+0x904>
    9c8a:	e6b8      	b.n	99fe <_dtoa_r+0x962>
    9c8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
    9c8e:	2b02      	cmp	r3, #2
    9c90:	dd00      	ble.n	9c94 <_dtoa_r+0xbf8>
    9c92:	e685      	b.n	99a0 <_dtoa_r+0x904>
    9c94:	e6b8      	b.n	9a08 <_dtoa_r+0x96c>
    9c96:	b01b      	add	sp, #108	; 0x6c
    9c98:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9c9a:	46c0      	nop			; (mov r8, r8)

00009c9c <__sflags>:
    9c9c:	780b      	ldrb	r3, [r1, #0]
    9c9e:	b530      	push	{r4, r5, lr}
    9ca0:	2b72      	cmp	r3, #114	; 0x72
    9ca2:	d00e      	beq.n	9cc2 <__sflags+0x26>
    9ca4:	2b77      	cmp	r3, #119	; 0x77
    9ca6:	d007      	beq.n	9cb8 <__sflags+0x1c>
    9ca8:	2b61      	cmp	r3, #97	; 0x61
    9caa:	d10e      	bne.n	9cca <__sflags+0x2e>
    9cac:	2582      	movs	r5, #130	; 0x82
    9cae:	2084      	movs	r0, #132	; 0x84
    9cb0:	00ad      	lsls	r5, r5, #2
    9cb2:	2301      	movs	r3, #1
    9cb4:	0040      	lsls	r0, r0, #1
    9cb6:	e01b      	b.n	9cf0 <__sflags+0x54>
    9cb8:	25c0      	movs	r5, #192	; 0xc0
    9cba:	2301      	movs	r3, #1
    9cbc:	00ed      	lsls	r5, r5, #3
    9cbe:	2008      	movs	r0, #8
    9cc0:	e016      	b.n	9cf0 <__sflags+0x54>
    9cc2:	2500      	movs	r5, #0
    9cc4:	2004      	movs	r0, #4
    9cc6:	1c2b      	adds	r3, r5, #0
    9cc8:	e012      	b.n	9cf0 <__sflags+0x54>
    9cca:	2316      	movs	r3, #22
    9ccc:	6003      	str	r3, [r0, #0]
    9cce:	2000      	movs	r0, #0
    9cd0:	e01b      	b.n	9d0a <__sflags+0x6e>
    9cd2:	2c62      	cmp	r4, #98	; 0x62
    9cd4:	d011      	beq.n	9cfa <__sflags+0x5e>
    9cd6:	2c78      	cmp	r4, #120	; 0x78
    9cd8:	d012      	beq.n	9d00 <__sflags+0x64>
    9cda:	2c2b      	cmp	r4, #43	; 0x2b
    9cdc:	d108      	bne.n	9cf0 <__sflags+0x54>
    9cde:	3c0f      	subs	r4, #15
    9ce0:	43a0      	bics	r0, r4
    9ce2:	3c0c      	subs	r4, #12
    9ce4:	4320      	orrs	r0, r4
    9ce6:	3c0d      	subs	r4, #13
    9ce8:	43a3      	bics	r3, r4
    9cea:	1c1c      	adds	r4, r3, #0
    9cec:	2302      	movs	r3, #2
    9cee:	4323      	orrs	r3, r4
    9cf0:	3101      	adds	r1, #1
    9cf2:	780c      	ldrb	r4, [r1, #0]
    9cf4:	2c00      	cmp	r4, #0
    9cf6:	d1ec      	bne.n	9cd2 <__sflags+0x36>
    9cf8:	e005      	b.n	9d06 <__sflags+0x6a>
    9cfa:	2480      	movs	r4, #128	; 0x80
    9cfc:	0264      	lsls	r4, r4, #9
    9cfe:	e7f6      	b.n	9cee <__sflags+0x52>
    9d00:	2480      	movs	r4, #128	; 0x80
    9d02:	0124      	lsls	r4, r4, #4
    9d04:	e7f3      	b.n	9cee <__sflags+0x52>
    9d06:	432b      	orrs	r3, r5
    9d08:	6013      	str	r3, [r2, #0]
    9d0a:	bd30      	pop	{r4, r5, pc}

00009d0c <_fstat_r>:
    9d0c:	b538      	push	{r3, r4, r5, lr}
    9d0e:	2300      	movs	r3, #0
    9d10:	4c06      	ldr	r4, [pc, #24]	; (9d2c <_fstat_r+0x20>)
    9d12:	1c05      	adds	r5, r0, #0
    9d14:	1c08      	adds	r0, r1, #0
    9d16:	1c11      	adds	r1, r2, #0
    9d18:	6023      	str	r3, [r4, #0]
    9d1a:	f7f8 ff15 	bl	2b48 <_fstat>
    9d1e:	1c43      	adds	r3, r0, #1
    9d20:	d103      	bne.n	9d2a <_fstat_r+0x1e>
    9d22:	6823      	ldr	r3, [r4, #0]
    9d24:	2b00      	cmp	r3, #0
    9d26:	d000      	beq.n	9d2a <_fstat_r+0x1e>
    9d28:	602b      	str	r3, [r5, #0]
    9d2a:	bd38      	pop	{r3, r4, r5, pc}
    9d2c:	2000406c 	.word	0x2000406c

00009d30 <rshift>:
    9d30:	b5f0      	push	{r4, r5, r6, r7, lr}
    9d32:	1c06      	adds	r6, r0, #0
    9d34:	6905      	ldr	r5, [r0, #16]
    9d36:	3614      	adds	r6, #20
    9d38:	114a      	asrs	r2, r1, #5
    9d3a:	1c34      	adds	r4, r6, #0
    9d3c:	42aa      	cmp	r2, r5
    9d3e:	da25      	bge.n	9d8c <rshift+0x5c>
    9d40:	231f      	movs	r3, #31
    9d42:	00ad      	lsls	r5, r5, #2
    9d44:	0092      	lsls	r2, r2, #2
    9d46:	4019      	ands	r1, r3
    9d48:	1975      	adds	r5, r6, r5
    9d4a:	18b2      	adds	r2, r6, r2
    9d4c:	1c33      	adds	r3, r6, #0
    9d4e:	2900      	cmp	r1, #0
    9d50:	d016      	beq.n	9d80 <rshift+0x50>
    9d52:	1c13      	adds	r3, r2, #0
    9d54:	cb04      	ldmia	r3!, {r2}
    9d56:	2720      	movs	r7, #32
    9d58:	40ca      	lsrs	r2, r1
    9d5a:	46b4      	mov	ip, r6
    9d5c:	1a7f      	subs	r7, r7, r1
    9d5e:	4664      	mov	r4, ip
    9d60:	42ab      	cmp	r3, r5
    9d62:	d208      	bcs.n	9d76 <rshift+0x46>
    9d64:	681c      	ldr	r4, [r3, #0]
    9d66:	40bc      	lsls	r4, r7
    9d68:	4322      	orrs	r2, r4
    9d6a:	4664      	mov	r4, ip
    9d6c:	c404      	stmia	r4!, {r2}
    9d6e:	cb04      	ldmia	r3!, {r2}
    9d70:	46a4      	mov	ip, r4
    9d72:	40ca      	lsrs	r2, r1
    9d74:	e7f3      	b.n	9d5e <rshift+0x2e>
    9d76:	6022      	str	r2, [r4, #0]
    9d78:	2a00      	cmp	r2, #0
    9d7a:	d007      	beq.n	9d8c <rshift+0x5c>
    9d7c:	3404      	adds	r4, #4
    9d7e:	e005      	b.n	9d8c <rshift+0x5c>
    9d80:	1c1c      	adds	r4, r3, #0
    9d82:	42aa      	cmp	r2, r5
    9d84:	d202      	bcs.n	9d8c <rshift+0x5c>
    9d86:	ca02      	ldmia	r2!, {r1}
    9d88:	c302      	stmia	r3!, {r1}
    9d8a:	e7f9      	b.n	9d80 <rshift+0x50>
    9d8c:	1ba3      	subs	r3, r4, r6
    9d8e:	109b      	asrs	r3, r3, #2
    9d90:	6103      	str	r3, [r0, #16]
    9d92:	d100      	bne.n	9d96 <rshift+0x66>
    9d94:	6143      	str	r3, [r0, #20]
    9d96:	bdf0      	pop	{r4, r5, r6, r7, pc}

00009d98 <__hexdig_fun>:
    9d98:	1c03      	adds	r3, r0, #0
    9d9a:	3b30      	subs	r3, #48	; 0x30
    9d9c:	2b09      	cmp	r3, #9
    9d9e:	d801      	bhi.n	9da4 <__hexdig_fun+0xc>
    9da0:	3820      	subs	r0, #32
    9da2:	e00b      	b.n	9dbc <__hexdig_fun+0x24>
    9da4:	1c03      	adds	r3, r0, #0
    9da6:	3b61      	subs	r3, #97	; 0x61
    9da8:	2b05      	cmp	r3, #5
    9daa:	d801      	bhi.n	9db0 <__hexdig_fun+0x18>
    9dac:	3847      	subs	r0, #71	; 0x47
    9dae:	e005      	b.n	9dbc <__hexdig_fun+0x24>
    9db0:	1c02      	adds	r2, r0, #0
    9db2:	3a41      	subs	r2, #65	; 0x41
    9db4:	2300      	movs	r3, #0
    9db6:	2a05      	cmp	r2, #5
    9db8:	d801      	bhi.n	9dbe <__hexdig_fun+0x26>
    9dba:	3827      	subs	r0, #39	; 0x27
    9dbc:	b2c3      	uxtb	r3, r0
    9dbe:	1c18      	adds	r0, r3, #0
    9dc0:	4770      	bx	lr

00009dc2 <__gethex>:
    9dc2:	b5f0      	push	{r4, r5, r6, r7, lr}
    9dc4:	b08d      	sub	sp, #52	; 0x34
    9dc6:	9109      	str	r1, [sp, #36]	; 0x24
    9dc8:	9202      	str	r2, [sp, #8]
    9dca:	930a      	str	r3, [sp, #40]	; 0x28
    9dcc:	9005      	str	r0, [sp, #20]
    9dce:	f000 fad9 	bl	a384 <_localeconv_r>
    9dd2:	6803      	ldr	r3, [r0, #0]
    9dd4:	1c18      	adds	r0, r3, #0
    9dd6:	9307      	str	r3, [sp, #28]
    9dd8:	f7fe f822 	bl	7e20 <strlen>
    9ddc:	9b07      	ldr	r3, [sp, #28]
    9dde:	9004      	str	r0, [sp, #16]
    9de0:	181b      	adds	r3, r3, r0
    9de2:	3b01      	subs	r3, #1
    9de4:	781b      	ldrb	r3, [r3, #0]
    9de6:	930b      	str	r3, [sp, #44]	; 0x2c
    9de8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9dea:	6819      	ldr	r1, [r3, #0]
    9dec:	1c8a      	adds	r2, r1, #2
    9dee:	9201      	str	r2, [sp, #4]
    9df0:	9801      	ldr	r0, [sp, #4]
    9df2:	1a53      	subs	r3, r2, r1
    9df4:	7800      	ldrb	r0, [r0, #0]
    9df6:	3b02      	subs	r3, #2
    9df8:	3201      	adds	r2, #1
    9dfa:	2830      	cmp	r0, #48	; 0x30
    9dfc:	d0f7      	beq.n	9dee <__gethex+0x2c>
    9dfe:	9308      	str	r3, [sp, #32]
    9e00:	f7ff ffca 	bl	9d98 <__hexdig_fun>
    9e04:	1e06      	subs	r6, r0, #0
    9e06:	d120      	bne.n	9e4a <__gethex+0x88>
    9e08:	9801      	ldr	r0, [sp, #4]
    9e0a:	9907      	ldr	r1, [sp, #28]
    9e0c:	9a04      	ldr	r2, [sp, #16]
    9e0e:	f7fe f80e 	bl	7e2e <strncmp>
    9e12:	2800      	cmp	r0, #0
    9e14:	d13c      	bne.n	9e90 <__gethex+0xce>
    9e16:	9b01      	ldr	r3, [sp, #4]
    9e18:	9a04      	ldr	r2, [sp, #16]
    9e1a:	189c      	adds	r4, r3, r2
    9e1c:	7820      	ldrb	r0, [r4, #0]
    9e1e:	f7ff ffbb 	bl	9d98 <__hexdig_fun>
    9e22:	2800      	cmp	r0, #0
    9e24:	d037      	beq.n	9e96 <__gethex+0xd4>
    9e26:	9401      	str	r4, [sp, #4]
    9e28:	9b01      	ldr	r3, [sp, #4]
    9e2a:	7818      	ldrb	r0, [r3, #0]
    9e2c:	2830      	cmp	r0, #48	; 0x30
    9e2e:	d103      	bne.n	9e38 <__gethex+0x76>
    9e30:	9b01      	ldr	r3, [sp, #4]
    9e32:	3301      	adds	r3, #1
    9e34:	9301      	str	r3, [sp, #4]
    9e36:	e7f7      	b.n	9e28 <__gethex+0x66>
    9e38:	f7ff ffae 	bl	9d98 <__hexdig_fun>
    9e3c:	4243      	negs	r3, r0
    9e3e:	4143      	adcs	r3, r0
    9e40:	9303      	str	r3, [sp, #12]
    9e42:	2301      	movs	r3, #1
    9e44:	1c26      	adds	r6, r4, #0
    9e46:	9308      	str	r3, [sp, #32]
    9e48:	e002      	b.n	9e50 <__gethex+0x8e>
    9e4a:	2300      	movs	r3, #0
    9e4c:	1c1e      	adds	r6, r3, #0
    9e4e:	9303      	str	r3, [sp, #12]
    9e50:	9c01      	ldr	r4, [sp, #4]
    9e52:	7820      	ldrb	r0, [r4, #0]
    9e54:	f7ff ffa0 	bl	9d98 <__hexdig_fun>
    9e58:	2800      	cmp	r0, #0
    9e5a:	d001      	beq.n	9e60 <__gethex+0x9e>
    9e5c:	3401      	adds	r4, #1
    9e5e:	e7f8      	b.n	9e52 <__gethex+0x90>
    9e60:	1c20      	adds	r0, r4, #0
    9e62:	9907      	ldr	r1, [sp, #28]
    9e64:	9a04      	ldr	r2, [sp, #16]
    9e66:	f7fd ffe2 	bl	7e2e <strncmp>
    9e6a:	2800      	cmp	r0, #0
    9e6c:	d10b      	bne.n	9e86 <__gethex+0xc4>
    9e6e:	2e00      	cmp	r6, #0
    9e70:	d10b      	bne.n	9e8a <__gethex+0xc8>
    9e72:	9b04      	ldr	r3, [sp, #16]
    9e74:	18e6      	adds	r6, r4, r3
    9e76:	1c34      	adds	r4, r6, #0
    9e78:	7820      	ldrb	r0, [r4, #0]
    9e7a:	f7ff ff8d 	bl	9d98 <__hexdig_fun>
    9e7e:	2800      	cmp	r0, #0
    9e80:	d001      	beq.n	9e86 <__gethex+0xc4>
    9e82:	3401      	adds	r4, #1
    9e84:	e7f8      	b.n	9e78 <__gethex+0xb6>
    9e86:	1e37      	subs	r7, r6, #0
    9e88:	d008      	beq.n	9e9c <__gethex+0xda>
    9e8a:	1b36      	subs	r6, r6, r4
    9e8c:	00b7      	lsls	r7, r6, #2
    9e8e:	e005      	b.n	9e9c <__gethex+0xda>
    9e90:	9c01      	ldr	r4, [sp, #4]
    9e92:	1c37      	adds	r7, r6, #0
    9e94:	e000      	b.n	9e98 <__gethex+0xd6>
    9e96:	1c07      	adds	r7, r0, #0
    9e98:	2301      	movs	r3, #1
    9e9a:	9303      	str	r3, [sp, #12]
    9e9c:	7823      	ldrb	r3, [r4, #0]
    9e9e:	2b50      	cmp	r3, #80	; 0x50
    9ea0:	d001      	beq.n	9ea6 <__gethex+0xe4>
    9ea2:	2b70      	cmp	r3, #112	; 0x70
    9ea4:	d128      	bne.n	9ef8 <__gethex+0x136>
    9ea6:	7863      	ldrb	r3, [r4, #1]
    9ea8:	2b2b      	cmp	r3, #43	; 0x2b
    9eaa:	d007      	beq.n	9ebc <__gethex+0xfa>
    9eac:	2b2d      	cmp	r3, #45	; 0x2d
    9eae:	d003      	beq.n	9eb8 <__gethex+0xf6>
    9eb0:	2300      	movs	r3, #0
    9eb2:	1c65      	adds	r5, r4, #1
    9eb4:	9306      	str	r3, [sp, #24]
    9eb6:	e004      	b.n	9ec2 <__gethex+0x100>
    9eb8:	2301      	movs	r3, #1
    9eba:	e000      	b.n	9ebe <__gethex+0xfc>
    9ebc:	2300      	movs	r3, #0
    9ebe:	9306      	str	r3, [sp, #24]
    9ec0:	1ca5      	adds	r5, r4, #2
    9ec2:	7828      	ldrb	r0, [r5, #0]
    9ec4:	f7ff ff68 	bl	9d98 <__hexdig_fun>
    9ec8:	1e43      	subs	r3, r0, #1
    9eca:	b2db      	uxtb	r3, r3
    9ecc:	2b18      	cmp	r3, #24
    9ece:	d813      	bhi.n	9ef8 <__gethex+0x136>
    9ed0:	3810      	subs	r0, #16
    9ed2:	3501      	adds	r5, #1
    9ed4:	1c06      	adds	r6, r0, #0
    9ed6:	7828      	ldrb	r0, [r5, #0]
    9ed8:	f7ff ff5e 	bl	9d98 <__hexdig_fun>
    9edc:	1e43      	subs	r3, r0, #1
    9ede:	b2db      	uxtb	r3, r3
    9ee0:	2b18      	cmp	r3, #24
    9ee2:	d803      	bhi.n	9eec <__gethex+0x12a>
    9ee4:	230a      	movs	r3, #10
    9ee6:	435e      	muls	r6, r3
    9ee8:	1830      	adds	r0, r6, r0
    9eea:	e7f1      	b.n	9ed0 <__gethex+0x10e>
    9eec:	9b06      	ldr	r3, [sp, #24]
    9eee:	2b00      	cmp	r3, #0
    9ef0:	d000      	beq.n	9ef4 <__gethex+0x132>
    9ef2:	4276      	negs	r6, r6
    9ef4:	19bf      	adds	r7, r7, r6
    9ef6:	e000      	b.n	9efa <__gethex+0x138>
    9ef8:	1c25      	adds	r5, r4, #0
    9efa:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9efc:	601d      	str	r5, [r3, #0]
    9efe:	9b03      	ldr	r3, [sp, #12]
    9f00:	2b00      	cmp	r3, #0
    9f02:	d006      	beq.n	9f12 <__gethex+0x150>
    9f04:	2000      	movs	r0, #0
    9f06:	9b08      	ldr	r3, [sp, #32]
    9f08:	4283      	cmp	r3, r0
    9f0a:	d000      	beq.n	9f0e <__gethex+0x14c>
    9f0c:	e17b      	b.n	a206 <__gethex+0x444>
    9f0e:	3006      	adds	r0, #6
    9f10:	e179      	b.n	a206 <__gethex+0x444>
    9f12:	9b01      	ldr	r3, [sp, #4]
    9f14:	9903      	ldr	r1, [sp, #12]
    9f16:	1ae3      	subs	r3, r4, r3
    9f18:	3b01      	subs	r3, #1
    9f1a:	2b07      	cmp	r3, #7
    9f1c:	dd02      	ble.n	9f24 <__gethex+0x162>
    9f1e:	3101      	adds	r1, #1
    9f20:	105b      	asrs	r3, r3, #1
    9f22:	e7fa      	b.n	9f1a <__gethex+0x158>
    9f24:	9805      	ldr	r0, [sp, #20]
    9f26:	f000 fa59 	bl	a3dc <_Balloc>
    9f2a:	1c03      	adds	r3, r0, #0
    9f2c:	2600      	movs	r6, #0
    9f2e:	1c05      	adds	r5, r0, #0
    9f30:	3314      	adds	r3, #20
    9f32:	9303      	str	r3, [sp, #12]
    9f34:	9308      	str	r3, [sp, #32]
    9f36:	9606      	str	r6, [sp, #24]
    9f38:	9b01      	ldr	r3, [sp, #4]
    9f3a:	429c      	cmp	r4, r3
    9f3c:	d92a      	bls.n	9f94 <__gethex+0x1d2>
    9f3e:	1e63      	subs	r3, r4, #1
    9f40:	9309      	str	r3, [sp, #36]	; 0x24
    9f42:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    9f44:	781b      	ldrb	r3, [r3, #0]
    9f46:	4293      	cmp	r3, r2
    9f48:	d009      	beq.n	9f5e <__gethex+0x19c>
    9f4a:	9b06      	ldr	r3, [sp, #24]
    9f4c:	2b20      	cmp	r3, #32
    9f4e:	d114      	bne.n	9f7a <__gethex+0x1b8>
    9f50:	9b08      	ldr	r3, [sp, #32]
    9f52:	601e      	str	r6, [r3, #0]
    9f54:	2600      	movs	r6, #0
    9f56:	3304      	adds	r3, #4
    9f58:	9308      	str	r3, [sp, #32]
    9f5a:	9606      	str	r6, [sp, #24]
    9f5c:	e00d      	b.n	9f7a <__gethex+0x1b8>
    9f5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9f60:	9a04      	ldr	r2, [sp, #16]
    9f62:	1a9c      	subs	r4, r3, r2
    9f64:	9b01      	ldr	r3, [sp, #4]
    9f66:	3401      	adds	r4, #1
    9f68:	429c      	cmp	r4, r3
    9f6a:	d3ee      	bcc.n	9f4a <__gethex+0x188>
    9f6c:	1c20      	adds	r0, r4, #0
    9f6e:	9907      	ldr	r1, [sp, #28]
    9f70:	f7fd ff5d 	bl	7e2e <strncmp>
    9f74:	2800      	cmp	r0, #0
    9f76:	d0df      	beq.n	9f38 <__gethex+0x176>
    9f78:	e7e7      	b.n	9f4a <__gethex+0x188>
    9f7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9f7c:	7818      	ldrb	r0, [r3, #0]
    9f7e:	f7ff ff0b 	bl	9d98 <__hexdig_fun>
    9f82:	230f      	movs	r3, #15
    9f84:	4018      	ands	r0, r3
    9f86:	9b06      	ldr	r3, [sp, #24]
    9f88:	9c09      	ldr	r4, [sp, #36]	; 0x24
    9f8a:	4098      	lsls	r0, r3
    9f8c:	3304      	adds	r3, #4
    9f8e:	4306      	orrs	r6, r0
    9f90:	9306      	str	r3, [sp, #24]
    9f92:	e7d1      	b.n	9f38 <__gethex+0x176>
    9f94:	9c08      	ldr	r4, [sp, #32]
    9f96:	9b03      	ldr	r3, [sp, #12]
    9f98:	c440      	stmia	r4!, {r6}
    9f9a:	1ae4      	subs	r4, r4, r3
    9f9c:	10a4      	asrs	r4, r4, #2
    9f9e:	612c      	str	r4, [r5, #16]
    9fa0:	1c30      	adds	r0, r6, #0
    9fa2:	f000 fae8 	bl	a576 <__hi0bits>
    9fa6:	9b02      	ldr	r3, [sp, #8]
    9fa8:	0164      	lsls	r4, r4, #5
    9faa:	681b      	ldr	r3, [r3, #0]
    9fac:	1a26      	subs	r6, r4, r0
    9fae:	9301      	str	r3, [sp, #4]
    9fb0:	429e      	cmp	r6, r3
    9fb2:	dd25      	ble.n	a000 <__gethex+0x23e>
    9fb4:	1af6      	subs	r6, r6, r3
    9fb6:	1c28      	adds	r0, r5, #0
    9fb8:	1c31      	adds	r1, r6, #0
    9fba:	f000 fdf1 	bl	aba0 <__any_on>
    9fbe:	2400      	movs	r4, #0
    9fc0:	42a0      	cmp	r0, r4
    9fc2:	d017      	beq.n	9ff4 <__gethex+0x232>
    9fc4:	231f      	movs	r3, #31
    9fc6:	3401      	adds	r4, #1
    9fc8:	1c20      	adds	r0, r4, #0
    9fca:	1e72      	subs	r2, r6, #1
    9fcc:	4013      	ands	r3, r2
    9fce:	4098      	lsls	r0, r3
    9fd0:	1c03      	adds	r3, r0, #0
    9fd2:	1151      	asrs	r1, r2, #5
    9fd4:	9803      	ldr	r0, [sp, #12]
    9fd6:	0089      	lsls	r1, r1, #2
    9fd8:	5809      	ldr	r1, [r1, r0]
    9fda:	4219      	tst	r1, r3
    9fdc:	d00a      	beq.n	9ff4 <__gethex+0x232>
    9fde:	42a2      	cmp	r2, r4
    9fe0:	dc01      	bgt.n	9fe6 <__gethex+0x224>
    9fe2:	2402      	movs	r4, #2
    9fe4:	e006      	b.n	9ff4 <__gethex+0x232>
    9fe6:	1eb1      	subs	r1, r6, #2
    9fe8:	1c28      	adds	r0, r5, #0
    9fea:	f000 fdd9 	bl	aba0 <__any_on>
    9fee:	2800      	cmp	r0, #0
    9ff0:	d0f7      	beq.n	9fe2 <__gethex+0x220>
    9ff2:	2403      	movs	r4, #3
    9ff4:	1c28      	adds	r0, r5, #0
    9ff6:	1c31      	adds	r1, r6, #0
    9ff8:	f7ff fe9a 	bl	9d30 <rshift>
    9ffc:	19bf      	adds	r7, r7, r6
    9ffe:	e00e      	b.n	a01e <__gethex+0x25c>
    a000:	9b01      	ldr	r3, [sp, #4]
    a002:	2400      	movs	r4, #0
    a004:	429e      	cmp	r6, r3
    a006:	da0a      	bge.n	a01e <__gethex+0x25c>
    a008:	1b9e      	subs	r6, r3, r6
    a00a:	1c29      	adds	r1, r5, #0
    a00c:	9805      	ldr	r0, [sp, #20]
    a00e:	1c32      	adds	r2, r6, #0
    a010:	f000 fbe4 	bl	a7dc <__lshift>
    a014:	1c03      	adds	r3, r0, #0
    a016:	1c05      	adds	r5, r0, #0
    a018:	3314      	adds	r3, #20
    a01a:	1bbf      	subs	r7, r7, r6
    a01c:	9303      	str	r3, [sp, #12]
    a01e:	9b02      	ldr	r3, [sp, #8]
    a020:	689b      	ldr	r3, [r3, #8]
    a022:	9304      	str	r3, [sp, #16]
    a024:	429f      	cmp	r7, r3
    a026:	dd08      	ble.n	a03a <__gethex+0x278>
    a028:	9805      	ldr	r0, [sp, #20]
    a02a:	1c29      	adds	r1, r5, #0
    a02c:	f000 fa0e 	bl	a44c <_Bfree>
    a030:	2300      	movs	r3, #0
    a032:	9a12      	ldr	r2, [sp, #72]	; 0x48
    a034:	20a3      	movs	r0, #163	; 0xa3
    a036:	6013      	str	r3, [r2, #0]
    a038:	e0e5      	b.n	a206 <__gethex+0x444>
    a03a:	9b02      	ldr	r3, [sp, #8]
    a03c:	685e      	ldr	r6, [r3, #4]
    a03e:	42b7      	cmp	r7, r6
    a040:	da5a      	bge.n	a0f8 <__gethex+0x336>
    a042:	9b01      	ldr	r3, [sp, #4]
    a044:	1bf6      	subs	r6, r6, r7
    a046:	429e      	cmp	r6, r3
    a048:	db32      	blt.n	a0b0 <__gethex+0x2ee>
    a04a:	9b02      	ldr	r3, [sp, #8]
    a04c:	68db      	ldr	r3, [r3, #12]
    a04e:	2b02      	cmp	r3, #2
    a050:	d01e      	beq.n	a090 <__gethex+0x2ce>
    a052:	2b03      	cmp	r3, #3
    a054:	d020      	beq.n	a098 <__gethex+0x2d6>
    a056:	2b01      	cmp	r3, #1
    a058:	d121      	bne.n	a09e <__gethex+0x2dc>
    a05a:	9b01      	ldr	r3, [sp, #4]
    a05c:	429e      	cmp	r6, r3
    a05e:	d11e      	bne.n	a09e <__gethex+0x2dc>
    a060:	2b01      	cmp	r3, #1
    a062:	dc0d      	bgt.n	a080 <__gethex+0x2be>
    a064:	9b02      	ldr	r3, [sp, #8]
    a066:	2062      	movs	r0, #98	; 0x62
    a068:	685b      	ldr	r3, [r3, #4]
    a06a:	9301      	str	r3, [sp, #4]
    a06c:	9a01      	ldr	r2, [sp, #4]
    a06e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a070:	601a      	str	r2, [r3, #0]
    a072:	2301      	movs	r3, #1
    a074:	9a03      	ldr	r2, [sp, #12]
    a076:	612b      	str	r3, [r5, #16]
    a078:	6013      	str	r3, [r2, #0]
    a07a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    a07c:	601d      	str	r5, [r3, #0]
    a07e:	e0c2      	b.n	a206 <__gethex+0x444>
    a080:	9901      	ldr	r1, [sp, #4]
    a082:	1c28      	adds	r0, r5, #0
    a084:	3901      	subs	r1, #1
    a086:	f000 fd8b 	bl	aba0 <__any_on>
    a08a:	2800      	cmp	r0, #0
    a08c:	d1ea      	bne.n	a064 <__gethex+0x2a2>
    a08e:	e006      	b.n	a09e <__gethex+0x2dc>
    a090:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    a092:	2b00      	cmp	r3, #0
    a094:	d0e6      	beq.n	a064 <__gethex+0x2a2>
    a096:	e002      	b.n	a09e <__gethex+0x2dc>
    a098:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    a09a:	2b00      	cmp	r3, #0
    a09c:	d1e2      	bne.n	a064 <__gethex+0x2a2>
    a09e:	9805      	ldr	r0, [sp, #20]
    a0a0:	1c29      	adds	r1, r5, #0
    a0a2:	f000 f9d3 	bl	a44c <_Bfree>
    a0a6:	2300      	movs	r3, #0
    a0a8:	9a12      	ldr	r2, [sp, #72]	; 0x48
    a0aa:	2050      	movs	r0, #80	; 0x50
    a0ac:	6013      	str	r3, [r2, #0]
    a0ae:	e0aa      	b.n	a206 <__gethex+0x444>
    a0b0:	1e77      	subs	r7, r6, #1
    a0b2:	2c00      	cmp	r4, #0
    a0b4:	d107      	bne.n	a0c6 <__gethex+0x304>
    a0b6:	2f00      	cmp	r7, #0
    a0b8:	dd06      	ble.n	a0c8 <__gethex+0x306>
    a0ba:	1c28      	adds	r0, r5, #0
    a0bc:	1c39      	adds	r1, r7, #0
    a0be:	f000 fd6f 	bl	aba0 <__any_on>
    a0c2:	1c04      	adds	r4, r0, #0
    a0c4:	e000      	b.n	a0c8 <__gethex+0x306>
    a0c6:	2401      	movs	r4, #1
    a0c8:	231f      	movs	r3, #31
    a0ca:	117a      	asrs	r2, r7, #5
    a0cc:	401f      	ands	r7, r3
    a0ce:	3b1e      	subs	r3, #30
    a0d0:	40bb      	lsls	r3, r7
    a0d2:	1c1f      	adds	r7, r3, #0
    a0d4:	9b03      	ldr	r3, [sp, #12]
    a0d6:	0092      	lsls	r2, r2, #2
    a0d8:	58d3      	ldr	r3, [r2, r3]
    a0da:	423b      	tst	r3, r7
    a0dc:	d001      	beq.n	a0e2 <__gethex+0x320>
    a0de:	2302      	movs	r3, #2
    a0e0:	431c      	orrs	r4, r3
    a0e2:	9b01      	ldr	r3, [sp, #4]
    a0e4:	1c31      	adds	r1, r6, #0
    a0e6:	1b9b      	subs	r3, r3, r6
    a0e8:	1c28      	adds	r0, r5, #0
    a0ea:	9301      	str	r3, [sp, #4]
    a0ec:	f7ff fe20 	bl	9d30 <rshift>
    a0f0:	9b02      	ldr	r3, [sp, #8]
    a0f2:	2602      	movs	r6, #2
    a0f4:	685f      	ldr	r7, [r3, #4]
    a0f6:	e000      	b.n	a0fa <__gethex+0x338>
    a0f8:	2601      	movs	r6, #1
    a0fa:	2c00      	cmp	r4, #0
    a0fc:	d07e      	beq.n	a1fc <__gethex+0x43a>
    a0fe:	9b02      	ldr	r3, [sp, #8]
    a100:	68db      	ldr	r3, [r3, #12]
    a102:	2b02      	cmp	r3, #2
    a104:	d00b      	beq.n	a11e <__gethex+0x35c>
    a106:	2b03      	cmp	r3, #3
    a108:	d00d      	beq.n	a126 <__gethex+0x364>
    a10a:	2b01      	cmp	r3, #1
    a10c:	d174      	bne.n	a1f8 <__gethex+0x436>
    a10e:	07a2      	lsls	r2, r4, #30
    a110:	d572      	bpl.n	a1f8 <__gethex+0x436>
    a112:	9a03      	ldr	r2, [sp, #12]
    a114:	6812      	ldr	r2, [r2, #0]
    a116:	4314      	orrs	r4, r2
    a118:	421c      	tst	r4, r3
    a11a:	d107      	bne.n	a12c <__gethex+0x36a>
    a11c:	e06c      	b.n	a1f8 <__gethex+0x436>
    a11e:	2301      	movs	r3, #1
    a120:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    a122:	1a9b      	subs	r3, r3, r2
    a124:	9313      	str	r3, [sp, #76]	; 0x4c
    a126:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    a128:	2b00      	cmp	r3, #0
    a12a:	d065      	beq.n	a1f8 <__gethex+0x436>
    a12c:	692c      	ldr	r4, [r5, #16]
    a12e:	00a3      	lsls	r3, r4, #2
    a130:	9303      	str	r3, [sp, #12]
    a132:	1c2b      	adds	r3, r5, #0
    a134:	9a03      	ldr	r2, [sp, #12]
    a136:	3314      	adds	r3, #20
    a138:	1899      	adds	r1, r3, r2
    a13a:	681a      	ldr	r2, [r3, #0]
    a13c:	1c50      	adds	r0, r2, #1
    a13e:	d002      	beq.n	a146 <__gethex+0x384>
    a140:	3201      	adds	r2, #1
    a142:	601a      	str	r2, [r3, #0]
    a144:	e021      	b.n	a18a <__gethex+0x3c8>
    a146:	2200      	movs	r2, #0
    a148:	c304      	stmia	r3!, {r2}
    a14a:	4299      	cmp	r1, r3
    a14c:	d8f5      	bhi.n	a13a <__gethex+0x378>
    a14e:	68ab      	ldr	r3, [r5, #8]
    a150:	429c      	cmp	r4, r3
    a152:	db12      	blt.n	a17a <__gethex+0x3b8>
    a154:	686b      	ldr	r3, [r5, #4]
    a156:	9805      	ldr	r0, [sp, #20]
    a158:	1c59      	adds	r1, r3, #1
    a15a:	f000 f93f 	bl	a3dc <_Balloc>
    a15e:	1c29      	adds	r1, r5, #0
    a160:	692b      	ldr	r3, [r5, #16]
    a162:	9004      	str	r0, [sp, #16]
    a164:	1c9a      	adds	r2, r3, #2
    a166:	310c      	adds	r1, #12
    a168:	0092      	lsls	r2, r2, #2
    a16a:	300c      	adds	r0, #12
    a16c:	f7fc f9bf 	bl	64ee <memcpy>
    a170:	1c29      	adds	r1, r5, #0
    a172:	9805      	ldr	r0, [sp, #20]
    a174:	f000 f96a 	bl	a44c <_Bfree>
    a178:	9d04      	ldr	r5, [sp, #16]
    a17a:	692b      	ldr	r3, [r5, #16]
    a17c:	1c5a      	adds	r2, r3, #1
    a17e:	612a      	str	r2, [r5, #16]
    a180:	2201      	movs	r2, #1
    a182:	3304      	adds	r3, #4
    a184:	009b      	lsls	r3, r3, #2
    a186:	18eb      	adds	r3, r5, r3
    a188:	605a      	str	r2, [r3, #4]
    a18a:	1c2b      	adds	r3, r5, #0
    a18c:	3314      	adds	r3, #20
    a18e:	2e02      	cmp	r6, #2
    a190:	d111      	bne.n	a1b6 <__gethex+0x3f4>
    a192:	9a02      	ldr	r2, [sp, #8]
    a194:	9901      	ldr	r1, [sp, #4]
    a196:	6812      	ldr	r2, [r2, #0]
    a198:	3a01      	subs	r2, #1
    a19a:	4291      	cmp	r1, r2
    a19c:	d12a      	bne.n	a1f4 <__gethex+0x432>
    a19e:	114a      	asrs	r2, r1, #5
    a1a0:	211f      	movs	r1, #31
    a1a2:	9801      	ldr	r0, [sp, #4]
    a1a4:	0092      	lsls	r2, r2, #2
    a1a6:	4001      	ands	r1, r0
    a1a8:	2001      	movs	r0, #1
    a1aa:	1c04      	adds	r4, r0, #0
    a1ac:	408c      	lsls	r4, r1
    a1ae:	58d3      	ldr	r3, [r2, r3]
    a1b0:	4223      	tst	r3, r4
    a1b2:	d01f      	beq.n	a1f4 <__gethex+0x432>
    a1b4:	e00c      	b.n	a1d0 <__gethex+0x40e>
    a1b6:	692a      	ldr	r2, [r5, #16]
    a1b8:	42a2      	cmp	r2, r4
    a1ba:	dd0b      	ble.n	a1d4 <__gethex+0x412>
    a1bc:	1c28      	adds	r0, r5, #0
    a1be:	2101      	movs	r1, #1
    a1c0:	f7ff fdb6 	bl	9d30 <rshift>
    a1c4:	9b02      	ldr	r3, [sp, #8]
    a1c6:	3701      	adds	r7, #1
    a1c8:	689b      	ldr	r3, [r3, #8]
    a1ca:	429f      	cmp	r7, r3
    a1cc:	dd00      	ble.n	a1d0 <__gethex+0x40e>
    a1ce:	e72b      	b.n	a028 <__gethex+0x266>
    a1d0:	2601      	movs	r6, #1
    a1d2:	e00f      	b.n	a1f4 <__gethex+0x432>
    a1d4:	241f      	movs	r4, #31
    a1d6:	9a01      	ldr	r2, [sp, #4]
    a1d8:	2601      	movs	r6, #1
    a1da:	4022      	ands	r2, r4
    a1dc:	1e14      	subs	r4, r2, #0
    a1de:	d009      	beq.n	a1f4 <__gethex+0x432>
    a1e0:	9a03      	ldr	r2, [sp, #12]
    a1e2:	189b      	adds	r3, r3, r2
    a1e4:	3b04      	subs	r3, #4
    a1e6:	6818      	ldr	r0, [r3, #0]
    a1e8:	f000 f9c5 	bl	a576 <__hi0bits>
    a1ec:	2120      	movs	r1, #32
    a1ee:	1b0c      	subs	r4, r1, r4
    a1f0:	42a0      	cmp	r0, r4
    a1f2:	dbe3      	blt.n	a1bc <__gethex+0x3fa>
    a1f4:	2320      	movs	r3, #32
    a1f6:	e000      	b.n	a1fa <__gethex+0x438>
    a1f8:	2310      	movs	r3, #16
    a1fa:	431e      	orrs	r6, r3
    a1fc:	1c30      	adds	r0, r6, #0
    a1fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
    a200:	601d      	str	r5, [r3, #0]
    a202:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a204:	601f      	str	r7, [r3, #0]
    a206:	b00d      	add	sp, #52	; 0x34
    a208:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000a20a <L_shift>:
    a20a:	2308      	movs	r3, #8
    a20c:	b570      	push	{r4, r5, r6, lr}
    a20e:	2520      	movs	r5, #32
    a210:	1a9a      	subs	r2, r3, r2
    a212:	0092      	lsls	r2, r2, #2
    a214:	1aad      	subs	r5, r5, r2
    a216:	6843      	ldr	r3, [r0, #4]
    a218:	6806      	ldr	r6, [r0, #0]
    a21a:	1c1c      	adds	r4, r3, #0
    a21c:	40ac      	lsls	r4, r5
    a21e:	40d3      	lsrs	r3, r2
    a220:	4334      	orrs	r4, r6
    a222:	6004      	str	r4, [r0, #0]
    a224:	6043      	str	r3, [r0, #4]
    a226:	3004      	adds	r0, #4
    a228:	4288      	cmp	r0, r1
    a22a:	d3f4      	bcc.n	a216 <L_shift+0xc>
    a22c:	bd70      	pop	{r4, r5, r6, pc}

0000a22e <__hexnan>:
    a22e:	b5f0      	push	{r4, r5, r6, r7, lr}
    a230:	b089      	sub	sp, #36	; 0x24
    a232:	9200      	str	r2, [sp, #0]
    a234:	680a      	ldr	r2, [r1, #0]
    a236:	9900      	ldr	r1, [sp, #0]
    a238:	1153      	asrs	r3, r2, #5
    a23a:	009b      	lsls	r3, r3, #2
    a23c:	18cb      	adds	r3, r1, r3
    a23e:	9302      	str	r3, [sp, #8]
    a240:	231f      	movs	r3, #31
    a242:	401a      	ands	r2, r3
    a244:	9007      	str	r0, [sp, #28]
    a246:	9205      	str	r2, [sp, #20]
    a248:	d002      	beq.n	a250 <__hexnan+0x22>
    a24a:	9b02      	ldr	r3, [sp, #8]
    a24c:	3304      	adds	r3, #4
    a24e:	9302      	str	r3, [sp, #8]
    a250:	9b02      	ldr	r3, [sp, #8]
    a252:	2500      	movs	r5, #0
    a254:	1f1e      	subs	r6, r3, #4
    a256:	1c37      	adds	r7, r6, #0
    a258:	1c34      	adds	r4, r6, #0
    a25a:	9b07      	ldr	r3, [sp, #28]
    a25c:	6035      	str	r5, [r6, #0]
    a25e:	681b      	ldr	r3, [r3, #0]
    a260:	9506      	str	r5, [sp, #24]
    a262:	9303      	str	r3, [sp, #12]
    a264:	9501      	str	r5, [sp, #4]
    a266:	9b03      	ldr	r3, [sp, #12]
    a268:	3301      	adds	r3, #1
    a26a:	9303      	str	r3, [sp, #12]
    a26c:	781b      	ldrb	r3, [r3, #0]
    a26e:	9304      	str	r3, [sp, #16]
    a270:	2b00      	cmp	r3, #0
    a272:	d03b      	beq.n	a2ec <__hexnan+0xbe>
    a274:	9804      	ldr	r0, [sp, #16]
    a276:	f7ff fd8f 	bl	9d98 <__hexdig_fun>
    a27a:	2800      	cmp	r0, #0
    a27c:	d122      	bne.n	a2c4 <__hexnan+0x96>
    a27e:	9b04      	ldr	r3, [sp, #16]
    a280:	2b20      	cmp	r3, #32
    a282:	d817      	bhi.n	a2b4 <__hexnan+0x86>
    a284:	9b06      	ldr	r3, [sp, #24]
    a286:	9a01      	ldr	r2, [sp, #4]
    a288:	4293      	cmp	r3, r2
    a28a:	daec      	bge.n	a266 <__hexnan+0x38>
    a28c:	42bc      	cmp	r4, r7
    a28e:	d206      	bcs.n	a29e <__hexnan+0x70>
    a290:	2d07      	cmp	r5, #7
    a292:	dc04      	bgt.n	a29e <__hexnan+0x70>
    a294:	1c20      	adds	r0, r4, #0
    a296:	1c39      	adds	r1, r7, #0
    a298:	1c2a      	adds	r2, r5, #0
    a29a:	f7ff ffb6 	bl	a20a <L_shift>
    a29e:	9b00      	ldr	r3, [sp, #0]
    a2a0:	2508      	movs	r5, #8
    a2a2:	429c      	cmp	r4, r3
    a2a4:	d9df      	bls.n	a266 <__hexnan+0x38>
    a2a6:	2500      	movs	r5, #0
    a2a8:	9b01      	ldr	r3, [sp, #4]
    a2aa:	1f27      	subs	r7, r4, #4
    a2ac:	603d      	str	r5, [r7, #0]
    a2ae:	9306      	str	r3, [sp, #24]
    a2b0:	1c3c      	adds	r4, r7, #0
    a2b2:	e7d8      	b.n	a266 <__hexnan+0x38>
    a2b4:	9b04      	ldr	r3, [sp, #16]
    a2b6:	2b29      	cmp	r3, #41	; 0x29
    a2b8:	d14c      	bne.n	a354 <__hexnan+0x126>
    a2ba:	9b03      	ldr	r3, [sp, #12]
    a2bc:	9a07      	ldr	r2, [sp, #28]
    a2be:	3301      	adds	r3, #1
    a2c0:	6013      	str	r3, [r2, #0]
    a2c2:	e013      	b.n	a2ec <__hexnan+0xbe>
    a2c4:	9b01      	ldr	r3, [sp, #4]
    a2c6:	3501      	adds	r5, #1
    a2c8:	3301      	adds	r3, #1
    a2ca:	9301      	str	r3, [sp, #4]
    a2cc:	2d08      	cmp	r5, #8
    a2ce:	dd06      	ble.n	a2de <__hexnan+0xb0>
    a2d0:	9b00      	ldr	r3, [sp, #0]
    a2d2:	429c      	cmp	r4, r3
    a2d4:	d9c7      	bls.n	a266 <__hexnan+0x38>
    a2d6:	2300      	movs	r3, #0
    a2d8:	2501      	movs	r5, #1
    a2da:	3c04      	subs	r4, #4
    a2dc:	6023      	str	r3, [r4, #0]
    a2de:	6823      	ldr	r3, [r4, #0]
    a2e0:	011a      	lsls	r2, r3, #4
    a2e2:	230f      	movs	r3, #15
    a2e4:	4018      	ands	r0, r3
    a2e6:	4310      	orrs	r0, r2
    a2e8:	6020      	str	r0, [r4, #0]
    a2ea:	e7bc      	b.n	a266 <__hexnan+0x38>
    a2ec:	9b01      	ldr	r3, [sp, #4]
    a2ee:	2b00      	cmp	r3, #0
    a2f0:	d030      	beq.n	a354 <__hexnan+0x126>
    a2f2:	42bc      	cmp	r4, r7
    a2f4:	d206      	bcs.n	a304 <__hexnan+0xd6>
    a2f6:	2d07      	cmp	r5, #7
    a2f8:	dc04      	bgt.n	a304 <__hexnan+0xd6>
    a2fa:	1c20      	adds	r0, r4, #0
    a2fc:	1c39      	adds	r1, r7, #0
    a2fe:	1c2a      	adds	r2, r5, #0
    a300:	f7ff ff83 	bl	a20a <L_shift>
    a304:	9b00      	ldr	r3, [sp, #0]
    a306:	429c      	cmp	r4, r3
    a308:	d90a      	bls.n	a320 <__hexnan+0xf2>
    a30a:	3304      	adds	r3, #4
    a30c:	cc02      	ldmia	r4!, {r1}
    a30e:	1f1a      	subs	r2, r3, #4
    a310:	6011      	str	r1, [r2, #0]
    a312:	42a6      	cmp	r6, r4
    a314:	d2f9      	bcs.n	a30a <__hexnan+0xdc>
    a316:	2200      	movs	r2, #0
    a318:	c304      	stmia	r3!, {r2}
    a31a:	429e      	cmp	r6, r3
    a31c:	d2fb      	bcs.n	a316 <__hexnan+0xe8>
    a31e:	e00e      	b.n	a33e <__hexnan+0x110>
    a320:	9b05      	ldr	r3, [sp, #20]
    a322:	2b00      	cmp	r3, #0
    a324:	d00b      	beq.n	a33e <__hexnan+0x110>
    a326:	2220      	movs	r2, #32
    a328:	9905      	ldr	r1, [sp, #20]
    a32a:	9b02      	ldr	r3, [sp, #8]
    a32c:	1a52      	subs	r2, r2, r1
    a32e:	2101      	movs	r1, #1
    a330:	4249      	negs	r1, r1
    a332:	40d1      	lsrs	r1, r2
    a334:	1c0a      	adds	r2, r1, #0
    a336:	3b04      	subs	r3, #4
    a338:	6819      	ldr	r1, [r3, #0]
    a33a:	400a      	ands	r2, r1
    a33c:	601a      	str	r2, [r3, #0]
    a33e:	6833      	ldr	r3, [r6, #0]
    a340:	2b00      	cmp	r3, #0
    a342:	d109      	bne.n	a358 <__hexnan+0x12a>
    a344:	9b00      	ldr	r3, [sp, #0]
    a346:	429e      	cmp	r6, r3
    a348:	d102      	bne.n	a350 <__hexnan+0x122>
    a34a:	2301      	movs	r3, #1
    a34c:	6033      	str	r3, [r6, #0]
    a34e:	e003      	b.n	a358 <__hexnan+0x12a>
    a350:	3e04      	subs	r6, #4
    a352:	e7f4      	b.n	a33e <__hexnan+0x110>
    a354:	2004      	movs	r0, #4
    a356:	e000      	b.n	a35a <__hexnan+0x12c>
    a358:	2005      	movs	r0, #5
    a35a:	b009      	add	sp, #36	; 0x24
    a35c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0000a360 <_isatty_r>:
    a360:	b538      	push	{r3, r4, r5, lr}
    a362:	2300      	movs	r3, #0
    a364:	4c06      	ldr	r4, [pc, #24]	; (a380 <_isatty_r+0x20>)
    a366:	1c05      	adds	r5, r0, #0
    a368:	1c08      	adds	r0, r1, #0
    a36a:	6023      	str	r3, [r4, #0]
    a36c:	f7f8 fbc4 	bl	2af8 <_isatty>
    a370:	1c43      	adds	r3, r0, #1
    a372:	d103      	bne.n	a37c <_isatty_r+0x1c>
    a374:	6823      	ldr	r3, [r4, #0]
    a376:	2b00      	cmp	r3, #0
    a378:	d000      	beq.n	a37c <_isatty_r+0x1c>
    a37a:	602b      	str	r3, [r5, #0]
    a37c:	bd38      	pop	{r3, r4, r5, pc}
    a37e:	46c0      	nop			; (mov r8, r8)
    a380:	2000406c 	.word	0x2000406c

0000a384 <_localeconv_r>:
    a384:	4800      	ldr	r0, [pc, #0]	; (a388 <_localeconv_r+0x4>)
    a386:	4770      	bx	lr
    a388:	2000013c 	.word	0x2000013c

0000a38c <_lseek_r>:
    a38c:	b538      	push	{r3, r4, r5, lr}
    a38e:	1c05      	adds	r5, r0, #0
    a390:	2000      	movs	r0, #0
    a392:	4c07      	ldr	r4, [pc, #28]	; (a3b0 <_lseek_r+0x24>)
    a394:	6020      	str	r0, [r4, #0]
    a396:	1c08      	adds	r0, r1, #0
    a398:	1c11      	adds	r1, r2, #0
    a39a:	1c1a      	adds	r2, r3, #0
    a39c:	f7f8 fbc0 	bl	2b20 <_lseek>
    a3a0:	1c43      	adds	r3, r0, #1
    a3a2:	d103      	bne.n	a3ac <_lseek_r+0x20>
    a3a4:	6823      	ldr	r3, [r4, #0]
    a3a6:	2b00      	cmp	r3, #0
    a3a8:	d000      	beq.n	a3ac <_lseek_r+0x20>
    a3aa:	602b      	str	r3, [r5, #0]
    a3ac:	bd38      	pop	{r3, r4, r5, pc}
    a3ae:	46c0      	nop			; (mov r8, r8)
    a3b0:	2000406c 	.word	0x2000406c

0000a3b4 <memmove>:
    a3b4:	b510      	push	{r4, lr}
    a3b6:	4281      	cmp	r1, r0
    a3b8:	d208      	bcs.n	a3cc <memmove+0x18>
    a3ba:	188b      	adds	r3, r1, r2
    a3bc:	4298      	cmp	r0, r3
    a3be:	d205      	bcs.n	a3cc <memmove+0x18>
    a3c0:	1a9b      	subs	r3, r3, r2
    a3c2:	3a01      	subs	r2, #1
    a3c4:	d309      	bcc.n	a3da <memmove+0x26>
    a3c6:	5c99      	ldrb	r1, [r3, r2]
    a3c8:	5481      	strb	r1, [r0, r2]
    a3ca:	e7fa      	b.n	a3c2 <memmove+0xe>
    a3cc:	2300      	movs	r3, #0
    a3ce:	4293      	cmp	r3, r2
    a3d0:	d003      	beq.n	a3da <memmove+0x26>
    a3d2:	5ccc      	ldrb	r4, [r1, r3]
    a3d4:	54c4      	strb	r4, [r0, r3]
    a3d6:	3301      	adds	r3, #1
    a3d8:	e7f9      	b.n	a3ce <memmove+0x1a>
    a3da:	bd10      	pop	{r4, pc}

0000a3dc <_Balloc>:
    a3dc:	b570      	push	{r4, r5, r6, lr}
    a3de:	6a46      	ldr	r6, [r0, #36]	; 0x24
    a3e0:	1c04      	adds	r4, r0, #0
    a3e2:	1c0d      	adds	r5, r1, #0
    a3e4:	2e00      	cmp	r6, #0
    a3e6:	d107      	bne.n	a3f8 <_Balloc+0x1c>
    a3e8:	2010      	movs	r0, #16
    a3ea:	f7fc f861 	bl	64b0 <malloc>
    a3ee:	6260      	str	r0, [r4, #36]	; 0x24
    a3f0:	6046      	str	r6, [r0, #4]
    a3f2:	6086      	str	r6, [r0, #8]
    a3f4:	6006      	str	r6, [r0, #0]
    a3f6:	60c6      	str	r6, [r0, #12]
    a3f8:	6a66      	ldr	r6, [r4, #36]	; 0x24
    a3fa:	68f3      	ldr	r3, [r6, #12]
    a3fc:	2b00      	cmp	r3, #0
    a3fe:	d009      	beq.n	a414 <_Balloc+0x38>
    a400:	6a62      	ldr	r2, [r4, #36]	; 0x24
    a402:	00ab      	lsls	r3, r5, #2
    a404:	68d2      	ldr	r2, [r2, #12]
    a406:	18d3      	adds	r3, r2, r3
    a408:	6818      	ldr	r0, [r3, #0]
    a40a:	2800      	cmp	r0, #0
    a40c:	d00e      	beq.n	a42c <_Balloc+0x50>
    a40e:	6802      	ldr	r2, [r0, #0]
    a410:	601a      	str	r2, [r3, #0]
    a412:	e017      	b.n	a444 <_Balloc+0x68>
    a414:	1c20      	adds	r0, r4, #0
    a416:	2104      	movs	r1, #4
    a418:	2221      	movs	r2, #33	; 0x21
    a41a:	f000 fbe2 	bl	abe2 <_calloc_r>
    a41e:	6a63      	ldr	r3, [r4, #36]	; 0x24
    a420:	60f0      	str	r0, [r6, #12]
    a422:	68db      	ldr	r3, [r3, #12]
    a424:	2b00      	cmp	r3, #0
    a426:	d1eb      	bne.n	a400 <_Balloc+0x24>
    a428:	2000      	movs	r0, #0
    a42a:	e00e      	b.n	a44a <_Balloc+0x6e>
    a42c:	2101      	movs	r1, #1
    a42e:	1c0e      	adds	r6, r1, #0
    a430:	40ae      	lsls	r6, r5
    a432:	1d72      	adds	r2, r6, #5
    a434:	0092      	lsls	r2, r2, #2
    a436:	1c20      	adds	r0, r4, #0
    a438:	f000 fbd3 	bl	abe2 <_calloc_r>
    a43c:	2800      	cmp	r0, #0
    a43e:	d0f3      	beq.n	a428 <_Balloc+0x4c>
    a440:	6045      	str	r5, [r0, #4]
    a442:	6086      	str	r6, [r0, #8]
    a444:	2300      	movs	r3, #0
    a446:	6103      	str	r3, [r0, #16]
    a448:	60c3      	str	r3, [r0, #12]
    a44a:	bd70      	pop	{r4, r5, r6, pc}

0000a44c <_Bfree>:
    a44c:	b570      	push	{r4, r5, r6, lr}
    a44e:	6a45      	ldr	r5, [r0, #36]	; 0x24
    a450:	1c06      	adds	r6, r0, #0
    a452:	1c0c      	adds	r4, r1, #0
    a454:	2d00      	cmp	r5, #0
    a456:	d107      	bne.n	a468 <_Bfree+0x1c>
    a458:	2010      	movs	r0, #16
    a45a:	f7fc f829 	bl	64b0 <malloc>
    a45e:	6270      	str	r0, [r6, #36]	; 0x24
    a460:	6045      	str	r5, [r0, #4]
    a462:	6085      	str	r5, [r0, #8]
    a464:	6005      	str	r5, [r0, #0]
    a466:	60c5      	str	r5, [r0, #12]
    a468:	2c00      	cmp	r4, #0
    a46a:	d007      	beq.n	a47c <_Bfree+0x30>
    a46c:	6a72      	ldr	r2, [r6, #36]	; 0x24
    a46e:	6863      	ldr	r3, [r4, #4]
    a470:	68d2      	ldr	r2, [r2, #12]
    a472:	009b      	lsls	r3, r3, #2
    a474:	18d3      	adds	r3, r2, r3
    a476:	681a      	ldr	r2, [r3, #0]
    a478:	6022      	str	r2, [r4, #0]
    a47a:	601c      	str	r4, [r3, #0]
    a47c:	bd70      	pop	{r4, r5, r6, pc}

0000a47e <__multadd>:
    a47e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    a480:	1c1e      	adds	r6, r3, #0
    a482:	2314      	movs	r3, #20
    a484:	469c      	mov	ip, r3
    a486:	1c07      	adds	r7, r0, #0
    a488:	1c0c      	adds	r4, r1, #0
    a48a:	2000      	movs	r0, #0
    a48c:	690d      	ldr	r5, [r1, #16]
    a48e:	448c      	add	ip, r1
    a490:	4663      	mov	r3, ip
    a492:	8819      	ldrh	r1, [r3, #0]
    a494:	681b      	ldr	r3, [r3, #0]
    a496:	4351      	muls	r1, r2
    a498:	0c1b      	lsrs	r3, r3, #16
    a49a:	4353      	muls	r3, r2
    a49c:	1989      	adds	r1, r1, r6
    a49e:	0c0e      	lsrs	r6, r1, #16
    a4a0:	18f3      	adds	r3, r6, r3
    a4a2:	b289      	uxth	r1, r1
    a4a4:	0c1e      	lsrs	r6, r3, #16
    a4a6:	041b      	lsls	r3, r3, #16
    a4a8:	185b      	adds	r3, r3, r1
    a4aa:	4661      	mov	r1, ip
    a4ac:	3001      	adds	r0, #1
    a4ae:	c108      	stmia	r1!, {r3}
    a4b0:	468c      	mov	ip, r1
    a4b2:	42a8      	cmp	r0, r5
    a4b4:	dbec      	blt.n	a490 <__multadd+0x12>
    a4b6:	2e00      	cmp	r6, #0
    a4b8:	d01b      	beq.n	a4f2 <__multadd+0x74>
    a4ba:	68a3      	ldr	r3, [r4, #8]
    a4bc:	429d      	cmp	r5, r3
    a4be:	db12      	blt.n	a4e6 <__multadd+0x68>
    a4c0:	6863      	ldr	r3, [r4, #4]
    a4c2:	1c38      	adds	r0, r7, #0
    a4c4:	1c59      	adds	r1, r3, #1
    a4c6:	f7ff ff89 	bl	a3dc <_Balloc>
    a4ca:	1c21      	adds	r1, r4, #0
    a4cc:	6923      	ldr	r3, [r4, #16]
    a4ce:	9001      	str	r0, [sp, #4]
    a4d0:	1c9a      	adds	r2, r3, #2
    a4d2:	310c      	adds	r1, #12
    a4d4:	0092      	lsls	r2, r2, #2
    a4d6:	300c      	adds	r0, #12
    a4d8:	f7fc f809 	bl	64ee <memcpy>
    a4dc:	1c21      	adds	r1, r4, #0
    a4de:	1c38      	adds	r0, r7, #0
    a4e0:	f7ff ffb4 	bl	a44c <_Bfree>
    a4e4:	9c01      	ldr	r4, [sp, #4]
    a4e6:	1d2b      	adds	r3, r5, #4
    a4e8:	009b      	lsls	r3, r3, #2
    a4ea:	18e3      	adds	r3, r4, r3
    a4ec:	3501      	adds	r5, #1
    a4ee:	605e      	str	r6, [r3, #4]
    a4f0:	6125      	str	r5, [r4, #16]
    a4f2:	1c20      	adds	r0, r4, #0
    a4f4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0000a4f6 <__s2b>:
    a4f6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    a4f8:	1c06      	adds	r6, r0, #0
    a4fa:	1c18      	adds	r0, r3, #0
    a4fc:	1c0c      	adds	r4, r1, #0
    a4fe:	3008      	adds	r0, #8
    a500:	2109      	movs	r1, #9
    a502:	9301      	str	r3, [sp, #4]
    a504:	1c15      	adds	r5, r2, #0
    a506:	f7fb fa7b 	bl	5a00 <__aeabi_idiv>
    a50a:	2301      	movs	r3, #1
    a50c:	2100      	movs	r1, #0
    a50e:	4298      	cmp	r0, r3
    a510:	dd02      	ble.n	a518 <__s2b+0x22>
    a512:	005b      	lsls	r3, r3, #1
    a514:	3101      	adds	r1, #1
    a516:	e7fa      	b.n	a50e <__s2b+0x18>
    a518:	1c30      	adds	r0, r6, #0
    a51a:	f7ff ff5f 	bl	a3dc <_Balloc>
    a51e:	9b08      	ldr	r3, [sp, #32]
    a520:	1c01      	adds	r1, r0, #0
    a522:	6143      	str	r3, [r0, #20]
    a524:	2301      	movs	r3, #1
    a526:	6103      	str	r3, [r0, #16]
    a528:	2d09      	cmp	r5, #9
    a52a:	dd12      	ble.n	a552 <__s2b+0x5c>
    a52c:	1c23      	adds	r3, r4, #0
    a52e:	3309      	adds	r3, #9
    a530:	1c1f      	adds	r7, r3, #0
    a532:	9300      	str	r3, [sp, #0]
    a534:	1964      	adds	r4, r4, r5
    a536:	783b      	ldrb	r3, [r7, #0]
    a538:	1c30      	adds	r0, r6, #0
    a53a:	3b30      	subs	r3, #48	; 0x30
    a53c:	220a      	movs	r2, #10
    a53e:	f7ff ff9e 	bl	a47e <__multadd>
    a542:	3701      	adds	r7, #1
    a544:	1c01      	adds	r1, r0, #0
    a546:	42a7      	cmp	r7, r4
    a548:	d1f5      	bne.n	a536 <__s2b+0x40>
    a54a:	9b00      	ldr	r3, [sp, #0]
    a54c:	195c      	adds	r4, r3, r5
    a54e:	3c08      	subs	r4, #8
    a550:	e001      	b.n	a556 <__s2b+0x60>
    a552:	2509      	movs	r5, #9
    a554:	340a      	adds	r4, #10
    a556:	1c2f      	adds	r7, r5, #0
    a558:	9b01      	ldr	r3, [sp, #4]
    a55a:	429f      	cmp	r7, r3
    a55c:	da09      	bge.n	a572 <__s2b+0x7c>
    a55e:	1b63      	subs	r3, r4, r5
    a560:	5ddb      	ldrb	r3, [r3, r7]
    a562:	1c30      	adds	r0, r6, #0
    a564:	3b30      	subs	r3, #48	; 0x30
    a566:	220a      	movs	r2, #10
    a568:	f7ff ff89 	bl	a47e <__multadd>
    a56c:	3701      	adds	r7, #1
    a56e:	1c01      	adds	r1, r0, #0
    a570:	e7f2      	b.n	a558 <__s2b+0x62>
    a572:	1c08      	adds	r0, r1, #0
    a574:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0000a576 <__hi0bits>:
    a576:	2200      	movs	r2, #0
    a578:	1c03      	adds	r3, r0, #0
    a57a:	0c01      	lsrs	r1, r0, #16
    a57c:	4291      	cmp	r1, r2
    a57e:	d101      	bne.n	a584 <__hi0bits+0xe>
    a580:	0403      	lsls	r3, r0, #16
    a582:	3210      	adds	r2, #16
    a584:	0e19      	lsrs	r1, r3, #24
    a586:	d101      	bne.n	a58c <__hi0bits+0x16>
    a588:	3208      	adds	r2, #8
    a58a:	021b      	lsls	r3, r3, #8
    a58c:	0f19      	lsrs	r1, r3, #28
    a58e:	d101      	bne.n	a594 <__hi0bits+0x1e>
    a590:	3204      	adds	r2, #4
    a592:	011b      	lsls	r3, r3, #4
    a594:	0f99      	lsrs	r1, r3, #30
    a596:	d101      	bne.n	a59c <__hi0bits+0x26>
    a598:	3202      	adds	r2, #2
    a59a:	009b      	lsls	r3, r3, #2
    a59c:	1c10      	adds	r0, r2, #0
    a59e:	2b00      	cmp	r3, #0
    a5a0:	db03      	blt.n	a5aa <__hi0bits+0x34>
    a5a2:	2020      	movs	r0, #32
    a5a4:	005b      	lsls	r3, r3, #1
    a5a6:	d500      	bpl.n	a5aa <__hi0bits+0x34>
    a5a8:	1c50      	adds	r0, r2, #1
    a5aa:	4770      	bx	lr

0000a5ac <__lo0bits>:
    a5ac:	2207      	movs	r2, #7
    a5ae:	6803      	ldr	r3, [r0, #0]
    a5b0:	b510      	push	{r4, lr}
    a5b2:	1c01      	adds	r1, r0, #0
    a5b4:	401a      	ands	r2, r3
    a5b6:	d00c      	beq.n	a5d2 <__lo0bits+0x26>
    a5b8:	2401      	movs	r4, #1
    a5ba:	2000      	movs	r0, #0
    a5bc:	4223      	tst	r3, r4
    a5be:	d123      	bne.n	a608 <__lo0bits+0x5c>
    a5c0:	2202      	movs	r2, #2
    a5c2:	4213      	tst	r3, r2
    a5c4:	d003      	beq.n	a5ce <__lo0bits+0x22>
    a5c6:	40e3      	lsrs	r3, r4
    a5c8:	1c20      	adds	r0, r4, #0
    a5ca:	600b      	str	r3, [r1, #0]
    a5cc:	e01c      	b.n	a608 <__lo0bits+0x5c>
    a5ce:	089b      	lsrs	r3, r3, #2
    a5d0:	e018      	b.n	a604 <__lo0bits+0x58>
    a5d2:	b298      	uxth	r0, r3
    a5d4:	2800      	cmp	r0, #0
    a5d6:	d101      	bne.n	a5dc <__lo0bits+0x30>
    a5d8:	2210      	movs	r2, #16
    a5da:	0c1b      	lsrs	r3, r3, #16
    a5dc:	b2d8      	uxtb	r0, r3
    a5de:	2800      	cmp	r0, #0
    a5e0:	d101      	bne.n	a5e6 <__lo0bits+0x3a>
    a5e2:	3208      	adds	r2, #8
    a5e4:	0a1b      	lsrs	r3, r3, #8
    a5e6:	0718      	lsls	r0, r3, #28
    a5e8:	d101      	bne.n	a5ee <__lo0bits+0x42>
    a5ea:	3204      	adds	r2, #4
    a5ec:	091b      	lsrs	r3, r3, #4
    a5ee:	0798      	lsls	r0, r3, #30
    a5f0:	d101      	bne.n	a5f6 <__lo0bits+0x4a>
    a5f2:	3202      	adds	r2, #2
    a5f4:	089b      	lsrs	r3, r3, #2
    a5f6:	07d8      	lsls	r0, r3, #31
    a5f8:	d404      	bmi.n	a604 <__lo0bits+0x58>
    a5fa:	085b      	lsrs	r3, r3, #1
    a5fc:	2020      	movs	r0, #32
    a5fe:	2b00      	cmp	r3, #0
    a600:	d002      	beq.n	a608 <__lo0bits+0x5c>
    a602:	3201      	adds	r2, #1
    a604:	1c10      	adds	r0, r2, #0
    a606:	600b      	str	r3, [r1, #0]
    a608:	bd10      	pop	{r4, pc}

0000a60a <__i2b>:
    a60a:	b510      	push	{r4, lr}
    a60c:	1c0c      	adds	r4, r1, #0
    a60e:	2101      	movs	r1, #1
    a610:	f7ff fee4 	bl	a3dc <_Balloc>
    a614:	2301      	movs	r3, #1
    a616:	6144      	str	r4, [r0, #20]
    a618:	6103      	str	r3, [r0, #16]
    a61a:	bd10      	pop	{r4, pc}

0000a61c <__multiply>:
    a61c:	b5f0      	push	{r4, r5, r6, r7, lr}
    a61e:	690b      	ldr	r3, [r1, #16]
    a620:	1c14      	adds	r4, r2, #0
    a622:	6912      	ldr	r2, [r2, #16]
    a624:	b089      	sub	sp, #36	; 0x24
    a626:	1c0d      	adds	r5, r1, #0
    a628:	4293      	cmp	r3, r2
    a62a:	da01      	bge.n	a630 <__multiply+0x14>
    a62c:	1c25      	adds	r5, r4, #0
    a62e:	1c0c      	adds	r4, r1, #0
    a630:	692f      	ldr	r7, [r5, #16]
    a632:	6926      	ldr	r6, [r4, #16]
    a634:	68aa      	ldr	r2, [r5, #8]
    a636:	19bb      	adds	r3, r7, r6
    a638:	6869      	ldr	r1, [r5, #4]
    a63a:	9300      	str	r3, [sp, #0]
    a63c:	4293      	cmp	r3, r2
    a63e:	dd00      	ble.n	a642 <__multiply+0x26>
    a640:	3101      	adds	r1, #1
    a642:	f7ff fecb 	bl	a3dc <_Balloc>
    a646:	1c01      	adds	r1, r0, #0
    a648:	9b00      	ldr	r3, [sp, #0]
    a64a:	3114      	adds	r1, #20
    a64c:	4684      	mov	ip, r0
    a64e:	0098      	lsls	r0, r3, #2
    a650:	1c0b      	adds	r3, r1, #0
    a652:	1808      	adds	r0, r1, r0
    a654:	4283      	cmp	r3, r0
    a656:	d202      	bcs.n	a65e <__multiply+0x42>
    a658:	2200      	movs	r2, #0
    a65a:	c304      	stmia	r3!, {r2}
    a65c:	e7fa      	b.n	a654 <__multiply+0x38>
    a65e:	3514      	adds	r5, #20
    a660:	00bf      	lsls	r7, r7, #2
    a662:	19eb      	adds	r3, r5, r7
    a664:	3414      	adds	r4, #20
    a666:	00b6      	lsls	r6, r6, #2
    a668:	9304      	str	r3, [sp, #16]
    a66a:	19a3      	adds	r3, r4, r6
    a66c:	9502      	str	r5, [sp, #8]
    a66e:	9306      	str	r3, [sp, #24]
    a670:	9b06      	ldr	r3, [sp, #24]
    a672:	429c      	cmp	r4, r3
    a674:	d256      	bcs.n	a724 <__multiply+0x108>
    a676:	8823      	ldrh	r3, [r4, #0]
    a678:	9303      	str	r3, [sp, #12]
    a67a:	2b00      	cmp	r3, #0
    a67c:	d022      	beq.n	a6c4 <__multiply+0xa8>
    a67e:	1c0e      	adds	r6, r1, #0
    a680:	2700      	movs	r7, #0
    a682:	9b02      	ldr	r3, [sp, #8]
    a684:	9301      	str	r3, [sp, #4]
    a686:	9b01      	ldr	r3, [sp, #4]
    a688:	9d03      	ldr	r5, [sp, #12]
    a68a:	cb04      	ldmia	r3!, {r2}
    a68c:	9605      	str	r6, [sp, #20]
    a68e:	9301      	str	r3, [sp, #4]
    a690:	8833      	ldrh	r3, [r6, #0]
    a692:	9307      	str	r3, [sp, #28]
    a694:	b293      	uxth	r3, r2
    a696:	436b      	muls	r3, r5
    a698:	9d07      	ldr	r5, [sp, #28]
    a69a:	0c12      	lsrs	r2, r2, #16
    a69c:	18eb      	adds	r3, r5, r3
    a69e:	6835      	ldr	r5, [r6, #0]
    a6a0:	19db      	adds	r3, r3, r7
    a6a2:	0c2f      	lsrs	r7, r5, #16
    a6a4:	9d03      	ldr	r5, [sp, #12]
    a6a6:	436a      	muls	r2, r5
    a6a8:	18ba      	adds	r2, r7, r2
    a6aa:	0c1f      	lsrs	r7, r3, #16
    a6ac:	19d2      	adds	r2, r2, r7
    a6ae:	0c17      	lsrs	r7, r2, #16
    a6b0:	b29b      	uxth	r3, r3
    a6b2:	0412      	lsls	r2, r2, #16
    a6b4:	4313      	orrs	r3, r2
    a6b6:	c608      	stmia	r6!, {r3}
    a6b8:	9a01      	ldr	r2, [sp, #4]
    a6ba:	9b04      	ldr	r3, [sp, #16]
    a6bc:	429a      	cmp	r2, r3
    a6be:	d3e2      	bcc.n	a686 <__multiply+0x6a>
    a6c0:	9b05      	ldr	r3, [sp, #20]
    a6c2:	605f      	str	r7, [r3, #4]
    a6c4:	6823      	ldr	r3, [r4, #0]
    a6c6:	0c1b      	lsrs	r3, r3, #16
    a6c8:	9301      	str	r3, [sp, #4]
    a6ca:	d021      	beq.n	a710 <__multiply+0xf4>
    a6cc:	2200      	movs	r2, #0
    a6ce:	1c0d      	adds	r5, r1, #0
    a6d0:	680b      	ldr	r3, [r1, #0]
    a6d2:	9f02      	ldr	r7, [sp, #8]
    a6d4:	9203      	str	r2, [sp, #12]
    a6d6:	883e      	ldrh	r6, [r7, #0]
    a6d8:	9a01      	ldr	r2, [sp, #4]
    a6da:	b29b      	uxth	r3, r3
    a6dc:	4356      	muls	r6, r2
    a6de:	682a      	ldr	r2, [r5, #0]
    a6e0:	9505      	str	r5, [sp, #20]
    a6e2:	0c12      	lsrs	r2, r2, #16
    a6e4:	18b2      	adds	r2, r6, r2
    a6e6:	9e03      	ldr	r6, [sp, #12]
    a6e8:	1992      	adds	r2, r2, r6
    a6ea:	0416      	lsls	r6, r2, #16
    a6ec:	4333      	orrs	r3, r6
    a6ee:	602b      	str	r3, [r5, #0]
    a6f0:	cf08      	ldmia	r7!, {r3}
    a6f2:	9e01      	ldr	r6, [sp, #4]
    a6f4:	0c1b      	lsrs	r3, r3, #16
    a6f6:	4373      	muls	r3, r6
    a6f8:	88ae      	ldrh	r6, [r5, #4]
    a6fa:	0c12      	lsrs	r2, r2, #16
    a6fc:	199b      	adds	r3, r3, r6
    a6fe:	189b      	adds	r3, r3, r2
    a700:	0c1a      	lsrs	r2, r3, #16
    a702:	9203      	str	r2, [sp, #12]
    a704:	9a04      	ldr	r2, [sp, #16]
    a706:	3504      	adds	r5, #4
    a708:	42ba      	cmp	r2, r7
    a70a:	d8e4      	bhi.n	a6d6 <__multiply+0xba>
    a70c:	9a05      	ldr	r2, [sp, #20]
    a70e:	6053      	str	r3, [r2, #4]
    a710:	3404      	adds	r4, #4
    a712:	3104      	adds	r1, #4
    a714:	e7ac      	b.n	a670 <__multiply+0x54>
    a716:	3804      	subs	r0, #4
    a718:	6803      	ldr	r3, [r0, #0]
    a71a:	2b00      	cmp	r3, #0
    a71c:	d105      	bne.n	a72a <__multiply+0x10e>
    a71e:	9b00      	ldr	r3, [sp, #0]
    a720:	3b01      	subs	r3, #1
    a722:	9300      	str	r3, [sp, #0]
    a724:	9b00      	ldr	r3, [sp, #0]
    a726:	2b00      	cmp	r3, #0
    a728:	dcf5      	bgt.n	a716 <__multiply+0xfa>
    a72a:	4663      	mov	r3, ip
    a72c:	4660      	mov	r0, ip
    a72e:	9a00      	ldr	r2, [sp, #0]
    a730:	611a      	str	r2, [r3, #16]
    a732:	b009      	add	sp, #36	; 0x24
    a734:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0000a738 <__pow5mult>:
    a738:	2303      	movs	r3, #3
    a73a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    a73c:	4013      	ands	r3, r2
    a73e:	1c05      	adds	r5, r0, #0
    a740:	1c0e      	adds	r6, r1, #0
    a742:	1c14      	adds	r4, r2, #0
    a744:	2b00      	cmp	r3, #0
    a746:	d007      	beq.n	a758 <__pow5mult+0x20>
    a748:	4a22      	ldr	r2, [pc, #136]	; (a7d4 <__pow5mult+0x9c>)
    a74a:	3b01      	subs	r3, #1
    a74c:	009b      	lsls	r3, r3, #2
    a74e:	589a      	ldr	r2, [r3, r2]
    a750:	2300      	movs	r3, #0
    a752:	f7ff fe94 	bl	a47e <__multadd>
    a756:	1c06      	adds	r6, r0, #0
    a758:	10a3      	asrs	r3, r4, #2
    a75a:	9301      	str	r3, [sp, #4]
    a75c:	d037      	beq.n	a7ce <__pow5mult+0x96>
    a75e:	6a6c      	ldr	r4, [r5, #36]	; 0x24
    a760:	2c00      	cmp	r4, #0
    a762:	d107      	bne.n	a774 <__pow5mult+0x3c>
    a764:	2010      	movs	r0, #16
    a766:	f7fb fea3 	bl	64b0 <malloc>
    a76a:	6268      	str	r0, [r5, #36]	; 0x24
    a76c:	6044      	str	r4, [r0, #4]
    a76e:	6084      	str	r4, [r0, #8]
    a770:	6004      	str	r4, [r0, #0]
    a772:	60c4      	str	r4, [r0, #12]
    a774:	6a6f      	ldr	r7, [r5, #36]	; 0x24
    a776:	68bc      	ldr	r4, [r7, #8]
    a778:	2c00      	cmp	r4, #0
    a77a:	d110      	bne.n	a79e <__pow5mult+0x66>
    a77c:	1c28      	adds	r0, r5, #0
    a77e:	4916      	ldr	r1, [pc, #88]	; (a7d8 <__pow5mult+0xa0>)
    a780:	f7ff ff43 	bl	a60a <__i2b>
    a784:	2300      	movs	r3, #0
    a786:	60b8      	str	r0, [r7, #8]
    a788:	1c04      	adds	r4, r0, #0
    a78a:	6003      	str	r3, [r0, #0]
    a78c:	e007      	b.n	a79e <__pow5mult+0x66>
    a78e:	9b01      	ldr	r3, [sp, #4]
    a790:	105b      	asrs	r3, r3, #1
    a792:	9301      	str	r3, [sp, #4]
    a794:	d01b      	beq.n	a7ce <__pow5mult+0x96>
    a796:	6820      	ldr	r0, [r4, #0]
    a798:	2800      	cmp	r0, #0
    a79a:	d00f      	beq.n	a7bc <__pow5mult+0x84>
    a79c:	1c04      	adds	r4, r0, #0
    a79e:	9b01      	ldr	r3, [sp, #4]
    a7a0:	07db      	lsls	r3, r3, #31
    a7a2:	d5f4      	bpl.n	a78e <__pow5mult+0x56>
    a7a4:	1c31      	adds	r1, r6, #0
    a7a6:	1c22      	adds	r2, r4, #0
    a7a8:	1c28      	adds	r0, r5, #0
    a7aa:	f7ff ff37 	bl	a61c <__multiply>
    a7ae:	1c07      	adds	r7, r0, #0
    a7b0:	1c31      	adds	r1, r6, #0
    a7b2:	1c28      	adds	r0, r5, #0
    a7b4:	f7ff fe4a 	bl	a44c <_Bfree>
    a7b8:	1c3e      	adds	r6, r7, #0
    a7ba:	e7e8      	b.n	a78e <__pow5mult+0x56>
    a7bc:	1c28      	adds	r0, r5, #0
    a7be:	1c21      	adds	r1, r4, #0
    a7c0:	1c22      	adds	r2, r4, #0
    a7c2:	f7ff ff2b 	bl	a61c <__multiply>
    a7c6:	2300      	movs	r3, #0
    a7c8:	6020      	str	r0, [r4, #0]
    a7ca:	6003      	str	r3, [r0, #0]
    a7cc:	e7e6      	b.n	a79c <__pow5mult+0x64>
    a7ce:	1c30      	adds	r0, r6, #0
    a7d0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    a7d2:	46c0      	nop			; (mov r8, r8)
    a7d4:	0000e348 	.word	0x0000e348
    a7d8:	00000271 	.word	0x00000271

0000a7dc <__lshift>:
    a7dc:	b5f0      	push	{r4, r5, r6, r7, lr}
    a7de:	1c0c      	adds	r4, r1, #0
    a7e0:	1c17      	adds	r7, r2, #0
    a7e2:	6923      	ldr	r3, [r4, #16]
    a7e4:	1155      	asrs	r5, r2, #5
    a7e6:	b085      	sub	sp, #20
    a7e8:	18eb      	adds	r3, r5, r3
    a7ea:	9301      	str	r3, [sp, #4]
    a7ec:	3301      	adds	r3, #1
    a7ee:	9300      	str	r3, [sp, #0]
    a7f0:	6849      	ldr	r1, [r1, #4]
    a7f2:	68a3      	ldr	r3, [r4, #8]
    a7f4:	9002      	str	r0, [sp, #8]
    a7f6:	9a00      	ldr	r2, [sp, #0]
    a7f8:	429a      	cmp	r2, r3
    a7fa:	dd02      	ble.n	a802 <__lshift+0x26>
    a7fc:	3101      	adds	r1, #1
    a7fe:	005b      	lsls	r3, r3, #1
    a800:	e7f9      	b.n	a7f6 <__lshift+0x1a>
    a802:	9802      	ldr	r0, [sp, #8]
    a804:	f7ff fdea 	bl	a3dc <_Balloc>
    a808:	1c02      	adds	r2, r0, #0
    a80a:	1c06      	adds	r6, r0, #0
    a80c:	2300      	movs	r3, #0
    a80e:	3214      	adds	r2, #20
    a810:	42ab      	cmp	r3, r5
    a812:	da04      	bge.n	a81e <__lshift+0x42>
    a814:	2000      	movs	r0, #0
    a816:	0099      	lsls	r1, r3, #2
    a818:	5050      	str	r0, [r2, r1]
    a81a:	3301      	adds	r3, #1
    a81c:	e7f8      	b.n	a810 <__lshift+0x34>
    a81e:	43eb      	mvns	r3, r5
    a820:	17db      	asrs	r3, r3, #31
    a822:	401d      	ands	r5, r3
    a824:	1c23      	adds	r3, r4, #0
    a826:	00ad      	lsls	r5, r5, #2
    a828:	1955      	adds	r5, r2, r5
    a82a:	6922      	ldr	r2, [r4, #16]
    a82c:	3314      	adds	r3, #20
    a82e:	0092      	lsls	r2, r2, #2
    a830:	189a      	adds	r2, r3, r2
    a832:	4694      	mov	ip, r2
    a834:	221f      	movs	r2, #31
    a836:	4017      	ands	r7, r2
    a838:	d014      	beq.n	a864 <__lshift+0x88>
    a83a:	3201      	adds	r2, #1
    a83c:	1bd2      	subs	r2, r2, r7
    a83e:	9203      	str	r2, [sp, #12]
    a840:	2200      	movs	r2, #0
    a842:	6819      	ldr	r1, [r3, #0]
    a844:	1c28      	adds	r0, r5, #0
    a846:	40b9      	lsls	r1, r7
    a848:	430a      	orrs	r2, r1
    a84a:	c504      	stmia	r5!, {r2}
    a84c:	cb04      	ldmia	r3!, {r2}
    a84e:	9903      	ldr	r1, [sp, #12]
    a850:	40ca      	lsrs	r2, r1
    a852:	459c      	cmp	ip, r3
    a854:	d8f5      	bhi.n	a842 <__lshift+0x66>
    a856:	6042      	str	r2, [r0, #4]
    a858:	2a00      	cmp	r2, #0
    a85a:	d007      	beq.n	a86c <__lshift+0x90>
    a85c:	9b01      	ldr	r3, [sp, #4]
    a85e:	3302      	adds	r3, #2
    a860:	9300      	str	r3, [sp, #0]
    a862:	e003      	b.n	a86c <__lshift+0x90>
    a864:	cb04      	ldmia	r3!, {r2}
    a866:	c504      	stmia	r5!, {r2}
    a868:	459c      	cmp	ip, r3
    a86a:	d8fb      	bhi.n	a864 <__lshift+0x88>
    a86c:	9b00      	ldr	r3, [sp, #0]
    a86e:	9802      	ldr	r0, [sp, #8]
    a870:	3b01      	subs	r3, #1
    a872:	6133      	str	r3, [r6, #16]
    a874:	1c21      	adds	r1, r4, #0
    a876:	f7ff fde9 	bl	a44c <_Bfree>
    a87a:	1c30      	adds	r0, r6, #0
    a87c:	b005      	add	sp, #20
    a87e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000a880 <__mcmp>:
    a880:	6903      	ldr	r3, [r0, #16]
    a882:	690a      	ldr	r2, [r1, #16]
    a884:	b510      	push	{r4, lr}
    a886:	1a9b      	subs	r3, r3, r2
    a888:	1c04      	adds	r4, r0, #0
    a88a:	1e18      	subs	r0, r3, #0
    a88c:	d112      	bne.n	a8b4 <__mcmp+0x34>
    a88e:	0093      	lsls	r3, r2, #2
    a890:	3414      	adds	r4, #20
    a892:	3114      	adds	r1, #20
    a894:	18e2      	adds	r2, r4, r3
    a896:	18c9      	adds	r1, r1, r3
    a898:	3a04      	subs	r2, #4
    a89a:	3904      	subs	r1, #4
    a89c:	6813      	ldr	r3, [r2, #0]
    a89e:	6808      	ldr	r0, [r1, #0]
    a8a0:	4283      	cmp	r3, r0
    a8a2:	d004      	beq.n	a8ae <__mcmp+0x2e>
    a8a4:	4283      	cmp	r3, r0
    a8a6:	419b      	sbcs	r3, r3
    a8a8:	2001      	movs	r0, #1
    a8aa:	4318      	orrs	r0, r3
    a8ac:	e002      	b.n	a8b4 <__mcmp+0x34>
    a8ae:	42a2      	cmp	r2, r4
    a8b0:	d8f2      	bhi.n	a898 <__mcmp+0x18>
    a8b2:	2000      	movs	r0, #0
    a8b4:	bd10      	pop	{r4, pc}

0000a8b6 <__mdiff>:
    a8b6:	b5f0      	push	{r4, r5, r6, r7, lr}
    a8b8:	1c07      	adds	r7, r0, #0
    a8ba:	b085      	sub	sp, #20
    a8bc:	1c08      	adds	r0, r1, #0
    a8be:	1c0c      	adds	r4, r1, #0
    a8c0:	1c11      	adds	r1, r2, #0
    a8c2:	1c15      	adds	r5, r2, #0
    a8c4:	f7ff ffdc 	bl	a880 <__mcmp>
    a8c8:	1e06      	subs	r6, r0, #0
    a8ca:	d107      	bne.n	a8dc <__mdiff+0x26>
    a8cc:	1c38      	adds	r0, r7, #0
    a8ce:	1c31      	adds	r1, r6, #0
    a8d0:	f7ff fd84 	bl	a3dc <_Balloc>
    a8d4:	2301      	movs	r3, #1
    a8d6:	6146      	str	r6, [r0, #20]
    a8d8:	6103      	str	r3, [r0, #16]
    a8da:	e055      	b.n	a988 <__mdiff+0xd2>
    a8dc:	2300      	movs	r3, #0
    a8de:	9301      	str	r3, [sp, #4]
    a8e0:	4298      	cmp	r0, r3
    a8e2:	da04      	bge.n	a8ee <__mdiff+0x38>
    a8e4:	1c23      	adds	r3, r4, #0
    a8e6:	1c2c      	adds	r4, r5, #0
    a8e8:	1c1d      	adds	r5, r3, #0
    a8ea:	2301      	movs	r3, #1
    a8ec:	9301      	str	r3, [sp, #4]
    a8ee:	1c38      	adds	r0, r7, #0
    a8f0:	6861      	ldr	r1, [r4, #4]
    a8f2:	f7ff fd73 	bl	a3dc <_Balloc>
    a8f6:	9b01      	ldr	r3, [sp, #4]
    a8f8:	6926      	ldr	r6, [r4, #16]
    a8fa:	1c2f      	adds	r7, r5, #0
    a8fc:	60c3      	str	r3, [r0, #12]
    a8fe:	3414      	adds	r4, #20
    a900:	00b3      	lsls	r3, r6, #2
    a902:	18e3      	adds	r3, r4, r3
    a904:	1c02      	adds	r2, r0, #0
    a906:	9302      	str	r3, [sp, #8]
    a908:	692b      	ldr	r3, [r5, #16]
    a90a:	2500      	movs	r5, #0
    a90c:	3714      	adds	r7, #20
    a90e:	009b      	lsls	r3, r3, #2
    a910:	18fb      	adds	r3, r7, r3
    a912:	9303      	str	r3, [sp, #12]
    a914:	3214      	adds	r2, #20
    a916:	cc08      	ldmia	r4!, {r3}
    a918:	4669      	mov	r1, sp
    a91a:	469c      	mov	ip, r3
    a91c:	cf08      	ldmia	r7!, {r3}
    a91e:	3204      	adds	r2, #4
    a920:	9300      	str	r3, [sp, #0]
    a922:	4663      	mov	r3, ip
    a924:	808b      	strh	r3, [r1, #4]
    a926:	888b      	ldrh	r3, [r1, #4]
    a928:	195d      	adds	r5, r3, r5
    a92a:	9b00      	ldr	r3, [sp, #0]
    a92c:	b29b      	uxth	r3, r3
    a92e:	1aeb      	subs	r3, r5, r3
    a930:	4665      	mov	r5, ip
    a932:	9301      	str	r3, [sp, #4]
    a934:	9b00      	ldr	r3, [sp, #0]
    a936:	0c2d      	lsrs	r5, r5, #16
    a938:	0c19      	lsrs	r1, r3, #16
    a93a:	9b01      	ldr	r3, [sp, #4]
    a93c:	1a69      	subs	r1, r5, r1
    a93e:	141d      	asrs	r5, r3, #16
    a940:	1f13      	subs	r3, r2, #4
    a942:	469c      	mov	ip, r3
    a944:	466b      	mov	r3, sp
    a946:	1949      	adds	r1, r1, r5
    a948:	889b      	ldrh	r3, [r3, #4]
    a94a:	140d      	asrs	r5, r1, #16
    a94c:	0409      	lsls	r1, r1, #16
    a94e:	430b      	orrs	r3, r1
    a950:	4661      	mov	r1, ip
    a952:	600b      	str	r3, [r1, #0]
    a954:	9b03      	ldr	r3, [sp, #12]
    a956:	429f      	cmp	r7, r3
    a958:	d3dd      	bcc.n	a916 <__mdiff+0x60>
    a95a:	9902      	ldr	r1, [sp, #8]
    a95c:	1c13      	adds	r3, r2, #0
    a95e:	428c      	cmp	r4, r1
    a960:	d20b      	bcs.n	a97a <__mdiff+0xc4>
    a962:	cc08      	ldmia	r4!, {r3}
    a964:	b299      	uxth	r1, r3
    a966:	1949      	adds	r1, r1, r5
    a968:	140d      	asrs	r5, r1, #16
    a96a:	0c1b      	lsrs	r3, r3, #16
    a96c:	18eb      	adds	r3, r5, r3
    a96e:	141d      	asrs	r5, r3, #16
    a970:	b289      	uxth	r1, r1
    a972:	041b      	lsls	r3, r3, #16
    a974:	430b      	orrs	r3, r1
    a976:	c208      	stmia	r2!, {r3}
    a978:	e7ef      	b.n	a95a <__mdiff+0xa4>
    a97a:	3b04      	subs	r3, #4
    a97c:	681a      	ldr	r2, [r3, #0]
    a97e:	2a00      	cmp	r2, #0
    a980:	d101      	bne.n	a986 <__mdiff+0xd0>
    a982:	3e01      	subs	r6, #1
    a984:	e7f9      	b.n	a97a <__mdiff+0xc4>
    a986:	6106      	str	r6, [r0, #16]
    a988:	b005      	add	sp, #20
    a98a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000a98c <__ulp>:
    a98c:	4b0f      	ldr	r3, [pc, #60]	; (a9cc <__ulp+0x40>)
    a98e:	b510      	push	{r4, lr}
    a990:	4019      	ands	r1, r3
    a992:	4b0f      	ldr	r3, [pc, #60]	; (a9d0 <__ulp+0x44>)
    a994:	18c9      	adds	r1, r1, r3
    a996:	2900      	cmp	r1, #0
    a998:	dd02      	ble.n	a9a0 <__ulp+0x14>
    a99a:	2200      	movs	r2, #0
    a99c:	1c0b      	adds	r3, r1, #0
    a99e:	e011      	b.n	a9c4 <__ulp+0x38>
    a9a0:	4249      	negs	r1, r1
    a9a2:	1509      	asrs	r1, r1, #20
    a9a4:	2200      	movs	r2, #0
    a9a6:	2300      	movs	r3, #0
    a9a8:	2913      	cmp	r1, #19
    a9aa:	dc04      	bgt.n	a9b6 <__ulp+0x2a>
    a9ac:	2080      	movs	r0, #128	; 0x80
    a9ae:	0300      	lsls	r0, r0, #12
    a9b0:	4108      	asrs	r0, r1
    a9b2:	1c03      	adds	r3, r0, #0
    a9b4:	e006      	b.n	a9c4 <__ulp+0x38>
    a9b6:	2001      	movs	r0, #1
    a9b8:	2932      	cmp	r1, #50	; 0x32
    a9ba:	dc02      	bgt.n	a9c2 <__ulp+0x36>
    a9bc:	2433      	movs	r4, #51	; 0x33
    a9be:	1a61      	subs	r1, r4, r1
    a9c0:	4088      	lsls	r0, r1
    a9c2:	1c02      	adds	r2, r0, #0
    a9c4:	1c10      	adds	r0, r2, #0
    a9c6:	1c19      	adds	r1, r3, #0
    a9c8:	bd10      	pop	{r4, pc}
    a9ca:	46c0      	nop			; (mov r8, r8)
    a9cc:	7ff00000 	.word	0x7ff00000
    a9d0:	fcc00000 	.word	0xfcc00000

0000a9d4 <__b2d>:
    a9d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    a9d6:	1c06      	adds	r6, r0, #0
    a9d8:	6903      	ldr	r3, [r0, #16]
    a9da:	3614      	adds	r6, #20
    a9dc:	009b      	lsls	r3, r3, #2
    a9de:	18f3      	adds	r3, r6, r3
    a9e0:	1f1d      	subs	r5, r3, #4
    a9e2:	682c      	ldr	r4, [r5, #0]
    a9e4:	1c0f      	adds	r7, r1, #0
    a9e6:	1c20      	adds	r0, r4, #0
    a9e8:	9301      	str	r3, [sp, #4]
    a9ea:	f7ff fdc4 	bl	a576 <__hi0bits>
    a9ee:	2320      	movs	r3, #32
    a9f0:	1a1b      	subs	r3, r3, r0
    a9f2:	603b      	str	r3, [r7, #0]
    a9f4:	491f      	ldr	r1, [pc, #124]	; (aa74 <__b2d+0xa0>)
    a9f6:	280a      	cmp	r0, #10
    a9f8:	dc13      	bgt.n	aa22 <__b2d+0x4e>
    a9fa:	230b      	movs	r3, #11
    a9fc:	1c27      	adds	r7, r4, #0
    a9fe:	1a1b      	subs	r3, r3, r0
    aa00:	40df      	lsrs	r7, r3
    aa02:	4339      	orrs	r1, r7
    aa04:	469c      	mov	ip, r3
    aa06:	1c0b      	adds	r3, r1, #0
    aa08:	2100      	movs	r1, #0
    aa0a:	42b5      	cmp	r5, r6
    aa0c:	d902      	bls.n	aa14 <__b2d+0x40>
    aa0e:	9901      	ldr	r1, [sp, #4]
    aa10:	3908      	subs	r1, #8
    aa12:	6809      	ldr	r1, [r1, #0]
    aa14:	4665      	mov	r5, ip
    aa16:	3015      	adds	r0, #21
    aa18:	40e9      	lsrs	r1, r5
    aa1a:	4084      	lsls	r4, r0
    aa1c:	4321      	orrs	r1, r4
    aa1e:	1c0a      	adds	r2, r1, #0
    aa20:	e024      	b.n	aa6c <__b2d+0x98>
    aa22:	2700      	movs	r7, #0
    aa24:	42b5      	cmp	r5, r6
    aa26:	d902      	bls.n	aa2e <__b2d+0x5a>
    aa28:	9d01      	ldr	r5, [sp, #4]
    aa2a:	3d08      	subs	r5, #8
    aa2c:	682f      	ldr	r7, [r5, #0]
    aa2e:	230b      	movs	r3, #11
    aa30:	425b      	negs	r3, r3
    aa32:	469c      	mov	ip, r3
    aa34:	4484      	add	ip, r0
    aa36:	4663      	mov	r3, ip
    aa38:	2b00      	cmp	r3, #0
    aa3a:	d014      	beq.n	aa66 <__b2d+0x92>
    aa3c:	232b      	movs	r3, #43	; 0x2b
    aa3e:	1a18      	subs	r0, r3, r0
    aa40:	4663      	mov	r3, ip
    aa42:	409c      	lsls	r4, r3
    aa44:	4321      	orrs	r1, r4
    aa46:	1c3c      	adds	r4, r7, #0
    aa48:	40c4      	lsrs	r4, r0
    aa4a:	4321      	orrs	r1, r4
    aa4c:	1c0b      	adds	r3, r1, #0
    aa4e:	2400      	movs	r4, #0
    aa50:	42b5      	cmp	r5, r6
    aa52:	d901      	bls.n	aa58 <__b2d+0x84>
    aa54:	3d04      	subs	r5, #4
    aa56:	682c      	ldr	r4, [r5, #0]
    aa58:	40c4      	lsrs	r4, r0
    aa5a:	4661      	mov	r1, ip
    aa5c:	1c20      	adds	r0, r4, #0
    aa5e:	408f      	lsls	r7, r1
    aa60:	4338      	orrs	r0, r7
    aa62:	1c02      	adds	r2, r0, #0
    aa64:	e002      	b.n	aa6c <__b2d+0x98>
    aa66:	4321      	orrs	r1, r4
    aa68:	1c0b      	adds	r3, r1, #0
    aa6a:	1c3a      	adds	r2, r7, #0
    aa6c:	1c10      	adds	r0, r2, #0
    aa6e:	1c19      	adds	r1, r3, #0
    aa70:	b003      	add	sp, #12
    aa72:	bdf0      	pop	{r4, r5, r6, r7, pc}
    aa74:	3ff00000 	.word	0x3ff00000

0000aa78 <__d2b>:
    aa78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    aa7a:	1c1d      	adds	r5, r3, #0
    aa7c:	2101      	movs	r1, #1
    aa7e:	9f08      	ldr	r7, [sp, #32]
    aa80:	1c14      	adds	r4, r2, #0
    aa82:	f7ff fcab 	bl	a3dc <_Balloc>
    aa86:	032b      	lsls	r3, r5, #12
    aa88:	006d      	lsls	r5, r5, #1
    aa8a:	1c06      	adds	r6, r0, #0
    aa8c:	0b1b      	lsrs	r3, r3, #12
    aa8e:	0d6d      	lsrs	r5, r5, #21
    aa90:	d002      	beq.n	aa98 <__d2b+0x20>
    aa92:	2280      	movs	r2, #128	; 0x80
    aa94:	0352      	lsls	r2, r2, #13
    aa96:	4313      	orrs	r3, r2
    aa98:	9301      	str	r3, [sp, #4]
    aa9a:	2c00      	cmp	r4, #0
    aa9c:	d018      	beq.n	aad0 <__d2b+0x58>
    aa9e:	4668      	mov	r0, sp
    aaa0:	9400      	str	r4, [sp, #0]
    aaa2:	f7ff fd83 	bl	a5ac <__lo0bits>
    aaa6:	9c00      	ldr	r4, [sp, #0]
    aaa8:	2800      	cmp	r0, #0
    aaaa:	d009      	beq.n	aac0 <__d2b+0x48>
    aaac:	2320      	movs	r3, #32
    aaae:	9a01      	ldr	r2, [sp, #4]
    aab0:	1a19      	subs	r1, r3, r0
    aab2:	1c13      	adds	r3, r2, #0
    aab4:	408b      	lsls	r3, r1
    aab6:	40c2      	lsrs	r2, r0
    aab8:	4323      	orrs	r3, r4
    aaba:	6173      	str	r3, [r6, #20]
    aabc:	9201      	str	r2, [sp, #4]
    aabe:	e000      	b.n	aac2 <__d2b+0x4a>
    aac0:	6174      	str	r4, [r6, #20]
    aac2:	9c01      	ldr	r4, [sp, #4]
    aac4:	61b4      	str	r4, [r6, #24]
    aac6:	1e63      	subs	r3, r4, #1
    aac8:	419c      	sbcs	r4, r3
    aaca:	3401      	adds	r4, #1
    aacc:	6134      	str	r4, [r6, #16]
    aace:	e007      	b.n	aae0 <__d2b+0x68>
    aad0:	a801      	add	r0, sp, #4
    aad2:	f7ff fd6b 	bl	a5ac <__lo0bits>
    aad6:	2401      	movs	r4, #1
    aad8:	9b01      	ldr	r3, [sp, #4]
    aada:	6134      	str	r4, [r6, #16]
    aadc:	6173      	str	r3, [r6, #20]
    aade:	3020      	adds	r0, #32
    aae0:	2d00      	cmp	r5, #0
    aae2:	d006      	beq.n	aaf2 <__d2b+0x7a>
    aae4:	4b0b      	ldr	r3, [pc, #44]	; (ab14 <__d2b+0x9c>)
    aae6:	18ed      	adds	r5, r5, r3
    aae8:	2335      	movs	r3, #53	; 0x35
    aaea:	182d      	adds	r5, r5, r0
    aaec:	603d      	str	r5, [r7, #0]
    aaee:	1a18      	subs	r0, r3, r0
    aaf0:	e00b      	b.n	ab0a <__d2b+0x92>
    aaf2:	4b09      	ldr	r3, [pc, #36]	; (ab18 <__d2b+0xa0>)
    aaf4:	18c0      	adds	r0, r0, r3
    aaf6:	4b09      	ldr	r3, [pc, #36]	; (ab1c <__d2b+0xa4>)
    aaf8:	6038      	str	r0, [r7, #0]
    aafa:	18e3      	adds	r3, r4, r3
    aafc:	009b      	lsls	r3, r3, #2
    aafe:	18f3      	adds	r3, r6, r3
    ab00:	6958      	ldr	r0, [r3, #20]
    ab02:	f7ff fd38 	bl	a576 <__hi0bits>
    ab06:	0164      	lsls	r4, r4, #5
    ab08:	1a20      	subs	r0, r4, r0
    ab0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    ab0c:	6018      	str	r0, [r3, #0]
    ab0e:	1c30      	adds	r0, r6, #0
    ab10:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    ab12:	46c0      	nop			; (mov r8, r8)
    ab14:	fffffbcd 	.word	0xfffffbcd
    ab18:	fffffbce 	.word	0xfffffbce
    ab1c:	3fffffff 	.word	0x3fffffff

0000ab20 <__ratio>:
    ab20:	b5f0      	push	{r4, r5, r6, r7, lr}
    ab22:	b087      	sub	sp, #28
    ab24:	1c0e      	adds	r6, r1, #0
    ab26:	a904      	add	r1, sp, #16
    ab28:	1c07      	adds	r7, r0, #0
    ab2a:	f7ff ff53 	bl	a9d4 <__b2d>
    ab2e:	1c04      	adds	r4, r0, #0
    ab30:	1c0d      	adds	r5, r1, #0
    ab32:	1c30      	adds	r0, r6, #0
    ab34:	a905      	add	r1, sp, #20
    ab36:	9400      	str	r4, [sp, #0]
    ab38:	9501      	str	r5, [sp, #4]
    ab3a:	f7ff ff4b 	bl	a9d4 <__b2d>
    ab3e:	9b04      	ldr	r3, [sp, #16]
    ab40:	9a05      	ldr	r2, [sp, #20]
    ab42:	693f      	ldr	r7, [r7, #16]
    ab44:	1a9a      	subs	r2, r3, r2
    ab46:	6933      	ldr	r3, [r6, #16]
    ab48:	9002      	str	r0, [sp, #8]
    ab4a:	9103      	str	r1, [sp, #12]
    ab4c:	1afb      	subs	r3, r7, r3
    ab4e:	015b      	lsls	r3, r3, #5
    ab50:	18d3      	adds	r3, r2, r3
    ab52:	2b00      	cmp	r3, #0
    ab54:	dd03      	ble.n	ab5e <__ratio+0x3e>
    ab56:	051b      	lsls	r3, r3, #20
    ab58:	195b      	adds	r3, r3, r5
    ab5a:	9301      	str	r3, [sp, #4]
    ab5c:	e002      	b.n	ab64 <__ratio+0x44>
    ab5e:	051b      	lsls	r3, r3, #20
    ab60:	1acb      	subs	r3, r1, r3
    ab62:	9303      	str	r3, [sp, #12]
    ab64:	9800      	ldr	r0, [sp, #0]
    ab66:	9901      	ldr	r1, [sp, #4]
    ab68:	9a02      	ldr	r2, [sp, #8]
    ab6a:	9b03      	ldr	r3, [sp, #12]
    ab6c:	f000 ff56 	bl	ba1c <__aeabi_ddiv>
    ab70:	b007      	add	sp, #28
    ab72:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000ab74 <__copybits>:
    ab74:	1c13      	adds	r3, r2, #0
    ab76:	3901      	subs	r1, #1
    ab78:	b510      	push	{r4, lr}
    ab7a:	1149      	asrs	r1, r1, #5
    ab7c:	6912      	ldr	r2, [r2, #16]
    ab7e:	3101      	adds	r1, #1
    ab80:	0089      	lsls	r1, r1, #2
    ab82:	3314      	adds	r3, #20
    ab84:	0092      	lsls	r2, r2, #2
    ab86:	1841      	adds	r1, r0, r1
    ab88:	189a      	adds	r2, r3, r2
    ab8a:	4293      	cmp	r3, r2
    ab8c:	d202      	bcs.n	ab94 <__copybits+0x20>
    ab8e:	cb10      	ldmia	r3!, {r4}
    ab90:	c010      	stmia	r0!, {r4}
    ab92:	e7fa      	b.n	ab8a <__copybits+0x16>
    ab94:	4288      	cmp	r0, r1
    ab96:	d202      	bcs.n	ab9e <__copybits+0x2a>
    ab98:	2300      	movs	r3, #0
    ab9a:	c008      	stmia	r0!, {r3}
    ab9c:	e7fa      	b.n	ab94 <__copybits+0x20>
    ab9e:	bd10      	pop	{r4, pc}

0000aba0 <__any_on>:
    aba0:	b530      	push	{r4, r5, lr}
    aba2:	1c04      	adds	r4, r0, #0
    aba4:	6902      	ldr	r2, [r0, #16]
    aba6:	3414      	adds	r4, #20
    aba8:	114b      	asrs	r3, r1, #5
    abaa:	4293      	cmp	r3, r2
    abac:	dc0c      	bgt.n	abc8 <__any_on+0x28>
    abae:	da0c      	bge.n	abca <__any_on+0x2a>
    abb0:	221f      	movs	r2, #31
    abb2:	4011      	ands	r1, r2
    abb4:	d009      	beq.n	abca <__any_on+0x2a>
    abb6:	009a      	lsls	r2, r3, #2
    abb8:	5915      	ldr	r5, [r2, r4]
    abba:	2001      	movs	r0, #1
    abbc:	1c2a      	adds	r2, r5, #0
    abbe:	40ca      	lsrs	r2, r1
    abc0:	408a      	lsls	r2, r1
    abc2:	42aa      	cmp	r2, r5
    abc4:	d10c      	bne.n	abe0 <__any_on+0x40>
    abc6:	e000      	b.n	abca <__any_on+0x2a>
    abc8:	1c13      	adds	r3, r2, #0
    abca:	009b      	lsls	r3, r3, #2
    abcc:	18e3      	adds	r3, r4, r3
    abce:	42a3      	cmp	r3, r4
    abd0:	d905      	bls.n	abde <__any_on+0x3e>
    abd2:	3b04      	subs	r3, #4
    abd4:	681a      	ldr	r2, [r3, #0]
    abd6:	2a00      	cmp	r2, #0
    abd8:	d0f9      	beq.n	abce <__any_on+0x2e>
    abda:	2001      	movs	r0, #1
    abdc:	e000      	b.n	abe0 <__any_on+0x40>
    abde:	2000      	movs	r0, #0
    abe0:	bd30      	pop	{r4, r5, pc}

0000abe2 <_calloc_r>:
    abe2:	434a      	muls	r2, r1
    abe4:	b538      	push	{r3, r4, r5, lr}
    abe6:	1c11      	adds	r1, r2, #0
    abe8:	1c14      	adds	r4, r2, #0
    abea:	f7fb fcd7 	bl	659c <_malloc_r>
    abee:	1e05      	subs	r5, r0, #0
    abf0:	d003      	beq.n	abfa <_calloc_r+0x18>
    abf2:	2100      	movs	r1, #0
    abf4:	1c22      	adds	r2, r4, #0
    abf6:	f7fb fc83 	bl	6500 <memset>
    abfa:	1c28      	adds	r0, r5, #0
    abfc:	bd38      	pop	{r3, r4, r5, pc}

0000abfe <_realloc_r>:
    abfe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    ac00:	1c06      	adds	r6, r0, #0
    ac02:	1c0c      	adds	r4, r1, #0
    ac04:	1c15      	adds	r5, r2, #0
    ac06:	2900      	cmp	r1, #0
    ac08:	d104      	bne.n	ac14 <_realloc_r+0x16>
    ac0a:	1c11      	adds	r1, r2, #0
    ac0c:	f7fb fcc6 	bl	659c <_malloc_r>
    ac10:	1c04      	adds	r4, r0, #0
    ac12:	e018      	b.n	ac46 <_realloc_r+0x48>
    ac14:	2a00      	cmp	r2, #0
    ac16:	d103      	bne.n	ac20 <_realloc_r+0x22>
    ac18:	f7fb fc7a 	bl	6510 <_free_r>
    ac1c:	1c2c      	adds	r4, r5, #0
    ac1e:	e012      	b.n	ac46 <_realloc_r+0x48>
    ac20:	f000 fb52 	bl	b2c8 <_malloc_usable_size_r>
    ac24:	42a8      	cmp	r0, r5
    ac26:	d20e      	bcs.n	ac46 <_realloc_r+0x48>
    ac28:	1c30      	adds	r0, r6, #0
    ac2a:	1c29      	adds	r1, r5, #0
    ac2c:	f7fb fcb6 	bl	659c <_malloc_r>
    ac30:	1e07      	subs	r7, r0, #0
    ac32:	d007      	beq.n	ac44 <_realloc_r+0x46>
    ac34:	1c21      	adds	r1, r4, #0
    ac36:	1c2a      	adds	r2, r5, #0
    ac38:	f7fb fc59 	bl	64ee <memcpy>
    ac3c:	1c30      	adds	r0, r6, #0
    ac3e:	1c21      	adds	r1, r4, #0
    ac40:	f7fb fc66 	bl	6510 <_free_r>
    ac44:	1c3c      	adds	r4, r7, #0
    ac46:	1c20      	adds	r0, r4, #0
    ac48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0000ac4c <__ssputs_r>:
    ac4c:	b5f0      	push	{r4, r5, r6, r7, lr}
    ac4e:	688e      	ldr	r6, [r1, #8]
    ac50:	b085      	sub	sp, #20
    ac52:	1c07      	adds	r7, r0, #0
    ac54:	1c0c      	adds	r4, r1, #0
    ac56:	9203      	str	r2, [sp, #12]
    ac58:	9301      	str	r3, [sp, #4]
    ac5a:	42b3      	cmp	r3, r6
    ac5c:	d345      	bcc.n	acea <__ssputs_r+0x9e>
    ac5e:	2390      	movs	r3, #144	; 0x90
    ac60:	898a      	ldrh	r2, [r1, #12]
    ac62:	00db      	lsls	r3, r3, #3
    ac64:	421a      	tst	r2, r3
    ac66:	d03d      	beq.n	ace4 <__ssputs_r+0x98>
    ac68:	2503      	movs	r5, #3
    ac6a:	6909      	ldr	r1, [r1, #16]
    ac6c:	6823      	ldr	r3, [r4, #0]
    ac6e:	9801      	ldr	r0, [sp, #4]
    ac70:	1a5b      	subs	r3, r3, r1
    ac72:	9302      	str	r3, [sp, #8]
    ac74:	6963      	ldr	r3, [r4, #20]
    ac76:	435d      	muls	r5, r3
    ac78:	0feb      	lsrs	r3, r5, #31
    ac7a:	195d      	adds	r5, r3, r5
    ac7c:	9b02      	ldr	r3, [sp, #8]
    ac7e:	106d      	asrs	r5, r5, #1
    ac80:	3301      	adds	r3, #1
    ac82:	181b      	adds	r3, r3, r0
    ac84:	429d      	cmp	r5, r3
    ac86:	d200      	bcs.n	ac8a <__ssputs_r+0x3e>
    ac88:	1c1d      	adds	r5, r3, #0
    ac8a:	1c38      	adds	r0, r7, #0
    ac8c:	0553      	lsls	r3, r2, #21
    ac8e:	d50f      	bpl.n	acb0 <__ssputs_r+0x64>
    ac90:	1c29      	adds	r1, r5, #0
    ac92:	f7fb fc83 	bl	659c <_malloc_r>
    ac96:	1e06      	subs	r6, r0, #0
    ac98:	d013      	beq.n	acc2 <__ssputs_r+0x76>
    ac9a:	9a02      	ldr	r2, [sp, #8]
    ac9c:	6921      	ldr	r1, [r4, #16]
    ac9e:	f7fb fc26 	bl	64ee <memcpy>
    aca2:	89a2      	ldrh	r2, [r4, #12]
    aca4:	4b18      	ldr	r3, [pc, #96]	; (ad08 <__ssputs_r+0xbc>)
    aca6:	4013      	ands	r3, r2
    aca8:	2280      	movs	r2, #128	; 0x80
    acaa:	4313      	orrs	r3, r2
    acac:	81a3      	strh	r3, [r4, #12]
    acae:	e011      	b.n	acd4 <__ssputs_r+0x88>
    acb0:	1c2a      	adds	r2, r5, #0
    acb2:	f7ff ffa4 	bl	abfe <_realloc_r>
    acb6:	1e06      	subs	r6, r0, #0
    acb8:	d10c      	bne.n	acd4 <__ssputs_r+0x88>
    acba:	1c38      	adds	r0, r7, #0
    acbc:	6921      	ldr	r1, [r4, #16]
    acbe:	f7fb fc27 	bl	6510 <_free_r>
    acc2:	230c      	movs	r3, #12
    acc4:	2240      	movs	r2, #64	; 0x40
    acc6:	2001      	movs	r0, #1
    acc8:	603b      	str	r3, [r7, #0]
    acca:	89a3      	ldrh	r3, [r4, #12]
    accc:	4240      	negs	r0, r0
    acce:	4313      	orrs	r3, r2
    acd0:	81a3      	strh	r3, [r4, #12]
    acd2:	e017      	b.n	ad04 <__ssputs_r+0xb8>
    acd4:	9b02      	ldr	r3, [sp, #8]
    acd6:	6126      	str	r6, [r4, #16]
    acd8:	18f6      	adds	r6, r6, r3
    acda:	6026      	str	r6, [r4, #0]
    acdc:	6165      	str	r5, [r4, #20]
    acde:	9e01      	ldr	r6, [sp, #4]
    ace0:	1aed      	subs	r5, r5, r3
    ace2:	60a5      	str	r5, [r4, #8]
    ace4:	9b01      	ldr	r3, [sp, #4]
    ace6:	42b3      	cmp	r3, r6
    ace8:	d200      	bcs.n	acec <__ssputs_r+0xa0>
    acea:	9e01      	ldr	r6, [sp, #4]
    acec:	1c32      	adds	r2, r6, #0
    acee:	6820      	ldr	r0, [r4, #0]
    acf0:	9903      	ldr	r1, [sp, #12]
    acf2:	f7ff fb5f 	bl	a3b4 <memmove>
    acf6:	2000      	movs	r0, #0
    acf8:	68a3      	ldr	r3, [r4, #8]
    acfa:	1b9b      	subs	r3, r3, r6
    acfc:	60a3      	str	r3, [r4, #8]
    acfe:	6823      	ldr	r3, [r4, #0]
    ad00:	199e      	adds	r6, r3, r6
    ad02:	6026      	str	r6, [r4, #0]
    ad04:	b005      	add	sp, #20
    ad06:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ad08:	fffffb7f 	.word	0xfffffb7f

0000ad0c <_svfiprintf_r>:
    ad0c:	b5f0      	push	{r4, r5, r6, r7, lr}
    ad0e:	b09f      	sub	sp, #124	; 0x7c
    ad10:	9002      	str	r0, [sp, #8]
    ad12:	9305      	str	r3, [sp, #20]
    ad14:	898b      	ldrh	r3, [r1, #12]
    ad16:	1c0e      	adds	r6, r1, #0
    ad18:	1c17      	adds	r7, r2, #0
    ad1a:	061b      	lsls	r3, r3, #24
    ad1c:	d510      	bpl.n	ad40 <_svfiprintf_r+0x34>
    ad1e:	690b      	ldr	r3, [r1, #16]
    ad20:	2b00      	cmp	r3, #0
    ad22:	d10d      	bne.n	ad40 <_svfiprintf_r+0x34>
    ad24:	2140      	movs	r1, #64	; 0x40
    ad26:	f7fb fc39 	bl	659c <_malloc_r>
    ad2a:	6030      	str	r0, [r6, #0]
    ad2c:	6130      	str	r0, [r6, #16]
    ad2e:	2800      	cmp	r0, #0
    ad30:	d104      	bne.n	ad3c <_svfiprintf_r+0x30>
    ad32:	230c      	movs	r3, #12
    ad34:	9a02      	ldr	r2, [sp, #8]
    ad36:	3801      	subs	r0, #1
    ad38:	6013      	str	r3, [r2, #0]
    ad3a:	e0d0      	b.n	aede <_svfiprintf_r+0x1d2>
    ad3c:	2340      	movs	r3, #64	; 0x40
    ad3e:	6173      	str	r3, [r6, #20]
    ad40:	2300      	movs	r3, #0
    ad42:	ad06      	add	r5, sp, #24
    ad44:	616b      	str	r3, [r5, #20]
    ad46:	3320      	adds	r3, #32
    ad48:	766b      	strb	r3, [r5, #25]
    ad4a:	3310      	adds	r3, #16
    ad4c:	76ab      	strb	r3, [r5, #26]
    ad4e:	1c3c      	adds	r4, r7, #0
    ad50:	7823      	ldrb	r3, [r4, #0]
    ad52:	2b00      	cmp	r3, #0
    ad54:	d103      	bne.n	ad5e <_svfiprintf_r+0x52>
    ad56:	1be3      	subs	r3, r4, r7
    ad58:	9304      	str	r3, [sp, #16]
    ad5a:	d012      	beq.n	ad82 <_svfiprintf_r+0x76>
    ad5c:	e003      	b.n	ad66 <_svfiprintf_r+0x5a>
    ad5e:	2b25      	cmp	r3, #37	; 0x25
    ad60:	d0f9      	beq.n	ad56 <_svfiprintf_r+0x4a>
    ad62:	3401      	adds	r4, #1
    ad64:	e7f4      	b.n	ad50 <_svfiprintf_r+0x44>
    ad66:	9b04      	ldr	r3, [sp, #16]
    ad68:	9802      	ldr	r0, [sp, #8]
    ad6a:	1c31      	adds	r1, r6, #0
    ad6c:	1c3a      	adds	r2, r7, #0
    ad6e:	f7ff ff6d 	bl	ac4c <__ssputs_r>
    ad72:	1c43      	adds	r3, r0, #1
    ad74:	d100      	bne.n	ad78 <_svfiprintf_r+0x6c>
    ad76:	e0ac      	b.n	aed2 <_svfiprintf_r+0x1c6>
    ad78:	696a      	ldr	r2, [r5, #20]
    ad7a:	9b04      	ldr	r3, [sp, #16]
    ad7c:	4694      	mov	ip, r2
    ad7e:	4463      	add	r3, ip
    ad80:	616b      	str	r3, [r5, #20]
    ad82:	7823      	ldrb	r3, [r4, #0]
    ad84:	2b00      	cmp	r3, #0
    ad86:	d100      	bne.n	ad8a <_svfiprintf_r+0x7e>
    ad88:	e0a3      	b.n	aed2 <_svfiprintf_r+0x1c6>
    ad8a:	2201      	movs	r2, #1
    ad8c:	2300      	movs	r3, #0
    ad8e:	4252      	negs	r2, r2
    ad90:	606a      	str	r2, [r5, #4]
    ad92:	a902      	add	r1, sp, #8
    ad94:	3254      	adds	r2, #84	; 0x54
    ad96:	1852      	adds	r2, r2, r1
    ad98:	3401      	adds	r4, #1
    ad9a:	602b      	str	r3, [r5, #0]
    ad9c:	60eb      	str	r3, [r5, #12]
    ad9e:	60ab      	str	r3, [r5, #8]
    ada0:	7013      	strb	r3, [r2, #0]
    ada2:	65ab      	str	r3, [r5, #88]	; 0x58
    ada4:	4f4f      	ldr	r7, [pc, #316]	; (aee4 <_svfiprintf_r+0x1d8>)
    ada6:	7821      	ldrb	r1, [r4, #0]
    ada8:	1c38      	adds	r0, r7, #0
    adaa:	2205      	movs	r2, #5
    adac:	f7fb fb94 	bl	64d8 <memchr>
    adb0:	2800      	cmp	r0, #0
    adb2:	d008      	beq.n	adc6 <_svfiprintf_r+0xba>
    adb4:	1bc0      	subs	r0, r0, r7
    adb6:	2701      	movs	r7, #1
    adb8:	4087      	lsls	r7, r0
    adba:	1c38      	adds	r0, r7, #0
    adbc:	682b      	ldr	r3, [r5, #0]
    adbe:	3401      	adds	r4, #1
    adc0:	4318      	orrs	r0, r3
    adc2:	6028      	str	r0, [r5, #0]
    adc4:	e7ee      	b.n	ada4 <_svfiprintf_r+0x98>
    adc6:	682b      	ldr	r3, [r5, #0]
    adc8:	06da      	lsls	r2, r3, #27
    adca:	d504      	bpl.n	add6 <_svfiprintf_r+0xca>
    adcc:	2253      	movs	r2, #83	; 0x53
    adce:	2120      	movs	r1, #32
    add0:	a802      	add	r0, sp, #8
    add2:	1812      	adds	r2, r2, r0
    add4:	7011      	strb	r1, [r2, #0]
    add6:	071a      	lsls	r2, r3, #28
    add8:	d504      	bpl.n	ade4 <_svfiprintf_r+0xd8>
    adda:	2253      	movs	r2, #83	; 0x53
    addc:	212b      	movs	r1, #43	; 0x2b
    adde:	a802      	add	r0, sp, #8
    ade0:	1812      	adds	r2, r2, r0
    ade2:	7011      	strb	r1, [r2, #0]
    ade4:	7822      	ldrb	r2, [r4, #0]
    ade6:	2a2a      	cmp	r2, #42	; 0x2a
    ade8:	d001      	beq.n	adee <_svfiprintf_r+0xe2>
    adea:	9b09      	ldr	r3, [sp, #36]	; 0x24
    adec:	e00e      	b.n	ae0c <_svfiprintf_r+0x100>
    adee:	9a05      	ldr	r2, [sp, #20]
    adf0:	1d11      	adds	r1, r2, #4
    adf2:	6812      	ldr	r2, [r2, #0]
    adf4:	9105      	str	r1, [sp, #20]
    adf6:	2a00      	cmp	r2, #0
    adf8:	db01      	blt.n	adfe <_svfiprintf_r+0xf2>
    adfa:	9209      	str	r2, [sp, #36]	; 0x24
    adfc:	e004      	b.n	ae08 <_svfiprintf_r+0xfc>
    adfe:	4252      	negs	r2, r2
    ae00:	60ea      	str	r2, [r5, #12]
    ae02:	2202      	movs	r2, #2
    ae04:	4313      	orrs	r3, r2
    ae06:	602b      	str	r3, [r5, #0]
    ae08:	3401      	adds	r4, #1
    ae0a:	e009      	b.n	ae20 <_svfiprintf_r+0x114>
    ae0c:	7822      	ldrb	r2, [r4, #0]
    ae0e:	3a30      	subs	r2, #48	; 0x30
    ae10:	2a09      	cmp	r2, #9
    ae12:	d804      	bhi.n	ae1e <_svfiprintf_r+0x112>
    ae14:	210a      	movs	r1, #10
    ae16:	434b      	muls	r3, r1
    ae18:	3401      	adds	r4, #1
    ae1a:	189b      	adds	r3, r3, r2
    ae1c:	e7f6      	b.n	ae0c <_svfiprintf_r+0x100>
    ae1e:	9309      	str	r3, [sp, #36]	; 0x24
    ae20:	7823      	ldrb	r3, [r4, #0]
    ae22:	2b2e      	cmp	r3, #46	; 0x2e
    ae24:	d118      	bne.n	ae58 <_svfiprintf_r+0x14c>
    ae26:	7863      	ldrb	r3, [r4, #1]
    ae28:	2b2a      	cmp	r3, #42	; 0x2a
    ae2a:	d109      	bne.n	ae40 <_svfiprintf_r+0x134>
    ae2c:	9b05      	ldr	r3, [sp, #20]
    ae2e:	3402      	adds	r4, #2
    ae30:	1d1a      	adds	r2, r3, #4
    ae32:	681b      	ldr	r3, [r3, #0]
    ae34:	9205      	str	r2, [sp, #20]
    ae36:	2b00      	cmp	r3, #0
    ae38:	da0d      	bge.n	ae56 <_svfiprintf_r+0x14a>
    ae3a:	2301      	movs	r3, #1
    ae3c:	425b      	negs	r3, r3
    ae3e:	e00a      	b.n	ae56 <_svfiprintf_r+0x14a>
    ae40:	2300      	movs	r3, #0
    ae42:	3401      	adds	r4, #1
    ae44:	7822      	ldrb	r2, [r4, #0]
    ae46:	3a30      	subs	r2, #48	; 0x30
    ae48:	2a09      	cmp	r2, #9
    ae4a:	d804      	bhi.n	ae56 <_svfiprintf_r+0x14a>
    ae4c:	210a      	movs	r1, #10
    ae4e:	434b      	muls	r3, r1
    ae50:	3401      	adds	r4, #1
    ae52:	189b      	adds	r3, r3, r2
    ae54:	e7f6      	b.n	ae44 <_svfiprintf_r+0x138>
    ae56:	9307      	str	r3, [sp, #28]
    ae58:	4f23      	ldr	r7, [pc, #140]	; (aee8 <_svfiprintf_r+0x1dc>)
    ae5a:	7821      	ldrb	r1, [r4, #0]
    ae5c:	1c38      	adds	r0, r7, #0
    ae5e:	2203      	movs	r2, #3
    ae60:	f7fb fb3a 	bl	64d8 <memchr>
    ae64:	2800      	cmp	r0, #0
    ae66:	d007      	beq.n	ae78 <_svfiprintf_r+0x16c>
    ae68:	1bc0      	subs	r0, r0, r7
    ae6a:	2740      	movs	r7, #64	; 0x40
    ae6c:	4087      	lsls	r7, r0
    ae6e:	1c38      	adds	r0, r7, #0
    ae70:	682b      	ldr	r3, [r5, #0]
    ae72:	3401      	adds	r4, #1
    ae74:	4318      	orrs	r0, r3
    ae76:	6028      	str	r0, [r5, #0]
    ae78:	7821      	ldrb	r1, [r4, #0]
    ae7a:	481c      	ldr	r0, [pc, #112]	; (aeec <_svfiprintf_r+0x1e0>)
    ae7c:	2206      	movs	r2, #6
    ae7e:	1c67      	adds	r7, r4, #1
    ae80:	7629      	strb	r1, [r5, #24]
    ae82:	f7fb fb29 	bl	64d8 <memchr>
    ae86:	2800      	cmp	r0, #0
    ae88:	d012      	beq.n	aeb0 <_svfiprintf_r+0x1a4>
    ae8a:	4b19      	ldr	r3, [pc, #100]	; (aef0 <_svfiprintf_r+0x1e4>)
    ae8c:	2b00      	cmp	r3, #0
    ae8e:	d106      	bne.n	ae9e <_svfiprintf_r+0x192>
    ae90:	2207      	movs	r2, #7
    ae92:	9b05      	ldr	r3, [sp, #20]
    ae94:	3307      	adds	r3, #7
    ae96:	4393      	bics	r3, r2
    ae98:	3308      	adds	r3, #8
    ae9a:	9305      	str	r3, [sp, #20]
    ae9c:	e014      	b.n	aec8 <_svfiprintf_r+0x1bc>
    ae9e:	ab05      	add	r3, sp, #20
    aea0:	9300      	str	r3, [sp, #0]
    aea2:	9802      	ldr	r0, [sp, #8]
    aea4:	1c29      	adds	r1, r5, #0
    aea6:	1c32      	adds	r2, r6, #0
    aea8:	4b12      	ldr	r3, [pc, #72]	; (aef4 <_svfiprintf_r+0x1e8>)
    aeaa:	f7fb fdab 	bl	6a04 <_printf_float>
    aeae:	e007      	b.n	aec0 <_svfiprintf_r+0x1b4>
    aeb0:	ab05      	add	r3, sp, #20
    aeb2:	9300      	str	r3, [sp, #0]
    aeb4:	9802      	ldr	r0, [sp, #8]
    aeb6:	1c29      	adds	r1, r5, #0
    aeb8:	1c32      	adds	r2, r6, #0
    aeba:	4b0e      	ldr	r3, [pc, #56]	; (aef4 <_svfiprintf_r+0x1e8>)
    aebc:	f7fc f84e 	bl	6f5c <_printf_i>
    aec0:	9003      	str	r0, [sp, #12]
    aec2:	9b03      	ldr	r3, [sp, #12]
    aec4:	3301      	adds	r3, #1
    aec6:	d004      	beq.n	aed2 <_svfiprintf_r+0x1c6>
    aec8:	696b      	ldr	r3, [r5, #20]
    aeca:	9a03      	ldr	r2, [sp, #12]
    aecc:	189b      	adds	r3, r3, r2
    aece:	616b      	str	r3, [r5, #20]
    aed0:	e73d      	b.n	ad4e <_svfiprintf_r+0x42>
    aed2:	89b3      	ldrh	r3, [r6, #12]
    aed4:	980b      	ldr	r0, [sp, #44]	; 0x2c
    aed6:	065b      	lsls	r3, r3, #25
    aed8:	d501      	bpl.n	aede <_svfiprintf_r+0x1d2>
    aeda:	2001      	movs	r0, #1
    aedc:	4240      	negs	r0, r0
    aede:	b01f      	add	sp, #124	; 0x7c
    aee0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    aee2:	46c0      	nop			; (mov r8, r8)
    aee4:	0000e078 	.word	0x0000e078
    aee8:	0000e07e 	.word	0x0000e07e
    aeec:	0000e082 	.word	0x0000e082
    aef0:	00006a05 	.word	0x00006a05
    aef4:	0000ac4d 	.word	0x0000ac4d

0000aef8 <_sungetc_r>:
    aef8:	b538      	push	{r3, r4, r5, lr}
    aefa:	1c14      	adds	r4, r2, #0
    aefc:	1c4b      	adds	r3, r1, #1
    aefe:	d102      	bne.n	af06 <_sungetc_r+0xe>
    af00:	2001      	movs	r0, #1
    af02:	4240      	negs	r0, r0
    af04:	e034      	b.n	af70 <_sungetc_r+0x78>
    af06:	8993      	ldrh	r3, [r2, #12]
    af08:	2220      	movs	r2, #32
    af0a:	4393      	bics	r3, r2
    af0c:	6b62      	ldr	r2, [r4, #52]	; 0x34
    af0e:	81a3      	strh	r3, [r4, #12]
    af10:	b2cd      	uxtb	r5, r1
    af12:	6863      	ldr	r3, [r4, #4]
    af14:	2a00      	cmp	r2, #0
    af16:	d00f      	beq.n	af38 <_sungetc_r+0x40>
    af18:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    af1a:	4293      	cmp	r3, r2
    af1c:	da06      	bge.n	af2c <_sungetc_r+0x34>
    af1e:	6823      	ldr	r3, [r4, #0]
    af20:	3b01      	subs	r3, #1
    af22:	6023      	str	r3, [r4, #0]
    af24:	701d      	strb	r5, [r3, #0]
    af26:	6863      	ldr	r3, [r4, #4]
    af28:	3301      	adds	r3, #1
    af2a:	e01f      	b.n	af6c <_sungetc_r+0x74>
    af2c:	1c21      	adds	r1, r4, #0
    af2e:	f7fd fefd 	bl	8d2c <__submore>
    af32:	2800      	cmp	r0, #0
    af34:	d0f3      	beq.n	af1e <_sungetc_r+0x26>
    af36:	e7e3      	b.n	af00 <_sungetc_r+0x8>
    af38:	6921      	ldr	r1, [r4, #16]
    af3a:	6822      	ldr	r2, [r4, #0]
    af3c:	2900      	cmp	r1, #0
    af3e:	d009      	beq.n	af54 <_sungetc_r+0x5c>
    af40:	428a      	cmp	r2, r1
    af42:	d907      	bls.n	af54 <_sungetc_r+0x5c>
    af44:	1e51      	subs	r1, r2, #1
    af46:	7808      	ldrb	r0, [r1, #0]
    af48:	42a8      	cmp	r0, r5
    af4a:	d103      	bne.n	af54 <_sungetc_r+0x5c>
    af4c:	3301      	adds	r3, #1
    af4e:	6021      	str	r1, [r4, #0]
    af50:	6063      	str	r3, [r4, #4]
    af52:	e00d      	b.n	af70 <_sungetc_r+0x78>
    af54:	6423      	str	r3, [r4, #64]	; 0x40
    af56:	1c23      	adds	r3, r4, #0
    af58:	3344      	adds	r3, #68	; 0x44
    af5a:	6363      	str	r3, [r4, #52]	; 0x34
    af5c:	2303      	movs	r3, #3
    af5e:	63a3      	str	r3, [r4, #56]	; 0x38
    af60:	1c23      	adds	r3, r4, #0
    af62:	3346      	adds	r3, #70	; 0x46
    af64:	63e2      	str	r2, [r4, #60]	; 0x3c
    af66:	701d      	strb	r5, [r3, #0]
    af68:	6023      	str	r3, [r4, #0]
    af6a:	2301      	movs	r3, #1
    af6c:	1c28      	adds	r0, r5, #0
    af6e:	6063      	str	r3, [r4, #4]
    af70:	bd38      	pop	{r3, r4, r5, pc}

0000af72 <__ssrefill_r>:
    af72:	b510      	push	{r4, lr}
    af74:	1c0c      	adds	r4, r1, #0
    af76:	6b49      	ldr	r1, [r1, #52]	; 0x34
    af78:	2900      	cmp	r1, #0
    af7a:	d00e      	beq.n	af9a <__ssrefill_r+0x28>
    af7c:	1c23      	adds	r3, r4, #0
    af7e:	3344      	adds	r3, #68	; 0x44
    af80:	4299      	cmp	r1, r3
    af82:	d001      	beq.n	af88 <__ssrefill_r+0x16>
    af84:	f7fb fac4 	bl	6510 <_free_r>
    af88:	2000      	movs	r0, #0
    af8a:	6c23      	ldr	r3, [r4, #64]	; 0x40
    af8c:	6360      	str	r0, [r4, #52]	; 0x34
    af8e:	6063      	str	r3, [r4, #4]
    af90:	4283      	cmp	r3, r0
    af92:	d002      	beq.n	af9a <__ssrefill_r+0x28>
    af94:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    af96:	6023      	str	r3, [r4, #0]
    af98:	e009      	b.n	afae <__ssrefill_r+0x3c>
    af9a:	6923      	ldr	r3, [r4, #16]
    af9c:	2220      	movs	r2, #32
    af9e:	6023      	str	r3, [r4, #0]
    afa0:	2300      	movs	r3, #0
    afa2:	2001      	movs	r0, #1
    afa4:	6063      	str	r3, [r4, #4]
    afa6:	89a3      	ldrh	r3, [r4, #12]
    afa8:	4240      	negs	r0, r0
    afaa:	4313      	orrs	r3, r2
    afac:	81a3      	strh	r3, [r4, #12]
    afae:	bd10      	pop	{r4, pc}

0000afb0 <__ssvfiscanf_r>:
    afb0:	b5f0      	push	{r4, r5, r6, r7, lr}
    afb2:	4cb5      	ldr	r4, [pc, #724]	; (b288 <__ssvfiscanf_r+0x2d8>)
    afb4:	1c07      	adds	r7, r0, #0
    afb6:	44a5      	add	sp, r4
    afb8:	9303      	str	r3, [sp, #12]
    afba:	2300      	movs	r3, #0
    afbc:	2086      	movs	r0, #134	; 0x86
    afbe:	9348      	str	r3, [sp, #288]	; 0x120
    afc0:	9349      	str	r3, [sp, #292]	; 0x124
    afc2:	ab05      	add	r3, sp, #20
    afc4:	934a      	str	r3, [sp, #296]	; 0x128
    afc6:	23be      	movs	r3, #190	; 0xbe
    afc8:	0040      	lsls	r0, r0, #1
    afca:	1c0d      	adds	r5, r1, #0
    afcc:	9201      	str	r2, [sp, #4]
    afce:	a902      	add	r1, sp, #8
    afd0:	4aae      	ldr	r2, [pc, #696]	; (b28c <__ssvfiscanf_r+0x2dc>)
    afd2:	005b      	lsls	r3, r3, #1
    afd4:	1809      	adds	r1, r1, r0
    afd6:	50ca      	str	r2, [r1, r3]
    afd8:	4aad      	ldr	r2, [pc, #692]	; (b290 <__ssvfiscanf_r+0x2e0>)
    afda:	a902      	add	r1, sp, #8
    afdc:	3304      	adds	r3, #4
    afde:	1809      	adds	r1, r1, r0
    afe0:	50ca      	str	r2, [r1, r3]
    afe2:	9b01      	ldr	r3, [sp, #4]
    afe4:	781c      	ldrb	r4, [r3, #0]
    afe6:	2c00      	cmp	r4, #0
    afe8:	d100      	bne.n	afec <__ssvfiscanf_r+0x3c>
    afea:	e144      	b.n	b276 <__ssvfiscanf_r+0x2c6>
    afec:	4ea9      	ldr	r6, [pc, #676]	; (b294 <__ssvfiscanf_r+0x2e4>)
    afee:	6833      	ldr	r3, [r6, #0]
    aff0:	191b      	adds	r3, r3, r4
    aff2:	785a      	ldrb	r2, [r3, #1]
    aff4:	2308      	movs	r3, #8
    aff6:	4013      	ands	r3, r2
    aff8:	d023      	beq.n	b042 <__ssvfiscanf_r+0x92>
    affa:	686b      	ldr	r3, [r5, #4]
    affc:	2b00      	cmp	r3, #0
    affe:	dd10      	ble.n	b022 <__ssvfiscanf_r+0x72>
    b000:	682b      	ldr	r3, [r5, #0]
    b002:	6831      	ldr	r1, [r6, #0]
    b004:	781a      	ldrb	r2, [r3, #0]
    b006:	188a      	adds	r2, r1, r2
    b008:	7852      	ldrb	r2, [r2, #1]
    b00a:	0712      	lsls	r2, r2, #28
    b00c:	d515      	bpl.n	b03a <__ssvfiscanf_r+0x8a>
    b00e:	9a49      	ldr	r2, [sp, #292]	; 0x124
    b010:	3301      	adds	r3, #1
    b012:	9202      	str	r2, [sp, #8]
    b014:	3201      	adds	r2, #1
    b016:	9249      	str	r2, [sp, #292]	; 0x124
    b018:	686a      	ldr	r2, [r5, #4]
    b01a:	602b      	str	r3, [r5, #0]
    b01c:	3a01      	subs	r2, #1
    b01e:	606a      	str	r2, [r5, #4]
    b020:	e7eb      	b.n	affa <__ssvfiscanf_r+0x4a>
    b022:	2186      	movs	r1, #134	; 0x86
    b024:	23c0      	movs	r3, #192	; 0xc0
    b026:	0049      	lsls	r1, r1, #1
    b028:	aa02      	add	r2, sp, #8
    b02a:	1852      	adds	r2, r2, r1
    b02c:	005b      	lsls	r3, r3, #1
    b02e:	58d3      	ldr	r3, [r2, r3]
    b030:	1c38      	adds	r0, r7, #0
    b032:	1c29      	adds	r1, r5, #0
    b034:	4798      	blx	r3
    b036:	2800      	cmp	r0, #0
    b038:	d0e2      	beq.n	b000 <__ssvfiscanf_r+0x50>
    b03a:	9e01      	ldr	r6, [sp, #4]
    b03c:	3601      	adds	r6, #1
    b03e:	9601      	str	r6, [sp, #4]
    b040:	e7cf      	b.n	afe2 <__ssvfiscanf_r+0x32>
    b042:	9a01      	ldr	r2, [sp, #4]
    b044:	1c56      	adds	r6, r2, #1
    b046:	2c25      	cmp	r4, #37	; 0x25
    b048:	d14f      	bne.n	b0ea <__ssvfiscanf_r+0x13a>
    b04a:	9347      	str	r3, [sp, #284]	; 0x11c
    b04c:	9345      	str	r3, [sp, #276]	; 0x114
    b04e:	7853      	ldrb	r3, [r2, #1]
    b050:	2b2a      	cmp	r3, #42	; 0x2a
    b052:	d102      	bne.n	b05a <__ssvfiscanf_r+0xaa>
    b054:	3b1a      	subs	r3, #26
    b056:	9345      	str	r3, [sp, #276]	; 0x114
    b058:	3601      	adds	r6, #1
    b05a:	1c34      	adds	r4, r6, #0
    b05c:	7821      	ldrb	r1, [r4, #0]
    b05e:	1c0b      	adds	r3, r1, #0
    b060:	3b30      	subs	r3, #48	; 0x30
    b062:	2b09      	cmp	r3, #9
    b064:	d809      	bhi.n	b07a <__ssvfiscanf_r+0xca>
    b066:	9b47      	ldr	r3, [sp, #284]	; 0x11c
    b068:	3401      	adds	r4, #1
    b06a:	9301      	str	r3, [sp, #4]
    b06c:	230a      	movs	r3, #10
    b06e:	9a01      	ldr	r2, [sp, #4]
    b070:	4353      	muls	r3, r2
    b072:	3b30      	subs	r3, #48	; 0x30
    b074:	1859      	adds	r1, r3, r1
    b076:	9147      	str	r1, [sp, #284]	; 0x11c
    b078:	e7f0      	b.n	b05c <__ssvfiscanf_r+0xac>
    b07a:	4e87      	ldr	r6, [pc, #540]	; (b298 <__ssvfiscanf_r+0x2e8>)
    b07c:	2203      	movs	r2, #3
    b07e:	1c30      	adds	r0, r6, #0
    b080:	f7fb fa2a 	bl	64d8 <memchr>
    b084:	2800      	cmp	r0, #0
    b086:	d008      	beq.n	b09a <__ssvfiscanf_r+0xea>
    b088:	1b80      	subs	r0, r0, r6
    b08a:	2601      	movs	r6, #1
    b08c:	4086      	lsls	r6, r0
    b08e:	1c30      	adds	r0, r6, #0
    b090:	9b45      	ldr	r3, [sp, #276]	; 0x114
    b092:	3401      	adds	r4, #1
    b094:	4318      	orrs	r0, r3
    b096:	9301      	str	r3, [sp, #4]
    b098:	9045      	str	r0, [sp, #276]	; 0x114
    b09a:	1c66      	adds	r6, r4, #1
    b09c:	7824      	ldrb	r4, [r4, #0]
    b09e:	2c67      	cmp	r4, #103	; 0x67
    b0a0:	d810      	bhi.n	b0c4 <__ssvfiscanf_r+0x114>
    b0a2:	2c65      	cmp	r4, #101	; 0x65
    b0a4:	d300      	bcc.n	b0a8 <__ssvfiscanf_r+0xf8>
    b0a6:	e084      	b.n	b1b2 <__ssvfiscanf_r+0x202>
    b0a8:	2c5b      	cmp	r4, #91	; 0x5b
    b0aa:	d05a      	beq.n	b162 <__ssvfiscanf_r+0x1b2>
    b0ac:	d805      	bhi.n	b0ba <__ssvfiscanf_r+0x10a>
    b0ae:	2c00      	cmp	r4, #0
    b0b0:	d100      	bne.n	b0b4 <__ssvfiscanf_r+0x104>
    b0b2:	e0e2      	b.n	b27a <__ssvfiscanf_r+0x2ca>
    b0b4:	2c25      	cmp	r4, #37	; 0x25
    b0b6:	d018      	beq.n	b0ea <__ssvfiscanf_r+0x13a>
    b0b8:	e07d      	b.n	b1b6 <__ssvfiscanf_r+0x206>
    b0ba:	2c63      	cmp	r4, #99	; 0x63
    b0bc:	d05f      	beq.n	b17e <__ssvfiscanf_r+0x1ce>
    b0be:	2c64      	cmp	r4, #100	; 0x64
    b0c0:	d046      	beq.n	b150 <__ssvfiscanf_r+0x1a0>
    b0c2:	e078      	b.n	b1b6 <__ssvfiscanf_r+0x206>
    b0c4:	2c70      	cmp	r4, #112	; 0x70
    b0c6:	d034      	beq.n	b132 <__ssvfiscanf_r+0x182>
    b0c8:	d807      	bhi.n	b0da <__ssvfiscanf_r+0x12a>
    b0ca:	2c6e      	cmp	r4, #110	; 0x6e
    b0cc:	d05f      	beq.n	b18e <__ssvfiscanf_r+0x1de>
    b0ce:	d841      	bhi.n	b154 <__ssvfiscanf_r+0x1a4>
    b0d0:	2c69      	cmp	r4, #105	; 0x69
    b0d2:	d170      	bne.n	b1b6 <__ssvfiscanf_r+0x206>
    b0d4:	2300      	movs	r3, #0
    b0d6:	9346      	str	r3, [sp, #280]	; 0x118
    b0d8:	e041      	b.n	b15e <__ssvfiscanf_r+0x1ae>
    b0da:	2c75      	cmp	r4, #117	; 0x75
    b0dc:	d038      	beq.n	b150 <__ssvfiscanf_r+0x1a0>
    b0de:	2c78      	cmp	r4, #120	; 0x78
    b0e0:	d02d      	beq.n	b13e <__ssvfiscanf_r+0x18e>
    b0e2:	2c73      	cmp	r4, #115	; 0x73
    b0e4:	d167      	bne.n	b1b6 <__ssvfiscanf_r+0x206>
    b0e6:	2302      	movs	r3, #2
    b0e8:	e047      	b.n	b17a <__ssvfiscanf_r+0x1ca>
    b0ea:	686b      	ldr	r3, [r5, #4]
    b0ec:	2b00      	cmp	r3, #0
    b0ee:	dd0e      	ble.n	b10e <__ssvfiscanf_r+0x15e>
    b0f0:	682b      	ldr	r3, [r5, #0]
    b0f2:	781a      	ldrb	r2, [r3, #0]
    b0f4:	42a2      	cmp	r2, r4
    b0f6:	d000      	beq.n	b0fa <__ssvfiscanf_r+0x14a>
    b0f8:	e0bd      	b.n	b276 <__ssvfiscanf_r+0x2c6>
    b0fa:	3301      	adds	r3, #1
    b0fc:	686a      	ldr	r2, [r5, #4]
    b0fe:	602b      	str	r3, [r5, #0]
    b100:	9b49      	ldr	r3, [sp, #292]	; 0x124
    b102:	3a01      	subs	r2, #1
    b104:	9301      	str	r3, [sp, #4]
    b106:	3301      	adds	r3, #1
    b108:	606a      	str	r2, [r5, #4]
    b10a:	9349      	str	r3, [sp, #292]	; 0x124
    b10c:	e797      	b.n	b03e <__ssvfiscanf_r+0x8e>
    b10e:	2186      	movs	r1, #134	; 0x86
    b110:	23c0      	movs	r3, #192	; 0xc0
    b112:	0049      	lsls	r1, r1, #1
    b114:	aa02      	add	r2, sp, #8
    b116:	1852      	adds	r2, r2, r1
    b118:	005b      	lsls	r3, r3, #1
    b11a:	58d3      	ldr	r3, [r2, r3]
    b11c:	1c38      	adds	r0, r7, #0
    b11e:	1c29      	adds	r1, r5, #0
    b120:	4798      	blx	r3
    b122:	2800      	cmp	r0, #0
    b124:	d0e4      	beq.n	b0f0 <__ssvfiscanf_r+0x140>
    b126:	9848      	ldr	r0, [sp, #288]	; 0x120
    b128:	2800      	cmp	r0, #0
    b12a:	d000      	beq.n	b12e <__ssvfiscanf_r+0x17e>
    b12c:	e09f      	b.n	b26e <__ssvfiscanf_r+0x2be>
    b12e:	3801      	subs	r0, #1
    b130:	e0a5      	b.n	b27e <__ssvfiscanf_r+0x2ce>
    b132:	9b45      	ldr	r3, [sp, #276]	; 0x114
    b134:	9301      	str	r3, [sp, #4]
    b136:	2320      	movs	r3, #32
    b138:	9a01      	ldr	r2, [sp, #4]
    b13a:	4313      	orrs	r3, r2
    b13c:	9345      	str	r3, [sp, #276]	; 0x114
    b13e:	9b45      	ldr	r3, [sp, #276]	; 0x114
    b140:	9301      	str	r3, [sp, #4]
    b142:	2380      	movs	r3, #128	; 0x80
    b144:	9a01      	ldr	r2, [sp, #4]
    b146:	009b      	lsls	r3, r3, #2
    b148:	4313      	orrs	r3, r2
    b14a:	9345      	str	r3, [sp, #276]	; 0x114
    b14c:	2310      	movs	r3, #16
    b14e:	e002      	b.n	b156 <__ssvfiscanf_r+0x1a6>
    b150:	230a      	movs	r3, #10
    b152:	e000      	b.n	b156 <__ssvfiscanf_r+0x1a6>
    b154:	2308      	movs	r3, #8
    b156:	9346      	str	r3, [sp, #280]	; 0x118
    b158:	2304      	movs	r3, #4
    b15a:	2c6e      	cmp	r4, #110	; 0x6e
    b15c:	dc0d      	bgt.n	b17a <__ssvfiscanf_r+0x1ca>
    b15e:	2303      	movs	r3, #3
    b160:	e00b      	b.n	b17a <__ssvfiscanf_r+0x1ca>
    b162:	1c31      	adds	r1, r6, #0
    b164:	a805      	add	r0, sp, #20
    b166:	f7fc fca9 	bl	7abc <__sccl>
    b16a:	9b45      	ldr	r3, [sp, #276]	; 0x114
    b16c:	1c06      	adds	r6, r0, #0
    b16e:	9301      	str	r3, [sp, #4]
    b170:	2340      	movs	r3, #64	; 0x40
    b172:	9a01      	ldr	r2, [sp, #4]
    b174:	4313      	orrs	r3, r2
    b176:	9345      	str	r3, [sp, #276]	; 0x114
    b178:	2301      	movs	r3, #1
    b17a:	934b      	str	r3, [sp, #300]	; 0x12c
    b17c:	e01f      	b.n	b1be <__ssvfiscanf_r+0x20e>
    b17e:	9b45      	ldr	r3, [sp, #276]	; 0x114
    b180:	9301      	str	r3, [sp, #4]
    b182:	2340      	movs	r3, #64	; 0x40
    b184:	9a01      	ldr	r2, [sp, #4]
    b186:	4313      	orrs	r3, r2
    b188:	9345      	str	r3, [sp, #276]	; 0x114
    b18a:	2300      	movs	r3, #0
    b18c:	e7f5      	b.n	b17a <__ssvfiscanf_r+0x1ca>
    b18e:	9945      	ldr	r1, [sp, #276]	; 0x114
    b190:	06cb      	lsls	r3, r1, #27
    b192:	d500      	bpl.n	b196 <__ssvfiscanf_r+0x1e6>
    b194:	e753      	b.n	b03e <__ssvfiscanf_r+0x8e>
    b196:	9b03      	ldr	r3, [sp, #12]
    b198:	9a49      	ldr	r2, [sp, #292]	; 0x124
    b19a:	07c8      	lsls	r0, r1, #31
    b19c:	d504      	bpl.n	b1a8 <__ssvfiscanf_r+0x1f8>
    b19e:	1d19      	adds	r1, r3, #4
    b1a0:	9103      	str	r1, [sp, #12]
    b1a2:	681b      	ldr	r3, [r3, #0]
    b1a4:	801a      	strh	r2, [r3, #0]
    b1a6:	e74a      	b.n	b03e <__ssvfiscanf_r+0x8e>
    b1a8:	1d19      	adds	r1, r3, #4
    b1aa:	9103      	str	r1, [sp, #12]
    b1ac:	681b      	ldr	r3, [r3, #0]
    b1ae:	601a      	str	r2, [r3, #0]
    b1b0:	e745      	b.n	b03e <__ssvfiscanf_r+0x8e>
    b1b2:	2305      	movs	r3, #5
    b1b4:	e7e1      	b.n	b17a <__ssvfiscanf_r+0x1ca>
    b1b6:	2303      	movs	r3, #3
    b1b8:	934b      	str	r3, [sp, #300]	; 0x12c
    b1ba:	3307      	adds	r3, #7
    b1bc:	9346      	str	r3, [sp, #280]	; 0x118
    b1be:	686b      	ldr	r3, [r5, #4]
    b1c0:	2b00      	cmp	r3, #0
    b1c2:	dd04      	ble.n	b1ce <__ssvfiscanf_r+0x21e>
    b1c4:	9b45      	ldr	r3, [sp, #276]	; 0x114
    b1c6:	9301      	str	r3, [sp, #4]
    b1c8:	065b      	lsls	r3, r3, #25
    b1ca:	d518      	bpl.n	b1fe <__ssvfiscanf_r+0x24e>
    b1cc:	e01f      	b.n	b20e <__ssvfiscanf_r+0x25e>
    b1ce:	2186      	movs	r1, #134	; 0x86
    b1d0:	23c0      	movs	r3, #192	; 0xc0
    b1d2:	0049      	lsls	r1, r1, #1
    b1d4:	aa02      	add	r2, sp, #8
    b1d6:	1852      	adds	r2, r2, r1
    b1d8:	005b      	lsls	r3, r3, #1
    b1da:	58d3      	ldr	r3, [r2, r3]
    b1dc:	1c38      	adds	r0, r7, #0
    b1de:	1c29      	adds	r1, r5, #0
    b1e0:	4798      	blx	r3
    b1e2:	2800      	cmp	r0, #0
    b1e4:	d0ee      	beq.n	b1c4 <__ssvfiscanf_r+0x214>
    b1e6:	e79e      	b.n	b126 <__ssvfiscanf_r+0x176>
    b1e8:	9a49      	ldr	r2, [sp, #292]	; 0x124
    b1ea:	9201      	str	r2, [sp, #4]
    b1ec:	3201      	adds	r2, #1
    b1ee:	9249      	str	r2, [sp, #292]	; 0x124
    b1f0:	686a      	ldr	r2, [r5, #4]
    b1f2:	3a01      	subs	r2, #1
    b1f4:	606a      	str	r2, [r5, #4]
    b1f6:	2a00      	cmp	r2, #0
    b1f8:	dd13      	ble.n	b222 <__ssvfiscanf_r+0x272>
    b1fa:	3301      	adds	r3, #1
    b1fc:	602b      	str	r3, [r5, #0]
    b1fe:	682b      	ldr	r3, [r5, #0]
    b200:	4924      	ldr	r1, [pc, #144]	; (b294 <__ssvfiscanf_r+0x2e4>)
    b202:	781a      	ldrb	r2, [r3, #0]
    b204:	6809      	ldr	r1, [r1, #0]
    b206:	188a      	adds	r2, r1, r2
    b208:	7852      	ldrb	r2, [r2, #1]
    b20a:	0712      	lsls	r2, r2, #28
    b20c:	d4ec      	bmi.n	b1e8 <__ssvfiscanf_r+0x238>
    b20e:	9b4b      	ldr	r3, [sp, #300]	; 0x12c
    b210:	2b02      	cmp	r3, #2
    b212:	dc13      	bgt.n	b23c <__ssvfiscanf_r+0x28c>
    b214:	1c38      	adds	r0, r7, #0
    b216:	a945      	add	r1, sp, #276	; 0x114
    b218:	1c2a      	adds	r2, r5, #0
    b21a:	ab03      	add	r3, sp, #12
    b21c:	f7fc f9a0 	bl	7560 <_scanf_chars>
    b220:	e01f      	b.n	b262 <__ssvfiscanf_r+0x2b2>
    b222:	2186      	movs	r1, #134	; 0x86
    b224:	23c0      	movs	r3, #192	; 0xc0
    b226:	0049      	lsls	r1, r1, #1
    b228:	aa02      	add	r2, sp, #8
    b22a:	1852      	adds	r2, r2, r1
    b22c:	005b      	lsls	r3, r3, #1
    b22e:	58d3      	ldr	r3, [r2, r3]
    b230:	1c38      	adds	r0, r7, #0
    b232:	1c29      	adds	r1, r5, #0
    b234:	4798      	blx	r3
    b236:	2800      	cmp	r0, #0
    b238:	d0e1      	beq.n	b1fe <__ssvfiscanf_r+0x24e>
    b23a:	e774      	b.n	b126 <__ssvfiscanf_r+0x176>
    b23c:	2b04      	cmp	r3, #4
    b23e:	dc06      	bgt.n	b24e <__ssvfiscanf_r+0x29e>
    b240:	1c38      	adds	r0, r7, #0
    b242:	a945      	add	r1, sp, #276	; 0x114
    b244:	1c2a      	adds	r2, r5, #0
    b246:	ab03      	add	r3, sp, #12
    b248:	f7fc f9e8 	bl	761c <_scanf_i>
    b24c:	e009      	b.n	b262 <__ssvfiscanf_r+0x2b2>
    b24e:	4b13      	ldr	r3, [pc, #76]	; (b29c <__ssvfiscanf_r+0x2ec>)
    b250:	2b00      	cmp	r3, #0
    b252:	d100      	bne.n	b256 <__ssvfiscanf_r+0x2a6>
    b254:	e6f3      	b.n	b03e <__ssvfiscanf_r+0x8e>
    b256:	1c38      	adds	r0, r7, #0
    b258:	a945      	add	r1, sp, #276	; 0x114
    b25a:	1c2a      	adds	r2, r5, #0
    b25c:	ab03      	add	r3, sp, #12
    b25e:	f7fb ff95 	bl	718c <_scanf_float>
    b262:	2801      	cmp	r0, #1
    b264:	d007      	beq.n	b276 <__ssvfiscanf_r+0x2c6>
    b266:	2802      	cmp	r0, #2
    b268:	d000      	beq.n	b26c <__ssvfiscanf_r+0x2bc>
    b26a:	e6e8      	b.n	b03e <__ssvfiscanf_r+0x8e>
    b26c:	e75b      	b.n	b126 <__ssvfiscanf_r+0x176>
    b26e:	89ab      	ldrh	r3, [r5, #12]
    b270:	065b      	lsls	r3, r3, #25
    b272:	d504      	bpl.n	b27e <__ssvfiscanf_r+0x2ce>
    b274:	e001      	b.n	b27a <__ssvfiscanf_r+0x2ca>
    b276:	9848      	ldr	r0, [sp, #288]	; 0x120
    b278:	e001      	b.n	b27e <__ssvfiscanf_r+0x2ce>
    b27a:	2001      	movs	r0, #1
    b27c:	4240      	negs	r0, r0
    b27e:	23a7      	movs	r3, #167	; 0xa7
    b280:	009b      	lsls	r3, r3, #2
    b282:	449d      	add	sp, r3
    b284:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b286:	46c0      	nop			; (mov r8, r8)
    b288:	fffffd64 	.word	0xfffffd64
    b28c:	0000aef9 	.word	0x0000aef9
    b290:	0000af73 	.word	0x0000af73
    b294:	20000138 	.word	0x20000138
    b298:	0000e07e 	.word	0x0000e07e
    b29c:	0000718d 	.word	0x0000718d

0000b2a0 <_read_r>:
    b2a0:	b538      	push	{r3, r4, r5, lr}
    b2a2:	1c05      	adds	r5, r0, #0
    b2a4:	2000      	movs	r0, #0
    b2a6:	4c07      	ldr	r4, [pc, #28]	; (b2c4 <_read_r+0x24>)
    b2a8:	6020      	str	r0, [r4, #0]
    b2aa:	1c08      	adds	r0, r1, #0
    b2ac:	1c11      	adds	r1, r2, #0
    b2ae:	1c1a      	adds	r2, r3, #0
    b2b0:	f7f7 fbfe 	bl	2ab0 <_read>
    b2b4:	1c43      	adds	r3, r0, #1
    b2b6:	d103      	bne.n	b2c0 <_read_r+0x20>
    b2b8:	6823      	ldr	r3, [r4, #0]
    b2ba:	2b00      	cmp	r3, #0
    b2bc:	d000      	beq.n	b2c0 <_read_r+0x20>
    b2be:	602b      	str	r3, [r5, #0]
    b2c0:	bd38      	pop	{r3, r4, r5, pc}
    b2c2:	46c0      	nop			; (mov r8, r8)
    b2c4:	2000406c 	.word	0x2000406c

0000b2c8 <_malloc_usable_size_r>:
    b2c8:	1f0b      	subs	r3, r1, #4
    b2ca:	681a      	ldr	r2, [r3, #0]
    b2cc:	1f10      	subs	r0, r2, #4
    b2ce:	2a00      	cmp	r2, #0
    b2d0:	da04      	bge.n	b2dc <_malloc_usable_size_r+0x14>
    b2d2:	1889      	adds	r1, r1, r2
    b2d4:	3904      	subs	r1, #4
    b2d6:	680b      	ldr	r3, [r1, #0]
    b2d8:	18d0      	adds	r0, r2, r3
    b2da:	3804      	subs	r0, #4
    b2dc:	4770      	bx	lr
	...

0000b2e0 <_getpid>:
    b2e0:	2258      	movs	r2, #88	; 0x58
    b2e2:	2001      	movs	r0, #1
    b2e4:	4b01      	ldr	r3, [pc, #4]	; (b2ec <_getpid+0xc>)
    b2e6:	4240      	negs	r0, r0
    b2e8:	601a      	str	r2, [r3, #0]
    b2ea:	4770      	bx	lr
    b2ec:	2000406c 	.word	0x2000406c

0000b2f0 <_kill>:
    b2f0:	2258      	movs	r2, #88	; 0x58
    b2f2:	2001      	movs	r0, #1
    b2f4:	4b01      	ldr	r3, [pc, #4]	; (b2fc <_kill+0xc>)
    b2f6:	4240      	negs	r0, r0
    b2f8:	601a      	str	r2, [r3, #0]
    b2fa:	4770      	bx	lr
    b2fc:	2000406c 	.word	0x2000406c

0000b300 <__gnu_thumb1_case_uqi>:
    b300:	b402      	push	{r1}
    b302:	4671      	mov	r1, lr
    b304:	0849      	lsrs	r1, r1, #1
    b306:	0049      	lsls	r1, r1, #1
    b308:	5c09      	ldrb	r1, [r1, r0]
    b30a:	0049      	lsls	r1, r1, #1
    b30c:	448e      	add	lr, r1
    b30e:	bc02      	pop	{r1}
    b310:	4770      	bx	lr
    b312:	46c0      	nop			; (mov r8, r8)

0000b314 <__aeabi_cdrcmple>:
    b314:	4684      	mov	ip, r0
    b316:	1c10      	adds	r0, r2, #0
    b318:	4662      	mov	r2, ip
    b31a:	468c      	mov	ip, r1
    b31c:	1c19      	adds	r1, r3, #0
    b31e:	4663      	mov	r3, ip
    b320:	e000      	b.n	b324 <__aeabi_cdcmpeq>
    b322:	46c0      	nop			; (mov r8, r8)

0000b324 <__aeabi_cdcmpeq>:
    b324:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    b326:	f000 ff51 	bl	c1cc <__ledf2>
    b32a:	2800      	cmp	r0, #0
    b32c:	d401      	bmi.n	b332 <__aeabi_cdcmpeq+0xe>
    b32e:	2100      	movs	r1, #0
    b330:	42c8      	cmn	r0, r1
    b332:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0000b334 <__aeabi_dcmpeq>:
    b334:	b510      	push	{r4, lr}
    b336:	f000 fe95 	bl	c064 <__eqdf2>
    b33a:	4240      	negs	r0, r0
    b33c:	3001      	adds	r0, #1
    b33e:	bd10      	pop	{r4, pc}

0000b340 <__aeabi_dcmplt>:
    b340:	b510      	push	{r4, lr}
    b342:	f000 ff43 	bl	c1cc <__ledf2>
    b346:	2800      	cmp	r0, #0
    b348:	db01      	blt.n	b34e <__aeabi_dcmplt+0xe>
    b34a:	2000      	movs	r0, #0
    b34c:	bd10      	pop	{r4, pc}
    b34e:	2001      	movs	r0, #1
    b350:	bd10      	pop	{r4, pc}
    b352:	46c0      	nop			; (mov r8, r8)

0000b354 <__aeabi_dcmple>:
    b354:	b510      	push	{r4, lr}
    b356:	f000 ff39 	bl	c1cc <__ledf2>
    b35a:	2800      	cmp	r0, #0
    b35c:	dd01      	ble.n	b362 <__aeabi_dcmple+0xe>
    b35e:	2000      	movs	r0, #0
    b360:	bd10      	pop	{r4, pc}
    b362:	2001      	movs	r0, #1
    b364:	bd10      	pop	{r4, pc}
    b366:	46c0      	nop			; (mov r8, r8)

0000b368 <__aeabi_dcmpgt>:
    b368:	b510      	push	{r4, lr}
    b36a:	f000 febf 	bl	c0ec <__gedf2>
    b36e:	2800      	cmp	r0, #0
    b370:	dc01      	bgt.n	b376 <__aeabi_dcmpgt+0xe>
    b372:	2000      	movs	r0, #0
    b374:	bd10      	pop	{r4, pc}
    b376:	2001      	movs	r0, #1
    b378:	bd10      	pop	{r4, pc}
    b37a:	46c0      	nop			; (mov r8, r8)

0000b37c <__aeabi_dcmpge>:
    b37c:	b510      	push	{r4, lr}
    b37e:	f000 feb5 	bl	c0ec <__gedf2>
    b382:	2800      	cmp	r0, #0
    b384:	da01      	bge.n	b38a <__aeabi_dcmpge+0xe>
    b386:	2000      	movs	r0, #0
    b388:	bd10      	pop	{r4, pc}
    b38a:	2001      	movs	r0, #1
    b38c:	bd10      	pop	{r4, pc}
    b38e:	46c0      	nop			; (mov r8, r8)

0000b390 <__aeabi_d2uiz>:
    b390:	b538      	push	{r3, r4, r5, lr}
    b392:	2200      	movs	r2, #0
    b394:	4b0c      	ldr	r3, [pc, #48]	; (b3c8 <__aeabi_d2uiz+0x38>)
    b396:	1c04      	adds	r4, r0, #0
    b398:	1c0d      	adds	r5, r1, #0
    b39a:	f7ff ffef 	bl	b37c <__aeabi_dcmpge>
    b39e:	2800      	cmp	r0, #0
    b3a0:	d104      	bne.n	b3ac <__aeabi_d2uiz+0x1c>
    b3a2:	1c20      	adds	r0, r4, #0
    b3a4:	1c29      	adds	r1, r5, #0
    b3a6:	f001 fd8b 	bl	cec0 <__aeabi_d2iz>
    b3aa:	bd38      	pop	{r3, r4, r5, pc}
    b3ac:	4b06      	ldr	r3, [pc, #24]	; (b3c8 <__aeabi_d2uiz+0x38>)
    b3ae:	2200      	movs	r2, #0
    b3b0:	1c20      	adds	r0, r4, #0
    b3b2:	1c29      	adds	r1, r5, #0
    b3b4:	f001 fa0a 	bl	c7cc <__aeabi_dsub>
    b3b8:	f001 fd82 	bl	cec0 <__aeabi_d2iz>
    b3bc:	2380      	movs	r3, #128	; 0x80
    b3be:	061b      	lsls	r3, r3, #24
    b3c0:	469c      	mov	ip, r3
    b3c2:	4460      	add	r0, ip
    b3c4:	e7f1      	b.n	b3aa <__aeabi_d2uiz+0x1a>
    b3c6:	46c0      	nop			; (mov r8, r8)
    b3c8:	41e00000 	.word	0x41e00000

0000b3cc <__aeabi_dadd>:
    b3cc:	b5f0      	push	{r4, r5, r6, r7, lr}
    b3ce:	4645      	mov	r5, r8
    b3d0:	4657      	mov	r7, sl
    b3d2:	464e      	mov	r6, r9
    b3d4:	4694      	mov	ip, r2
    b3d6:	004c      	lsls	r4, r1, #1
    b3d8:	030a      	lsls	r2, r1, #12
    b3da:	0fc9      	lsrs	r1, r1, #31
    b3dc:	b4e0      	push	{r5, r6, r7}
    b3de:	4688      	mov	r8, r1
    b3e0:	1c0e      	adds	r6, r1, #0
    b3e2:	0319      	lsls	r1, r3, #12
    b3e4:	0f47      	lsrs	r7, r0, #29
    b3e6:	00c5      	lsls	r5, r0, #3
    b3e8:	0a48      	lsrs	r0, r1, #9
    b3ea:	4661      	mov	r1, ip
    b3ec:	0f49      	lsrs	r1, r1, #29
    b3ee:	4301      	orrs	r1, r0
    b3f0:	4660      	mov	r0, ip
    b3f2:	0a52      	lsrs	r2, r2, #9
    b3f4:	4317      	orrs	r7, r2
    b3f6:	00c0      	lsls	r0, r0, #3
    b3f8:	005a      	lsls	r2, r3, #1
    b3fa:	0d64      	lsrs	r4, r4, #21
    b3fc:	0d52      	lsrs	r2, r2, #21
    b3fe:	0fdb      	lsrs	r3, r3, #31
    b400:	4684      	mov	ip, r0
    b402:	4598      	cmp	r8, r3
    b404:	d100      	bne.n	b408 <__aeabi_dadd+0x3c>
    b406:	e0a7      	b.n	b558 <__aeabi_dadd+0x18c>
    b408:	1aa0      	subs	r0, r4, r2
    b40a:	2800      	cmp	r0, #0
    b40c:	dc00      	bgt.n	b410 <__aeabi_dadd+0x44>
    b40e:	e101      	b.n	b614 <__aeabi_dadd+0x248>
    b410:	2a00      	cmp	r2, #0
    b412:	d13d      	bne.n	b490 <__aeabi_dadd+0xc4>
    b414:	4663      	mov	r3, ip
    b416:	430b      	orrs	r3, r1
    b418:	d000      	beq.n	b41c <__aeabi_dadd+0x50>
    b41a:	e0d4      	b.n	b5c6 <__aeabi_dadd+0x1fa>
    b41c:	076b      	lsls	r3, r5, #29
    b41e:	d100      	bne.n	b422 <__aeabi_dadd+0x56>
    b420:	e088      	b.n	b534 <__aeabi_dadd+0x168>
    b422:	230f      	movs	r3, #15
    b424:	402b      	ands	r3, r5
    b426:	2b04      	cmp	r3, #4
    b428:	d100      	bne.n	b42c <__aeabi_dadd+0x60>
    b42a:	e083      	b.n	b534 <__aeabi_dadd+0x168>
    b42c:	1d2a      	adds	r2, r5, #4
    b42e:	42aa      	cmp	r2, r5
    b430:	41ad      	sbcs	r5, r5
    b432:	2380      	movs	r3, #128	; 0x80
    b434:	426d      	negs	r5, r5
    b436:	197f      	adds	r7, r7, r5
    b438:	041b      	lsls	r3, r3, #16
    b43a:	403b      	ands	r3, r7
    b43c:	4646      	mov	r6, r8
    b43e:	1c15      	adds	r5, r2, #0
    b440:	2b00      	cmp	r3, #0
    b442:	d100      	bne.n	b446 <__aeabi_dadd+0x7a>
    b444:	e07c      	b.n	b540 <__aeabi_dadd+0x174>
    b446:	4bcc      	ldr	r3, [pc, #816]	; (b778 <__aeabi_dadd+0x3ac>)
    b448:	3401      	adds	r4, #1
    b44a:	429c      	cmp	r4, r3
    b44c:	d100      	bne.n	b450 <__aeabi_dadd+0x84>
    b44e:	e0fd      	b.n	b64c <__aeabi_dadd+0x280>
    b450:	1c3a      	adds	r2, r7, #0
    b452:	4bca      	ldr	r3, [pc, #808]	; (b77c <__aeabi_dadd+0x3b0>)
    b454:	08ed      	lsrs	r5, r5, #3
    b456:	401a      	ands	r2, r3
    b458:	0750      	lsls	r0, r2, #29
    b45a:	0564      	lsls	r4, r4, #21
    b45c:	0252      	lsls	r2, r2, #9
    b45e:	4305      	orrs	r5, r0
    b460:	0b12      	lsrs	r2, r2, #12
    b462:	0d64      	lsrs	r4, r4, #21
    b464:	2100      	movs	r1, #0
    b466:	0312      	lsls	r2, r2, #12
    b468:	0d0b      	lsrs	r3, r1, #20
    b46a:	051b      	lsls	r3, r3, #20
    b46c:	0564      	lsls	r4, r4, #21
    b46e:	0b12      	lsrs	r2, r2, #12
    b470:	431a      	orrs	r2, r3
    b472:	0863      	lsrs	r3, r4, #1
    b474:	4cc2      	ldr	r4, [pc, #776]	; (b780 <__aeabi_dadd+0x3b4>)
    b476:	07f6      	lsls	r6, r6, #31
    b478:	4014      	ands	r4, r2
    b47a:	431c      	orrs	r4, r3
    b47c:	0064      	lsls	r4, r4, #1
    b47e:	0864      	lsrs	r4, r4, #1
    b480:	4334      	orrs	r4, r6
    b482:	1c28      	adds	r0, r5, #0
    b484:	1c21      	adds	r1, r4, #0
    b486:	bc1c      	pop	{r2, r3, r4}
    b488:	4690      	mov	r8, r2
    b48a:	4699      	mov	r9, r3
    b48c:	46a2      	mov	sl, r4
    b48e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b490:	4bb9      	ldr	r3, [pc, #740]	; (b778 <__aeabi_dadd+0x3ac>)
    b492:	429c      	cmp	r4, r3
    b494:	d0c2      	beq.n	b41c <__aeabi_dadd+0x50>
    b496:	2380      	movs	r3, #128	; 0x80
    b498:	041b      	lsls	r3, r3, #16
    b49a:	4319      	orrs	r1, r3
    b49c:	2838      	cmp	r0, #56	; 0x38
    b49e:	dd00      	ble.n	b4a2 <__aeabi_dadd+0xd6>
    b4a0:	e0ec      	b.n	b67c <__aeabi_dadd+0x2b0>
    b4a2:	281f      	cmp	r0, #31
    b4a4:	dd00      	ble.n	b4a8 <__aeabi_dadd+0xdc>
    b4a6:	e121      	b.n	b6ec <__aeabi_dadd+0x320>
    b4a8:	2220      	movs	r2, #32
    b4aa:	1c0e      	adds	r6, r1, #0
    b4ac:	4663      	mov	r3, ip
    b4ae:	1a12      	subs	r2, r2, r0
    b4b0:	4096      	lsls	r6, r2
    b4b2:	40c3      	lsrs	r3, r0
    b4b4:	4333      	orrs	r3, r6
    b4b6:	4666      	mov	r6, ip
    b4b8:	4096      	lsls	r6, r2
    b4ba:	1c32      	adds	r2, r6, #0
    b4bc:	1e56      	subs	r6, r2, #1
    b4be:	41b2      	sbcs	r2, r6
    b4c0:	4313      	orrs	r3, r2
    b4c2:	1c0a      	adds	r2, r1, #0
    b4c4:	40c2      	lsrs	r2, r0
    b4c6:	1aeb      	subs	r3, r5, r3
    b4c8:	429d      	cmp	r5, r3
    b4ca:	41b6      	sbcs	r6, r6
    b4cc:	1c1d      	adds	r5, r3, #0
    b4ce:	1aba      	subs	r2, r7, r2
    b4d0:	4276      	negs	r6, r6
    b4d2:	1b97      	subs	r7, r2, r6
    b4d4:	023b      	lsls	r3, r7, #8
    b4d6:	d400      	bmi.n	b4da <__aeabi_dadd+0x10e>
    b4d8:	e097      	b.n	b60a <__aeabi_dadd+0x23e>
    b4da:	027a      	lsls	r2, r7, #9
    b4dc:	0a56      	lsrs	r6, r2, #9
    b4de:	2e00      	cmp	r6, #0
    b4e0:	d100      	bne.n	b4e4 <__aeabi_dadd+0x118>
    b4e2:	e0b6      	b.n	b652 <__aeabi_dadd+0x286>
    b4e4:	1c30      	adds	r0, r6, #0
    b4e6:	f7fa fba7 	bl	5c38 <__clzsi2>
    b4ea:	1c03      	adds	r3, r0, #0
    b4ec:	3b08      	subs	r3, #8
    b4ee:	2b1f      	cmp	r3, #31
    b4f0:	dd00      	ble.n	b4f4 <__aeabi_dadd+0x128>
    b4f2:	e0b7      	b.n	b664 <__aeabi_dadd+0x298>
    b4f4:	409e      	lsls	r6, r3
    b4f6:	1c37      	adds	r7, r6, #0
    b4f8:	2628      	movs	r6, #40	; 0x28
    b4fa:	1c2a      	adds	r2, r5, #0
    b4fc:	1a36      	subs	r6, r6, r0
    b4fe:	40f2      	lsrs	r2, r6
    b500:	1c16      	adds	r6, r2, #0
    b502:	409d      	lsls	r5, r3
    b504:	433e      	orrs	r6, r7
    b506:	429c      	cmp	r4, r3
    b508:	dd00      	ble.n	b50c <__aeabi_dadd+0x140>
    b50a:	e0b2      	b.n	b672 <__aeabi_dadd+0x2a6>
    b50c:	1b1c      	subs	r4, r3, r4
    b50e:	1c62      	adds	r2, r4, #1
    b510:	2a1f      	cmp	r2, #31
    b512:	dd00      	ble.n	b516 <__aeabi_dadd+0x14a>
    b514:	e0d8      	b.n	b6c8 <__aeabi_dadd+0x2fc>
    b516:	231f      	movs	r3, #31
    b518:	1c29      	adds	r1, r5, #0
    b51a:	1b1c      	subs	r4, r3, r4
    b51c:	1c33      	adds	r3, r6, #0
    b51e:	40a5      	lsls	r5, r4
    b520:	40a3      	lsls	r3, r4
    b522:	40d1      	lsrs	r1, r2
    b524:	1e6c      	subs	r4, r5, #1
    b526:	41a5      	sbcs	r5, r4
    b528:	40d6      	lsrs	r6, r2
    b52a:	4319      	orrs	r1, r3
    b52c:	430d      	orrs	r5, r1
    b52e:	1c37      	adds	r7, r6, #0
    b530:	2400      	movs	r4, #0
    b532:	e773      	b.n	b41c <__aeabi_dadd+0x50>
    b534:	2380      	movs	r3, #128	; 0x80
    b536:	041b      	lsls	r3, r3, #16
    b538:	403b      	ands	r3, r7
    b53a:	4646      	mov	r6, r8
    b53c:	d000      	beq.n	b540 <__aeabi_dadd+0x174>
    b53e:	e782      	b.n	b446 <__aeabi_dadd+0x7a>
    b540:	4b8d      	ldr	r3, [pc, #564]	; (b778 <__aeabi_dadd+0x3ac>)
    b542:	08ed      	lsrs	r5, r5, #3
    b544:	0778      	lsls	r0, r7, #29
    b546:	4305      	orrs	r5, r0
    b548:	08fa      	lsrs	r2, r7, #3
    b54a:	429c      	cmp	r4, r3
    b54c:	d032      	beq.n	b5b4 <__aeabi_dadd+0x1e8>
    b54e:	0312      	lsls	r2, r2, #12
    b550:	0564      	lsls	r4, r4, #21
    b552:	0b12      	lsrs	r2, r2, #12
    b554:	0d64      	lsrs	r4, r4, #21
    b556:	e785      	b.n	b464 <__aeabi_dadd+0x98>
    b558:	1aa3      	subs	r3, r4, r2
    b55a:	2b00      	cmp	r3, #0
    b55c:	dc00      	bgt.n	b560 <__aeabi_dadd+0x194>
    b55e:	e094      	b.n	b68a <__aeabi_dadd+0x2be>
    b560:	2a00      	cmp	r2, #0
    b562:	d03c      	beq.n	b5de <__aeabi_dadd+0x212>
    b564:	4a84      	ldr	r2, [pc, #528]	; (b778 <__aeabi_dadd+0x3ac>)
    b566:	4294      	cmp	r4, r2
    b568:	d100      	bne.n	b56c <__aeabi_dadd+0x1a0>
    b56a:	e757      	b.n	b41c <__aeabi_dadd+0x50>
    b56c:	2280      	movs	r2, #128	; 0x80
    b56e:	0412      	lsls	r2, r2, #16
    b570:	4311      	orrs	r1, r2
    b572:	2b38      	cmp	r3, #56	; 0x38
    b574:	dc00      	bgt.n	b578 <__aeabi_dadd+0x1ac>
    b576:	e105      	b.n	b784 <__aeabi_dadd+0x3b8>
    b578:	4663      	mov	r3, ip
    b57a:	4319      	orrs	r1, r3
    b57c:	1e48      	subs	r0, r1, #1
    b57e:	4181      	sbcs	r1, r0
    b580:	2200      	movs	r2, #0
    b582:	b2c8      	uxtb	r0, r1
    b584:	1940      	adds	r0, r0, r5
    b586:	42a8      	cmp	r0, r5
    b588:	419b      	sbcs	r3, r3
    b58a:	1c05      	adds	r5, r0, #0
    b58c:	19d2      	adds	r2, r2, r7
    b58e:	425b      	negs	r3, r3
    b590:	18d7      	adds	r7, r2, r3
    b592:	023b      	lsls	r3, r7, #8
    b594:	d539      	bpl.n	b60a <__aeabi_dadd+0x23e>
    b596:	4b78      	ldr	r3, [pc, #480]	; (b778 <__aeabi_dadd+0x3ac>)
    b598:	3401      	adds	r4, #1
    b59a:	429c      	cmp	r4, r3
    b59c:	d100      	bne.n	b5a0 <__aeabi_dadd+0x1d4>
    b59e:	e14c      	b.n	b83a <__aeabi_dadd+0x46e>
    b5a0:	2001      	movs	r0, #1
    b5a2:	4a76      	ldr	r2, [pc, #472]	; (b77c <__aeabi_dadd+0x3b0>)
    b5a4:	086b      	lsrs	r3, r5, #1
    b5a6:	403a      	ands	r2, r7
    b5a8:	4028      	ands	r0, r5
    b5aa:	4318      	orrs	r0, r3
    b5ac:	07d5      	lsls	r5, r2, #31
    b5ae:	4305      	orrs	r5, r0
    b5b0:	0857      	lsrs	r7, r2, #1
    b5b2:	e733      	b.n	b41c <__aeabi_dadd+0x50>
    b5b4:	1c2b      	adds	r3, r5, #0
    b5b6:	4313      	orrs	r3, r2
    b5b8:	d048      	beq.n	b64c <__aeabi_dadd+0x280>
    b5ba:	2380      	movs	r3, #128	; 0x80
    b5bc:	031b      	lsls	r3, r3, #12
    b5be:	431a      	orrs	r2, r3
    b5c0:	0312      	lsls	r2, r2, #12
    b5c2:	0b12      	lsrs	r2, r2, #12
    b5c4:	e74e      	b.n	b464 <__aeabi_dadd+0x98>
    b5c6:	3801      	subs	r0, #1
    b5c8:	2800      	cmp	r0, #0
    b5ca:	d178      	bne.n	b6be <__aeabi_dadd+0x2f2>
    b5cc:	4663      	mov	r3, ip
    b5ce:	1aee      	subs	r6, r5, r3
    b5d0:	42b5      	cmp	r5, r6
    b5d2:	419b      	sbcs	r3, r3
    b5d4:	1a7a      	subs	r2, r7, r1
    b5d6:	425b      	negs	r3, r3
    b5d8:	1ad7      	subs	r7, r2, r3
    b5da:	1c35      	adds	r5, r6, #0
    b5dc:	e77a      	b.n	b4d4 <__aeabi_dadd+0x108>
    b5de:	1c02      	adds	r2, r0, #0
    b5e0:	430a      	orrs	r2, r1
    b5e2:	d100      	bne.n	b5e6 <__aeabi_dadd+0x21a>
    b5e4:	e71a      	b.n	b41c <__aeabi_dadd+0x50>
    b5e6:	3b01      	subs	r3, #1
    b5e8:	2b00      	cmp	r3, #0
    b5ea:	d000      	beq.n	b5ee <__aeabi_dadd+0x222>
    b5ec:	e0f2      	b.n	b7d4 <__aeabi_dadd+0x408>
    b5ee:	1940      	adds	r0, r0, r5
    b5f0:	42a8      	cmp	r0, r5
    b5f2:	419b      	sbcs	r3, r3
    b5f4:	19ca      	adds	r2, r1, r7
    b5f6:	425b      	negs	r3, r3
    b5f8:	18d7      	adds	r7, r2, r3
    b5fa:	1c05      	adds	r5, r0, #0
    b5fc:	e7c9      	b.n	b592 <__aeabi_dadd+0x1c6>
    b5fe:	1c13      	adds	r3, r2, #0
    b600:	4333      	orrs	r3, r6
    b602:	d100      	bne.n	b606 <__aeabi_dadd+0x23a>
    b604:	e118      	b.n	b838 <__aeabi_dadd+0x46c>
    b606:	1c17      	adds	r7, r2, #0
    b608:	1c35      	adds	r5, r6, #0
    b60a:	4646      	mov	r6, r8
    b60c:	076b      	lsls	r3, r5, #29
    b60e:	d000      	beq.n	b612 <__aeabi_dadd+0x246>
    b610:	e707      	b.n	b422 <__aeabi_dadd+0x56>
    b612:	e795      	b.n	b540 <__aeabi_dadd+0x174>
    b614:	2800      	cmp	r0, #0
    b616:	d17a      	bne.n	b70e <__aeabi_dadd+0x342>
    b618:	1c62      	adds	r2, r4, #1
    b61a:	0552      	lsls	r2, r2, #21
    b61c:	0d52      	lsrs	r2, r2, #21
    b61e:	2a01      	cmp	r2, #1
    b620:	dc00      	bgt.n	b624 <__aeabi_dadd+0x258>
    b622:	e0fb      	b.n	b81c <__aeabi_dadd+0x450>
    b624:	4662      	mov	r2, ip
    b626:	1aaa      	subs	r2, r5, r2
    b628:	4295      	cmp	r5, r2
    b62a:	41b6      	sbcs	r6, r6
    b62c:	4691      	mov	r9, r2
    b62e:	1a78      	subs	r0, r7, r1
    b630:	4272      	negs	r2, r6
    b632:	1a86      	subs	r6, r0, r2
    b634:	0232      	lsls	r2, r6, #8
    b636:	d400      	bmi.n	b63a <__aeabi_dadd+0x26e>
    b638:	e093      	b.n	b762 <__aeabi_dadd+0x396>
    b63a:	4662      	mov	r2, ip
    b63c:	1b55      	subs	r5, r2, r5
    b63e:	45ac      	cmp	ip, r5
    b640:	4180      	sbcs	r0, r0
    b642:	1bcf      	subs	r7, r1, r7
    b644:	4240      	negs	r0, r0
    b646:	1a3e      	subs	r6, r7, r0
    b648:	4698      	mov	r8, r3
    b64a:	e748      	b.n	b4de <__aeabi_dadd+0x112>
    b64c:	2200      	movs	r2, #0
    b64e:	2500      	movs	r5, #0
    b650:	e708      	b.n	b464 <__aeabi_dadd+0x98>
    b652:	1c28      	adds	r0, r5, #0
    b654:	f7fa faf0 	bl	5c38 <__clzsi2>
    b658:	3020      	adds	r0, #32
    b65a:	1c03      	adds	r3, r0, #0
    b65c:	3b08      	subs	r3, #8
    b65e:	2b1f      	cmp	r3, #31
    b660:	dc00      	bgt.n	b664 <__aeabi_dadd+0x298>
    b662:	e747      	b.n	b4f4 <__aeabi_dadd+0x128>
    b664:	3828      	subs	r0, #40	; 0x28
    b666:	4085      	lsls	r5, r0
    b668:	1c2e      	adds	r6, r5, #0
    b66a:	2500      	movs	r5, #0
    b66c:	429c      	cmp	r4, r3
    b66e:	dc00      	bgt.n	b672 <__aeabi_dadd+0x2a6>
    b670:	e74c      	b.n	b50c <__aeabi_dadd+0x140>
    b672:	4a42      	ldr	r2, [pc, #264]	; (b77c <__aeabi_dadd+0x3b0>)
    b674:	1ae4      	subs	r4, r4, r3
    b676:	4016      	ands	r6, r2
    b678:	1c37      	adds	r7, r6, #0
    b67a:	e6cf      	b.n	b41c <__aeabi_dadd+0x50>
    b67c:	4663      	mov	r3, ip
    b67e:	4319      	orrs	r1, r3
    b680:	1e4b      	subs	r3, r1, #1
    b682:	4199      	sbcs	r1, r3
    b684:	2200      	movs	r2, #0
    b686:	b2cb      	uxtb	r3, r1
    b688:	e71d      	b.n	b4c6 <__aeabi_dadd+0xfa>
    b68a:	2b00      	cmp	r3, #0
    b68c:	d000      	beq.n	b690 <__aeabi_dadd+0x2c4>
    b68e:	e0f2      	b.n	b876 <__aeabi_dadd+0x4aa>
    b690:	1c60      	adds	r0, r4, #1
    b692:	0543      	lsls	r3, r0, #21
    b694:	0d5b      	lsrs	r3, r3, #21
    b696:	2b01      	cmp	r3, #1
    b698:	dc00      	bgt.n	b69c <__aeabi_dadd+0x2d0>
    b69a:	e0a4      	b.n	b7e6 <__aeabi_dadd+0x41a>
    b69c:	4b36      	ldr	r3, [pc, #216]	; (b778 <__aeabi_dadd+0x3ac>)
    b69e:	4298      	cmp	r0, r3
    b6a0:	d100      	bne.n	b6a4 <__aeabi_dadd+0x2d8>
    b6a2:	e121      	b.n	b8e8 <__aeabi_dadd+0x51c>
    b6a4:	4663      	mov	r3, ip
    b6a6:	195c      	adds	r4, r3, r5
    b6a8:	42ac      	cmp	r4, r5
    b6aa:	419b      	sbcs	r3, r3
    b6ac:	19cf      	adds	r7, r1, r7
    b6ae:	425b      	negs	r3, r3
    b6b0:	18fa      	adds	r2, r7, r3
    b6b2:	0864      	lsrs	r4, r4, #1
    b6b4:	07d5      	lsls	r5, r2, #31
    b6b6:	4325      	orrs	r5, r4
    b6b8:	0857      	lsrs	r7, r2, #1
    b6ba:	1c04      	adds	r4, r0, #0
    b6bc:	e6ae      	b.n	b41c <__aeabi_dadd+0x50>
    b6be:	4b2e      	ldr	r3, [pc, #184]	; (b778 <__aeabi_dadd+0x3ac>)
    b6c0:	429c      	cmp	r4, r3
    b6c2:	d000      	beq.n	b6c6 <__aeabi_dadd+0x2fa>
    b6c4:	e6ea      	b.n	b49c <__aeabi_dadd+0xd0>
    b6c6:	e6a9      	b.n	b41c <__aeabi_dadd+0x50>
    b6c8:	1c21      	adds	r1, r4, #0
    b6ca:	1c33      	adds	r3, r6, #0
    b6cc:	391f      	subs	r1, #31
    b6ce:	40cb      	lsrs	r3, r1
    b6d0:	1c19      	adds	r1, r3, #0
    b6d2:	2a20      	cmp	r2, #32
    b6d4:	d100      	bne.n	b6d8 <__aeabi_dadd+0x30c>
    b6d6:	e082      	b.n	b7de <__aeabi_dadd+0x412>
    b6d8:	233f      	movs	r3, #63	; 0x3f
    b6da:	1b1c      	subs	r4, r3, r4
    b6dc:	40a6      	lsls	r6, r4
    b6de:	4335      	orrs	r5, r6
    b6e0:	1e6e      	subs	r6, r5, #1
    b6e2:	41b5      	sbcs	r5, r6
    b6e4:	2700      	movs	r7, #0
    b6e6:	430d      	orrs	r5, r1
    b6e8:	2400      	movs	r4, #0
    b6ea:	e78e      	b.n	b60a <__aeabi_dadd+0x23e>
    b6ec:	1c03      	adds	r3, r0, #0
    b6ee:	1c0e      	adds	r6, r1, #0
    b6f0:	3b20      	subs	r3, #32
    b6f2:	40de      	lsrs	r6, r3
    b6f4:	2820      	cmp	r0, #32
    b6f6:	d074      	beq.n	b7e2 <__aeabi_dadd+0x416>
    b6f8:	2340      	movs	r3, #64	; 0x40
    b6fa:	1a1b      	subs	r3, r3, r0
    b6fc:	4099      	lsls	r1, r3
    b6fe:	1c0b      	adds	r3, r1, #0
    b700:	4662      	mov	r2, ip
    b702:	4313      	orrs	r3, r2
    b704:	1e59      	subs	r1, r3, #1
    b706:	418b      	sbcs	r3, r1
    b708:	2200      	movs	r2, #0
    b70a:	4333      	orrs	r3, r6
    b70c:	e6db      	b.n	b4c6 <__aeabi_dadd+0xfa>
    b70e:	2c00      	cmp	r4, #0
    b710:	d050      	beq.n	b7b4 <__aeabi_dadd+0x3e8>
    b712:	4c19      	ldr	r4, [pc, #100]	; (b778 <__aeabi_dadd+0x3ac>)
    b714:	42a2      	cmp	r2, r4
    b716:	d100      	bne.n	b71a <__aeabi_dadd+0x34e>
    b718:	e0a8      	b.n	b86c <__aeabi_dadd+0x4a0>
    b71a:	2480      	movs	r4, #128	; 0x80
    b71c:	0424      	lsls	r4, r4, #16
    b71e:	4240      	negs	r0, r0
    b720:	4327      	orrs	r7, r4
    b722:	2838      	cmp	r0, #56	; 0x38
    b724:	dd00      	ble.n	b728 <__aeabi_dadd+0x35c>
    b726:	e0d9      	b.n	b8dc <__aeabi_dadd+0x510>
    b728:	281f      	cmp	r0, #31
    b72a:	dd00      	ble.n	b72e <__aeabi_dadd+0x362>
    b72c:	e139      	b.n	b9a2 <__aeabi_dadd+0x5d6>
    b72e:	2420      	movs	r4, #32
    b730:	1c3e      	adds	r6, r7, #0
    b732:	1a24      	subs	r4, r4, r0
    b734:	40a6      	lsls	r6, r4
    b736:	46b0      	mov	r8, r6
    b738:	1c2e      	adds	r6, r5, #0
    b73a:	46a1      	mov	r9, r4
    b73c:	40c6      	lsrs	r6, r0
    b73e:	4644      	mov	r4, r8
    b740:	4326      	orrs	r6, r4
    b742:	464c      	mov	r4, r9
    b744:	40a5      	lsls	r5, r4
    b746:	1e6c      	subs	r4, r5, #1
    b748:	41a5      	sbcs	r5, r4
    b74a:	40c7      	lsrs	r7, r0
    b74c:	4335      	orrs	r5, r6
    b74e:	4660      	mov	r0, ip
    b750:	1b45      	subs	r5, r0, r5
    b752:	1bcf      	subs	r7, r1, r7
    b754:	45ac      	cmp	ip, r5
    b756:	4189      	sbcs	r1, r1
    b758:	4249      	negs	r1, r1
    b75a:	1a7f      	subs	r7, r7, r1
    b75c:	1c14      	adds	r4, r2, #0
    b75e:	4698      	mov	r8, r3
    b760:	e6b8      	b.n	b4d4 <__aeabi_dadd+0x108>
    b762:	464b      	mov	r3, r9
    b764:	464d      	mov	r5, r9
    b766:	4333      	orrs	r3, r6
    b768:	d000      	beq.n	b76c <__aeabi_dadd+0x3a0>
    b76a:	e6b8      	b.n	b4de <__aeabi_dadd+0x112>
    b76c:	2600      	movs	r6, #0
    b76e:	2700      	movs	r7, #0
    b770:	2400      	movs	r4, #0
    b772:	2500      	movs	r5, #0
    b774:	e6e4      	b.n	b540 <__aeabi_dadd+0x174>
    b776:	46c0      	nop			; (mov r8, r8)
    b778:	000007ff 	.word	0x000007ff
    b77c:	ff7fffff 	.word	0xff7fffff
    b780:	800fffff 	.word	0x800fffff
    b784:	2b1f      	cmp	r3, #31
    b786:	dc5b      	bgt.n	b840 <__aeabi_dadd+0x474>
    b788:	2220      	movs	r2, #32
    b78a:	1c08      	adds	r0, r1, #0
    b78c:	1ad2      	subs	r2, r2, r3
    b78e:	4090      	lsls	r0, r2
    b790:	4681      	mov	r9, r0
    b792:	4660      	mov	r0, ip
    b794:	4692      	mov	sl, r2
    b796:	40d8      	lsrs	r0, r3
    b798:	464a      	mov	r2, r9
    b79a:	4310      	orrs	r0, r2
    b79c:	4681      	mov	r9, r0
    b79e:	4652      	mov	r2, sl
    b7a0:	4660      	mov	r0, ip
    b7a2:	4090      	lsls	r0, r2
    b7a4:	1c02      	adds	r2, r0, #0
    b7a6:	1e50      	subs	r0, r2, #1
    b7a8:	4182      	sbcs	r2, r0
    b7aa:	4648      	mov	r0, r9
    b7ac:	4310      	orrs	r0, r2
    b7ae:	1c0a      	adds	r2, r1, #0
    b7b0:	40da      	lsrs	r2, r3
    b7b2:	e6e7      	b.n	b584 <__aeabi_dadd+0x1b8>
    b7b4:	1c3c      	adds	r4, r7, #0
    b7b6:	432c      	orrs	r4, r5
    b7b8:	d058      	beq.n	b86c <__aeabi_dadd+0x4a0>
    b7ba:	43c0      	mvns	r0, r0
    b7bc:	2800      	cmp	r0, #0
    b7be:	d151      	bne.n	b864 <__aeabi_dadd+0x498>
    b7c0:	4660      	mov	r0, ip
    b7c2:	1b45      	subs	r5, r0, r5
    b7c4:	45ac      	cmp	ip, r5
    b7c6:	4180      	sbcs	r0, r0
    b7c8:	1bcf      	subs	r7, r1, r7
    b7ca:	4240      	negs	r0, r0
    b7cc:	1a3f      	subs	r7, r7, r0
    b7ce:	1c14      	adds	r4, r2, #0
    b7d0:	4698      	mov	r8, r3
    b7d2:	e67f      	b.n	b4d4 <__aeabi_dadd+0x108>
    b7d4:	4a8f      	ldr	r2, [pc, #572]	; (ba14 <__aeabi_dadd+0x648>)
    b7d6:	4294      	cmp	r4, r2
    b7d8:	d000      	beq.n	b7dc <__aeabi_dadd+0x410>
    b7da:	e6ca      	b.n	b572 <__aeabi_dadd+0x1a6>
    b7dc:	e61e      	b.n	b41c <__aeabi_dadd+0x50>
    b7de:	2600      	movs	r6, #0
    b7e0:	e77d      	b.n	b6de <__aeabi_dadd+0x312>
    b7e2:	2300      	movs	r3, #0
    b7e4:	e78c      	b.n	b700 <__aeabi_dadd+0x334>
    b7e6:	1c3b      	adds	r3, r7, #0
    b7e8:	432b      	orrs	r3, r5
    b7ea:	2c00      	cmp	r4, #0
    b7ec:	d000      	beq.n	b7f0 <__aeabi_dadd+0x424>
    b7ee:	e0bd      	b.n	b96c <__aeabi_dadd+0x5a0>
    b7f0:	2b00      	cmp	r3, #0
    b7f2:	d100      	bne.n	b7f6 <__aeabi_dadd+0x42a>
    b7f4:	e0f5      	b.n	b9e2 <__aeabi_dadd+0x616>
    b7f6:	4663      	mov	r3, ip
    b7f8:	430b      	orrs	r3, r1
    b7fa:	d100      	bne.n	b7fe <__aeabi_dadd+0x432>
    b7fc:	e60e      	b.n	b41c <__aeabi_dadd+0x50>
    b7fe:	4663      	mov	r3, ip
    b800:	195b      	adds	r3, r3, r5
    b802:	42ab      	cmp	r3, r5
    b804:	4180      	sbcs	r0, r0
    b806:	19ca      	adds	r2, r1, r7
    b808:	4240      	negs	r0, r0
    b80a:	1817      	adds	r7, r2, r0
    b80c:	023a      	lsls	r2, r7, #8
    b80e:	d400      	bmi.n	b812 <__aeabi_dadd+0x446>
    b810:	e0fc      	b.n	ba0c <__aeabi_dadd+0x640>
    b812:	4a81      	ldr	r2, [pc, #516]	; (ba18 <__aeabi_dadd+0x64c>)
    b814:	1c1d      	adds	r5, r3, #0
    b816:	4017      	ands	r7, r2
    b818:	3401      	adds	r4, #1
    b81a:	e5ff      	b.n	b41c <__aeabi_dadd+0x50>
    b81c:	1c3a      	adds	r2, r7, #0
    b81e:	432a      	orrs	r2, r5
    b820:	2c00      	cmp	r4, #0
    b822:	d151      	bne.n	b8c8 <__aeabi_dadd+0x4fc>
    b824:	2a00      	cmp	r2, #0
    b826:	d000      	beq.n	b82a <__aeabi_dadd+0x45e>
    b828:	e085      	b.n	b936 <__aeabi_dadd+0x56a>
    b82a:	4662      	mov	r2, ip
    b82c:	430a      	orrs	r2, r1
    b82e:	d003      	beq.n	b838 <__aeabi_dadd+0x46c>
    b830:	1c0f      	adds	r7, r1, #0
    b832:	4665      	mov	r5, ip
    b834:	4698      	mov	r8, r3
    b836:	e5f1      	b.n	b41c <__aeabi_dadd+0x50>
    b838:	2600      	movs	r6, #0
    b83a:	2700      	movs	r7, #0
    b83c:	2500      	movs	r5, #0
    b83e:	e67f      	b.n	b540 <__aeabi_dadd+0x174>
    b840:	1c18      	adds	r0, r3, #0
    b842:	1c0a      	adds	r2, r1, #0
    b844:	3820      	subs	r0, #32
    b846:	40c2      	lsrs	r2, r0
    b848:	2b20      	cmp	r3, #32
    b84a:	d100      	bne.n	b84e <__aeabi_dadd+0x482>
    b84c:	e0a7      	b.n	b99e <__aeabi_dadd+0x5d2>
    b84e:	2040      	movs	r0, #64	; 0x40
    b850:	1ac0      	subs	r0, r0, r3
    b852:	4081      	lsls	r1, r0
    b854:	1c08      	adds	r0, r1, #0
    b856:	4663      	mov	r3, ip
    b858:	4318      	orrs	r0, r3
    b85a:	1e41      	subs	r1, r0, #1
    b85c:	4188      	sbcs	r0, r1
    b85e:	4310      	orrs	r0, r2
    b860:	2200      	movs	r2, #0
    b862:	e68f      	b.n	b584 <__aeabi_dadd+0x1b8>
    b864:	4c6b      	ldr	r4, [pc, #428]	; (ba14 <__aeabi_dadd+0x648>)
    b866:	42a2      	cmp	r2, r4
    b868:	d000      	beq.n	b86c <__aeabi_dadd+0x4a0>
    b86a:	e75a      	b.n	b722 <__aeabi_dadd+0x356>
    b86c:	1c0f      	adds	r7, r1, #0
    b86e:	4665      	mov	r5, ip
    b870:	1c14      	adds	r4, r2, #0
    b872:	4698      	mov	r8, r3
    b874:	e5d2      	b.n	b41c <__aeabi_dadd+0x50>
    b876:	2c00      	cmp	r4, #0
    b878:	d13a      	bne.n	b8f0 <__aeabi_dadd+0x524>
    b87a:	1c38      	adds	r0, r7, #0
    b87c:	4328      	orrs	r0, r5
    b87e:	d071      	beq.n	b964 <__aeabi_dadd+0x598>
    b880:	43db      	mvns	r3, r3
    b882:	2b00      	cmp	r3, #0
    b884:	d018      	beq.n	b8b8 <__aeabi_dadd+0x4ec>
    b886:	4863      	ldr	r0, [pc, #396]	; (ba14 <__aeabi_dadd+0x648>)
    b888:	4282      	cmp	r2, r0
    b88a:	d06b      	beq.n	b964 <__aeabi_dadd+0x598>
    b88c:	2b38      	cmp	r3, #56	; 0x38
    b88e:	dd00      	ble.n	b892 <__aeabi_dadd+0x4c6>
    b890:	e09d      	b.n	b9ce <__aeabi_dadd+0x602>
    b892:	2b1f      	cmp	r3, #31
    b894:	dd00      	ble.n	b898 <__aeabi_dadd+0x4cc>
    b896:	e0a7      	b.n	b9e8 <__aeabi_dadd+0x61c>
    b898:	2020      	movs	r0, #32
    b89a:	1c3c      	adds	r4, r7, #0
    b89c:	1ac0      	subs	r0, r0, r3
    b89e:	4084      	lsls	r4, r0
    b8a0:	46a1      	mov	r9, r4
    b8a2:	1c2c      	adds	r4, r5, #0
    b8a4:	4682      	mov	sl, r0
    b8a6:	40dc      	lsrs	r4, r3
    b8a8:	4648      	mov	r0, r9
    b8aa:	4304      	orrs	r4, r0
    b8ac:	4650      	mov	r0, sl
    b8ae:	4085      	lsls	r5, r0
    b8b0:	1e68      	subs	r0, r5, #1
    b8b2:	4185      	sbcs	r5, r0
    b8b4:	40df      	lsrs	r7, r3
    b8b6:	4325      	orrs	r5, r4
    b8b8:	4465      	add	r5, ip
    b8ba:	4565      	cmp	r5, ip
    b8bc:	419b      	sbcs	r3, r3
    b8be:	187f      	adds	r7, r7, r1
    b8c0:	425b      	negs	r3, r3
    b8c2:	18ff      	adds	r7, r7, r3
    b8c4:	1c14      	adds	r4, r2, #0
    b8c6:	e664      	b.n	b592 <__aeabi_dadd+0x1c6>
    b8c8:	2a00      	cmp	r2, #0
    b8ca:	d119      	bne.n	b900 <__aeabi_dadd+0x534>
    b8cc:	4662      	mov	r2, ip
    b8ce:	430a      	orrs	r2, r1
    b8d0:	d077      	beq.n	b9c2 <__aeabi_dadd+0x5f6>
    b8d2:	1c0f      	adds	r7, r1, #0
    b8d4:	4665      	mov	r5, ip
    b8d6:	4698      	mov	r8, r3
    b8d8:	4c4e      	ldr	r4, [pc, #312]	; (ba14 <__aeabi_dadd+0x648>)
    b8da:	e59f      	b.n	b41c <__aeabi_dadd+0x50>
    b8dc:	433d      	orrs	r5, r7
    b8de:	1e6f      	subs	r7, r5, #1
    b8e0:	41bd      	sbcs	r5, r7
    b8e2:	2700      	movs	r7, #0
    b8e4:	b2ed      	uxtb	r5, r5
    b8e6:	e732      	b.n	b74e <__aeabi_dadd+0x382>
    b8e8:	1c04      	adds	r4, r0, #0
    b8ea:	2700      	movs	r7, #0
    b8ec:	2500      	movs	r5, #0
    b8ee:	e627      	b.n	b540 <__aeabi_dadd+0x174>
    b8f0:	4848      	ldr	r0, [pc, #288]	; (ba14 <__aeabi_dadd+0x648>)
    b8f2:	4282      	cmp	r2, r0
    b8f4:	d036      	beq.n	b964 <__aeabi_dadd+0x598>
    b8f6:	2080      	movs	r0, #128	; 0x80
    b8f8:	0400      	lsls	r0, r0, #16
    b8fa:	425b      	negs	r3, r3
    b8fc:	4307      	orrs	r7, r0
    b8fe:	e7c5      	b.n	b88c <__aeabi_dadd+0x4c0>
    b900:	4662      	mov	r2, ip
    b902:	430a      	orrs	r2, r1
    b904:	d049      	beq.n	b99a <__aeabi_dadd+0x5ce>
    b906:	2480      	movs	r4, #128	; 0x80
    b908:	08ed      	lsrs	r5, r5, #3
    b90a:	0778      	lsls	r0, r7, #29
    b90c:	08fa      	lsrs	r2, r7, #3
    b90e:	0324      	lsls	r4, r4, #12
    b910:	4328      	orrs	r0, r5
    b912:	4222      	tst	r2, r4
    b914:	d009      	beq.n	b92a <__aeabi_dadd+0x55e>
    b916:	08ce      	lsrs	r6, r1, #3
    b918:	4226      	tst	r6, r4
    b91a:	d106      	bne.n	b92a <__aeabi_dadd+0x55e>
    b91c:	4662      	mov	r2, ip
    b91e:	074f      	lsls	r7, r1, #29
    b920:	1c38      	adds	r0, r7, #0
    b922:	08d2      	lsrs	r2, r2, #3
    b924:	4310      	orrs	r0, r2
    b926:	4698      	mov	r8, r3
    b928:	1c32      	adds	r2, r6, #0
    b92a:	00d2      	lsls	r2, r2, #3
    b92c:	0f47      	lsrs	r7, r0, #29
    b92e:	4317      	orrs	r7, r2
    b930:	00c5      	lsls	r5, r0, #3
    b932:	4c38      	ldr	r4, [pc, #224]	; (ba14 <__aeabi_dadd+0x648>)
    b934:	e572      	b.n	b41c <__aeabi_dadd+0x50>
    b936:	4662      	mov	r2, ip
    b938:	430a      	orrs	r2, r1
    b93a:	d100      	bne.n	b93e <__aeabi_dadd+0x572>
    b93c:	e56e      	b.n	b41c <__aeabi_dadd+0x50>
    b93e:	4662      	mov	r2, ip
    b940:	1aae      	subs	r6, r5, r2
    b942:	42b5      	cmp	r5, r6
    b944:	4192      	sbcs	r2, r2
    b946:	1a78      	subs	r0, r7, r1
    b948:	4252      	negs	r2, r2
    b94a:	1a82      	subs	r2, r0, r2
    b94c:	0210      	lsls	r0, r2, #8
    b94e:	d400      	bmi.n	b952 <__aeabi_dadd+0x586>
    b950:	e655      	b.n	b5fe <__aeabi_dadd+0x232>
    b952:	4662      	mov	r2, ip
    b954:	1b55      	subs	r5, r2, r5
    b956:	45ac      	cmp	ip, r5
    b958:	4180      	sbcs	r0, r0
    b95a:	1bca      	subs	r2, r1, r7
    b95c:	4240      	negs	r0, r0
    b95e:	1a17      	subs	r7, r2, r0
    b960:	4698      	mov	r8, r3
    b962:	e55b      	b.n	b41c <__aeabi_dadd+0x50>
    b964:	1c0f      	adds	r7, r1, #0
    b966:	4665      	mov	r5, ip
    b968:	1c14      	adds	r4, r2, #0
    b96a:	e557      	b.n	b41c <__aeabi_dadd+0x50>
    b96c:	2b00      	cmp	r3, #0
    b96e:	d034      	beq.n	b9da <__aeabi_dadd+0x60e>
    b970:	4663      	mov	r3, ip
    b972:	430b      	orrs	r3, r1
    b974:	d011      	beq.n	b99a <__aeabi_dadd+0x5ce>
    b976:	2480      	movs	r4, #128	; 0x80
    b978:	08ed      	lsrs	r5, r5, #3
    b97a:	0778      	lsls	r0, r7, #29
    b97c:	08fa      	lsrs	r2, r7, #3
    b97e:	0324      	lsls	r4, r4, #12
    b980:	4328      	orrs	r0, r5
    b982:	4222      	tst	r2, r4
    b984:	d0d1      	beq.n	b92a <__aeabi_dadd+0x55e>
    b986:	08cb      	lsrs	r3, r1, #3
    b988:	4223      	tst	r3, r4
    b98a:	d1ce      	bne.n	b92a <__aeabi_dadd+0x55e>
    b98c:	4662      	mov	r2, ip
    b98e:	074f      	lsls	r7, r1, #29
    b990:	1c38      	adds	r0, r7, #0
    b992:	08d2      	lsrs	r2, r2, #3
    b994:	4310      	orrs	r0, r2
    b996:	1c1a      	adds	r2, r3, #0
    b998:	e7c7      	b.n	b92a <__aeabi_dadd+0x55e>
    b99a:	4c1e      	ldr	r4, [pc, #120]	; (ba14 <__aeabi_dadd+0x648>)
    b99c:	e53e      	b.n	b41c <__aeabi_dadd+0x50>
    b99e:	2000      	movs	r0, #0
    b9a0:	e759      	b.n	b856 <__aeabi_dadd+0x48a>
    b9a2:	1c04      	adds	r4, r0, #0
    b9a4:	1c3e      	adds	r6, r7, #0
    b9a6:	3c20      	subs	r4, #32
    b9a8:	40e6      	lsrs	r6, r4
    b9aa:	1c34      	adds	r4, r6, #0
    b9ac:	2820      	cmp	r0, #32
    b9ae:	d02b      	beq.n	ba08 <__aeabi_dadd+0x63c>
    b9b0:	2640      	movs	r6, #64	; 0x40
    b9b2:	1a30      	subs	r0, r6, r0
    b9b4:	4087      	lsls	r7, r0
    b9b6:	433d      	orrs	r5, r7
    b9b8:	1e6f      	subs	r7, r5, #1
    b9ba:	41bd      	sbcs	r5, r7
    b9bc:	2700      	movs	r7, #0
    b9be:	4325      	orrs	r5, r4
    b9c0:	e6c5      	b.n	b74e <__aeabi_dadd+0x382>
    b9c2:	2780      	movs	r7, #128	; 0x80
    b9c4:	2600      	movs	r6, #0
    b9c6:	03ff      	lsls	r7, r7, #15
    b9c8:	4c12      	ldr	r4, [pc, #72]	; (ba14 <__aeabi_dadd+0x648>)
    b9ca:	2500      	movs	r5, #0
    b9cc:	e5b8      	b.n	b540 <__aeabi_dadd+0x174>
    b9ce:	433d      	orrs	r5, r7
    b9d0:	1e6f      	subs	r7, r5, #1
    b9d2:	41bd      	sbcs	r5, r7
    b9d4:	2700      	movs	r7, #0
    b9d6:	b2ed      	uxtb	r5, r5
    b9d8:	e76e      	b.n	b8b8 <__aeabi_dadd+0x4ec>
    b9da:	1c0f      	adds	r7, r1, #0
    b9dc:	4665      	mov	r5, ip
    b9de:	4c0d      	ldr	r4, [pc, #52]	; (ba14 <__aeabi_dadd+0x648>)
    b9e0:	e51c      	b.n	b41c <__aeabi_dadd+0x50>
    b9e2:	1c0f      	adds	r7, r1, #0
    b9e4:	4665      	mov	r5, ip
    b9e6:	e519      	b.n	b41c <__aeabi_dadd+0x50>
    b9e8:	1c1c      	adds	r4, r3, #0
    b9ea:	1c38      	adds	r0, r7, #0
    b9ec:	3c20      	subs	r4, #32
    b9ee:	40e0      	lsrs	r0, r4
    b9f0:	1c04      	adds	r4, r0, #0
    b9f2:	2b20      	cmp	r3, #32
    b9f4:	d00c      	beq.n	ba10 <__aeabi_dadd+0x644>
    b9f6:	2040      	movs	r0, #64	; 0x40
    b9f8:	1ac3      	subs	r3, r0, r3
    b9fa:	409f      	lsls	r7, r3
    b9fc:	433d      	orrs	r5, r7
    b9fe:	1e6f      	subs	r7, r5, #1
    ba00:	41bd      	sbcs	r5, r7
    ba02:	2700      	movs	r7, #0
    ba04:	4325      	orrs	r5, r4
    ba06:	e757      	b.n	b8b8 <__aeabi_dadd+0x4ec>
    ba08:	2700      	movs	r7, #0
    ba0a:	e7d4      	b.n	b9b6 <__aeabi_dadd+0x5ea>
    ba0c:	1c1d      	adds	r5, r3, #0
    ba0e:	e5fc      	b.n	b60a <__aeabi_dadd+0x23e>
    ba10:	2700      	movs	r7, #0
    ba12:	e7f3      	b.n	b9fc <__aeabi_dadd+0x630>
    ba14:	000007ff 	.word	0x000007ff
    ba18:	ff7fffff 	.word	0xff7fffff

0000ba1c <__aeabi_ddiv>:
    ba1c:	b5f0      	push	{r4, r5, r6, r7, lr}
    ba1e:	465f      	mov	r7, fp
    ba20:	4656      	mov	r6, sl
    ba22:	464d      	mov	r5, r9
    ba24:	4644      	mov	r4, r8
    ba26:	b4f0      	push	{r4, r5, r6, r7}
    ba28:	030f      	lsls	r7, r1, #12
    ba2a:	b087      	sub	sp, #28
    ba2c:	4698      	mov	r8, r3
    ba2e:	004d      	lsls	r5, r1, #1
    ba30:	0b3b      	lsrs	r3, r7, #12
    ba32:	0fcc      	lsrs	r4, r1, #31
    ba34:	1c06      	adds	r6, r0, #0
    ba36:	4692      	mov	sl, r2
    ba38:	4681      	mov	r9, r0
    ba3a:	469b      	mov	fp, r3
    ba3c:	0d6d      	lsrs	r5, r5, #21
    ba3e:	9401      	str	r4, [sp, #4]
    ba40:	d06b      	beq.n	bb1a <__aeabi_ddiv+0xfe>
    ba42:	4b66      	ldr	r3, [pc, #408]	; (bbdc <__aeabi_ddiv+0x1c0>)
    ba44:	429d      	cmp	r5, r3
    ba46:	d035      	beq.n	bab4 <__aeabi_ddiv+0x98>
    ba48:	2780      	movs	r7, #128	; 0x80
    ba4a:	465b      	mov	r3, fp
    ba4c:	037f      	lsls	r7, r7, #13
    ba4e:	431f      	orrs	r7, r3
    ba50:	00f3      	lsls	r3, r6, #3
    ba52:	4699      	mov	r9, r3
    ba54:	4b62      	ldr	r3, [pc, #392]	; (bbe0 <__aeabi_ddiv+0x1c4>)
    ba56:	00ff      	lsls	r7, r7, #3
    ba58:	0f40      	lsrs	r0, r0, #29
    ba5a:	469c      	mov	ip, r3
    ba5c:	4307      	orrs	r7, r0
    ba5e:	2300      	movs	r3, #0
    ba60:	46bb      	mov	fp, r7
    ba62:	2600      	movs	r6, #0
    ba64:	4465      	add	r5, ip
    ba66:	9300      	str	r3, [sp, #0]
    ba68:	4642      	mov	r2, r8
    ba6a:	0317      	lsls	r7, r2, #12
    ba6c:	0050      	lsls	r0, r2, #1
    ba6e:	0fd2      	lsrs	r2, r2, #31
    ba70:	4653      	mov	r3, sl
    ba72:	0b3f      	lsrs	r7, r7, #12
    ba74:	0d40      	lsrs	r0, r0, #21
    ba76:	4690      	mov	r8, r2
    ba78:	d100      	bne.n	ba7c <__aeabi_ddiv+0x60>
    ba7a:	e072      	b.n	bb62 <__aeabi_ddiv+0x146>
    ba7c:	4a57      	ldr	r2, [pc, #348]	; (bbdc <__aeabi_ddiv+0x1c0>)
    ba7e:	4290      	cmp	r0, r2
    ba80:	d067      	beq.n	bb52 <__aeabi_ddiv+0x136>
    ba82:	2380      	movs	r3, #128	; 0x80
    ba84:	035b      	lsls	r3, r3, #13
    ba86:	431f      	orrs	r7, r3
    ba88:	4653      	mov	r3, sl
    ba8a:	4a55      	ldr	r2, [pc, #340]	; (bbe0 <__aeabi_ddiv+0x1c4>)
    ba8c:	0f5b      	lsrs	r3, r3, #29
    ba8e:	00ff      	lsls	r7, r7, #3
    ba90:	431f      	orrs	r7, r3
    ba92:	4694      	mov	ip, r2
    ba94:	4653      	mov	r3, sl
    ba96:	2100      	movs	r1, #0
    ba98:	00db      	lsls	r3, r3, #3
    ba9a:	4460      	add	r0, ip
    ba9c:	4642      	mov	r2, r8
    ba9e:	4062      	eors	r2, r4
    baa0:	4692      	mov	sl, r2
    baa2:	1a2d      	subs	r5, r5, r0
    baa4:	430e      	orrs	r6, r1
    baa6:	2e0f      	cmp	r6, #15
    baa8:	d900      	bls.n	baac <__aeabi_ddiv+0x90>
    baaa:	e0a1      	b.n	bbf0 <__aeabi_ddiv+0x1d4>
    baac:	484d      	ldr	r0, [pc, #308]	; (bbe4 <__aeabi_ddiv+0x1c8>)
    baae:	00b6      	lsls	r6, r6, #2
    bab0:	5980      	ldr	r0, [r0, r6]
    bab2:	4687      	mov	pc, r0
    bab4:	465b      	mov	r3, fp
    bab6:	431e      	orrs	r6, r3
    bab8:	d000      	beq.n	babc <__aeabi_ddiv+0xa0>
    baba:	e076      	b.n	bbaa <__aeabi_ddiv+0x18e>
    babc:	2300      	movs	r3, #0
    babe:	469b      	mov	fp, r3
    bac0:	4699      	mov	r9, r3
    bac2:	3302      	adds	r3, #2
    bac4:	2608      	movs	r6, #8
    bac6:	9300      	str	r3, [sp, #0]
    bac8:	e7ce      	b.n	ba68 <__aeabi_ddiv+0x4c>
    baca:	4699      	mov	r9, r3
    bacc:	4643      	mov	r3, r8
    bace:	46bb      	mov	fp, r7
    bad0:	9301      	str	r3, [sp, #4]
    bad2:	9100      	str	r1, [sp, #0]
    bad4:	9b00      	ldr	r3, [sp, #0]
    bad6:	2b02      	cmp	r3, #2
    bad8:	d16b      	bne.n	bbb2 <__aeabi_ddiv+0x196>
    bada:	9b01      	ldr	r3, [sp, #4]
    badc:	469a      	mov	sl, r3
    bade:	2100      	movs	r1, #0
    bae0:	4653      	mov	r3, sl
    bae2:	2201      	movs	r2, #1
    bae4:	2700      	movs	r7, #0
    bae6:	4689      	mov	r9, r1
    bae8:	401a      	ands	r2, r3
    baea:	4b3c      	ldr	r3, [pc, #240]	; (bbdc <__aeabi_ddiv+0x1c0>)
    baec:	2100      	movs	r1, #0
    baee:	033f      	lsls	r7, r7, #12
    baf0:	0d0c      	lsrs	r4, r1, #20
    baf2:	0524      	lsls	r4, r4, #20
    baf4:	0b3f      	lsrs	r7, r7, #12
    baf6:	4327      	orrs	r7, r4
    baf8:	4c3b      	ldr	r4, [pc, #236]	; (bbe8 <__aeabi_ddiv+0x1cc>)
    bafa:	051b      	lsls	r3, r3, #20
    bafc:	4027      	ands	r7, r4
    bafe:	431f      	orrs	r7, r3
    bb00:	007f      	lsls	r7, r7, #1
    bb02:	07d2      	lsls	r2, r2, #31
    bb04:	087f      	lsrs	r7, r7, #1
    bb06:	4317      	orrs	r7, r2
    bb08:	4648      	mov	r0, r9
    bb0a:	1c39      	adds	r1, r7, #0
    bb0c:	b007      	add	sp, #28
    bb0e:	bc3c      	pop	{r2, r3, r4, r5}
    bb10:	4690      	mov	r8, r2
    bb12:	4699      	mov	r9, r3
    bb14:	46a2      	mov	sl, r4
    bb16:	46ab      	mov	fp, r5
    bb18:	bdf0      	pop	{r4, r5, r6, r7, pc}
    bb1a:	4303      	orrs	r3, r0
    bb1c:	d03e      	beq.n	bb9c <__aeabi_ddiv+0x180>
    bb1e:	465b      	mov	r3, fp
    bb20:	2b00      	cmp	r3, #0
    bb22:	d100      	bne.n	bb26 <__aeabi_ddiv+0x10a>
    bb24:	e19c      	b.n	be60 <__aeabi_ddiv+0x444>
    bb26:	4658      	mov	r0, fp
    bb28:	f7fa f886 	bl	5c38 <__clzsi2>
    bb2c:	2328      	movs	r3, #40	; 0x28
    bb2e:	1c31      	adds	r1, r6, #0
    bb30:	1a1b      	subs	r3, r3, r0
    bb32:	1c02      	adds	r2, r0, #0
    bb34:	465f      	mov	r7, fp
    bb36:	40d9      	lsrs	r1, r3
    bb38:	3a08      	subs	r2, #8
    bb3a:	4097      	lsls	r7, r2
    bb3c:	1c0b      	adds	r3, r1, #0
    bb3e:	4096      	lsls	r6, r2
    bb40:	433b      	orrs	r3, r7
    bb42:	469b      	mov	fp, r3
    bb44:	46b1      	mov	r9, r6
    bb46:	2300      	movs	r3, #0
    bb48:	4d28      	ldr	r5, [pc, #160]	; (bbec <__aeabi_ddiv+0x1d0>)
    bb4a:	2600      	movs	r6, #0
    bb4c:	1a2d      	subs	r5, r5, r0
    bb4e:	9300      	str	r3, [sp, #0]
    bb50:	e78a      	b.n	ba68 <__aeabi_ddiv+0x4c>
    bb52:	4652      	mov	r2, sl
    bb54:	2103      	movs	r1, #3
    bb56:	433a      	orrs	r2, r7
    bb58:	d1a0      	bne.n	ba9c <__aeabi_ddiv+0x80>
    bb5a:	2700      	movs	r7, #0
    bb5c:	2300      	movs	r3, #0
    bb5e:	2102      	movs	r1, #2
    bb60:	e79c      	b.n	ba9c <__aeabi_ddiv+0x80>
    bb62:	4652      	mov	r2, sl
    bb64:	433a      	orrs	r2, r7
    bb66:	d015      	beq.n	bb94 <__aeabi_ddiv+0x178>
    bb68:	2f00      	cmp	r7, #0
    bb6a:	d100      	bne.n	bb6e <__aeabi_ddiv+0x152>
    bb6c:	e185      	b.n	be7a <__aeabi_ddiv+0x45e>
    bb6e:	1c38      	adds	r0, r7, #0
    bb70:	f7fa f862 	bl	5c38 <__clzsi2>
    bb74:	1c02      	adds	r2, r0, #0
    bb76:	2128      	movs	r1, #40	; 0x28
    bb78:	4650      	mov	r0, sl
    bb7a:	1a89      	subs	r1, r1, r2
    bb7c:	1c13      	adds	r3, r2, #0
    bb7e:	40c8      	lsrs	r0, r1
    bb80:	4651      	mov	r1, sl
    bb82:	3b08      	subs	r3, #8
    bb84:	4099      	lsls	r1, r3
    bb86:	409f      	lsls	r7, r3
    bb88:	1c0b      	adds	r3, r1, #0
    bb8a:	4307      	orrs	r7, r0
    bb8c:	4817      	ldr	r0, [pc, #92]	; (bbec <__aeabi_ddiv+0x1d0>)
    bb8e:	2100      	movs	r1, #0
    bb90:	1a80      	subs	r0, r0, r2
    bb92:	e783      	b.n	ba9c <__aeabi_ddiv+0x80>
    bb94:	2700      	movs	r7, #0
    bb96:	2300      	movs	r3, #0
    bb98:	2101      	movs	r1, #1
    bb9a:	e77f      	b.n	ba9c <__aeabi_ddiv+0x80>
    bb9c:	2300      	movs	r3, #0
    bb9e:	469b      	mov	fp, r3
    bba0:	4699      	mov	r9, r3
    bba2:	3301      	adds	r3, #1
    bba4:	2604      	movs	r6, #4
    bba6:	9300      	str	r3, [sp, #0]
    bba8:	e75e      	b.n	ba68 <__aeabi_ddiv+0x4c>
    bbaa:	2303      	movs	r3, #3
    bbac:	260c      	movs	r6, #12
    bbae:	9300      	str	r3, [sp, #0]
    bbb0:	e75a      	b.n	ba68 <__aeabi_ddiv+0x4c>
    bbb2:	2b03      	cmp	r3, #3
    bbb4:	d100      	bne.n	bbb8 <__aeabi_ddiv+0x19c>
    bbb6:	e23c      	b.n	c032 <__aeabi_ddiv+0x616>
    bbb8:	2b01      	cmp	r3, #1
    bbba:	d000      	beq.n	bbbe <__aeabi_ddiv+0x1a2>
    bbbc:	e1bf      	b.n	bf3e <__aeabi_ddiv+0x522>
    bbbe:	1c1a      	adds	r2, r3, #0
    bbc0:	9b01      	ldr	r3, [sp, #4]
    bbc2:	401a      	ands	r2, r3
    bbc4:	2100      	movs	r1, #0
    bbc6:	2300      	movs	r3, #0
    bbc8:	2700      	movs	r7, #0
    bbca:	4689      	mov	r9, r1
    bbcc:	e78e      	b.n	baec <__aeabi_ddiv+0xd0>
    bbce:	2300      	movs	r3, #0
    bbd0:	2780      	movs	r7, #128	; 0x80
    bbd2:	4699      	mov	r9, r3
    bbd4:	2200      	movs	r2, #0
    bbd6:	033f      	lsls	r7, r7, #12
    bbd8:	4b00      	ldr	r3, [pc, #0]	; (bbdc <__aeabi_ddiv+0x1c0>)
    bbda:	e787      	b.n	baec <__aeabi_ddiv+0xd0>
    bbdc:	000007ff 	.word	0x000007ff
    bbe0:	fffffc01 	.word	0xfffffc01
    bbe4:	0000e354 	.word	0x0000e354
    bbe8:	800fffff 	.word	0x800fffff
    bbec:	fffffc0d 	.word	0xfffffc0d
    bbf0:	45bb      	cmp	fp, r7
    bbf2:	d900      	bls.n	bbf6 <__aeabi_ddiv+0x1da>
    bbf4:	e151      	b.n	be9a <__aeabi_ddiv+0x47e>
    bbf6:	d100      	bne.n	bbfa <__aeabi_ddiv+0x1de>
    bbf8:	e14c      	b.n	be94 <__aeabi_ddiv+0x478>
    bbfa:	464a      	mov	r2, r9
    bbfc:	9203      	str	r2, [sp, #12]
    bbfe:	2200      	movs	r2, #0
    bc00:	465c      	mov	r4, fp
    bc02:	4690      	mov	r8, r2
    bc04:	3d01      	subs	r5, #1
    bc06:	0e18      	lsrs	r0, r3, #24
    bc08:	023f      	lsls	r7, r7, #8
    bc0a:	4338      	orrs	r0, r7
    bc0c:	021b      	lsls	r3, r3, #8
    bc0e:	9301      	str	r3, [sp, #4]
    bc10:	0c03      	lsrs	r3, r0, #16
    bc12:	4699      	mov	r9, r3
    bc14:	0403      	lsls	r3, r0, #16
    bc16:	0c1b      	lsrs	r3, r3, #16
    bc18:	4649      	mov	r1, r9
    bc1a:	1c06      	adds	r6, r0, #0
    bc1c:	1c20      	adds	r0, r4, #0
    bc1e:	1c1f      	adds	r7, r3, #0
    bc20:	9300      	str	r3, [sp, #0]
    bc22:	f7f9 fe5d 	bl	58e0 <__aeabi_uidiv>
    bc26:	1c02      	adds	r2, r0, #0
    bc28:	437a      	muls	r2, r7
    bc2a:	9002      	str	r0, [sp, #8]
    bc2c:	4649      	mov	r1, r9
    bc2e:	1c20      	adds	r0, r4, #0
    bc30:	1c17      	adds	r7, r2, #0
    bc32:	f7f9 fedb 	bl	59ec <__aeabi_uidivmod>
    bc36:	9b03      	ldr	r3, [sp, #12]
    bc38:	0409      	lsls	r1, r1, #16
    bc3a:	0c1b      	lsrs	r3, r3, #16
    bc3c:	4319      	orrs	r1, r3
    bc3e:	428f      	cmp	r7, r1
    bc40:	d90c      	bls.n	bc5c <__aeabi_ddiv+0x240>
    bc42:	9b02      	ldr	r3, [sp, #8]
    bc44:	1989      	adds	r1, r1, r6
    bc46:	3b01      	subs	r3, #1
    bc48:	428e      	cmp	r6, r1
    bc4a:	d900      	bls.n	bc4e <__aeabi_ddiv+0x232>
    bc4c:	e152      	b.n	bef4 <__aeabi_ddiv+0x4d8>
    bc4e:	428f      	cmp	r7, r1
    bc50:	d800      	bhi.n	bc54 <__aeabi_ddiv+0x238>
    bc52:	e14f      	b.n	bef4 <__aeabi_ddiv+0x4d8>
    bc54:	9b02      	ldr	r3, [sp, #8]
    bc56:	1989      	adds	r1, r1, r6
    bc58:	3b02      	subs	r3, #2
    bc5a:	9302      	str	r3, [sp, #8]
    bc5c:	1bcc      	subs	r4, r1, r7
    bc5e:	1c20      	adds	r0, r4, #0
    bc60:	4649      	mov	r1, r9
    bc62:	f7f9 fe3d 	bl	58e0 <__aeabi_uidiv>
    bc66:	9f00      	ldr	r7, [sp, #0]
    bc68:	4683      	mov	fp, r0
    bc6a:	4347      	muls	r7, r0
    bc6c:	4649      	mov	r1, r9
    bc6e:	1c20      	adds	r0, r4, #0
    bc70:	f7f9 febc 	bl	59ec <__aeabi_uidivmod>
    bc74:	9a03      	ldr	r2, [sp, #12]
    bc76:	040b      	lsls	r3, r1, #16
    bc78:	0414      	lsls	r4, r2, #16
    bc7a:	0c24      	lsrs	r4, r4, #16
    bc7c:	4323      	orrs	r3, r4
    bc7e:	429f      	cmp	r7, r3
    bc80:	d90d      	bls.n	bc9e <__aeabi_ddiv+0x282>
    bc82:	465a      	mov	r2, fp
    bc84:	199b      	adds	r3, r3, r6
    bc86:	3a01      	subs	r2, #1
    bc88:	429e      	cmp	r6, r3
    bc8a:	d900      	bls.n	bc8e <__aeabi_ddiv+0x272>
    bc8c:	e130      	b.n	bef0 <__aeabi_ddiv+0x4d4>
    bc8e:	429f      	cmp	r7, r3
    bc90:	d800      	bhi.n	bc94 <__aeabi_ddiv+0x278>
    bc92:	e12d      	b.n	bef0 <__aeabi_ddiv+0x4d4>
    bc94:	2202      	movs	r2, #2
    bc96:	4252      	negs	r2, r2
    bc98:	4694      	mov	ip, r2
    bc9a:	199b      	adds	r3, r3, r6
    bc9c:	44e3      	add	fp, ip
    bc9e:	9a02      	ldr	r2, [sp, #8]
    bca0:	1bdb      	subs	r3, r3, r7
    bca2:	0417      	lsls	r7, r2, #16
    bca4:	465a      	mov	r2, fp
    bca6:	433a      	orrs	r2, r7
    bca8:	4693      	mov	fp, r2
    bcaa:	9c01      	ldr	r4, [sp, #4]
    bcac:	0c17      	lsrs	r7, r2, #16
    bcae:	0c22      	lsrs	r2, r4, #16
    bcb0:	1c10      	adds	r0, r2, #0
    bcb2:	9204      	str	r2, [sp, #16]
    bcb4:	465a      	mov	r2, fp
    bcb6:	0411      	lsls	r1, r2, #16
    bcb8:	0422      	lsls	r2, r4, #16
    bcba:	0c12      	lsrs	r2, r2, #16
    bcbc:	1c14      	adds	r4, r2, #0
    bcbe:	0c09      	lsrs	r1, r1, #16
    bcc0:	437c      	muls	r4, r7
    bcc2:	9205      	str	r2, [sp, #20]
    bcc4:	434a      	muls	r2, r1
    bcc6:	4341      	muls	r1, r0
    bcc8:	4347      	muls	r7, r0
    bcca:	1861      	adds	r1, r4, r1
    bccc:	0c10      	lsrs	r0, r2, #16
    bcce:	1809      	adds	r1, r1, r0
    bcd0:	428c      	cmp	r4, r1
    bcd2:	d903      	bls.n	bcdc <__aeabi_ddiv+0x2c0>
    bcd4:	2080      	movs	r0, #128	; 0x80
    bcd6:	0240      	lsls	r0, r0, #9
    bcd8:	4684      	mov	ip, r0
    bcda:	4467      	add	r7, ip
    bcdc:	0c0c      	lsrs	r4, r1, #16
    bcde:	0412      	lsls	r2, r2, #16
    bce0:	0408      	lsls	r0, r1, #16
    bce2:	0c12      	lsrs	r2, r2, #16
    bce4:	193c      	adds	r4, r7, r4
    bce6:	1881      	adds	r1, r0, r2
    bce8:	42a3      	cmp	r3, r4
    bcea:	d200      	bcs.n	bcee <__aeabi_ddiv+0x2d2>
    bcec:	e0e5      	b.n	beba <__aeabi_ddiv+0x49e>
    bcee:	d100      	bne.n	bcf2 <__aeabi_ddiv+0x2d6>
    bcf0:	e0df      	b.n	beb2 <__aeabi_ddiv+0x496>
    bcf2:	1b1f      	subs	r7, r3, r4
    bcf4:	4643      	mov	r3, r8
    bcf6:	1a5c      	subs	r4, r3, r1
    bcf8:	45a0      	cmp	r8, r4
    bcfa:	4192      	sbcs	r2, r2
    bcfc:	4252      	negs	r2, r2
    bcfe:	1abf      	subs	r7, r7, r2
    bd00:	42b7      	cmp	r7, r6
    bd02:	d100      	bne.n	bd06 <__aeabi_ddiv+0x2ea>
    bd04:	e10e      	b.n	bf24 <__aeabi_ddiv+0x508>
    bd06:	1c38      	adds	r0, r7, #0
    bd08:	4649      	mov	r1, r9
    bd0a:	f7f9 fde9 	bl	58e0 <__aeabi_uidiv>
    bd0e:	9b00      	ldr	r3, [sp, #0]
    bd10:	9002      	str	r0, [sp, #8]
    bd12:	4343      	muls	r3, r0
    bd14:	4649      	mov	r1, r9
    bd16:	1c38      	adds	r0, r7, #0
    bd18:	4698      	mov	r8, r3
    bd1a:	f7f9 fe67 	bl	59ec <__aeabi_uidivmod>
    bd1e:	0c23      	lsrs	r3, r4, #16
    bd20:	040f      	lsls	r7, r1, #16
    bd22:	431f      	orrs	r7, r3
    bd24:	45b8      	cmp	r8, r7
    bd26:	d90c      	bls.n	bd42 <__aeabi_ddiv+0x326>
    bd28:	9b02      	ldr	r3, [sp, #8]
    bd2a:	19bf      	adds	r7, r7, r6
    bd2c:	3b01      	subs	r3, #1
    bd2e:	42be      	cmp	r6, r7
    bd30:	d900      	bls.n	bd34 <__aeabi_ddiv+0x318>
    bd32:	e0fb      	b.n	bf2c <__aeabi_ddiv+0x510>
    bd34:	45b8      	cmp	r8, r7
    bd36:	d800      	bhi.n	bd3a <__aeabi_ddiv+0x31e>
    bd38:	e0f8      	b.n	bf2c <__aeabi_ddiv+0x510>
    bd3a:	9b02      	ldr	r3, [sp, #8]
    bd3c:	19bf      	adds	r7, r7, r6
    bd3e:	3b02      	subs	r3, #2
    bd40:	9302      	str	r3, [sp, #8]
    bd42:	4643      	mov	r3, r8
    bd44:	1aff      	subs	r7, r7, r3
    bd46:	4649      	mov	r1, r9
    bd48:	1c38      	adds	r0, r7, #0
    bd4a:	f7f9 fdc9 	bl	58e0 <__aeabi_uidiv>
    bd4e:	9b00      	ldr	r3, [sp, #0]
    bd50:	9003      	str	r0, [sp, #12]
    bd52:	4343      	muls	r3, r0
    bd54:	4649      	mov	r1, r9
    bd56:	1c38      	adds	r0, r7, #0
    bd58:	4698      	mov	r8, r3
    bd5a:	f7f9 fe47 	bl	59ec <__aeabi_uidivmod>
    bd5e:	0424      	lsls	r4, r4, #16
    bd60:	0409      	lsls	r1, r1, #16
    bd62:	0c24      	lsrs	r4, r4, #16
    bd64:	4321      	orrs	r1, r4
    bd66:	4588      	cmp	r8, r1
    bd68:	d90c      	bls.n	bd84 <__aeabi_ddiv+0x368>
    bd6a:	9b03      	ldr	r3, [sp, #12]
    bd6c:	1989      	adds	r1, r1, r6
    bd6e:	3b01      	subs	r3, #1
    bd70:	428e      	cmp	r6, r1
    bd72:	d900      	bls.n	bd76 <__aeabi_ddiv+0x35a>
    bd74:	e0dc      	b.n	bf30 <__aeabi_ddiv+0x514>
    bd76:	4588      	cmp	r8, r1
    bd78:	d800      	bhi.n	bd7c <__aeabi_ddiv+0x360>
    bd7a:	e0d9      	b.n	bf30 <__aeabi_ddiv+0x514>
    bd7c:	9b03      	ldr	r3, [sp, #12]
    bd7e:	1989      	adds	r1, r1, r6
    bd80:	3b02      	subs	r3, #2
    bd82:	9303      	str	r3, [sp, #12]
    bd84:	4643      	mov	r3, r8
    bd86:	1ac9      	subs	r1, r1, r3
    bd88:	9b02      	ldr	r3, [sp, #8]
    bd8a:	9a03      	ldr	r2, [sp, #12]
    bd8c:	041b      	lsls	r3, r3, #16
    bd8e:	9c05      	ldr	r4, [sp, #20]
    bd90:	431a      	orrs	r2, r3
    bd92:	0c10      	lsrs	r0, r2, #16
    bd94:	0413      	lsls	r3, r2, #16
    bd96:	4691      	mov	r9, r2
    bd98:	1c22      	adds	r2, r4, #0
    bd9a:	9f04      	ldr	r7, [sp, #16]
    bd9c:	0c1b      	lsrs	r3, r3, #16
    bd9e:	435a      	muls	r2, r3
    bda0:	4344      	muls	r4, r0
    bda2:	437b      	muls	r3, r7
    bda4:	4378      	muls	r0, r7
    bda6:	18e3      	adds	r3, r4, r3
    bda8:	0c17      	lsrs	r7, r2, #16
    bdaa:	19db      	adds	r3, r3, r7
    bdac:	429c      	cmp	r4, r3
    bdae:	d903      	bls.n	bdb8 <__aeabi_ddiv+0x39c>
    bdb0:	2480      	movs	r4, #128	; 0x80
    bdb2:	0264      	lsls	r4, r4, #9
    bdb4:	46a4      	mov	ip, r4
    bdb6:	4460      	add	r0, ip
    bdb8:	0c1c      	lsrs	r4, r3, #16
    bdba:	0412      	lsls	r2, r2, #16
    bdbc:	041b      	lsls	r3, r3, #16
    bdbe:	0c12      	lsrs	r2, r2, #16
    bdc0:	1900      	adds	r0, r0, r4
    bdc2:	189b      	adds	r3, r3, r2
    bdc4:	4281      	cmp	r1, r0
    bdc6:	d200      	bcs.n	bdca <__aeabi_ddiv+0x3ae>
    bdc8:	e096      	b.n	bef8 <__aeabi_ddiv+0x4dc>
    bdca:	d100      	bne.n	bdce <__aeabi_ddiv+0x3b2>
    bdcc:	e0fc      	b.n	bfc8 <__aeabi_ddiv+0x5ac>
    bdce:	464a      	mov	r2, r9
    bdd0:	2301      	movs	r3, #1
    bdd2:	431a      	orrs	r2, r3
    bdd4:	4691      	mov	r9, r2
    bdd6:	4b9b      	ldr	r3, [pc, #620]	; (c044 <__aeabi_ddiv+0x628>)
    bdd8:	18eb      	adds	r3, r5, r3
    bdda:	2b00      	cmp	r3, #0
    bddc:	dc00      	bgt.n	bde0 <__aeabi_ddiv+0x3c4>
    bdde:	e099      	b.n	bf14 <__aeabi_ddiv+0x4f8>
    bde0:	464a      	mov	r2, r9
    bde2:	0752      	lsls	r2, r2, #29
    bde4:	d00a      	beq.n	bdfc <__aeabi_ddiv+0x3e0>
    bde6:	220f      	movs	r2, #15
    bde8:	4649      	mov	r1, r9
    bdea:	400a      	ands	r2, r1
    bdec:	2a04      	cmp	r2, #4
    bdee:	d005      	beq.n	bdfc <__aeabi_ddiv+0x3e0>
    bdf0:	3104      	adds	r1, #4
    bdf2:	4549      	cmp	r1, r9
    bdf4:	4192      	sbcs	r2, r2
    bdf6:	4689      	mov	r9, r1
    bdf8:	4252      	negs	r2, r2
    bdfa:	4493      	add	fp, r2
    bdfc:	465a      	mov	r2, fp
    bdfe:	01d2      	lsls	r2, r2, #7
    be00:	d506      	bpl.n	be10 <__aeabi_ddiv+0x3f4>
    be02:	465a      	mov	r2, fp
    be04:	4b90      	ldr	r3, [pc, #576]	; (c048 <__aeabi_ddiv+0x62c>)
    be06:	401a      	ands	r2, r3
    be08:	2380      	movs	r3, #128	; 0x80
    be0a:	4693      	mov	fp, r2
    be0c:	00db      	lsls	r3, r3, #3
    be0e:	18eb      	adds	r3, r5, r3
    be10:	4a8e      	ldr	r2, [pc, #568]	; (c04c <__aeabi_ddiv+0x630>)
    be12:	4293      	cmp	r3, r2
    be14:	dd00      	ble.n	be18 <__aeabi_ddiv+0x3fc>
    be16:	e662      	b.n	bade <__aeabi_ddiv+0xc2>
    be18:	464a      	mov	r2, r9
    be1a:	4659      	mov	r1, fp
    be1c:	08d2      	lsrs	r2, r2, #3
    be1e:	0749      	lsls	r1, r1, #29
    be20:	4311      	orrs	r1, r2
    be22:	465a      	mov	r2, fp
    be24:	4689      	mov	r9, r1
    be26:	0257      	lsls	r7, r2, #9
    be28:	4651      	mov	r1, sl
    be2a:	2201      	movs	r2, #1
    be2c:	055b      	lsls	r3, r3, #21
    be2e:	0b3f      	lsrs	r7, r7, #12
    be30:	0d5b      	lsrs	r3, r3, #21
    be32:	400a      	ands	r2, r1
    be34:	e65a      	b.n	baec <__aeabi_ddiv+0xd0>
    be36:	2080      	movs	r0, #128	; 0x80
    be38:	465a      	mov	r2, fp
    be3a:	0300      	lsls	r0, r0, #12
    be3c:	4202      	tst	r2, r0
    be3e:	d008      	beq.n	be52 <__aeabi_ddiv+0x436>
    be40:	4207      	tst	r7, r0
    be42:	d106      	bne.n	be52 <__aeabi_ddiv+0x436>
    be44:	4307      	orrs	r7, r0
    be46:	033f      	lsls	r7, r7, #12
    be48:	4699      	mov	r9, r3
    be4a:	0b3f      	lsrs	r7, r7, #12
    be4c:	4642      	mov	r2, r8
    be4e:	4b80      	ldr	r3, [pc, #512]	; (c050 <__aeabi_ddiv+0x634>)
    be50:	e64c      	b.n	baec <__aeabi_ddiv+0xd0>
    be52:	465f      	mov	r7, fp
    be54:	4307      	orrs	r7, r0
    be56:	033f      	lsls	r7, r7, #12
    be58:	0b3f      	lsrs	r7, r7, #12
    be5a:	1c22      	adds	r2, r4, #0
    be5c:	4b7c      	ldr	r3, [pc, #496]	; (c050 <__aeabi_ddiv+0x634>)
    be5e:	e645      	b.n	baec <__aeabi_ddiv+0xd0>
    be60:	f7f9 feea 	bl	5c38 <__clzsi2>
    be64:	1c03      	adds	r3, r0, #0
    be66:	3020      	adds	r0, #32
    be68:	2827      	cmp	r0, #39	; 0x27
    be6a:	dc00      	bgt.n	be6e <__aeabi_ddiv+0x452>
    be6c:	e65e      	b.n	bb2c <__aeabi_ddiv+0x110>
    be6e:	3b08      	subs	r3, #8
    be70:	409e      	lsls	r6, r3
    be72:	2300      	movs	r3, #0
    be74:	46b3      	mov	fp, r6
    be76:	4699      	mov	r9, r3
    be78:	e665      	b.n	bb46 <__aeabi_ddiv+0x12a>
    be7a:	4650      	mov	r0, sl
    be7c:	f7f9 fedc 	bl	5c38 <__clzsi2>
    be80:	1c02      	adds	r2, r0, #0
    be82:	3220      	adds	r2, #32
    be84:	2a27      	cmp	r2, #39	; 0x27
    be86:	dc00      	bgt.n	be8a <__aeabi_ddiv+0x46e>
    be88:	e675      	b.n	bb76 <__aeabi_ddiv+0x15a>
    be8a:	4657      	mov	r7, sl
    be8c:	3808      	subs	r0, #8
    be8e:	4087      	lsls	r7, r0
    be90:	2300      	movs	r3, #0
    be92:	e67b      	b.n	bb8c <__aeabi_ddiv+0x170>
    be94:	4599      	cmp	r9, r3
    be96:	d200      	bcs.n	be9a <__aeabi_ddiv+0x47e>
    be98:	e6af      	b.n	bbfa <__aeabi_ddiv+0x1de>
    be9a:	465a      	mov	r2, fp
    be9c:	4659      	mov	r1, fp
    be9e:	0854      	lsrs	r4, r2, #1
    bea0:	464a      	mov	r2, r9
    bea2:	07c8      	lsls	r0, r1, #31
    bea4:	0852      	lsrs	r2, r2, #1
    bea6:	4302      	orrs	r2, r0
    bea8:	9203      	str	r2, [sp, #12]
    beaa:	464a      	mov	r2, r9
    beac:	07d2      	lsls	r2, r2, #31
    beae:	4690      	mov	r8, r2
    beb0:	e6a9      	b.n	bc06 <__aeabi_ddiv+0x1ea>
    beb2:	2700      	movs	r7, #0
    beb4:	4588      	cmp	r8, r1
    beb6:	d300      	bcc.n	beba <__aeabi_ddiv+0x49e>
    beb8:	e71c      	b.n	bcf4 <__aeabi_ddiv+0x2d8>
    beba:	9f01      	ldr	r7, [sp, #4]
    bebc:	465a      	mov	r2, fp
    bebe:	46bc      	mov	ip, r7
    bec0:	44e0      	add	r8, ip
    bec2:	45b8      	cmp	r8, r7
    bec4:	41bf      	sbcs	r7, r7
    bec6:	427f      	negs	r7, r7
    bec8:	19bf      	adds	r7, r7, r6
    beca:	18ff      	adds	r7, r7, r3
    becc:	3a01      	subs	r2, #1
    bece:	42be      	cmp	r6, r7
    bed0:	d206      	bcs.n	bee0 <__aeabi_ddiv+0x4c4>
    bed2:	42bc      	cmp	r4, r7
    bed4:	d85f      	bhi.n	bf96 <__aeabi_ddiv+0x57a>
    bed6:	d100      	bne.n	beda <__aeabi_ddiv+0x4be>
    bed8:	e09f      	b.n	c01a <__aeabi_ddiv+0x5fe>
    beda:	1b3f      	subs	r7, r7, r4
    bedc:	4693      	mov	fp, r2
    bede:	e709      	b.n	bcf4 <__aeabi_ddiv+0x2d8>
    bee0:	42b7      	cmp	r7, r6
    bee2:	d1fa      	bne.n	beda <__aeabi_ddiv+0x4be>
    bee4:	9b01      	ldr	r3, [sp, #4]
    bee6:	4543      	cmp	r3, r8
    bee8:	d9f3      	bls.n	bed2 <__aeabi_ddiv+0x4b6>
    beea:	1b37      	subs	r7, r6, r4
    beec:	4693      	mov	fp, r2
    beee:	e701      	b.n	bcf4 <__aeabi_ddiv+0x2d8>
    bef0:	4693      	mov	fp, r2
    bef2:	e6d4      	b.n	bc9e <__aeabi_ddiv+0x282>
    bef4:	9302      	str	r3, [sp, #8]
    bef6:	e6b1      	b.n	bc5c <__aeabi_ddiv+0x240>
    bef8:	464a      	mov	r2, r9
    befa:	1989      	adds	r1, r1, r6
    befc:	3a01      	subs	r2, #1
    befe:	428e      	cmp	r6, r1
    bf00:	d918      	bls.n	bf34 <__aeabi_ddiv+0x518>
    bf02:	4691      	mov	r9, r2
    bf04:	4281      	cmp	r1, r0
    bf06:	d000      	beq.n	bf0a <__aeabi_ddiv+0x4ee>
    bf08:	e761      	b.n	bdce <__aeabi_ddiv+0x3b2>
    bf0a:	9a01      	ldr	r2, [sp, #4]
    bf0c:	429a      	cmp	r2, r3
    bf0e:	d000      	beq.n	bf12 <__aeabi_ddiv+0x4f6>
    bf10:	e75d      	b.n	bdce <__aeabi_ddiv+0x3b2>
    bf12:	e760      	b.n	bdd6 <__aeabi_ddiv+0x3ba>
    bf14:	4f4f      	ldr	r7, [pc, #316]	; (c054 <__aeabi_ddiv+0x638>)
    bf16:	1b7f      	subs	r7, r7, r5
    bf18:	2f38      	cmp	r7, #56	; 0x38
    bf1a:	dd13      	ble.n	bf44 <__aeabi_ddiv+0x528>
    bf1c:	2201      	movs	r2, #1
    bf1e:	4653      	mov	r3, sl
    bf20:	401a      	ands	r2, r3
    bf22:	e64f      	b.n	bbc4 <__aeabi_ddiv+0x1a8>
    bf24:	2301      	movs	r3, #1
    bf26:	425b      	negs	r3, r3
    bf28:	4699      	mov	r9, r3
    bf2a:	e754      	b.n	bdd6 <__aeabi_ddiv+0x3ba>
    bf2c:	9302      	str	r3, [sp, #8]
    bf2e:	e708      	b.n	bd42 <__aeabi_ddiv+0x326>
    bf30:	9303      	str	r3, [sp, #12]
    bf32:	e727      	b.n	bd84 <__aeabi_ddiv+0x368>
    bf34:	4288      	cmp	r0, r1
    bf36:	d83c      	bhi.n	bfb2 <__aeabi_ddiv+0x596>
    bf38:	d074      	beq.n	c024 <__aeabi_ddiv+0x608>
    bf3a:	4691      	mov	r9, r2
    bf3c:	e747      	b.n	bdce <__aeabi_ddiv+0x3b2>
    bf3e:	9b01      	ldr	r3, [sp, #4]
    bf40:	469a      	mov	sl, r3
    bf42:	e748      	b.n	bdd6 <__aeabi_ddiv+0x3ba>
    bf44:	2f1f      	cmp	r7, #31
    bf46:	dc44      	bgt.n	bfd2 <__aeabi_ddiv+0x5b6>
    bf48:	4b43      	ldr	r3, [pc, #268]	; (c058 <__aeabi_ddiv+0x63c>)
    bf4a:	464a      	mov	r2, r9
    bf4c:	469c      	mov	ip, r3
    bf4e:	465b      	mov	r3, fp
    bf50:	4465      	add	r5, ip
    bf52:	40fa      	lsrs	r2, r7
    bf54:	40ab      	lsls	r3, r5
    bf56:	4313      	orrs	r3, r2
    bf58:	464a      	mov	r2, r9
    bf5a:	40aa      	lsls	r2, r5
    bf5c:	1c15      	adds	r5, r2, #0
    bf5e:	1e6a      	subs	r2, r5, #1
    bf60:	4195      	sbcs	r5, r2
    bf62:	465a      	mov	r2, fp
    bf64:	40fa      	lsrs	r2, r7
    bf66:	432b      	orrs	r3, r5
    bf68:	1c17      	adds	r7, r2, #0
    bf6a:	075a      	lsls	r2, r3, #29
    bf6c:	d009      	beq.n	bf82 <__aeabi_ddiv+0x566>
    bf6e:	220f      	movs	r2, #15
    bf70:	401a      	ands	r2, r3
    bf72:	2a04      	cmp	r2, #4
    bf74:	d005      	beq.n	bf82 <__aeabi_ddiv+0x566>
    bf76:	1d1a      	adds	r2, r3, #4
    bf78:	429a      	cmp	r2, r3
    bf7a:	419b      	sbcs	r3, r3
    bf7c:	425b      	negs	r3, r3
    bf7e:	18ff      	adds	r7, r7, r3
    bf80:	1c13      	adds	r3, r2, #0
    bf82:	023a      	lsls	r2, r7, #8
    bf84:	d53e      	bpl.n	c004 <__aeabi_ddiv+0x5e8>
    bf86:	4653      	mov	r3, sl
    bf88:	2201      	movs	r2, #1
    bf8a:	2100      	movs	r1, #0
    bf8c:	401a      	ands	r2, r3
    bf8e:	2700      	movs	r7, #0
    bf90:	2301      	movs	r3, #1
    bf92:	4689      	mov	r9, r1
    bf94:	e5aa      	b.n	baec <__aeabi_ddiv+0xd0>
    bf96:	2302      	movs	r3, #2
    bf98:	425b      	negs	r3, r3
    bf9a:	469c      	mov	ip, r3
    bf9c:	9a01      	ldr	r2, [sp, #4]
    bf9e:	44e3      	add	fp, ip
    bfa0:	4694      	mov	ip, r2
    bfa2:	44e0      	add	r8, ip
    bfa4:	4590      	cmp	r8, r2
    bfa6:	419b      	sbcs	r3, r3
    bfa8:	425b      	negs	r3, r3
    bfaa:	199b      	adds	r3, r3, r6
    bfac:	19df      	adds	r7, r3, r7
    bfae:	1b3f      	subs	r7, r7, r4
    bfb0:	e6a0      	b.n	bcf4 <__aeabi_ddiv+0x2d8>
    bfb2:	9f01      	ldr	r7, [sp, #4]
    bfb4:	464a      	mov	r2, r9
    bfb6:	007c      	lsls	r4, r7, #1
    bfb8:	42bc      	cmp	r4, r7
    bfba:	41bf      	sbcs	r7, r7
    bfbc:	427f      	negs	r7, r7
    bfbe:	19bf      	adds	r7, r7, r6
    bfc0:	3a02      	subs	r2, #2
    bfc2:	19c9      	adds	r1, r1, r7
    bfc4:	9401      	str	r4, [sp, #4]
    bfc6:	e79c      	b.n	bf02 <__aeabi_ddiv+0x4e6>
    bfc8:	2b00      	cmp	r3, #0
    bfca:	d195      	bne.n	bef8 <__aeabi_ddiv+0x4dc>
    bfcc:	2200      	movs	r2, #0
    bfce:	9201      	str	r2, [sp, #4]
    bfd0:	e79b      	b.n	bf0a <__aeabi_ddiv+0x4ee>
    bfd2:	465a      	mov	r2, fp
    bfd4:	4b21      	ldr	r3, [pc, #132]	; (c05c <__aeabi_ddiv+0x640>)
    bfd6:	1b5b      	subs	r3, r3, r5
    bfd8:	40da      	lsrs	r2, r3
    bfda:	2f20      	cmp	r7, #32
    bfdc:	d027      	beq.n	c02e <__aeabi_ddiv+0x612>
    bfde:	4b20      	ldr	r3, [pc, #128]	; (c060 <__aeabi_ddiv+0x644>)
    bfe0:	469c      	mov	ip, r3
    bfe2:	465b      	mov	r3, fp
    bfe4:	4465      	add	r5, ip
    bfe6:	40ab      	lsls	r3, r5
    bfe8:	4649      	mov	r1, r9
    bfea:	430b      	orrs	r3, r1
    bfec:	1e59      	subs	r1, r3, #1
    bfee:	418b      	sbcs	r3, r1
    bff0:	4313      	orrs	r3, r2
    bff2:	2207      	movs	r2, #7
    bff4:	2700      	movs	r7, #0
    bff6:	401a      	ands	r2, r3
    bff8:	d007      	beq.n	c00a <__aeabi_ddiv+0x5ee>
    bffa:	220f      	movs	r2, #15
    bffc:	2700      	movs	r7, #0
    bffe:	401a      	ands	r2, r3
    c000:	2a04      	cmp	r2, #4
    c002:	d1b8      	bne.n	bf76 <__aeabi_ddiv+0x55a>
    c004:	077a      	lsls	r2, r7, #29
    c006:	027f      	lsls	r7, r7, #9
    c008:	0b3f      	lsrs	r7, r7, #12
    c00a:	08db      	lsrs	r3, r3, #3
    c00c:	4313      	orrs	r3, r2
    c00e:	4699      	mov	r9, r3
    c010:	2201      	movs	r2, #1
    c012:	4653      	mov	r3, sl
    c014:	401a      	ands	r2, r3
    c016:	2300      	movs	r3, #0
    c018:	e568      	b.n	baec <__aeabi_ddiv+0xd0>
    c01a:	4541      	cmp	r1, r8
    c01c:	d8bb      	bhi.n	bf96 <__aeabi_ddiv+0x57a>
    c01e:	4693      	mov	fp, r2
    c020:	2700      	movs	r7, #0
    c022:	e667      	b.n	bcf4 <__aeabi_ddiv+0x2d8>
    c024:	9c01      	ldr	r4, [sp, #4]
    c026:	429c      	cmp	r4, r3
    c028:	d3c3      	bcc.n	bfb2 <__aeabi_ddiv+0x596>
    c02a:	4691      	mov	r9, r2
    c02c:	e76d      	b.n	bf0a <__aeabi_ddiv+0x4ee>
    c02e:	2300      	movs	r3, #0
    c030:	e7da      	b.n	bfe8 <__aeabi_ddiv+0x5cc>
    c032:	2780      	movs	r7, #128	; 0x80
    c034:	465b      	mov	r3, fp
    c036:	033f      	lsls	r7, r7, #12
    c038:	431f      	orrs	r7, r3
    c03a:	033f      	lsls	r7, r7, #12
    c03c:	0b3f      	lsrs	r7, r7, #12
    c03e:	9a01      	ldr	r2, [sp, #4]
    c040:	4b03      	ldr	r3, [pc, #12]	; (c050 <__aeabi_ddiv+0x634>)
    c042:	e553      	b.n	baec <__aeabi_ddiv+0xd0>
    c044:	000003ff 	.word	0x000003ff
    c048:	feffffff 	.word	0xfeffffff
    c04c:	000007fe 	.word	0x000007fe
    c050:	000007ff 	.word	0x000007ff
    c054:	fffffc02 	.word	0xfffffc02
    c058:	0000041e 	.word	0x0000041e
    c05c:	fffffbe2 	.word	0xfffffbe2
    c060:	0000043e 	.word	0x0000043e

0000c064 <__eqdf2>:
    c064:	b5f0      	push	{r4, r5, r6, r7, lr}
    c066:	465f      	mov	r7, fp
    c068:	464d      	mov	r5, r9
    c06a:	4644      	mov	r4, r8
    c06c:	4656      	mov	r6, sl
    c06e:	b4f0      	push	{r4, r5, r6, r7}
    c070:	031f      	lsls	r7, r3, #12
    c072:	005c      	lsls	r4, r3, #1
    c074:	0fdb      	lsrs	r3, r3, #31
    c076:	4699      	mov	r9, r3
    c078:	4b1b      	ldr	r3, [pc, #108]	; (c0e8 <__eqdf2+0x84>)
    c07a:	030e      	lsls	r6, r1, #12
    c07c:	004d      	lsls	r5, r1, #1
    c07e:	0fc9      	lsrs	r1, r1, #31
    c080:	4684      	mov	ip, r0
    c082:	0b36      	lsrs	r6, r6, #12
    c084:	0d6d      	lsrs	r5, r5, #21
    c086:	468b      	mov	fp, r1
    c088:	4690      	mov	r8, r2
    c08a:	0b3f      	lsrs	r7, r7, #12
    c08c:	0d64      	lsrs	r4, r4, #21
    c08e:	429d      	cmp	r5, r3
    c090:	d00c      	beq.n	c0ac <__eqdf2+0x48>
    c092:	4b15      	ldr	r3, [pc, #84]	; (c0e8 <__eqdf2+0x84>)
    c094:	429c      	cmp	r4, r3
    c096:	d010      	beq.n	c0ba <__eqdf2+0x56>
    c098:	2301      	movs	r3, #1
    c09a:	42a5      	cmp	r5, r4
    c09c:	d014      	beq.n	c0c8 <__eqdf2+0x64>
    c09e:	1c18      	adds	r0, r3, #0
    c0a0:	bc3c      	pop	{r2, r3, r4, r5}
    c0a2:	4690      	mov	r8, r2
    c0a4:	4699      	mov	r9, r3
    c0a6:	46a2      	mov	sl, r4
    c0a8:	46ab      	mov	fp, r5
    c0aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c0ac:	1c31      	adds	r1, r6, #0
    c0ae:	2301      	movs	r3, #1
    c0b0:	4301      	orrs	r1, r0
    c0b2:	d1f4      	bne.n	c09e <__eqdf2+0x3a>
    c0b4:	4b0c      	ldr	r3, [pc, #48]	; (c0e8 <__eqdf2+0x84>)
    c0b6:	429c      	cmp	r4, r3
    c0b8:	d1ee      	bne.n	c098 <__eqdf2+0x34>
    c0ba:	433a      	orrs	r2, r7
    c0bc:	2301      	movs	r3, #1
    c0be:	2a00      	cmp	r2, #0
    c0c0:	d1ed      	bne.n	c09e <__eqdf2+0x3a>
    c0c2:	2301      	movs	r3, #1
    c0c4:	42a5      	cmp	r5, r4
    c0c6:	d1ea      	bne.n	c09e <__eqdf2+0x3a>
    c0c8:	42be      	cmp	r6, r7
    c0ca:	d1e8      	bne.n	c09e <__eqdf2+0x3a>
    c0cc:	45c4      	cmp	ip, r8
    c0ce:	d1e6      	bne.n	c09e <__eqdf2+0x3a>
    c0d0:	45cb      	cmp	fp, r9
    c0d2:	d006      	beq.n	c0e2 <__eqdf2+0x7e>
    c0d4:	2d00      	cmp	r5, #0
    c0d6:	d1e2      	bne.n	c09e <__eqdf2+0x3a>
    c0d8:	4330      	orrs	r0, r6
    c0da:	1c03      	adds	r3, r0, #0
    c0dc:	1e58      	subs	r0, r3, #1
    c0de:	4183      	sbcs	r3, r0
    c0e0:	e7dd      	b.n	c09e <__eqdf2+0x3a>
    c0e2:	2300      	movs	r3, #0
    c0e4:	e7db      	b.n	c09e <__eqdf2+0x3a>
    c0e6:	46c0      	nop			; (mov r8, r8)
    c0e8:	000007ff 	.word	0x000007ff

0000c0ec <__gedf2>:
    c0ec:	b5f0      	push	{r4, r5, r6, r7, lr}
    c0ee:	4657      	mov	r7, sl
    c0f0:	4645      	mov	r5, r8
    c0f2:	464e      	mov	r6, r9
    c0f4:	b4e0      	push	{r5, r6, r7}
    c0f6:	030f      	lsls	r7, r1, #12
    c0f8:	004e      	lsls	r6, r1, #1
    c0fa:	0fc9      	lsrs	r1, r1, #31
    c0fc:	468a      	mov	sl, r1
    c0fe:	4932      	ldr	r1, [pc, #200]	; (c1c8 <__gedf2+0xdc>)
    c100:	031d      	lsls	r5, r3, #12
    c102:	005c      	lsls	r4, r3, #1
    c104:	4684      	mov	ip, r0
    c106:	0b3f      	lsrs	r7, r7, #12
    c108:	0d76      	lsrs	r6, r6, #21
    c10a:	4690      	mov	r8, r2
    c10c:	0b2d      	lsrs	r5, r5, #12
    c10e:	0d64      	lsrs	r4, r4, #21
    c110:	0fdb      	lsrs	r3, r3, #31
    c112:	428e      	cmp	r6, r1
    c114:	d00f      	beq.n	c136 <__gedf2+0x4a>
    c116:	428c      	cmp	r4, r1
    c118:	d039      	beq.n	c18e <__gedf2+0xa2>
    c11a:	2e00      	cmp	r6, #0
    c11c:	d110      	bne.n	c140 <__gedf2+0x54>
    c11e:	4338      	orrs	r0, r7
    c120:	4241      	negs	r1, r0
    c122:	4141      	adcs	r1, r0
    c124:	4689      	mov	r9, r1
    c126:	2c00      	cmp	r4, #0
    c128:	d127      	bne.n	c17a <__gedf2+0x8e>
    c12a:	432a      	orrs	r2, r5
    c12c:	d125      	bne.n	c17a <__gedf2+0x8e>
    c12e:	2000      	movs	r0, #0
    c130:	2900      	cmp	r1, #0
    c132:	d10e      	bne.n	c152 <__gedf2+0x66>
    c134:	e008      	b.n	c148 <__gedf2+0x5c>
    c136:	1c39      	adds	r1, r7, #0
    c138:	4301      	orrs	r1, r0
    c13a:	d12e      	bne.n	c19a <__gedf2+0xae>
    c13c:	42b4      	cmp	r4, r6
    c13e:	d026      	beq.n	c18e <__gedf2+0xa2>
    c140:	2c00      	cmp	r4, #0
    c142:	d00b      	beq.n	c15c <__gedf2+0x70>
    c144:	459a      	cmp	sl, r3
    c146:	d00d      	beq.n	c164 <__gedf2+0x78>
    c148:	4653      	mov	r3, sl
    c14a:	4259      	negs	r1, r3
    c14c:	2301      	movs	r3, #1
    c14e:	4319      	orrs	r1, r3
    c150:	1c08      	adds	r0, r1, #0
    c152:	bc1c      	pop	{r2, r3, r4}
    c154:	4690      	mov	r8, r2
    c156:	4699      	mov	r9, r3
    c158:	46a2      	mov	sl, r4
    c15a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c15c:	432a      	orrs	r2, r5
    c15e:	d0f3      	beq.n	c148 <__gedf2+0x5c>
    c160:	459a      	cmp	sl, r3
    c162:	d1f1      	bne.n	c148 <__gedf2+0x5c>
    c164:	42a6      	cmp	r6, r4
    c166:	dcef      	bgt.n	c148 <__gedf2+0x5c>
    c168:	da1a      	bge.n	c1a0 <__gedf2+0xb4>
    c16a:	4650      	mov	r0, sl
    c16c:	4241      	negs	r1, r0
    c16e:	4148      	adcs	r0, r1
    c170:	2301      	movs	r3, #1
    c172:	4241      	negs	r1, r0
    c174:	4319      	orrs	r1, r3
    c176:	1c08      	adds	r0, r1, #0
    c178:	e7eb      	b.n	c152 <__gedf2+0x66>
    c17a:	464a      	mov	r2, r9
    c17c:	2a00      	cmp	r2, #0
    c17e:	d0e1      	beq.n	c144 <__gedf2+0x58>
    c180:	4258      	negs	r0, r3
    c182:	4158      	adcs	r0, r3
    c184:	2201      	movs	r2, #1
    c186:	4241      	negs	r1, r0
    c188:	4311      	orrs	r1, r2
    c18a:	1c08      	adds	r0, r1, #0
    c18c:	e7e1      	b.n	c152 <__gedf2+0x66>
    c18e:	1c29      	adds	r1, r5, #0
    c190:	4311      	orrs	r1, r2
    c192:	d102      	bne.n	c19a <__gedf2+0xae>
    c194:	2e00      	cmp	r6, #0
    c196:	d0c2      	beq.n	c11e <__gedf2+0x32>
    c198:	e7d4      	b.n	c144 <__gedf2+0x58>
    c19a:	2002      	movs	r0, #2
    c19c:	4240      	negs	r0, r0
    c19e:	e7d8      	b.n	c152 <__gedf2+0x66>
    c1a0:	42af      	cmp	r7, r5
    c1a2:	d8d1      	bhi.n	c148 <__gedf2+0x5c>
    c1a4:	d009      	beq.n	c1ba <__gedf2+0xce>
    c1a6:	2000      	movs	r0, #0
    c1a8:	42af      	cmp	r7, r5
    c1aa:	d2d2      	bcs.n	c152 <__gedf2+0x66>
    c1ac:	4650      	mov	r0, sl
    c1ae:	4241      	negs	r1, r0
    c1b0:	4148      	adcs	r0, r1
    c1b2:	2301      	movs	r3, #1
    c1b4:	4240      	negs	r0, r0
    c1b6:	4318      	orrs	r0, r3
    c1b8:	e7cb      	b.n	c152 <__gedf2+0x66>
    c1ba:	45c4      	cmp	ip, r8
    c1bc:	d8c4      	bhi.n	c148 <__gedf2+0x5c>
    c1be:	2000      	movs	r0, #0
    c1c0:	45c4      	cmp	ip, r8
    c1c2:	d3f3      	bcc.n	c1ac <__gedf2+0xc0>
    c1c4:	e7c5      	b.n	c152 <__gedf2+0x66>
    c1c6:	46c0      	nop			; (mov r8, r8)
    c1c8:	000007ff 	.word	0x000007ff

0000c1cc <__ledf2>:
    c1cc:	b5f0      	push	{r4, r5, r6, r7, lr}
    c1ce:	465f      	mov	r7, fp
    c1d0:	464d      	mov	r5, r9
    c1d2:	4644      	mov	r4, r8
    c1d4:	4656      	mov	r6, sl
    c1d6:	4680      	mov	r8, r0
    c1d8:	b4f0      	push	{r4, r5, r6, r7}
    c1da:	1c06      	adds	r6, r0, #0
    c1dc:	0308      	lsls	r0, r1, #12
    c1de:	0b00      	lsrs	r0, r0, #12
    c1e0:	4684      	mov	ip, r0
    c1e2:	482c      	ldr	r0, [pc, #176]	; (c294 <__ledf2+0xc8>)
    c1e4:	004c      	lsls	r4, r1, #1
    c1e6:	031f      	lsls	r7, r3, #12
    c1e8:	005d      	lsls	r5, r3, #1
    c1ea:	0fc9      	lsrs	r1, r1, #31
    c1ec:	0d64      	lsrs	r4, r4, #21
    c1ee:	468b      	mov	fp, r1
    c1f0:	4691      	mov	r9, r2
    c1f2:	0b3f      	lsrs	r7, r7, #12
    c1f4:	0d6d      	lsrs	r5, r5, #21
    c1f6:	0fdb      	lsrs	r3, r3, #31
    c1f8:	4284      	cmp	r4, r0
    c1fa:	d012      	beq.n	c222 <__ledf2+0x56>
    c1fc:	4285      	cmp	r5, r0
    c1fe:	d025      	beq.n	c24c <__ledf2+0x80>
    c200:	2c00      	cmp	r4, #0
    c202:	d114      	bne.n	c22e <__ledf2+0x62>
    c204:	4661      	mov	r1, ip
    c206:	430e      	orrs	r6, r1
    c208:	4270      	negs	r0, r6
    c20a:	4146      	adcs	r6, r0
    c20c:	2d00      	cmp	r5, #0
    c20e:	d035      	beq.n	c27c <__ledf2+0xb0>
    c210:	2e00      	cmp	r6, #0
    c212:	d021      	beq.n	c258 <__ledf2+0x8c>
    c214:	4258      	negs	r0, r3
    c216:	4158      	adcs	r0, r3
    c218:	2101      	movs	r1, #1
    c21a:	4243      	negs	r3, r0
    c21c:	430b      	orrs	r3, r1
    c21e:	1c18      	adds	r0, r3, #0
    c220:	e00e      	b.n	c240 <__ledf2+0x74>
    c222:	4661      	mov	r1, ip
    c224:	2002      	movs	r0, #2
    c226:	4331      	orrs	r1, r6
    c228:	d10a      	bne.n	c240 <__ledf2+0x74>
    c22a:	42a5      	cmp	r5, r4
    c22c:	d00e      	beq.n	c24c <__ledf2+0x80>
    c22e:	2d00      	cmp	r5, #0
    c230:	d112      	bne.n	c258 <__ledf2+0x8c>
    c232:	433a      	orrs	r2, r7
    c234:	d110      	bne.n	c258 <__ledf2+0x8c>
    c236:	465b      	mov	r3, fp
    c238:	4259      	negs	r1, r3
    c23a:	2301      	movs	r3, #1
    c23c:	4319      	orrs	r1, r3
    c23e:	1c08      	adds	r0, r1, #0
    c240:	bc3c      	pop	{r2, r3, r4, r5}
    c242:	4690      	mov	r8, r2
    c244:	4699      	mov	r9, r3
    c246:	46a2      	mov	sl, r4
    c248:	46ab      	mov	fp, r5
    c24a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c24c:	1c39      	adds	r1, r7, #0
    c24e:	2002      	movs	r0, #2
    c250:	4311      	orrs	r1, r2
    c252:	d1f5      	bne.n	c240 <__ledf2+0x74>
    c254:	2c00      	cmp	r4, #0
    c256:	d0d5      	beq.n	c204 <__ledf2+0x38>
    c258:	459b      	cmp	fp, r3
    c25a:	d1ec      	bne.n	c236 <__ledf2+0x6a>
    c25c:	42ac      	cmp	r4, r5
    c25e:	dcea      	bgt.n	c236 <__ledf2+0x6a>
    c260:	db05      	blt.n	c26e <__ledf2+0xa2>
    c262:	45bc      	cmp	ip, r7
    c264:	d8e7      	bhi.n	c236 <__ledf2+0x6a>
    c266:	d00f      	beq.n	c288 <__ledf2+0xbc>
    c268:	2000      	movs	r0, #0
    c26a:	45bc      	cmp	ip, r7
    c26c:	d2e8      	bcs.n	c240 <__ledf2+0x74>
    c26e:	4658      	mov	r0, fp
    c270:	4241      	negs	r1, r0
    c272:	4148      	adcs	r0, r1
    c274:	4241      	negs	r1, r0
    c276:	2001      	movs	r0, #1
    c278:	4308      	orrs	r0, r1
    c27a:	e7e1      	b.n	c240 <__ledf2+0x74>
    c27c:	433a      	orrs	r2, r7
    c27e:	d1c7      	bne.n	c210 <__ledf2+0x44>
    c280:	2000      	movs	r0, #0
    c282:	2e00      	cmp	r6, #0
    c284:	d1dc      	bne.n	c240 <__ledf2+0x74>
    c286:	e7d6      	b.n	c236 <__ledf2+0x6a>
    c288:	45c8      	cmp	r8, r9
    c28a:	d8d4      	bhi.n	c236 <__ledf2+0x6a>
    c28c:	2000      	movs	r0, #0
    c28e:	45c8      	cmp	r8, r9
    c290:	d3ed      	bcc.n	c26e <__ledf2+0xa2>
    c292:	e7d5      	b.n	c240 <__ledf2+0x74>
    c294:	000007ff 	.word	0x000007ff

0000c298 <__aeabi_dmul>:
    c298:	b5f0      	push	{r4, r5, r6, r7, lr}
    c29a:	465f      	mov	r7, fp
    c29c:	4656      	mov	r6, sl
    c29e:	464d      	mov	r5, r9
    c2a0:	4644      	mov	r4, r8
    c2a2:	b4f0      	push	{r4, r5, r6, r7}
    c2a4:	1c05      	adds	r5, r0, #0
    c2a6:	1c06      	adds	r6, r0, #0
    c2a8:	0308      	lsls	r0, r1, #12
    c2aa:	b087      	sub	sp, #28
    c2ac:	4699      	mov	r9, r3
    c2ae:	004f      	lsls	r7, r1, #1
    c2b0:	0b03      	lsrs	r3, r0, #12
    c2b2:	0fcc      	lsrs	r4, r1, #31
    c2b4:	4692      	mov	sl, r2
    c2b6:	469b      	mov	fp, r3
    c2b8:	0d7f      	lsrs	r7, r7, #21
    c2ba:	9401      	str	r4, [sp, #4]
    c2bc:	d067      	beq.n	c38e <__aeabi_dmul+0xf6>
    c2be:	4b6c      	ldr	r3, [pc, #432]	; (c470 <__aeabi_dmul+0x1d8>)
    c2c0:	429f      	cmp	r7, r3
    c2c2:	d036      	beq.n	c332 <__aeabi_dmul+0x9a>
    c2c4:	2080      	movs	r0, #128	; 0x80
    c2c6:	465b      	mov	r3, fp
    c2c8:	0340      	lsls	r0, r0, #13
    c2ca:	4318      	orrs	r0, r3
    c2cc:	00c0      	lsls	r0, r0, #3
    c2ce:	0f6b      	lsrs	r3, r5, #29
    c2d0:	4318      	orrs	r0, r3
    c2d2:	4b68      	ldr	r3, [pc, #416]	; (c474 <__aeabi_dmul+0x1dc>)
    c2d4:	4683      	mov	fp, r0
    c2d6:	469c      	mov	ip, r3
    c2d8:	2300      	movs	r3, #0
    c2da:	4698      	mov	r8, r3
    c2dc:	00ee      	lsls	r6, r5, #3
    c2de:	4467      	add	r7, ip
    c2e0:	9300      	str	r3, [sp, #0]
    c2e2:	464b      	mov	r3, r9
    c2e4:	4649      	mov	r1, r9
    c2e6:	031d      	lsls	r5, r3, #12
    c2e8:	0fc9      	lsrs	r1, r1, #31
    c2ea:	005b      	lsls	r3, r3, #1
    c2ec:	4652      	mov	r2, sl
    c2ee:	0b2d      	lsrs	r5, r5, #12
    c2f0:	0d5b      	lsrs	r3, r3, #21
    c2f2:	4689      	mov	r9, r1
    c2f4:	d100      	bne.n	c2f8 <__aeabi_dmul+0x60>
    c2f6:	e06e      	b.n	c3d6 <__aeabi_dmul+0x13e>
    c2f8:	495d      	ldr	r1, [pc, #372]	; (c470 <__aeabi_dmul+0x1d8>)
    c2fa:	428b      	cmp	r3, r1
    c2fc:	d064      	beq.n	c3c8 <__aeabi_dmul+0x130>
    c2fe:	2080      	movs	r0, #128	; 0x80
    c300:	495c      	ldr	r1, [pc, #368]	; (c474 <__aeabi_dmul+0x1dc>)
    c302:	0340      	lsls	r0, r0, #13
    c304:	468c      	mov	ip, r1
    c306:	2100      	movs	r1, #0
    c308:	4305      	orrs	r5, r0
    c30a:	00ed      	lsls	r5, r5, #3
    c30c:	0f50      	lsrs	r0, r2, #29
    c30e:	4305      	orrs	r5, r0
    c310:	00d2      	lsls	r2, r2, #3
    c312:	4463      	add	r3, ip
    c314:	4648      	mov	r0, r9
    c316:	18ff      	adds	r7, r7, r3
    c318:	1c7b      	adds	r3, r7, #1
    c31a:	469a      	mov	sl, r3
    c31c:	9b00      	ldr	r3, [sp, #0]
    c31e:	4060      	eors	r0, r4
    c320:	9002      	str	r0, [sp, #8]
    c322:	430b      	orrs	r3, r1
    c324:	2b0f      	cmp	r3, #15
    c326:	d900      	bls.n	c32a <__aeabi_dmul+0x92>
    c328:	e0ac      	b.n	c484 <__aeabi_dmul+0x1ec>
    c32a:	4853      	ldr	r0, [pc, #332]	; (c478 <__aeabi_dmul+0x1e0>)
    c32c:	009b      	lsls	r3, r3, #2
    c32e:	58c3      	ldr	r3, [r0, r3]
    c330:	469f      	mov	pc, r3
    c332:	465b      	mov	r3, fp
    c334:	431d      	orrs	r5, r3
    c336:	d000      	beq.n	c33a <__aeabi_dmul+0xa2>
    c338:	e082      	b.n	c440 <__aeabi_dmul+0x1a8>
    c33a:	2308      	movs	r3, #8
    c33c:	9300      	str	r3, [sp, #0]
    c33e:	2300      	movs	r3, #0
    c340:	469b      	mov	fp, r3
    c342:	3302      	adds	r3, #2
    c344:	2600      	movs	r6, #0
    c346:	4698      	mov	r8, r3
    c348:	e7cb      	b.n	c2e2 <__aeabi_dmul+0x4a>
    c34a:	9b02      	ldr	r3, [sp, #8]
    c34c:	9301      	str	r3, [sp, #4]
    c34e:	4643      	mov	r3, r8
    c350:	2b02      	cmp	r3, #2
    c352:	d159      	bne.n	c408 <__aeabi_dmul+0x170>
    c354:	2401      	movs	r4, #1
    c356:	2500      	movs	r5, #0
    c358:	2600      	movs	r6, #0
    c35a:	9b01      	ldr	r3, [sp, #4]
    c35c:	401c      	ands	r4, r3
    c35e:	4b44      	ldr	r3, [pc, #272]	; (c470 <__aeabi_dmul+0x1d8>)
    c360:	2100      	movs	r1, #0
    c362:	032d      	lsls	r5, r5, #12
    c364:	0d0a      	lsrs	r2, r1, #20
    c366:	0512      	lsls	r2, r2, #20
    c368:	0b2d      	lsrs	r5, r5, #12
    c36a:	4315      	orrs	r5, r2
    c36c:	4a43      	ldr	r2, [pc, #268]	; (c47c <__aeabi_dmul+0x1e4>)
    c36e:	051b      	lsls	r3, r3, #20
    c370:	4015      	ands	r5, r2
    c372:	431d      	orrs	r5, r3
    c374:	006d      	lsls	r5, r5, #1
    c376:	07e4      	lsls	r4, r4, #31
    c378:	086d      	lsrs	r5, r5, #1
    c37a:	4325      	orrs	r5, r4
    c37c:	1c30      	adds	r0, r6, #0
    c37e:	1c29      	adds	r1, r5, #0
    c380:	b007      	add	sp, #28
    c382:	bc3c      	pop	{r2, r3, r4, r5}
    c384:	4690      	mov	r8, r2
    c386:	4699      	mov	r9, r3
    c388:	46a2      	mov	sl, r4
    c38a:	46ab      	mov	fp, r5
    c38c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c38e:	432b      	orrs	r3, r5
    c390:	d04e      	beq.n	c430 <__aeabi_dmul+0x198>
    c392:	465b      	mov	r3, fp
    c394:	2b00      	cmp	r3, #0
    c396:	d100      	bne.n	c39a <__aeabi_dmul+0x102>
    c398:	e185      	b.n	c6a6 <__aeabi_dmul+0x40e>
    c39a:	4658      	mov	r0, fp
    c39c:	f7f9 fc4c 	bl	5c38 <__clzsi2>
    c3a0:	1c02      	adds	r2, r0, #0
    c3a2:	2328      	movs	r3, #40	; 0x28
    c3a4:	1c29      	adds	r1, r5, #0
    c3a6:	1a9b      	subs	r3, r3, r2
    c3a8:	1c16      	adds	r6, r2, #0
    c3aa:	4658      	mov	r0, fp
    c3ac:	40d9      	lsrs	r1, r3
    c3ae:	3e08      	subs	r6, #8
    c3b0:	40b0      	lsls	r0, r6
    c3b2:	1c0b      	adds	r3, r1, #0
    c3b4:	40b5      	lsls	r5, r6
    c3b6:	4303      	orrs	r3, r0
    c3b8:	469b      	mov	fp, r3
    c3ba:	1c2e      	adds	r6, r5, #0
    c3bc:	2300      	movs	r3, #0
    c3be:	4f30      	ldr	r7, [pc, #192]	; (c480 <__aeabi_dmul+0x1e8>)
    c3c0:	9300      	str	r3, [sp, #0]
    c3c2:	1abf      	subs	r7, r7, r2
    c3c4:	4698      	mov	r8, r3
    c3c6:	e78c      	b.n	c2e2 <__aeabi_dmul+0x4a>
    c3c8:	4651      	mov	r1, sl
    c3ca:	4329      	orrs	r1, r5
    c3cc:	d12e      	bne.n	c42c <__aeabi_dmul+0x194>
    c3ce:	2500      	movs	r5, #0
    c3d0:	2200      	movs	r2, #0
    c3d2:	2102      	movs	r1, #2
    c3d4:	e79e      	b.n	c314 <__aeabi_dmul+0x7c>
    c3d6:	4651      	mov	r1, sl
    c3d8:	4329      	orrs	r1, r5
    c3da:	d023      	beq.n	c424 <__aeabi_dmul+0x18c>
    c3dc:	2d00      	cmp	r5, #0
    c3de:	d100      	bne.n	c3e2 <__aeabi_dmul+0x14a>
    c3e0:	e154      	b.n	c68c <__aeabi_dmul+0x3f4>
    c3e2:	1c28      	adds	r0, r5, #0
    c3e4:	f7f9 fc28 	bl	5c38 <__clzsi2>
    c3e8:	1c03      	adds	r3, r0, #0
    c3ea:	2128      	movs	r1, #40	; 0x28
    c3ec:	4650      	mov	r0, sl
    c3ee:	1ac9      	subs	r1, r1, r3
    c3f0:	1c1a      	adds	r2, r3, #0
    c3f2:	40c8      	lsrs	r0, r1
    c3f4:	4651      	mov	r1, sl
    c3f6:	3a08      	subs	r2, #8
    c3f8:	4091      	lsls	r1, r2
    c3fa:	4095      	lsls	r5, r2
    c3fc:	1c0a      	adds	r2, r1, #0
    c3fe:	4305      	orrs	r5, r0
    c400:	481f      	ldr	r0, [pc, #124]	; (c480 <__aeabi_dmul+0x1e8>)
    c402:	2100      	movs	r1, #0
    c404:	1ac3      	subs	r3, r0, r3
    c406:	e785      	b.n	c314 <__aeabi_dmul+0x7c>
    c408:	2b03      	cmp	r3, #3
    c40a:	d100      	bne.n	c40e <__aeabi_dmul+0x176>
    c40c:	e1c2      	b.n	c794 <__aeabi_dmul+0x4fc>
    c40e:	2b01      	cmp	r3, #1
    c410:	d000      	beq.n	c414 <__aeabi_dmul+0x17c>
    c412:	e16d      	b.n	c6f0 <__aeabi_dmul+0x458>
    c414:	4644      	mov	r4, r8
    c416:	9b01      	ldr	r3, [sp, #4]
    c418:	2500      	movs	r5, #0
    c41a:	401c      	ands	r4, r3
    c41c:	b2e4      	uxtb	r4, r4
    c41e:	2300      	movs	r3, #0
    c420:	2600      	movs	r6, #0
    c422:	e79d      	b.n	c360 <__aeabi_dmul+0xc8>
    c424:	2500      	movs	r5, #0
    c426:	2200      	movs	r2, #0
    c428:	2101      	movs	r1, #1
    c42a:	e773      	b.n	c314 <__aeabi_dmul+0x7c>
    c42c:	2103      	movs	r1, #3
    c42e:	e771      	b.n	c314 <__aeabi_dmul+0x7c>
    c430:	2304      	movs	r3, #4
    c432:	9300      	str	r3, [sp, #0]
    c434:	2300      	movs	r3, #0
    c436:	469b      	mov	fp, r3
    c438:	3301      	adds	r3, #1
    c43a:	2600      	movs	r6, #0
    c43c:	4698      	mov	r8, r3
    c43e:	e750      	b.n	c2e2 <__aeabi_dmul+0x4a>
    c440:	230c      	movs	r3, #12
    c442:	9300      	str	r3, [sp, #0]
    c444:	3b09      	subs	r3, #9
    c446:	4698      	mov	r8, r3
    c448:	e74b      	b.n	c2e2 <__aeabi_dmul+0x4a>
    c44a:	2580      	movs	r5, #128	; 0x80
    c44c:	2400      	movs	r4, #0
    c44e:	032d      	lsls	r5, r5, #12
    c450:	2600      	movs	r6, #0
    c452:	4b07      	ldr	r3, [pc, #28]	; (c470 <__aeabi_dmul+0x1d8>)
    c454:	e784      	b.n	c360 <__aeabi_dmul+0xc8>
    c456:	464b      	mov	r3, r9
    c458:	46ab      	mov	fp, r5
    c45a:	1c16      	adds	r6, r2, #0
    c45c:	9301      	str	r3, [sp, #4]
    c45e:	4688      	mov	r8, r1
    c460:	e775      	b.n	c34e <__aeabi_dmul+0xb6>
    c462:	9b02      	ldr	r3, [sp, #8]
    c464:	46ab      	mov	fp, r5
    c466:	1c16      	adds	r6, r2, #0
    c468:	9301      	str	r3, [sp, #4]
    c46a:	4688      	mov	r8, r1
    c46c:	e76f      	b.n	c34e <__aeabi_dmul+0xb6>
    c46e:	46c0      	nop			; (mov r8, r8)
    c470:	000007ff 	.word	0x000007ff
    c474:	fffffc01 	.word	0xfffffc01
    c478:	0000e394 	.word	0x0000e394
    c47c:	800fffff 	.word	0x800fffff
    c480:	fffffc0d 	.word	0xfffffc0d
    c484:	0c33      	lsrs	r3, r6, #16
    c486:	0436      	lsls	r6, r6, #16
    c488:	0c36      	lsrs	r6, r6, #16
    c48a:	469c      	mov	ip, r3
    c48c:	1c33      	adds	r3, r6, #0
    c48e:	0c14      	lsrs	r4, r2, #16
    c490:	0412      	lsls	r2, r2, #16
    c492:	0c12      	lsrs	r2, r2, #16
    c494:	4353      	muls	r3, r2
    c496:	4698      	mov	r8, r3
    c498:	4663      	mov	r3, ip
    c49a:	4353      	muls	r3, r2
    c49c:	4699      	mov	r9, r3
    c49e:	4663      	mov	r3, ip
    c4a0:	4363      	muls	r3, r4
    c4a2:	9301      	str	r3, [sp, #4]
    c4a4:	1c33      	adds	r3, r6, #0
    c4a6:	4641      	mov	r1, r8
    c4a8:	4363      	muls	r3, r4
    c4aa:	0c09      	lsrs	r1, r1, #16
    c4ac:	444b      	add	r3, r9
    c4ae:	185b      	adds	r3, r3, r1
    c4b0:	4599      	cmp	r9, r3
    c4b2:	d905      	bls.n	c4c0 <__aeabi_dmul+0x228>
    c4b4:	2080      	movs	r0, #128	; 0x80
    c4b6:	0240      	lsls	r0, r0, #9
    c4b8:	4681      	mov	r9, r0
    c4ba:	9901      	ldr	r1, [sp, #4]
    c4bc:	4449      	add	r1, r9
    c4be:	9101      	str	r1, [sp, #4]
    c4c0:	0c19      	lsrs	r1, r3, #16
    c4c2:	9103      	str	r1, [sp, #12]
    c4c4:	4641      	mov	r1, r8
    c4c6:	0409      	lsls	r1, r1, #16
    c4c8:	0c09      	lsrs	r1, r1, #16
    c4ca:	041b      	lsls	r3, r3, #16
    c4cc:	185b      	adds	r3, r3, r1
    c4ce:	9304      	str	r3, [sp, #16]
    c4d0:	0c2b      	lsrs	r3, r5, #16
    c4d2:	4698      	mov	r8, r3
    c4d4:	1c33      	adds	r3, r6, #0
    c4d6:	042d      	lsls	r5, r5, #16
    c4d8:	0c29      	lsrs	r1, r5, #16
    c4da:	434b      	muls	r3, r1
    c4dc:	4660      	mov	r0, ip
    c4de:	9300      	str	r3, [sp, #0]
    c4e0:	4643      	mov	r3, r8
    c4e2:	4665      	mov	r5, ip
    c4e4:	4358      	muls	r0, r3
    c4e6:	435e      	muls	r6, r3
    c4e8:	9b00      	ldr	r3, [sp, #0]
    c4ea:	434d      	muls	r5, r1
    c4ec:	0c1b      	lsrs	r3, r3, #16
    c4ee:	4699      	mov	r9, r3
    c4f0:	19ae      	adds	r6, r5, r6
    c4f2:	444e      	add	r6, r9
    c4f4:	4684      	mov	ip, r0
    c4f6:	42b5      	cmp	r5, r6
    c4f8:	d903      	bls.n	c502 <__aeabi_dmul+0x26a>
    c4fa:	2380      	movs	r3, #128	; 0x80
    c4fc:	025b      	lsls	r3, r3, #9
    c4fe:	4699      	mov	r9, r3
    c500:	44cc      	add	ip, r9
    c502:	0c35      	lsrs	r5, r6, #16
    c504:	1c2b      	adds	r3, r5, #0
    c506:	9803      	ldr	r0, [sp, #12]
    c508:	4463      	add	r3, ip
    c50a:	4684      	mov	ip, r0
    c50c:	9305      	str	r3, [sp, #20]
    c50e:	9b00      	ldr	r3, [sp, #0]
    c510:	0436      	lsls	r6, r6, #16
    c512:	041b      	lsls	r3, r3, #16
    c514:	0c1b      	lsrs	r3, r3, #16
    c516:	18f3      	adds	r3, r6, r3
    c518:	449c      	add	ip, r3
    c51a:	4660      	mov	r0, ip
    c51c:	9003      	str	r0, [sp, #12]
    c51e:	4658      	mov	r0, fp
    c520:	0405      	lsls	r5, r0, #16
    c522:	0c06      	lsrs	r6, r0, #16
    c524:	0c28      	lsrs	r0, r5, #16
    c526:	4684      	mov	ip, r0
    c528:	4350      	muls	r0, r2
    c52a:	1c35      	adds	r5, r6, #0
    c52c:	4681      	mov	r9, r0
    c52e:	4660      	mov	r0, ip
    c530:	4365      	muls	r5, r4
    c532:	4344      	muls	r4, r0
    c534:	4648      	mov	r0, r9
    c536:	0c00      	lsrs	r0, r0, #16
    c538:	4683      	mov	fp, r0
    c53a:	4372      	muls	r2, r6
    c53c:	1914      	adds	r4, r2, r4
    c53e:	445c      	add	r4, fp
    c540:	42a2      	cmp	r2, r4
    c542:	d903      	bls.n	c54c <__aeabi_dmul+0x2b4>
    c544:	2280      	movs	r2, #128	; 0x80
    c546:	0252      	lsls	r2, r2, #9
    c548:	4693      	mov	fp, r2
    c54a:	445d      	add	r5, fp
    c54c:	0c22      	lsrs	r2, r4, #16
    c54e:	18ad      	adds	r5, r5, r2
    c550:	464a      	mov	r2, r9
    c552:	0412      	lsls	r2, r2, #16
    c554:	0c12      	lsrs	r2, r2, #16
    c556:	0424      	lsls	r4, r4, #16
    c558:	4640      	mov	r0, r8
    c55a:	18a4      	adds	r4, r4, r2
    c55c:	4662      	mov	r2, ip
    c55e:	434a      	muls	r2, r1
    c560:	4371      	muls	r1, r6
    c562:	4346      	muls	r6, r0
    c564:	4660      	mov	r0, ip
    c566:	9600      	str	r6, [sp, #0]
    c568:	4646      	mov	r6, r8
    c56a:	4370      	muls	r0, r6
    c56c:	4680      	mov	r8, r0
    c56e:	0c10      	lsrs	r0, r2, #16
    c570:	4684      	mov	ip, r0
    c572:	4488      	add	r8, r1
    c574:	44e0      	add	r8, ip
    c576:	4541      	cmp	r1, r8
    c578:	d905      	bls.n	c586 <__aeabi_dmul+0x2ee>
    c57a:	2180      	movs	r1, #128	; 0x80
    c57c:	0249      	lsls	r1, r1, #9
    c57e:	468c      	mov	ip, r1
    c580:	9900      	ldr	r1, [sp, #0]
    c582:	4461      	add	r1, ip
    c584:	9100      	str	r1, [sp, #0]
    c586:	9801      	ldr	r0, [sp, #4]
    c588:	9903      	ldr	r1, [sp, #12]
    c58a:	4684      	mov	ip, r0
    c58c:	4461      	add	r1, ip
    c58e:	4299      	cmp	r1, r3
    c590:	419b      	sbcs	r3, r3
    c592:	425b      	negs	r3, r3
    c594:	4699      	mov	r9, r3
    c596:	9805      	ldr	r0, [sp, #20]
    c598:	4643      	mov	r3, r8
    c59a:	4684      	mov	ip, r0
    c59c:	0412      	lsls	r2, r2, #16
    c59e:	0c12      	lsrs	r2, r2, #16
    c5a0:	041b      	lsls	r3, r3, #16
    c5a2:	189b      	adds	r3, r3, r2
    c5a4:	4463      	add	r3, ip
    c5a6:	469c      	mov	ip, r3
    c5a8:	46ab      	mov	fp, r5
    c5aa:	4283      	cmp	r3, r0
    c5ac:	419b      	sbcs	r3, r3
    c5ae:	4640      	mov	r0, r8
    c5b0:	190a      	adds	r2, r1, r4
    c5b2:	44cc      	add	ip, r9
    c5b4:	42a2      	cmp	r2, r4
    c5b6:	4189      	sbcs	r1, r1
    c5b8:	44e3      	add	fp, ip
    c5ba:	45cc      	cmp	ip, r9
    c5bc:	41b6      	sbcs	r6, r6
    c5be:	465c      	mov	r4, fp
    c5c0:	0c00      	lsrs	r0, r0, #16
    c5c2:	4680      	mov	r8, r0
    c5c4:	4249      	negs	r1, r1
    c5c6:	4276      	negs	r6, r6
    c5c8:	425b      	negs	r3, r3
    c5ca:	1864      	adds	r4, r4, r1
    c5cc:	4333      	orrs	r3, r6
    c5ce:	4498      	add	r8, r3
    c5d0:	428c      	cmp	r4, r1
    c5d2:	4189      	sbcs	r1, r1
    c5d4:	45ab      	cmp	fp, r5
    c5d6:	419b      	sbcs	r3, r3
    c5d8:	4249      	negs	r1, r1
    c5da:	425b      	negs	r3, r3
    c5dc:	4319      	orrs	r1, r3
    c5de:	1c0d      	adds	r5, r1, #0
    c5e0:	9b00      	ldr	r3, [sp, #0]
    c5e2:	4445      	add	r5, r8
    c5e4:	18ee      	adds	r6, r5, r3
    c5e6:	0276      	lsls	r6, r6, #9
    c5e8:	0de5      	lsrs	r5, r4, #23
    c5ea:	432e      	orrs	r6, r5
    c5ec:	46b3      	mov	fp, r6
    c5ee:	9b04      	ldr	r3, [sp, #16]
    c5f0:	0256      	lsls	r6, r2, #9
    c5f2:	431e      	orrs	r6, r3
    c5f4:	1e73      	subs	r3, r6, #1
    c5f6:	419e      	sbcs	r6, r3
    c5f8:	465b      	mov	r3, fp
    c5fa:	0dd2      	lsrs	r2, r2, #23
    c5fc:	4332      	orrs	r2, r6
    c5fe:	0266      	lsls	r6, r4, #9
    c600:	4316      	orrs	r6, r2
    c602:	01db      	lsls	r3, r3, #7
    c604:	d50a      	bpl.n	c61c <__aeabi_dmul+0x384>
    c606:	2301      	movs	r3, #1
    c608:	4033      	ands	r3, r6
    c60a:	0876      	lsrs	r6, r6, #1
    c60c:	431e      	orrs	r6, r3
    c60e:	465b      	mov	r3, fp
    c610:	07db      	lsls	r3, r3, #31
    c612:	431e      	orrs	r6, r3
    c614:	465b      	mov	r3, fp
    c616:	085b      	lsrs	r3, r3, #1
    c618:	469b      	mov	fp, r3
    c61a:	4657      	mov	r7, sl
    c61c:	4b63      	ldr	r3, [pc, #396]	; (c7ac <__aeabi_dmul+0x514>)
    c61e:	18fb      	adds	r3, r7, r3
    c620:	2b00      	cmp	r3, #0
    c622:	dd5a      	ble.n	c6da <__aeabi_dmul+0x442>
    c624:	0772      	lsls	r2, r6, #29
    c626:	d009      	beq.n	c63c <__aeabi_dmul+0x3a4>
    c628:	220f      	movs	r2, #15
    c62a:	4032      	ands	r2, r6
    c62c:	2a04      	cmp	r2, #4
    c62e:	d005      	beq.n	c63c <__aeabi_dmul+0x3a4>
    c630:	1d32      	adds	r2, r6, #4
    c632:	42b2      	cmp	r2, r6
    c634:	41b6      	sbcs	r6, r6
    c636:	4276      	negs	r6, r6
    c638:	44b3      	add	fp, r6
    c63a:	1c16      	adds	r6, r2, #0
    c63c:	465a      	mov	r2, fp
    c63e:	01d2      	lsls	r2, r2, #7
    c640:	d506      	bpl.n	c650 <__aeabi_dmul+0x3b8>
    c642:	465a      	mov	r2, fp
    c644:	4b5a      	ldr	r3, [pc, #360]	; (c7b0 <__aeabi_dmul+0x518>)
    c646:	401a      	ands	r2, r3
    c648:	2380      	movs	r3, #128	; 0x80
    c64a:	4693      	mov	fp, r2
    c64c:	00db      	lsls	r3, r3, #3
    c64e:	18fb      	adds	r3, r7, r3
    c650:	4a58      	ldr	r2, [pc, #352]	; (c7b4 <__aeabi_dmul+0x51c>)
    c652:	4293      	cmp	r3, r2
    c654:	dd34      	ble.n	c6c0 <__aeabi_dmul+0x428>
    c656:	2401      	movs	r4, #1
    c658:	9b02      	ldr	r3, [sp, #8]
    c65a:	2500      	movs	r5, #0
    c65c:	401c      	ands	r4, r3
    c65e:	2600      	movs	r6, #0
    c660:	4b55      	ldr	r3, [pc, #340]	; (c7b8 <__aeabi_dmul+0x520>)
    c662:	e67d      	b.n	c360 <__aeabi_dmul+0xc8>
    c664:	2080      	movs	r0, #128	; 0x80
    c666:	465b      	mov	r3, fp
    c668:	0300      	lsls	r0, r0, #12
    c66a:	4203      	tst	r3, r0
    c66c:	d008      	beq.n	c680 <__aeabi_dmul+0x3e8>
    c66e:	4205      	tst	r5, r0
    c670:	d106      	bne.n	c680 <__aeabi_dmul+0x3e8>
    c672:	4305      	orrs	r5, r0
    c674:	032d      	lsls	r5, r5, #12
    c676:	0b2d      	lsrs	r5, r5, #12
    c678:	464c      	mov	r4, r9
    c67a:	1c16      	adds	r6, r2, #0
    c67c:	4b4e      	ldr	r3, [pc, #312]	; (c7b8 <__aeabi_dmul+0x520>)
    c67e:	e66f      	b.n	c360 <__aeabi_dmul+0xc8>
    c680:	465d      	mov	r5, fp
    c682:	4305      	orrs	r5, r0
    c684:	032d      	lsls	r5, r5, #12
    c686:	0b2d      	lsrs	r5, r5, #12
    c688:	4b4b      	ldr	r3, [pc, #300]	; (c7b8 <__aeabi_dmul+0x520>)
    c68a:	e669      	b.n	c360 <__aeabi_dmul+0xc8>
    c68c:	4650      	mov	r0, sl
    c68e:	f7f9 fad3 	bl	5c38 <__clzsi2>
    c692:	1c03      	adds	r3, r0, #0
    c694:	3320      	adds	r3, #32
    c696:	2b27      	cmp	r3, #39	; 0x27
    c698:	dc00      	bgt.n	c69c <__aeabi_dmul+0x404>
    c69a:	e6a6      	b.n	c3ea <__aeabi_dmul+0x152>
    c69c:	4655      	mov	r5, sl
    c69e:	3808      	subs	r0, #8
    c6a0:	4085      	lsls	r5, r0
    c6a2:	2200      	movs	r2, #0
    c6a4:	e6ac      	b.n	c400 <__aeabi_dmul+0x168>
    c6a6:	1c28      	adds	r0, r5, #0
    c6a8:	f7f9 fac6 	bl	5c38 <__clzsi2>
    c6ac:	1c02      	adds	r2, r0, #0
    c6ae:	3220      	adds	r2, #32
    c6b0:	2a27      	cmp	r2, #39	; 0x27
    c6b2:	dc00      	bgt.n	c6b6 <__aeabi_dmul+0x41e>
    c6b4:	e675      	b.n	c3a2 <__aeabi_dmul+0x10a>
    c6b6:	3808      	subs	r0, #8
    c6b8:	4085      	lsls	r5, r0
    c6ba:	2600      	movs	r6, #0
    c6bc:	46ab      	mov	fp, r5
    c6be:	e67d      	b.n	c3bc <__aeabi_dmul+0x124>
    c6c0:	465a      	mov	r2, fp
    c6c2:	08f6      	lsrs	r6, r6, #3
    c6c4:	0752      	lsls	r2, r2, #29
    c6c6:	4316      	orrs	r6, r2
    c6c8:	465a      	mov	r2, fp
    c6ca:	2401      	movs	r4, #1
    c6cc:	0255      	lsls	r5, r2, #9
    c6ce:	9a02      	ldr	r2, [sp, #8]
    c6d0:	055b      	lsls	r3, r3, #21
    c6d2:	0b2d      	lsrs	r5, r5, #12
    c6d4:	0d5b      	lsrs	r3, r3, #21
    c6d6:	4014      	ands	r4, r2
    c6d8:	e642      	b.n	c360 <__aeabi_dmul+0xc8>
    c6da:	4d38      	ldr	r5, [pc, #224]	; (c7bc <__aeabi_dmul+0x524>)
    c6dc:	1bed      	subs	r5, r5, r7
    c6de:	2d38      	cmp	r5, #56	; 0x38
    c6e0:	dd0a      	ble.n	c6f8 <__aeabi_dmul+0x460>
    c6e2:	2401      	movs	r4, #1
    c6e4:	9b02      	ldr	r3, [sp, #8]
    c6e6:	2500      	movs	r5, #0
    c6e8:	401c      	ands	r4, r3
    c6ea:	2600      	movs	r6, #0
    c6ec:	2300      	movs	r3, #0
    c6ee:	e637      	b.n	c360 <__aeabi_dmul+0xc8>
    c6f0:	9b01      	ldr	r3, [sp, #4]
    c6f2:	4657      	mov	r7, sl
    c6f4:	9302      	str	r3, [sp, #8]
    c6f6:	e791      	b.n	c61c <__aeabi_dmul+0x384>
    c6f8:	2d1f      	cmp	r5, #31
    c6fa:	dc25      	bgt.n	c748 <__aeabi_dmul+0x4b0>
    c6fc:	4b30      	ldr	r3, [pc, #192]	; (c7c0 <__aeabi_dmul+0x528>)
    c6fe:	1c32      	adds	r2, r6, #0
    c700:	469c      	mov	ip, r3
    c702:	4467      	add	r7, ip
    c704:	40be      	lsls	r6, r7
    c706:	465b      	mov	r3, fp
    c708:	40bb      	lsls	r3, r7
    c70a:	1c37      	adds	r7, r6, #0
    c70c:	40ea      	lsrs	r2, r5
    c70e:	1e7e      	subs	r6, r7, #1
    c710:	41b7      	sbcs	r7, r6
    c712:	4313      	orrs	r3, r2
    c714:	433b      	orrs	r3, r7
    c716:	1c1e      	adds	r6, r3, #0
    c718:	465b      	mov	r3, fp
    c71a:	40eb      	lsrs	r3, r5
    c71c:	1c1d      	adds	r5, r3, #0
    c71e:	0773      	lsls	r3, r6, #29
    c720:	d009      	beq.n	c736 <__aeabi_dmul+0x49e>
    c722:	230f      	movs	r3, #15
    c724:	4033      	ands	r3, r6
    c726:	2b04      	cmp	r3, #4
    c728:	d005      	beq.n	c736 <__aeabi_dmul+0x49e>
    c72a:	1d33      	adds	r3, r6, #4
    c72c:	42b3      	cmp	r3, r6
    c72e:	41b6      	sbcs	r6, r6
    c730:	4276      	negs	r6, r6
    c732:	19ad      	adds	r5, r5, r6
    c734:	1c1e      	adds	r6, r3, #0
    c736:	022b      	lsls	r3, r5, #8
    c738:	d520      	bpl.n	c77c <__aeabi_dmul+0x4e4>
    c73a:	2401      	movs	r4, #1
    c73c:	9b02      	ldr	r3, [sp, #8]
    c73e:	2500      	movs	r5, #0
    c740:	401c      	ands	r4, r3
    c742:	2600      	movs	r6, #0
    c744:	2301      	movs	r3, #1
    c746:	e60b      	b.n	c360 <__aeabi_dmul+0xc8>
    c748:	465a      	mov	r2, fp
    c74a:	4b1e      	ldr	r3, [pc, #120]	; (c7c4 <__aeabi_dmul+0x52c>)
    c74c:	1bdb      	subs	r3, r3, r7
    c74e:	40da      	lsrs	r2, r3
    c750:	1c13      	adds	r3, r2, #0
    c752:	2d20      	cmp	r5, #32
    c754:	d01c      	beq.n	c790 <__aeabi_dmul+0x4f8>
    c756:	4a1c      	ldr	r2, [pc, #112]	; (c7c8 <__aeabi_dmul+0x530>)
    c758:	4694      	mov	ip, r2
    c75a:	465a      	mov	r2, fp
    c75c:	4467      	add	r7, ip
    c75e:	40ba      	lsls	r2, r7
    c760:	1c17      	adds	r7, r2, #0
    c762:	433e      	orrs	r6, r7
    c764:	1e72      	subs	r2, r6, #1
    c766:	4196      	sbcs	r6, r2
    c768:	431e      	orrs	r6, r3
    c76a:	2307      	movs	r3, #7
    c76c:	2500      	movs	r5, #0
    c76e:	4033      	ands	r3, r6
    c770:	d007      	beq.n	c782 <__aeabi_dmul+0x4ea>
    c772:	230f      	movs	r3, #15
    c774:	2500      	movs	r5, #0
    c776:	4033      	ands	r3, r6
    c778:	2b04      	cmp	r3, #4
    c77a:	d1d6      	bne.n	c72a <__aeabi_dmul+0x492>
    c77c:	076b      	lsls	r3, r5, #29
    c77e:	026d      	lsls	r5, r5, #9
    c780:	0b2d      	lsrs	r5, r5, #12
    c782:	2401      	movs	r4, #1
    c784:	08f6      	lsrs	r6, r6, #3
    c786:	431e      	orrs	r6, r3
    c788:	9b02      	ldr	r3, [sp, #8]
    c78a:	401c      	ands	r4, r3
    c78c:	2300      	movs	r3, #0
    c78e:	e5e7      	b.n	c360 <__aeabi_dmul+0xc8>
    c790:	2700      	movs	r7, #0
    c792:	e7e6      	b.n	c762 <__aeabi_dmul+0x4ca>
    c794:	2580      	movs	r5, #128	; 0x80
    c796:	465b      	mov	r3, fp
    c798:	2401      	movs	r4, #1
    c79a:	032d      	lsls	r5, r5, #12
    c79c:	431d      	orrs	r5, r3
    c79e:	9b01      	ldr	r3, [sp, #4]
    c7a0:	032d      	lsls	r5, r5, #12
    c7a2:	4023      	ands	r3, r4
    c7a4:	1c1c      	adds	r4, r3, #0
    c7a6:	0b2d      	lsrs	r5, r5, #12
    c7a8:	4b03      	ldr	r3, [pc, #12]	; (c7b8 <__aeabi_dmul+0x520>)
    c7aa:	e5d9      	b.n	c360 <__aeabi_dmul+0xc8>
    c7ac:	000003ff 	.word	0x000003ff
    c7b0:	feffffff 	.word	0xfeffffff
    c7b4:	000007fe 	.word	0x000007fe
    c7b8:	000007ff 	.word	0x000007ff
    c7bc:	fffffc02 	.word	0xfffffc02
    c7c0:	0000041e 	.word	0x0000041e
    c7c4:	fffffbe2 	.word	0xfffffbe2
    c7c8:	0000043e 	.word	0x0000043e

0000c7cc <__aeabi_dsub>:
    c7cc:	b5f0      	push	{r4, r5, r6, r7, lr}
    c7ce:	464d      	mov	r5, r9
    c7d0:	4644      	mov	r4, r8
    c7d2:	465f      	mov	r7, fp
    c7d4:	4656      	mov	r6, sl
    c7d6:	b4f0      	push	{r4, r5, r6, r7}
    c7d8:	1c0e      	adds	r6, r1, #0
    c7da:	1c11      	adds	r1, r2, #0
    c7dc:	0332      	lsls	r2, r6, #12
    c7de:	0a52      	lsrs	r2, r2, #9
    c7e0:	0f47      	lsrs	r7, r0, #29
    c7e2:	4317      	orrs	r7, r2
    c7e4:	00c5      	lsls	r5, r0, #3
    c7e6:	031a      	lsls	r2, r3, #12
    c7e8:	0058      	lsls	r0, r3, #1
    c7ea:	0fdb      	lsrs	r3, r3, #31
    c7ec:	4699      	mov	r9, r3
    c7ee:	0a52      	lsrs	r2, r2, #9
    c7f0:	0f4b      	lsrs	r3, r1, #29
    c7f2:	b083      	sub	sp, #12
    c7f4:	431a      	orrs	r2, r3
    c7f6:	00cb      	lsls	r3, r1, #3
    c7f8:	9301      	str	r3, [sp, #4]
    c7fa:	4bcf      	ldr	r3, [pc, #828]	; (cb38 <__aeabi_dsub+0x36c>)
    c7fc:	0074      	lsls	r4, r6, #1
    c7fe:	0ff6      	lsrs	r6, r6, #31
    c800:	0d64      	lsrs	r4, r4, #21
    c802:	46b0      	mov	r8, r6
    c804:	0d40      	lsrs	r0, r0, #21
    c806:	4298      	cmp	r0, r3
    c808:	d100      	bne.n	c80c <__aeabi_dsub+0x40>
    c80a:	e0e8      	b.n	c9de <__aeabi_dsub+0x212>
    c80c:	2301      	movs	r3, #1
    c80e:	4649      	mov	r1, r9
    c810:	4059      	eors	r1, r3
    c812:	1c0b      	adds	r3, r1, #0
    c814:	429e      	cmp	r6, r3
    c816:	d100      	bne.n	c81a <__aeabi_dsub+0x4e>
    c818:	e0b1      	b.n	c97e <__aeabi_dsub+0x1b2>
    c81a:	1a26      	subs	r6, r4, r0
    c81c:	2e00      	cmp	r6, #0
    c81e:	dc00      	bgt.n	c822 <__aeabi_dsub+0x56>
    c820:	e11c      	b.n	ca5c <__aeabi_dsub+0x290>
    c822:	2800      	cmp	r0, #0
    c824:	d142      	bne.n	c8ac <__aeabi_dsub+0xe0>
    c826:	1c13      	adds	r3, r2, #0
    c828:	9901      	ldr	r1, [sp, #4]
    c82a:	430b      	orrs	r3, r1
    c82c:	d000      	beq.n	c830 <__aeabi_dsub+0x64>
    c82e:	e0e6      	b.n	c9fe <__aeabi_dsub+0x232>
    c830:	076b      	lsls	r3, r5, #29
    c832:	d100      	bne.n	c836 <__aeabi_dsub+0x6a>
    c834:	e08e      	b.n	c954 <__aeabi_dsub+0x188>
    c836:	230f      	movs	r3, #15
    c838:	402b      	ands	r3, r5
    c83a:	2b04      	cmp	r3, #4
    c83c:	d100      	bne.n	c840 <__aeabi_dsub+0x74>
    c83e:	e089      	b.n	c954 <__aeabi_dsub+0x188>
    c840:	1d2a      	adds	r2, r5, #4
    c842:	42aa      	cmp	r2, r5
    c844:	41ad      	sbcs	r5, r5
    c846:	2380      	movs	r3, #128	; 0x80
    c848:	2601      	movs	r6, #1
    c84a:	4641      	mov	r1, r8
    c84c:	426d      	negs	r5, r5
    c84e:	197f      	adds	r7, r7, r5
    c850:	041b      	lsls	r3, r3, #16
    c852:	403b      	ands	r3, r7
    c854:	400e      	ands	r6, r1
    c856:	1c15      	adds	r5, r2, #0
    c858:	2b00      	cmp	r3, #0
    c85a:	d100      	bne.n	c85e <__aeabi_dsub+0x92>
    c85c:	e083      	b.n	c966 <__aeabi_dsub+0x19a>
    c85e:	4bb6      	ldr	r3, [pc, #728]	; (cb38 <__aeabi_dsub+0x36c>)
    c860:	3401      	adds	r4, #1
    c862:	429c      	cmp	r4, r3
    c864:	d100      	bne.n	c868 <__aeabi_dsub+0x9c>
    c866:	e116      	b.n	ca96 <__aeabi_dsub+0x2ca>
    c868:	1c3a      	adds	r2, r7, #0
    c86a:	4bb4      	ldr	r3, [pc, #720]	; (cb3c <__aeabi_dsub+0x370>)
    c86c:	08ed      	lsrs	r5, r5, #3
    c86e:	401a      	ands	r2, r3
    c870:	0750      	lsls	r0, r2, #29
    c872:	0564      	lsls	r4, r4, #21
    c874:	0252      	lsls	r2, r2, #9
    c876:	4305      	orrs	r5, r0
    c878:	0b12      	lsrs	r2, r2, #12
    c87a:	0d64      	lsrs	r4, r4, #21
    c87c:	2100      	movs	r1, #0
    c87e:	0312      	lsls	r2, r2, #12
    c880:	0d0b      	lsrs	r3, r1, #20
    c882:	051b      	lsls	r3, r3, #20
    c884:	0564      	lsls	r4, r4, #21
    c886:	0b12      	lsrs	r2, r2, #12
    c888:	431a      	orrs	r2, r3
    c88a:	0863      	lsrs	r3, r4, #1
    c88c:	4cac      	ldr	r4, [pc, #688]	; (cb40 <__aeabi_dsub+0x374>)
    c88e:	07f6      	lsls	r6, r6, #31
    c890:	4014      	ands	r4, r2
    c892:	431c      	orrs	r4, r3
    c894:	0064      	lsls	r4, r4, #1
    c896:	0864      	lsrs	r4, r4, #1
    c898:	4334      	orrs	r4, r6
    c89a:	1c28      	adds	r0, r5, #0
    c89c:	1c21      	adds	r1, r4, #0
    c89e:	b003      	add	sp, #12
    c8a0:	bc3c      	pop	{r2, r3, r4, r5}
    c8a2:	4690      	mov	r8, r2
    c8a4:	4699      	mov	r9, r3
    c8a6:	46a2      	mov	sl, r4
    c8a8:	46ab      	mov	fp, r5
    c8aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c8ac:	4ba2      	ldr	r3, [pc, #648]	; (cb38 <__aeabi_dsub+0x36c>)
    c8ae:	429c      	cmp	r4, r3
    c8b0:	d0be      	beq.n	c830 <__aeabi_dsub+0x64>
    c8b2:	2380      	movs	r3, #128	; 0x80
    c8b4:	041b      	lsls	r3, r3, #16
    c8b6:	431a      	orrs	r2, r3
    c8b8:	2e38      	cmp	r6, #56	; 0x38
    c8ba:	dd00      	ble.n	c8be <__aeabi_dsub+0xf2>
    c8bc:	e103      	b.n	cac6 <__aeabi_dsub+0x2fa>
    c8be:	2e1f      	cmp	r6, #31
    c8c0:	dd00      	ble.n	c8c4 <__aeabi_dsub+0xf8>
    c8c2:	e13f      	b.n	cb44 <__aeabi_dsub+0x378>
    c8c4:	2020      	movs	r0, #32
    c8c6:	1b83      	subs	r3, r0, r6
    c8c8:	4699      	mov	r9, r3
    c8ca:	1c13      	adds	r3, r2, #0
    c8cc:	4649      	mov	r1, r9
    c8ce:	408b      	lsls	r3, r1
    c8d0:	469c      	mov	ip, r3
    c8d2:	9b01      	ldr	r3, [sp, #4]
    c8d4:	4660      	mov	r0, ip
    c8d6:	40f3      	lsrs	r3, r6
    c8d8:	4303      	orrs	r3, r0
    c8da:	9801      	ldr	r0, [sp, #4]
    c8dc:	40f2      	lsrs	r2, r6
    c8de:	4088      	lsls	r0, r1
    c8e0:	1c01      	adds	r1, r0, #0
    c8e2:	1e48      	subs	r0, r1, #1
    c8e4:	4181      	sbcs	r1, r0
    c8e6:	430b      	orrs	r3, r1
    c8e8:	1aeb      	subs	r3, r5, r3
    c8ea:	429d      	cmp	r5, r3
    c8ec:	4180      	sbcs	r0, r0
    c8ee:	1c1d      	adds	r5, r3, #0
    c8f0:	1aba      	subs	r2, r7, r2
    c8f2:	4240      	negs	r0, r0
    c8f4:	1a17      	subs	r7, r2, r0
    c8f6:	023b      	lsls	r3, r7, #8
    c8f8:	d400      	bmi.n	c8fc <__aeabi_dsub+0x130>
    c8fa:	e0a8      	b.n	ca4e <__aeabi_dsub+0x282>
    c8fc:	027a      	lsls	r2, r7, #9
    c8fe:	0a56      	lsrs	r6, r2, #9
    c900:	2e00      	cmp	r6, #0
    c902:	d100      	bne.n	c906 <__aeabi_dsub+0x13a>
    c904:	e0ca      	b.n	ca9c <__aeabi_dsub+0x2d0>
    c906:	1c30      	adds	r0, r6, #0
    c908:	f7f9 f996 	bl	5c38 <__clzsi2>
    c90c:	1c03      	adds	r3, r0, #0
    c90e:	3b08      	subs	r3, #8
    c910:	2b1f      	cmp	r3, #31
    c912:	dd00      	ble.n	c916 <__aeabi_dsub+0x14a>
    c914:	e0cb      	b.n	caae <__aeabi_dsub+0x2e2>
    c916:	2228      	movs	r2, #40	; 0x28
    c918:	1c29      	adds	r1, r5, #0
    c91a:	1a12      	subs	r2, r2, r0
    c91c:	40d1      	lsrs	r1, r2
    c91e:	409e      	lsls	r6, r3
    c920:	1c0a      	adds	r2, r1, #0
    c922:	409d      	lsls	r5, r3
    c924:	4332      	orrs	r2, r6
    c926:	429c      	cmp	r4, r3
    c928:	dd00      	ble.n	c92c <__aeabi_dsub+0x160>
    c92a:	e0c8      	b.n	cabe <__aeabi_dsub+0x2f2>
    c92c:	1b1c      	subs	r4, r3, r4
    c92e:	1c67      	adds	r7, r4, #1
    c930:	2f1f      	cmp	r7, #31
    c932:	dd00      	ble.n	c936 <__aeabi_dsub+0x16a>
    c934:	e0ed      	b.n	cb12 <__aeabi_dsub+0x346>
    c936:	231f      	movs	r3, #31
    c938:	1c29      	adds	r1, r5, #0
    c93a:	1b1c      	subs	r4, r3, r4
    c93c:	1c13      	adds	r3, r2, #0
    c93e:	40a5      	lsls	r5, r4
    c940:	40a3      	lsls	r3, r4
    c942:	40f9      	lsrs	r1, r7
    c944:	1e6c      	subs	r4, r5, #1
    c946:	41a5      	sbcs	r5, r4
    c948:	40fa      	lsrs	r2, r7
    c94a:	4319      	orrs	r1, r3
    c94c:	430d      	orrs	r5, r1
    c94e:	1c17      	adds	r7, r2, #0
    c950:	2400      	movs	r4, #0
    c952:	e76d      	b.n	c830 <__aeabi_dsub+0x64>
    c954:	2380      	movs	r3, #128	; 0x80
    c956:	2601      	movs	r6, #1
    c958:	4642      	mov	r2, r8
    c95a:	041b      	lsls	r3, r3, #16
    c95c:	403b      	ands	r3, r7
    c95e:	4016      	ands	r6, r2
    c960:	2b00      	cmp	r3, #0
    c962:	d000      	beq.n	c966 <__aeabi_dsub+0x19a>
    c964:	e77b      	b.n	c85e <__aeabi_dsub+0x92>
    c966:	4b74      	ldr	r3, [pc, #464]	; (cb38 <__aeabi_dsub+0x36c>)
    c968:	08ed      	lsrs	r5, r5, #3
    c96a:	0778      	lsls	r0, r7, #29
    c96c:	4305      	orrs	r5, r0
    c96e:	08fa      	lsrs	r2, r7, #3
    c970:	429c      	cmp	r4, r3
    c972:	d03b      	beq.n	c9ec <__aeabi_dsub+0x220>
    c974:	0312      	lsls	r2, r2, #12
    c976:	0564      	lsls	r4, r4, #21
    c978:	0b12      	lsrs	r2, r2, #12
    c97a:	0d64      	lsrs	r4, r4, #21
    c97c:	e77e      	b.n	c87c <__aeabi_dsub+0xb0>
    c97e:	1a23      	subs	r3, r4, r0
    c980:	469a      	mov	sl, r3
    c982:	2b00      	cmp	r3, #0
    c984:	dc00      	bgt.n	c988 <__aeabi_dsub+0x1bc>
    c986:	e0a5      	b.n	cad4 <__aeabi_dsub+0x308>
    c988:	2800      	cmp	r0, #0
    c98a:	d044      	beq.n	ca16 <__aeabi_dsub+0x24a>
    c98c:	486a      	ldr	r0, [pc, #424]	; (cb38 <__aeabi_dsub+0x36c>)
    c98e:	4284      	cmp	r4, r0
    c990:	d100      	bne.n	c994 <__aeabi_dsub+0x1c8>
    c992:	e74d      	b.n	c830 <__aeabi_dsub+0x64>
    c994:	2080      	movs	r0, #128	; 0x80
    c996:	0400      	lsls	r0, r0, #16
    c998:	4302      	orrs	r2, r0
    c99a:	4653      	mov	r3, sl
    c99c:	2b38      	cmp	r3, #56	; 0x38
    c99e:	dc00      	bgt.n	c9a2 <__aeabi_dsub+0x1d6>
    c9a0:	e11c      	b.n	cbdc <__aeabi_dsub+0x410>
    c9a2:	9b01      	ldr	r3, [sp, #4]
    c9a4:	431a      	orrs	r2, r3
    c9a6:	1e51      	subs	r1, r2, #1
    c9a8:	418a      	sbcs	r2, r1
    c9aa:	b2d1      	uxtb	r1, r2
    c9ac:	2200      	movs	r2, #0
    c9ae:	1949      	adds	r1, r1, r5
    c9b0:	42a9      	cmp	r1, r5
    c9b2:	4180      	sbcs	r0, r0
    c9b4:	1c0d      	adds	r5, r1, #0
    c9b6:	19d2      	adds	r2, r2, r7
    c9b8:	4240      	negs	r0, r0
    c9ba:	1817      	adds	r7, r2, r0
    c9bc:	023b      	lsls	r3, r7, #8
    c9be:	d546      	bpl.n	ca4e <__aeabi_dsub+0x282>
    c9c0:	4b5d      	ldr	r3, [pc, #372]	; (cb38 <__aeabi_dsub+0x36c>)
    c9c2:	3401      	adds	r4, #1
    c9c4:	429c      	cmp	r4, r3
    c9c6:	d100      	bne.n	c9ca <__aeabi_dsub+0x1fe>
    c9c8:	e169      	b.n	cc9e <__aeabi_dsub+0x4d2>
    c9ca:	2001      	movs	r0, #1
    c9cc:	4a5b      	ldr	r2, [pc, #364]	; (cb3c <__aeabi_dsub+0x370>)
    c9ce:	086b      	lsrs	r3, r5, #1
    c9d0:	403a      	ands	r2, r7
    c9d2:	4028      	ands	r0, r5
    c9d4:	4318      	orrs	r0, r3
    c9d6:	07d5      	lsls	r5, r2, #31
    c9d8:	4305      	orrs	r5, r0
    c9da:	0857      	lsrs	r7, r2, #1
    c9dc:	e728      	b.n	c830 <__aeabi_dsub+0x64>
    c9de:	1c13      	adds	r3, r2, #0
    c9e0:	9901      	ldr	r1, [sp, #4]
    c9e2:	430b      	orrs	r3, r1
    c9e4:	d100      	bne.n	c9e8 <__aeabi_dsub+0x21c>
    c9e6:	e711      	b.n	c80c <__aeabi_dsub+0x40>
    c9e8:	464b      	mov	r3, r9
    c9ea:	e713      	b.n	c814 <__aeabi_dsub+0x48>
    c9ec:	1c2b      	adds	r3, r5, #0
    c9ee:	4313      	orrs	r3, r2
    c9f0:	d051      	beq.n	ca96 <__aeabi_dsub+0x2ca>
    c9f2:	2380      	movs	r3, #128	; 0x80
    c9f4:	031b      	lsls	r3, r3, #12
    c9f6:	431a      	orrs	r2, r3
    c9f8:	0312      	lsls	r2, r2, #12
    c9fa:	0b12      	lsrs	r2, r2, #12
    c9fc:	e73e      	b.n	c87c <__aeabi_dsub+0xb0>
    c9fe:	3e01      	subs	r6, #1
    ca00:	2e00      	cmp	r6, #0
    ca02:	d000      	beq.n	ca06 <__aeabi_dsub+0x23a>
    ca04:	e080      	b.n	cb08 <__aeabi_dsub+0x33c>
    ca06:	1a69      	subs	r1, r5, r1
    ca08:	428d      	cmp	r5, r1
    ca0a:	419b      	sbcs	r3, r3
    ca0c:	1aba      	subs	r2, r7, r2
    ca0e:	425b      	negs	r3, r3
    ca10:	1ad7      	subs	r7, r2, r3
    ca12:	1c0d      	adds	r5, r1, #0
    ca14:	e76f      	b.n	c8f6 <__aeabi_dsub+0x12a>
    ca16:	1c10      	adds	r0, r2, #0
    ca18:	9b01      	ldr	r3, [sp, #4]
    ca1a:	4318      	orrs	r0, r3
    ca1c:	d100      	bne.n	ca20 <__aeabi_dsub+0x254>
    ca1e:	e707      	b.n	c830 <__aeabi_dsub+0x64>
    ca20:	2301      	movs	r3, #1
    ca22:	425b      	negs	r3, r3
    ca24:	469c      	mov	ip, r3
    ca26:	44e2      	add	sl, ip
    ca28:	4653      	mov	r3, sl
    ca2a:	2b00      	cmp	r3, #0
    ca2c:	d000      	beq.n	ca30 <__aeabi_dsub+0x264>
    ca2e:	e102      	b.n	cc36 <__aeabi_dsub+0x46a>
    ca30:	9b01      	ldr	r3, [sp, #4]
    ca32:	19d2      	adds	r2, r2, r7
    ca34:	1959      	adds	r1, r3, r5
    ca36:	42a9      	cmp	r1, r5
    ca38:	419b      	sbcs	r3, r3
    ca3a:	425b      	negs	r3, r3
    ca3c:	18d7      	adds	r7, r2, r3
    ca3e:	1c0d      	adds	r5, r1, #0
    ca40:	e7bc      	b.n	c9bc <__aeabi_dsub+0x1f0>
    ca42:	4663      	mov	r3, ip
    ca44:	4303      	orrs	r3, r0
    ca46:	d100      	bne.n	ca4a <__aeabi_dsub+0x27e>
    ca48:	e128      	b.n	cc9c <__aeabi_dsub+0x4d0>
    ca4a:	1c07      	adds	r7, r0, #0
    ca4c:	4665      	mov	r5, ip
    ca4e:	076b      	lsls	r3, r5, #29
    ca50:	d000      	beq.n	ca54 <__aeabi_dsub+0x288>
    ca52:	e6f0      	b.n	c836 <__aeabi_dsub+0x6a>
    ca54:	2601      	movs	r6, #1
    ca56:	4643      	mov	r3, r8
    ca58:	401e      	ands	r6, r3
    ca5a:	e784      	b.n	c966 <__aeabi_dsub+0x19a>
    ca5c:	2e00      	cmp	r6, #0
    ca5e:	d000      	beq.n	ca62 <__aeabi_dsub+0x296>
    ca60:	e081      	b.n	cb66 <__aeabi_dsub+0x39a>
    ca62:	1c60      	adds	r0, r4, #1
    ca64:	0540      	lsls	r0, r0, #21
    ca66:	0d40      	lsrs	r0, r0, #21
    ca68:	2801      	cmp	r0, #1
    ca6a:	dc00      	bgt.n	ca6e <__aeabi_dsub+0x2a2>
    ca6c:	e107      	b.n	cc7e <__aeabi_dsub+0x4b2>
    ca6e:	9901      	ldr	r1, [sp, #4]
    ca70:	1a68      	subs	r0, r5, r1
    ca72:	4684      	mov	ip, r0
    ca74:	4565      	cmp	r5, ip
    ca76:	41b6      	sbcs	r6, r6
    ca78:	1ab8      	subs	r0, r7, r2
    ca7a:	4276      	negs	r6, r6
    ca7c:	1b86      	subs	r6, r0, r6
    ca7e:	0230      	lsls	r0, r6, #8
    ca80:	d400      	bmi.n	ca84 <__aeabi_dsub+0x2b8>
    ca82:	e0a1      	b.n	cbc8 <__aeabi_dsub+0x3fc>
    ca84:	468c      	mov	ip, r1
    ca86:	1b4d      	subs	r5, r1, r5
    ca88:	45ac      	cmp	ip, r5
    ca8a:	4189      	sbcs	r1, r1
    ca8c:	1bd2      	subs	r2, r2, r7
    ca8e:	4249      	negs	r1, r1
    ca90:	1a56      	subs	r6, r2, r1
    ca92:	4698      	mov	r8, r3
    ca94:	e734      	b.n	c900 <__aeabi_dsub+0x134>
    ca96:	2200      	movs	r2, #0
    ca98:	2500      	movs	r5, #0
    ca9a:	e6ef      	b.n	c87c <__aeabi_dsub+0xb0>
    ca9c:	1c28      	adds	r0, r5, #0
    ca9e:	f7f9 f8cb 	bl	5c38 <__clzsi2>
    caa2:	3020      	adds	r0, #32
    caa4:	1c03      	adds	r3, r0, #0
    caa6:	3b08      	subs	r3, #8
    caa8:	2b1f      	cmp	r3, #31
    caaa:	dc00      	bgt.n	caae <__aeabi_dsub+0x2e2>
    caac:	e733      	b.n	c916 <__aeabi_dsub+0x14a>
    caae:	1c02      	adds	r2, r0, #0
    cab0:	3a28      	subs	r2, #40	; 0x28
    cab2:	4095      	lsls	r5, r2
    cab4:	1c2a      	adds	r2, r5, #0
    cab6:	2500      	movs	r5, #0
    cab8:	429c      	cmp	r4, r3
    caba:	dc00      	bgt.n	cabe <__aeabi_dsub+0x2f2>
    cabc:	e736      	b.n	c92c <__aeabi_dsub+0x160>
    cabe:	4f1f      	ldr	r7, [pc, #124]	; (cb3c <__aeabi_dsub+0x370>)
    cac0:	1ae4      	subs	r4, r4, r3
    cac2:	4017      	ands	r7, r2
    cac4:	e6b4      	b.n	c830 <__aeabi_dsub+0x64>
    cac6:	9b01      	ldr	r3, [sp, #4]
    cac8:	431a      	orrs	r2, r3
    caca:	1e51      	subs	r1, r2, #1
    cacc:	418a      	sbcs	r2, r1
    cace:	b2d3      	uxtb	r3, r2
    cad0:	2200      	movs	r2, #0
    cad2:	e709      	b.n	c8e8 <__aeabi_dsub+0x11c>
    cad4:	2b00      	cmp	r3, #0
    cad6:	d000      	beq.n	cada <__aeabi_dsub+0x30e>
    cad8:	e101      	b.n	ccde <__aeabi_dsub+0x512>
    cada:	1c60      	adds	r0, r4, #1
    cadc:	0543      	lsls	r3, r0, #21
    cade:	0d5b      	lsrs	r3, r3, #21
    cae0:	2b01      	cmp	r3, #1
    cae2:	dc00      	bgt.n	cae6 <__aeabi_dsub+0x31a>
    cae4:	e0b0      	b.n	cc48 <__aeabi_dsub+0x47c>
    cae6:	4b14      	ldr	r3, [pc, #80]	; (cb38 <__aeabi_dsub+0x36c>)
    cae8:	4298      	cmp	r0, r3
    caea:	d100      	bne.n	caee <__aeabi_dsub+0x322>
    caec:	e11e      	b.n	cd2c <__aeabi_dsub+0x560>
    caee:	9b01      	ldr	r3, [sp, #4]
    caf0:	19d2      	adds	r2, r2, r7
    caf2:	1959      	adds	r1, r3, r5
    caf4:	42a9      	cmp	r1, r5
    caf6:	419b      	sbcs	r3, r3
    caf8:	425b      	negs	r3, r3
    cafa:	18d2      	adds	r2, r2, r3
    cafc:	0849      	lsrs	r1, r1, #1
    cafe:	07d5      	lsls	r5, r2, #31
    cb00:	430d      	orrs	r5, r1
    cb02:	0857      	lsrs	r7, r2, #1
    cb04:	1c04      	adds	r4, r0, #0
    cb06:	e693      	b.n	c830 <__aeabi_dsub+0x64>
    cb08:	4b0b      	ldr	r3, [pc, #44]	; (cb38 <__aeabi_dsub+0x36c>)
    cb0a:	429c      	cmp	r4, r3
    cb0c:	d000      	beq.n	cb10 <__aeabi_dsub+0x344>
    cb0e:	e6d3      	b.n	c8b8 <__aeabi_dsub+0xec>
    cb10:	e68e      	b.n	c830 <__aeabi_dsub+0x64>
    cb12:	1c21      	adds	r1, r4, #0
    cb14:	1c13      	adds	r3, r2, #0
    cb16:	391f      	subs	r1, #31
    cb18:	40cb      	lsrs	r3, r1
    cb1a:	1c19      	adds	r1, r3, #0
    cb1c:	2f20      	cmp	r7, #32
    cb1e:	d100      	bne.n	cb22 <__aeabi_dsub+0x356>
    cb20:	e08e      	b.n	cc40 <__aeabi_dsub+0x474>
    cb22:	233f      	movs	r3, #63	; 0x3f
    cb24:	1b1c      	subs	r4, r3, r4
    cb26:	40a2      	lsls	r2, r4
    cb28:	4315      	orrs	r5, r2
    cb2a:	1e6a      	subs	r2, r5, #1
    cb2c:	4195      	sbcs	r5, r2
    cb2e:	2700      	movs	r7, #0
    cb30:	430d      	orrs	r5, r1
    cb32:	2400      	movs	r4, #0
    cb34:	e78b      	b.n	ca4e <__aeabi_dsub+0x282>
    cb36:	46c0      	nop			; (mov r8, r8)
    cb38:	000007ff 	.word	0x000007ff
    cb3c:	ff7fffff 	.word	0xff7fffff
    cb40:	800fffff 	.word	0x800fffff
    cb44:	1c33      	adds	r3, r6, #0
    cb46:	1c10      	adds	r0, r2, #0
    cb48:	3b20      	subs	r3, #32
    cb4a:	40d8      	lsrs	r0, r3
    cb4c:	2e20      	cmp	r6, #32
    cb4e:	d079      	beq.n	cc44 <__aeabi_dsub+0x478>
    cb50:	2340      	movs	r3, #64	; 0x40
    cb52:	1b9b      	subs	r3, r3, r6
    cb54:	409a      	lsls	r2, r3
    cb56:	1c13      	adds	r3, r2, #0
    cb58:	9a01      	ldr	r2, [sp, #4]
    cb5a:	4313      	orrs	r3, r2
    cb5c:	1e59      	subs	r1, r3, #1
    cb5e:	418b      	sbcs	r3, r1
    cb60:	2200      	movs	r2, #0
    cb62:	4303      	orrs	r3, r0
    cb64:	e6c0      	b.n	c8e8 <__aeabi_dsub+0x11c>
    cb66:	2c00      	cmp	r4, #0
    cb68:	d053      	beq.n	cc12 <__aeabi_dsub+0x446>
    cb6a:	4cc7      	ldr	r4, [pc, #796]	; (ce88 <__aeabi_dsub+0x6bc>)
    cb6c:	42a0      	cmp	r0, r4
    cb6e:	d100      	bne.n	cb72 <__aeabi_dsub+0x3a6>
    cb70:	e0b0      	b.n	ccd4 <__aeabi_dsub+0x508>
    cb72:	2480      	movs	r4, #128	; 0x80
    cb74:	4271      	negs	r1, r6
    cb76:	4689      	mov	r9, r1
    cb78:	0424      	lsls	r4, r4, #16
    cb7a:	4327      	orrs	r7, r4
    cb7c:	4649      	mov	r1, r9
    cb7e:	2938      	cmp	r1, #56	; 0x38
    cb80:	dd00      	ble.n	cb84 <__aeabi_dsub+0x3b8>
    cb82:	e0cd      	b.n	cd20 <__aeabi_dsub+0x554>
    cb84:	291f      	cmp	r1, #31
    cb86:	dd00      	ble.n	cb8a <__aeabi_dsub+0x3be>
    cb88:	e159      	b.n	ce3e <__aeabi_dsub+0x672>
    cb8a:	2420      	movs	r4, #32
    cb8c:	1c3e      	adds	r6, r7, #0
    cb8e:	1a61      	subs	r1, r4, r1
    cb90:	408e      	lsls	r6, r1
    cb92:	468a      	mov	sl, r1
    cb94:	46b0      	mov	r8, r6
    cb96:	4649      	mov	r1, r9
    cb98:	1c2e      	adds	r6, r5, #0
    cb9a:	40ce      	lsrs	r6, r1
    cb9c:	4651      	mov	r1, sl
    cb9e:	46b4      	mov	ip, r6
    cba0:	408d      	lsls	r5, r1
    cba2:	4664      	mov	r4, ip
    cba4:	4646      	mov	r6, r8
    cba6:	4649      	mov	r1, r9
    cba8:	4326      	orrs	r6, r4
    cbaa:	1e6c      	subs	r4, r5, #1
    cbac:	41a5      	sbcs	r5, r4
    cbae:	40cf      	lsrs	r7, r1
    cbb0:	4335      	orrs	r5, r6
    cbb2:	9901      	ldr	r1, [sp, #4]
    cbb4:	1bd7      	subs	r7, r2, r7
    cbb6:	468c      	mov	ip, r1
    cbb8:	1b4d      	subs	r5, r1, r5
    cbba:	45ac      	cmp	ip, r5
    cbbc:	4192      	sbcs	r2, r2
    cbbe:	4252      	negs	r2, r2
    cbc0:	1abf      	subs	r7, r7, r2
    cbc2:	1c04      	adds	r4, r0, #0
    cbc4:	4698      	mov	r8, r3
    cbc6:	e696      	b.n	c8f6 <__aeabi_dsub+0x12a>
    cbc8:	4663      	mov	r3, ip
    cbca:	4665      	mov	r5, ip
    cbcc:	4333      	orrs	r3, r6
    cbce:	d000      	beq.n	cbd2 <__aeabi_dsub+0x406>
    cbd0:	e696      	b.n	c900 <__aeabi_dsub+0x134>
    cbd2:	2600      	movs	r6, #0
    cbd4:	2700      	movs	r7, #0
    cbd6:	2400      	movs	r4, #0
    cbd8:	2500      	movs	r5, #0
    cbda:	e6c4      	b.n	c966 <__aeabi_dsub+0x19a>
    cbdc:	2b1f      	cmp	r3, #31
    cbde:	dc61      	bgt.n	cca4 <__aeabi_dsub+0x4d8>
    cbe0:	2020      	movs	r0, #32
    cbe2:	1ac3      	subs	r3, r0, r3
    cbe4:	469b      	mov	fp, r3
    cbe6:	1c13      	adds	r3, r2, #0
    cbe8:	4659      	mov	r1, fp
    cbea:	408b      	lsls	r3, r1
    cbec:	4651      	mov	r1, sl
    cbee:	4699      	mov	r9, r3
    cbf0:	9b01      	ldr	r3, [sp, #4]
    cbf2:	40cb      	lsrs	r3, r1
    cbf4:	469c      	mov	ip, r3
    cbf6:	464b      	mov	r3, r9
    cbf8:	4660      	mov	r0, ip
    cbfa:	4303      	orrs	r3, r0
    cbfc:	469c      	mov	ip, r3
    cbfe:	465b      	mov	r3, fp
    cc00:	9901      	ldr	r1, [sp, #4]
    cc02:	4099      	lsls	r1, r3
    cc04:	4663      	mov	r3, ip
    cc06:	1e48      	subs	r0, r1, #1
    cc08:	4181      	sbcs	r1, r0
    cc0a:	4319      	orrs	r1, r3
    cc0c:	4653      	mov	r3, sl
    cc0e:	40da      	lsrs	r2, r3
    cc10:	e6cd      	b.n	c9ae <__aeabi_dsub+0x1e2>
    cc12:	1c3c      	adds	r4, r7, #0
    cc14:	432c      	orrs	r4, r5
    cc16:	d05d      	beq.n	ccd4 <__aeabi_dsub+0x508>
    cc18:	43f1      	mvns	r1, r6
    cc1a:	4689      	mov	r9, r1
    cc1c:	2900      	cmp	r1, #0
    cc1e:	d155      	bne.n	cccc <__aeabi_dsub+0x500>
    cc20:	9901      	ldr	r1, [sp, #4]
    cc22:	1bd2      	subs	r2, r2, r7
    cc24:	468c      	mov	ip, r1
    cc26:	1b4d      	subs	r5, r1, r5
    cc28:	45ac      	cmp	ip, r5
    cc2a:	4189      	sbcs	r1, r1
    cc2c:	4249      	negs	r1, r1
    cc2e:	1a57      	subs	r7, r2, r1
    cc30:	1c04      	adds	r4, r0, #0
    cc32:	4698      	mov	r8, r3
    cc34:	e65f      	b.n	c8f6 <__aeabi_dsub+0x12a>
    cc36:	4894      	ldr	r0, [pc, #592]	; (ce88 <__aeabi_dsub+0x6bc>)
    cc38:	4284      	cmp	r4, r0
    cc3a:	d000      	beq.n	cc3e <__aeabi_dsub+0x472>
    cc3c:	e6ad      	b.n	c99a <__aeabi_dsub+0x1ce>
    cc3e:	e5f7      	b.n	c830 <__aeabi_dsub+0x64>
    cc40:	2200      	movs	r2, #0
    cc42:	e771      	b.n	cb28 <__aeabi_dsub+0x35c>
    cc44:	2300      	movs	r3, #0
    cc46:	e787      	b.n	cb58 <__aeabi_dsub+0x38c>
    cc48:	1c3b      	adds	r3, r7, #0
    cc4a:	432b      	orrs	r3, r5
    cc4c:	2c00      	cmp	r4, #0
    cc4e:	d000      	beq.n	cc52 <__aeabi_dsub+0x486>
    cc50:	e0da      	b.n	ce08 <__aeabi_dsub+0x63c>
    cc52:	2b00      	cmp	r3, #0
    cc54:	d100      	bne.n	cc58 <__aeabi_dsub+0x48c>
    cc56:	e113      	b.n	ce80 <__aeabi_dsub+0x6b4>
    cc58:	1c13      	adds	r3, r2, #0
    cc5a:	9901      	ldr	r1, [sp, #4]
    cc5c:	430b      	orrs	r3, r1
    cc5e:	d100      	bne.n	cc62 <__aeabi_dsub+0x496>
    cc60:	e5e6      	b.n	c830 <__aeabi_dsub+0x64>
    cc62:	1949      	adds	r1, r1, r5
    cc64:	42a9      	cmp	r1, r5
    cc66:	419b      	sbcs	r3, r3
    cc68:	19d2      	adds	r2, r2, r7
    cc6a:	425b      	negs	r3, r3
    cc6c:	18d7      	adds	r7, r2, r3
    cc6e:	023b      	lsls	r3, r7, #8
    cc70:	d400      	bmi.n	cc74 <__aeabi_dsub+0x4a8>
    cc72:	e121      	b.n	ceb8 <__aeabi_dsub+0x6ec>
    cc74:	4b85      	ldr	r3, [pc, #532]	; (ce8c <__aeabi_dsub+0x6c0>)
    cc76:	1c0d      	adds	r5, r1, #0
    cc78:	401f      	ands	r7, r3
    cc7a:	1c04      	adds	r4, r0, #0
    cc7c:	e5d8      	b.n	c830 <__aeabi_dsub+0x64>
    cc7e:	1c38      	adds	r0, r7, #0
    cc80:	4328      	orrs	r0, r5
    cc82:	2c00      	cmp	r4, #0
    cc84:	d140      	bne.n	cd08 <__aeabi_dsub+0x53c>
    cc86:	2800      	cmp	r0, #0
    cc88:	d000      	beq.n	cc8c <__aeabi_dsub+0x4c0>
    cc8a:	e083      	b.n	cd94 <__aeabi_dsub+0x5c8>
    cc8c:	1c10      	adds	r0, r2, #0
    cc8e:	9901      	ldr	r1, [sp, #4]
    cc90:	4308      	orrs	r0, r1
    cc92:	d003      	beq.n	cc9c <__aeabi_dsub+0x4d0>
    cc94:	1c17      	adds	r7, r2, #0
    cc96:	1c0d      	adds	r5, r1, #0
    cc98:	4698      	mov	r8, r3
    cc9a:	e5c9      	b.n	c830 <__aeabi_dsub+0x64>
    cc9c:	2600      	movs	r6, #0
    cc9e:	2700      	movs	r7, #0
    cca0:	2500      	movs	r5, #0
    cca2:	e660      	b.n	c966 <__aeabi_dsub+0x19a>
    cca4:	4650      	mov	r0, sl
    cca6:	1c13      	adds	r3, r2, #0
    cca8:	3820      	subs	r0, #32
    ccaa:	40c3      	lsrs	r3, r0
    ccac:	1c18      	adds	r0, r3, #0
    ccae:	4653      	mov	r3, sl
    ccb0:	2b20      	cmp	r3, #32
    ccb2:	d100      	bne.n	ccb6 <__aeabi_dsub+0x4ea>
    ccb4:	e0c1      	b.n	ce3a <__aeabi_dsub+0x66e>
    ccb6:	2340      	movs	r3, #64	; 0x40
    ccb8:	4651      	mov	r1, sl
    ccba:	1a5b      	subs	r3, r3, r1
    ccbc:	409a      	lsls	r2, r3
    ccbe:	9901      	ldr	r1, [sp, #4]
    ccc0:	4311      	orrs	r1, r2
    ccc2:	1e4a      	subs	r2, r1, #1
    ccc4:	4191      	sbcs	r1, r2
    ccc6:	2200      	movs	r2, #0
    ccc8:	4301      	orrs	r1, r0
    ccca:	e670      	b.n	c9ae <__aeabi_dsub+0x1e2>
    cccc:	4c6e      	ldr	r4, [pc, #440]	; (ce88 <__aeabi_dsub+0x6bc>)
    ccce:	42a0      	cmp	r0, r4
    ccd0:	d000      	beq.n	ccd4 <__aeabi_dsub+0x508>
    ccd2:	e753      	b.n	cb7c <__aeabi_dsub+0x3b0>
    ccd4:	1c17      	adds	r7, r2, #0
    ccd6:	9d01      	ldr	r5, [sp, #4]
    ccd8:	1c04      	adds	r4, r0, #0
    ccda:	4698      	mov	r8, r3
    ccdc:	e5a8      	b.n	c830 <__aeabi_dsub+0x64>
    ccde:	2c00      	cmp	r4, #0
    cce0:	d128      	bne.n	cd34 <__aeabi_dsub+0x568>
    cce2:	1c3c      	adds	r4, r7, #0
    cce4:	432c      	orrs	r4, r5
    cce6:	d100      	bne.n	ccea <__aeabi_dsub+0x51e>
    cce8:	e08a      	b.n	ce00 <__aeabi_dsub+0x634>
    ccea:	43db      	mvns	r3, r3
    ccec:	469a      	mov	sl, r3
    ccee:	2b00      	cmp	r3, #0
    ccf0:	d000      	beq.n	ccf4 <__aeabi_dsub+0x528>
    ccf2:	e082      	b.n	cdfa <__aeabi_dsub+0x62e>
    ccf4:	9b01      	ldr	r3, [sp, #4]
    ccf6:	19d2      	adds	r2, r2, r7
    ccf8:	469c      	mov	ip, r3
    ccfa:	4465      	add	r5, ip
    ccfc:	429d      	cmp	r5, r3
    ccfe:	4189      	sbcs	r1, r1
    cd00:	4249      	negs	r1, r1
    cd02:	1857      	adds	r7, r2, r1
    cd04:	1c04      	adds	r4, r0, #0
    cd06:	e659      	b.n	c9bc <__aeabi_dsub+0x1f0>
    cd08:	2800      	cmp	r0, #0
    cd0a:	d15b      	bne.n	cdc4 <__aeabi_dsub+0x5f8>
    cd0c:	1c10      	adds	r0, r2, #0
    cd0e:	9901      	ldr	r1, [sp, #4]
    cd10:	4308      	orrs	r0, r1
    cd12:	d100      	bne.n	cd16 <__aeabi_dsub+0x54a>
    cd14:	e0a4      	b.n	ce60 <__aeabi_dsub+0x694>
    cd16:	1c17      	adds	r7, r2, #0
    cd18:	1c0d      	adds	r5, r1, #0
    cd1a:	4698      	mov	r8, r3
    cd1c:	4c5a      	ldr	r4, [pc, #360]	; (ce88 <__aeabi_dsub+0x6bc>)
    cd1e:	e587      	b.n	c830 <__aeabi_dsub+0x64>
    cd20:	433d      	orrs	r5, r7
    cd22:	1e6f      	subs	r7, r5, #1
    cd24:	41bd      	sbcs	r5, r7
    cd26:	2700      	movs	r7, #0
    cd28:	b2ed      	uxtb	r5, r5
    cd2a:	e742      	b.n	cbb2 <__aeabi_dsub+0x3e6>
    cd2c:	1c04      	adds	r4, r0, #0
    cd2e:	2700      	movs	r7, #0
    cd30:	2500      	movs	r5, #0
    cd32:	e618      	b.n	c966 <__aeabi_dsub+0x19a>
    cd34:	4c54      	ldr	r4, [pc, #336]	; (ce88 <__aeabi_dsub+0x6bc>)
    cd36:	42a0      	cmp	r0, r4
    cd38:	d062      	beq.n	ce00 <__aeabi_dsub+0x634>
    cd3a:	4653      	mov	r3, sl
    cd3c:	2480      	movs	r4, #128	; 0x80
    cd3e:	425b      	negs	r3, r3
    cd40:	469a      	mov	sl, r3
    cd42:	0424      	lsls	r4, r4, #16
    cd44:	4327      	orrs	r7, r4
    cd46:	4653      	mov	r3, sl
    cd48:	2b38      	cmp	r3, #56	; 0x38
    cd4a:	dd00      	ble.n	cd4e <__aeabi_dsub+0x582>
    cd4c:	e08e      	b.n	ce6c <__aeabi_dsub+0x6a0>
    cd4e:	2b1f      	cmp	r3, #31
    cd50:	dd00      	ble.n	cd54 <__aeabi_dsub+0x588>
    cd52:	e09d      	b.n	ce90 <__aeabi_dsub+0x6c4>
    cd54:	2420      	movs	r4, #32
    cd56:	1ae3      	subs	r3, r4, r3
    cd58:	469b      	mov	fp, r3
    cd5a:	1c3b      	adds	r3, r7, #0
    cd5c:	4659      	mov	r1, fp
    cd5e:	408b      	lsls	r3, r1
    cd60:	4651      	mov	r1, sl
    cd62:	4699      	mov	r9, r3
    cd64:	1c2b      	adds	r3, r5, #0
    cd66:	40cb      	lsrs	r3, r1
    cd68:	469c      	mov	ip, r3
    cd6a:	464b      	mov	r3, r9
    cd6c:	4664      	mov	r4, ip
    cd6e:	4323      	orrs	r3, r4
    cd70:	469c      	mov	ip, r3
    cd72:	465b      	mov	r3, fp
    cd74:	409d      	lsls	r5, r3
    cd76:	4663      	mov	r3, ip
    cd78:	1e6c      	subs	r4, r5, #1
    cd7a:	41a5      	sbcs	r5, r4
    cd7c:	40cf      	lsrs	r7, r1
    cd7e:	431d      	orrs	r5, r3
    cd80:	9b01      	ldr	r3, [sp, #4]
    cd82:	18bf      	adds	r7, r7, r2
    cd84:	469c      	mov	ip, r3
    cd86:	4465      	add	r5, ip
    cd88:	429d      	cmp	r5, r3
    cd8a:	4192      	sbcs	r2, r2
    cd8c:	4252      	negs	r2, r2
    cd8e:	18bf      	adds	r7, r7, r2
    cd90:	1c04      	adds	r4, r0, #0
    cd92:	e613      	b.n	c9bc <__aeabi_dsub+0x1f0>
    cd94:	1c10      	adds	r0, r2, #0
    cd96:	9901      	ldr	r1, [sp, #4]
    cd98:	4308      	orrs	r0, r1
    cd9a:	d100      	bne.n	cd9e <__aeabi_dsub+0x5d2>
    cd9c:	e548      	b.n	c830 <__aeabi_dsub+0x64>
    cd9e:	1a68      	subs	r0, r5, r1
    cda0:	4684      	mov	ip, r0
    cda2:	4285      	cmp	r5, r0
    cda4:	4180      	sbcs	r0, r0
    cda6:	1abe      	subs	r6, r7, r2
    cda8:	4240      	negs	r0, r0
    cdaa:	1a30      	subs	r0, r6, r0
    cdac:	0206      	lsls	r6, r0, #8
    cdae:	d400      	bmi.n	cdb2 <__aeabi_dsub+0x5e6>
    cdb0:	e647      	b.n	ca42 <__aeabi_dsub+0x276>
    cdb2:	468c      	mov	ip, r1
    cdb4:	1b4d      	subs	r5, r1, r5
    cdb6:	45ac      	cmp	ip, r5
    cdb8:	4189      	sbcs	r1, r1
    cdba:	1bd2      	subs	r2, r2, r7
    cdbc:	4249      	negs	r1, r1
    cdbe:	1a57      	subs	r7, r2, r1
    cdc0:	4698      	mov	r8, r3
    cdc2:	e535      	b.n	c830 <__aeabi_dsub+0x64>
    cdc4:	1c10      	adds	r0, r2, #0
    cdc6:	9901      	ldr	r1, [sp, #4]
    cdc8:	4308      	orrs	r0, r1
    cdca:	d034      	beq.n	ce36 <__aeabi_dsub+0x66a>
    cdcc:	2480      	movs	r4, #128	; 0x80
    cdce:	0778      	lsls	r0, r7, #29
    cdd0:	08ed      	lsrs	r5, r5, #3
    cdd2:	08ff      	lsrs	r7, r7, #3
    cdd4:	0324      	lsls	r4, r4, #12
    cdd6:	4328      	orrs	r0, r5
    cdd8:	4227      	tst	r7, r4
    cdda:	d008      	beq.n	cdee <__aeabi_dsub+0x622>
    cddc:	08d6      	lsrs	r6, r2, #3
    cdde:	4226      	tst	r6, r4
    cde0:	d105      	bne.n	cdee <__aeabi_dsub+0x622>
    cde2:	08c9      	lsrs	r1, r1, #3
    cde4:	0752      	lsls	r2, r2, #29
    cde6:	430a      	orrs	r2, r1
    cde8:	1c10      	adds	r0, r2, #0
    cdea:	1c37      	adds	r7, r6, #0
    cdec:	4698      	mov	r8, r3
    cdee:	00ff      	lsls	r7, r7, #3
    cdf0:	0f42      	lsrs	r2, r0, #29
    cdf2:	4317      	orrs	r7, r2
    cdf4:	00c5      	lsls	r5, r0, #3
    cdf6:	4c24      	ldr	r4, [pc, #144]	; (ce88 <__aeabi_dsub+0x6bc>)
    cdf8:	e51a      	b.n	c830 <__aeabi_dsub+0x64>
    cdfa:	4c23      	ldr	r4, [pc, #140]	; (ce88 <__aeabi_dsub+0x6bc>)
    cdfc:	42a0      	cmp	r0, r4
    cdfe:	d1a2      	bne.n	cd46 <__aeabi_dsub+0x57a>
    ce00:	1c17      	adds	r7, r2, #0
    ce02:	9d01      	ldr	r5, [sp, #4]
    ce04:	1c04      	adds	r4, r0, #0
    ce06:	e513      	b.n	c830 <__aeabi_dsub+0x64>
    ce08:	2b00      	cmp	r3, #0
    ce0a:	d035      	beq.n	ce78 <__aeabi_dsub+0x6ac>
    ce0c:	1c13      	adds	r3, r2, #0
    ce0e:	9901      	ldr	r1, [sp, #4]
    ce10:	430b      	orrs	r3, r1
    ce12:	d010      	beq.n	ce36 <__aeabi_dsub+0x66a>
    ce14:	2480      	movs	r4, #128	; 0x80
    ce16:	0778      	lsls	r0, r7, #29
    ce18:	08ed      	lsrs	r5, r5, #3
    ce1a:	08ff      	lsrs	r7, r7, #3
    ce1c:	0324      	lsls	r4, r4, #12
    ce1e:	4328      	orrs	r0, r5
    ce20:	4227      	tst	r7, r4
    ce22:	d0e4      	beq.n	cdee <__aeabi_dsub+0x622>
    ce24:	08d3      	lsrs	r3, r2, #3
    ce26:	4223      	tst	r3, r4
    ce28:	d1e1      	bne.n	cdee <__aeabi_dsub+0x622>
    ce2a:	08c9      	lsrs	r1, r1, #3
    ce2c:	0752      	lsls	r2, r2, #29
    ce2e:	430a      	orrs	r2, r1
    ce30:	1c10      	adds	r0, r2, #0
    ce32:	1c1f      	adds	r7, r3, #0
    ce34:	e7db      	b.n	cdee <__aeabi_dsub+0x622>
    ce36:	4c14      	ldr	r4, [pc, #80]	; (ce88 <__aeabi_dsub+0x6bc>)
    ce38:	e4fa      	b.n	c830 <__aeabi_dsub+0x64>
    ce3a:	2200      	movs	r2, #0
    ce3c:	e73f      	b.n	ccbe <__aeabi_dsub+0x4f2>
    ce3e:	464c      	mov	r4, r9
    ce40:	1c3e      	adds	r6, r7, #0
    ce42:	3c20      	subs	r4, #32
    ce44:	40e6      	lsrs	r6, r4
    ce46:	4649      	mov	r1, r9
    ce48:	1c34      	adds	r4, r6, #0
    ce4a:	2920      	cmp	r1, #32
    ce4c:	d032      	beq.n	ceb4 <__aeabi_dsub+0x6e8>
    ce4e:	2640      	movs	r6, #64	; 0x40
    ce50:	1a76      	subs	r6, r6, r1
    ce52:	40b7      	lsls	r7, r6
    ce54:	433d      	orrs	r5, r7
    ce56:	1e6f      	subs	r7, r5, #1
    ce58:	41bd      	sbcs	r5, r7
    ce5a:	2700      	movs	r7, #0
    ce5c:	4325      	orrs	r5, r4
    ce5e:	e6a8      	b.n	cbb2 <__aeabi_dsub+0x3e6>
    ce60:	2780      	movs	r7, #128	; 0x80
    ce62:	2600      	movs	r6, #0
    ce64:	03ff      	lsls	r7, r7, #15
    ce66:	4c08      	ldr	r4, [pc, #32]	; (ce88 <__aeabi_dsub+0x6bc>)
    ce68:	2500      	movs	r5, #0
    ce6a:	e57c      	b.n	c966 <__aeabi_dsub+0x19a>
    ce6c:	433d      	orrs	r5, r7
    ce6e:	1e6f      	subs	r7, r5, #1
    ce70:	41bd      	sbcs	r5, r7
    ce72:	2700      	movs	r7, #0
    ce74:	b2ed      	uxtb	r5, r5
    ce76:	e783      	b.n	cd80 <__aeabi_dsub+0x5b4>
    ce78:	1c17      	adds	r7, r2, #0
    ce7a:	9d01      	ldr	r5, [sp, #4]
    ce7c:	4c02      	ldr	r4, [pc, #8]	; (ce88 <__aeabi_dsub+0x6bc>)
    ce7e:	e4d7      	b.n	c830 <__aeabi_dsub+0x64>
    ce80:	1c17      	adds	r7, r2, #0
    ce82:	9d01      	ldr	r5, [sp, #4]
    ce84:	e4d4      	b.n	c830 <__aeabi_dsub+0x64>
    ce86:	46c0      	nop			; (mov r8, r8)
    ce88:	000007ff 	.word	0x000007ff
    ce8c:	ff7fffff 	.word	0xff7fffff
    ce90:	4654      	mov	r4, sl
    ce92:	1c3b      	adds	r3, r7, #0
    ce94:	3c20      	subs	r4, #32
    ce96:	40e3      	lsrs	r3, r4
    ce98:	1c1c      	adds	r4, r3, #0
    ce9a:	4653      	mov	r3, sl
    ce9c:	2b20      	cmp	r3, #32
    ce9e:	d00d      	beq.n	cebc <__aeabi_dsub+0x6f0>
    cea0:	2340      	movs	r3, #64	; 0x40
    cea2:	4651      	mov	r1, sl
    cea4:	1a5b      	subs	r3, r3, r1
    cea6:	409f      	lsls	r7, r3
    cea8:	433d      	orrs	r5, r7
    ceaa:	1e6f      	subs	r7, r5, #1
    ceac:	41bd      	sbcs	r5, r7
    ceae:	2700      	movs	r7, #0
    ceb0:	4325      	orrs	r5, r4
    ceb2:	e765      	b.n	cd80 <__aeabi_dsub+0x5b4>
    ceb4:	2700      	movs	r7, #0
    ceb6:	e7cd      	b.n	ce54 <__aeabi_dsub+0x688>
    ceb8:	1c0d      	adds	r5, r1, #0
    ceba:	e5c8      	b.n	ca4e <__aeabi_dsub+0x282>
    cebc:	2700      	movs	r7, #0
    cebe:	e7f3      	b.n	cea8 <__aeabi_dsub+0x6dc>

0000cec0 <__aeabi_d2iz>:
    cec0:	030b      	lsls	r3, r1, #12
    cec2:	b530      	push	{r4, r5, lr}
    cec4:	4c13      	ldr	r4, [pc, #76]	; (cf14 <__aeabi_d2iz+0x54>)
    cec6:	0b1a      	lsrs	r2, r3, #12
    cec8:	004b      	lsls	r3, r1, #1
    ceca:	1c05      	adds	r5, r0, #0
    cecc:	0d5b      	lsrs	r3, r3, #21
    cece:	0fc9      	lsrs	r1, r1, #31
    ced0:	2000      	movs	r0, #0
    ced2:	42a3      	cmp	r3, r4
    ced4:	dd10      	ble.n	cef8 <__aeabi_d2iz+0x38>
    ced6:	4810      	ldr	r0, [pc, #64]	; (cf18 <__aeabi_d2iz+0x58>)
    ced8:	4283      	cmp	r3, r0
    ceda:	dc0e      	bgt.n	cefa <__aeabi_d2iz+0x3a>
    cedc:	2080      	movs	r0, #128	; 0x80
    cede:	4c0f      	ldr	r4, [pc, #60]	; (cf1c <__aeabi_d2iz+0x5c>)
    cee0:	0340      	lsls	r0, r0, #13
    cee2:	4302      	orrs	r2, r0
    cee4:	1ae4      	subs	r4, r4, r3
    cee6:	2c1f      	cmp	r4, #31
    cee8:	dd0a      	ble.n	cf00 <__aeabi_d2iz+0x40>
    ceea:	480d      	ldr	r0, [pc, #52]	; (cf20 <__aeabi_d2iz+0x60>)
    ceec:	1ac3      	subs	r3, r0, r3
    ceee:	40da      	lsrs	r2, r3
    cef0:	1c13      	adds	r3, r2, #0
    cef2:	4248      	negs	r0, r1
    cef4:	4043      	eors	r3, r0
    cef6:	1858      	adds	r0, r3, r1
    cef8:	bd30      	pop	{r4, r5, pc}
    cefa:	4b0a      	ldr	r3, [pc, #40]	; (cf24 <__aeabi_d2iz+0x64>)
    cefc:	18c8      	adds	r0, r1, r3
    cefe:	e7fb      	b.n	cef8 <__aeabi_d2iz+0x38>
    cf00:	1c28      	adds	r0, r5, #0
    cf02:	40e0      	lsrs	r0, r4
    cf04:	4c08      	ldr	r4, [pc, #32]	; (cf28 <__aeabi_d2iz+0x68>)
    cf06:	46a4      	mov	ip, r4
    cf08:	4463      	add	r3, ip
    cf0a:	409a      	lsls	r2, r3
    cf0c:	1c13      	adds	r3, r2, #0
    cf0e:	4303      	orrs	r3, r0
    cf10:	e7ef      	b.n	cef2 <__aeabi_d2iz+0x32>
    cf12:	46c0      	nop			; (mov r8, r8)
    cf14:	000003fe 	.word	0x000003fe
    cf18:	0000041d 	.word	0x0000041d
    cf1c:	00000433 	.word	0x00000433
    cf20:	00000413 	.word	0x00000413
    cf24:	7fffffff 	.word	0x7fffffff
    cf28:	fffffbed 	.word	0xfffffbed

0000cf2c <__aeabi_i2d>:
    cf2c:	b538      	push	{r3, r4, r5, lr}
    cf2e:	1e04      	subs	r4, r0, #0
    cf30:	d016      	beq.n	cf60 <__aeabi_i2d+0x34>
    cf32:	0fc5      	lsrs	r5, r0, #31
    cf34:	d000      	beq.n	cf38 <__aeabi_i2d+0xc>
    cf36:	4244      	negs	r4, r0
    cf38:	1c20      	adds	r0, r4, #0
    cf3a:	f7f8 fe7d 	bl	5c38 <__clzsi2>
    cf3e:	4b17      	ldr	r3, [pc, #92]	; (cf9c <__aeabi_i2d+0x70>)
    cf40:	1a1b      	subs	r3, r3, r0
    cf42:	280a      	cmp	r0, #10
    cf44:	dc21      	bgt.n	cf8a <__aeabi_i2d+0x5e>
    cf46:	1c02      	adds	r2, r0, #0
    cf48:	1c21      	adds	r1, r4, #0
    cf4a:	3215      	adds	r2, #21
    cf4c:	4091      	lsls	r1, r2
    cf4e:	1c0a      	adds	r2, r1, #0
    cf50:	210b      	movs	r1, #11
    cf52:	1a08      	subs	r0, r1, r0
    cf54:	40c4      	lsrs	r4, r0
    cf56:	055b      	lsls	r3, r3, #21
    cf58:	0324      	lsls	r4, r4, #12
    cf5a:	0b24      	lsrs	r4, r4, #12
    cf5c:	0d5b      	lsrs	r3, r3, #21
    cf5e:	e003      	b.n	cf68 <__aeabi_i2d+0x3c>
    cf60:	2500      	movs	r5, #0
    cf62:	2300      	movs	r3, #0
    cf64:	2400      	movs	r4, #0
    cf66:	2200      	movs	r2, #0
    cf68:	2100      	movs	r1, #0
    cf6a:	1c10      	adds	r0, r2, #0
    cf6c:	0324      	lsls	r4, r4, #12
    cf6e:	0d0a      	lsrs	r2, r1, #20
    cf70:	0512      	lsls	r2, r2, #20
    cf72:	0b24      	lsrs	r4, r4, #12
    cf74:	4314      	orrs	r4, r2
    cf76:	4a0a      	ldr	r2, [pc, #40]	; (cfa0 <__aeabi_i2d+0x74>)
    cf78:	051b      	lsls	r3, r3, #20
    cf7a:	4014      	ands	r4, r2
    cf7c:	431c      	orrs	r4, r3
    cf7e:	0064      	lsls	r4, r4, #1
    cf80:	07ed      	lsls	r5, r5, #31
    cf82:	0864      	lsrs	r4, r4, #1
    cf84:	432c      	orrs	r4, r5
    cf86:	1c21      	adds	r1, r4, #0
    cf88:	bd38      	pop	{r3, r4, r5, pc}
    cf8a:	380b      	subs	r0, #11
    cf8c:	4084      	lsls	r4, r0
    cf8e:	055b      	lsls	r3, r3, #21
    cf90:	0324      	lsls	r4, r4, #12
    cf92:	0b24      	lsrs	r4, r4, #12
    cf94:	0d5b      	lsrs	r3, r3, #21
    cf96:	2200      	movs	r2, #0
    cf98:	e7e6      	b.n	cf68 <__aeabi_i2d+0x3c>
    cf9a:	46c0      	nop			; (mov r8, r8)
    cf9c:	0000041e 	.word	0x0000041e
    cfa0:	800fffff 	.word	0x800fffff

0000cfa4 <__aeabi_ui2d>:
    cfa4:	b510      	push	{r4, lr}
    cfa6:	1e04      	subs	r4, r0, #0
    cfa8:	d010      	beq.n	cfcc <__aeabi_ui2d+0x28>
    cfaa:	f7f8 fe45 	bl	5c38 <__clzsi2>
    cfae:	4a14      	ldr	r2, [pc, #80]	; (d000 <__aeabi_ui2d+0x5c>)
    cfb0:	1a12      	subs	r2, r2, r0
    cfb2:	280a      	cmp	r0, #10
    cfb4:	dc1a      	bgt.n	cfec <__aeabi_ui2d+0x48>
    cfb6:	230b      	movs	r3, #11
    cfb8:	1c21      	adds	r1, r4, #0
    cfba:	1a1b      	subs	r3, r3, r0
    cfbc:	40d9      	lsrs	r1, r3
    cfbe:	3015      	adds	r0, #21
    cfc0:	030b      	lsls	r3, r1, #12
    cfc2:	0552      	lsls	r2, r2, #21
    cfc4:	4084      	lsls	r4, r0
    cfc6:	0b1b      	lsrs	r3, r3, #12
    cfc8:	0d52      	lsrs	r2, r2, #21
    cfca:	e001      	b.n	cfd0 <__aeabi_ui2d+0x2c>
    cfcc:	2200      	movs	r2, #0
    cfce:	2300      	movs	r3, #0
    cfd0:	2100      	movs	r1, #0
    cfd2:	031b      	lsls	r3, r3, #12
    cfd4:	1c20      	adds	r0, r4, #0
    cfd6:	0b1c      	lsrs	r4, r3, #12
    cfd8:	0d0b      	lsrs	r3, r1, #20
    cfda:	051b      	lsls	r3, r3, #20
    cfdc:	4323      	orrs	r3, r4
    cfde:	4c09      	ldr	r4, [pc, #36]	; (d004 <__aeabi_ui2d+0x60>)
    cfe0:	0512      	lsls	r2, r2, #20
    cfe2:	4023      	ands	r3, r4
    cfe4:	4313      	orrs	r3, r2
    cfe6:	005b      	lsls	r3, r3, #1
    cfe8:	0859      	lsrs	r1, r3, #1
    cfea:	bd10      	pop	{r4, pc}
    cfec:	1c03      	adds	r3, r0, #0
    cfee:	3b0b      	subs	r3, #11
    cff0:	409c      	lsls	r4, r3
    cff2:	0552      	lsls	r2, r2, #21
    cff4:	0323      	lsls	r3, r4, #12
    cff6:	0b1b      	lsrs	r3, r3, #12
    cff8:	0d52      	lsrs	r2, r2, #21
    cffa:	2400      	movs	r4, #0
    cffc:	e7e8      	b.n	cfd0 <__aeabi_ui2d+0x2c>
    cffe:	46c0      	nop			; (mov r8, r8)
    d000:	0000041e 	.word	0x0000041e
    d004:	800fffff 	.word	0x800fffff

0000d008 <__aeabi_d2f>:
    d008:	b570      	push	{r4, r5, r6, lr}
    d00a:	030b      	lsls	r3, r1, #12
    d00c:	004d      	lsls	r5, r1, #1
    d00e:	0f44      	lsrs	r4, r0, #29
    d010:	0d6d      	lsrs	r5, r5, #21
    d012:	0a5b      	lsrs	r3, r3, #9
    d014:	4323      	orrs	r3, r4
    d016:	1c6c      	adds	r4, r5, #1
    d018:	0564      	lsls	r4, r4, #21
    d01a:	0fc9      	lsrs	r1, r1, #31
    d01c:	00c2      	lsls	r2, r0, #3
    d01e:	0d64      	lsrs	r4, r4, #21
    d020:	2c01      	cmp	r4, #1
    d022:	dd2a      	ble.n	d07a <__aeabi_d2f+0x72>
    d024:	4c3b      	ldr	r4, [pc, #236]	; (d114 <__aeabi_d2f+0x10c>)
    d026:	192c      	adds	r4, r5, r4
    d028:	2cfe      	cmp	r4, #254	; 0xfe
    d02a:	dc1a      	bgt.n	d062 <__aeabi_d2f+0x5a>
    d02c:	2c00      	cmp	r4, #0
    d02e:	dd35      	ble.n	d09c <__aeabi_d2f+0x94>
    d030:	0180      	lsls	r0, r0, #6
    d032:	1e45      	subs	r5, r0, #1
    d034:	41a8      	sbcs	r0, r5
    d036:	00db      	lsls	r3, r3, #3
    d038:	4303      	orrs	r3, r0
    d03a:	0f52      	lsrs	r2, r2, #29
    d03c:	4313      	orrs	r3, r2
    d03e:	075a      	lsls	r2, r3, #29
    d040:	d004      	beq.n	d04c <__aeabi_d2f+0x44>
    d042:	220f      	movs	r2, #15
    d044:	401a      	ands	r2, r3
    d046:	2a04      	cmp	r2, #4
    d048:	d000      	beq.n	d04c <__aeabi_d2f+0x44>
    d04a:	3304      	adds	r3, #4
    d04c:	2280      	movs	r2, #128	; 0x80
    d04e:	04d2      	lsls	r2, r2, #19
    d050:	401a      	ands	r2, r3
    d052:	d027      	beq.n	d0a4 <__aeabi_d2f+0x9c>
    d054:	3401      	adds	r4, #1
    d056:	2cff      	cmp	r4, #255	; 0xff
    d058:	d003      	beq.n	d062 <__aeabi_d2f+0x5a>
    d05a:	019b      	lsls	r3, r3, #6
    d05c:	0a5b      	lsrs	r3, r3, #9
    d05e:	b2e4      	uxtb	r4, r4
    d060:	e001      	b.n	d066 <__aeabi_d2f+0x5e>
    d062:	24ff      	movs	r4, #255	; 0xff
    d064:	2300      	movs	r3, #0
    d066:	025b      	lsls	r3, r3, #9
    d068:	05e4      	lsls	r4, r4, #23
    d06a:	0a5b      	lsrs	r3, r3, #9
    d06c:	4323      	orrs	r3, r4
    d06e:	005b      	lsls	r3, r3, #1
    d070:	07c9      	lsls	r1, r1, #31
    d072:	085b      	lsrs	r3, r3, #1
    d074:	430b      	orrs	r3, r1
    d076:	1c18      	adds	r0, r3, #0
    d078:	bd70      	pop	{r4, r5, r6, pc}
    d07a:	2d00      	cmp	r5, #0
    d07c:	d106      	bne.n	d08c <__aeabi_d2f+0x84>
    d07e:	4313      	orrs	r3, r2
    d080:	d10e      	bne.n	d0a0 <__aeabi_d2f+0x98>
    d082:	2400      	movs	r4, #0
    d084:	025b      	lsls	r3, r3, #9
    d086:	0a5b      	lsrs	r3, r3, #9
    d088:	b2e4      	uxtb	r4, r4
    d08a:	e7ec      	b.n	d066 <__aeabi_d2f+0x5e>
    d08c:	431a      	orrs	r2, r3
    d08e:	d0e8      	beq.n	d062 <__aeabi_d2f+0x5a>
    d090:	2080      	movs	r0, #128	; 0x80
    d092:	00db      	lsls	r3, r3, #3
    d094:	0480      	lsls	r0, r0, #18
    d096:	4303      	orrs	r3, r0
    d098:	24ff      	movs	r4, #255	; 0xff
    d09a:	e7d0      	b.n	d03e <__aeabi_d2f+0x36>
    d09c:	3417      	adds	r4, #23
    d09e:	da0c      	bge.n	d0ba <__aeabi_d2f+0xb2>
    d0a0:	2305      	movs	r3, #5
    d0a2:	2400      	movs	r4, #0
    d0a4:	08db      	lsrs	r3, r3, #3
    d0a6:	2cff      	cmp	r4, #255	; 0xff
    d0a8:	d1ec      	bne.n	d084 <__aeabi_d2f+0x7c>
    d0aa:	2b00      	cmp	r3, #0
    d0ac:	d02d      	beq.n	d10a <__aeabi_d2f+0x102>
    d0ae:	2280      	movs	r2, #128	; 0x80
    d0b0:	03d2      	lsls	r2, r2, #15
    d0b2:	4313      	orrs	r3, r2
    d0b4:	025b      	lsls	r3, r3, #9
    d0b6:	0a5b      	lsrs	r3, r3, #9
    d0b8:	e7d5      	b.n	d066 <__aeabi_d2f+0x5e>
    d0ba:	2480      	movs	r4, #128	; 0x80
    d0bc:	4816      	ldr	r0, [pc, #88]	; (d118 <__aeabi_d2f+0x110>)
    d0be:	0424      	lsls	r4, r4, #16
    d0c0:	4323      	orrs	r3, r4
    d0c2:	1b40      	subs	r0, r0, r5
    d0c4:	281f      	cmp	r0, #31
    d0c6:	dc0d      	bgt.n	d0e4 <__aeabi_d2f+0xdc>
    d0c8:	4c14      	ldr	r4, [pc, #80]	; (d11c <__aeabi_d2f+0x114>)
    d0ca:	46a4      	mov	ip, r4
    d0cc:	4465      	add	r5, ip
    d0ce:	40ab      	lsls	r3, r5
    d0d0:	1c1c      	adds	r4, r3, #0
    d0d2:	1c13      	adds	r3, r2, #0
    d0d4:	40ab      	lsls	r3, r5
    d0d6:	1e5d      	subs	r5, r3, #1
    d0d8:	41ab      	sbcs	r3, r5
    d0da:	40c2      	lsrs	r2, r0
    d0dc:	4323      	orrs	r3, r4
    d0de:	4313      	orrs	r3, r2
    d0e0:	2400      	movs	r4, #0
    d0e2:	e7ac      	b.n	d03e <__aeabi_d2f+0x36>
    d0e4:	1c1e      	adds	r6, r3, #0
    d0e6:	4c0e      	ldr	r4, [pc, #56]	; (d120 <__aeabi_d2f+0x118>)
    d0e8:	1b64      	subs	r4, r4, r5
    d0ea:	40e6      	lsrs	r6, r4
    d0ec:	1c34      	adds	r4, r6, #0
    d0ee:	2820      	cmp	r0, #32
    d0f0:	d00d      	beq.n	d10e <__aeabi_d2f+0x106>
    d0f2:	480c      	ldr	r0, [pc, #48]	; (d124 <__aeabi_d2f+0x11c>)
    d0f4:	4684      	mov	ip, r0
    d0f6:	4465      	add	r5, ip
    d0f8:	40ab      	lsls	r3, r5
    d0fa:	1c1d      	adds	r5, r3, #0
    d0fc:	432a      	orrs	r2, r5
    d0fe:	1e53      	subs	r3, r2, #1
    d100:	419a      	sbcs	r2, r3
    d102:	1c13      	adds	r3, r2, #0
    d104:	4323      	orrs	r3, r4
    d106:	2400      	movs	r4, #0
    d108:	e799      	b.n	d03e <__aeabi_d2f+0x36>
    d10a:	2300      	movs	r3, #0
    d10c:	e7ab      	b.n	d066 <__aeabi_d2f+0x5e>
    d10e:	2500      	movs	r5, #0
    d110:	e7f4      	b.n	d0fc <__aeabi_d2f+0xf4>
    d112:	46c0      	nop			; (mov r8, r8)
    d114:	fffffc80 	.word	0xfffffc80
    d118:	0000039e 	.word	0x0000039e
    d11c:	fffffc82 	.word	0xfffffc82
    d120:	0000037e 	.word	0x0000037e
    d124:	fffffca2 	.word	0xfffffca2
    d128:	666e6f63 	.word	0x666e6f63
    d12c:	48206769 	.word	0x48206769
    d130:	0d20494d 	.word	0x0d20494d
    d134:	0000000a 	.word	0x0000000a
    d138:	72616d53 	.word	0x72616d53
    d13c:	74654d74 	.word	0x74654d74
    d140:	61547265 	.word	0x61547265
    d144:	00006b73 	.word	0x00006b73
    d148:	454c4449 	.word	0x454c4449
    d14c:	00000000 	.word	0x00000000
    d150:	0a0d0a0d 	.word	0x0a0d0a0d
    d154:	2a2a2a2a 	.word	0x2a2a2a2a
    d158:	2a2a2a2a 	.word	0x2a2a2a2a
    d15c:	2a2a2a2a 	.word	0x2a2a2a2a
    d160:	2a2a2a2a 	.word	0x2a2a2a2a
    d164:	2a2a2a2a 	.word	0x2a2a2a2a
    d168:	2a2a2a2a 	.word	0x2a2a2a2a
    d16c:	2a2a2a2a 	.word	0x2a2a2a2a
    d170:	2a2a2a2a 	.word	0x2a2a2a2a
    d174:	2a2a2a2a 	.word	0x2a2a2a2a
    d178:	2a2a2a2a 	.word	0x2a2a2a2a
    d17c:	2a2a2a2a 	.word	0x2a2a2a2a
    d180:	2a2a2a2a 	.word	0x2a2a2a2a
    d184:	2a2a2a2a 	.word	0x2a2a2a2a
    d188:	2a2a2a2a 	.word	0x2a2a2a2a
    d18c:	2a2a2a2a 	.word	0x2a2a2a2a
    d190:	2a2a2a2a 	.word	0x2a2a2a2a
    d194:	2a2a2a2a 	.word	0x2a2a2a2a
    d198:	0a0d2a2a 	.word	0x0a0d2a2a
    d19c:	00000000 	.word	0x00000000
    d1a0:	6b636974 	.word	0x6b636974
    d1a4:	6d697420 	.word	0x6d697420
    d1a8:	25203a65 	.word	0x25203a65
    d1ac:	6d20756c 	.word	0x6d20756c
    d1b0:	000a0d73 	.word	0x000a0d73
    d1b4:	76616c53 	.word	0x76616c53
    d1b8:	6c432065 	.word	0x6c432065
    d1bc:	206b636f 	.word	0x206b636f
    d1c0:	00000a0d 	.word	0x00000a0d
    d1c4:	20646e65 	.word	0x20646e65
    d1c8:	666e6f63 	.word	0x666e6f63
    d1cc:	61206769 	.word	0x61206769
    d1d0:	696c7070 	.word	0x696c7070
    d1d4:	69746163 	.word	0x69746163
    d1d8:	62206e6f 	.word	0x62206e6f
    d1dc:	6e696765 	.word	0x6e696765
    d1e0:	00000a0d 	.word	0x00000a0d
    d1e4:	2a2a0a0d 	.word	0x2a2a0a0d
    d1e8:	2a2a2a2a 	.word	0x2a2a2a2a
    d1ec:	2a2a2a2a 	.word	0x2a2a2a2a
    d1f0:	2a2a2a2a 	.word	0x2a2a2a2a
    d1f4:	2a2a2a2a 	.word	0x2a2a2a2a
    d1f8:	2a2a2a2a 	.word	0x2a2a2a2a
    d1fc:	2a2a2a2a 	.word	0x2a2a2a2a
    d200:	2a2a2a2a 	.word	0x2a2a2a2a
    d204:	2a2a2a2a 	.word	0x2a2a2a2a
    d208:	2a2a2a2a 	.word	0x2a2a2a2a
    d20c:	2a2a2a2a 	.word	0x2a2a2a2a
    d210:	2a2a2a2a 	.word	0x2a2a2a2a
    d214:	2a2a2a2a 	.word	0x2a2a2a2a
    d218:	2a2a2a2a 	.word	0x2a2a2a2a
    d21c:	2a2a2a2a 	.word	0x2a2a2a2a
    d220:	2a2a2a2a 	.word	0x2a2a2a2a
    d224:	2a2a2a2a 	.word	0x2a2a2a2a
    d228:	2a2a2a2a 	.word	0x2a2a2a2a
    d22c:	0a0d0a0d 	.word	0x0a0d0a0d
    d230:	00000000 	.word	0x00000000
    d234:	70617274 	.word	0x70617274
    d238:	21212121 	.word	0x21212121
    d23c:	21212121 	.word	0x21212121
    d240:	21212121 	.word	0x21212121
    d244:	21212121 	.word	0x21212121
    d248:	21212121 	.word	0x21212121
    d24c:	21212121 	.word	0x21212121
    d250:	21212121 	.word	0x21212121
    d254:	21212121 	.word	0x21212121
    d258:	21212121 	.word	0x21212121
    d25c:	21212121 	.word	0x21212121
    d260:	0a0d2121 	.word	0x0a0d2121
    d264:	00000000 	.word	0x00000000
    d268:	2d6a626f 	.word	0x2d6a626f
    d26c:	6e69703e 	.word	0x6e69703e
    d270:	203d2120 	.word	0x203d2120
    d274:	6e695028 	.word	0x6e695028
    d278:	656d614e 	.word	0x656d614e
    d27c:	00434e29 	.word	0x00434e29
    d280:	2e2f2e2e 	.word	0x2e2f2e2e
    d284:	65626d2f 	.word	0x65626d2f
    d288:	41542f64 	.word	0x41542f64
    d28c:	54454752 	.word	0x54454752
    d290:	4d41535f 	.word	0x4d41535f
    d294:	47313252 	.word	0x47313252
    d298:	2f413831 	.word	0x2f413831
    d29c:	47524154 	.word	0x47524154
    d2a0:	415f5445 	.word	0x415f5445
    d2a4:	6c656d74 	.word	0x6c656d74
    d2a8:	5241542f 	.word	0x5241542f
    d2ac:	5f544547 	.word	0x5f544547
    d2b0:	5f4d4153 	.word	0x5f4d4153
    d2b4:	74726f43 	.word	0x74726f43
    d2b8:	304d7865 	.word	0x304d7865
    d2bc:	70672f50 	.word	0x70672f50
    d2c0:	6f5f6f69 	.word	0x6f5f6f69
    d2c4:	63656a62 	.word	0x63656a62
    d2c8:	00682e74 	.word	0x00682e74
    d2cc:	00001d0c 	.word	0x00001d0c
    d2d0:	00001d2c 	.word	0x00001d2c
    d2d4:	00001d1c 	.word	0x00001d1c
    d2d8:	00001d4c 	.word	0x00001d4c
    d2dc:	00001d3c 	.word	0x00001d3c
    d2e0:	00001d5c 	.word	0x00001d5c
    d2e4:	00001f52 	.word	0x00001f52
    d2e8:	0000201a 	.word	0x0000201a
    d2ec:	00001f74 	.word	0x00001f74
    d2f0:	00001fba 	.word	0x00001fba
    d2f4:	00001f9c 	.word	0x00001f9c
    d2f8:	00001fc4 	.word	0x00001fc4
    d2fc:	00001fd8 	.word	0x00001fd8
    d300:	00001fec 	.word	0x00001fec
    d304:	0000200c 	.word	0x0000200c

0000d308 <_ZZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_tE8pwrtable>:
    d308:	0f0f0f0f 0e0e0e0f 0c0c0d0d 08090a0b     ................
    d318:	02040607 00000000                       ........

0000d320 <_ZTV12ChannelRadio>:
	...
    d328:	00002351 0000236d 00002389 000022d5     Q#..m#...#..."..
    d338:	000022d1 00002439 000023c5 0000230d     ."..9$...#...#..
    d348:	00002321 00002339                       !#..9#..

0000d350 <_ZTV13ChannelSerial>:
	...
    d358:	000025ad 000025e1 000025fd 0000260d     .%...%...%...&..
    d368:	0000261d 00000000                       .&......

0000d370 <_ZTV17RelayBufferedTask>:
	...
    d378:	000027c9 000027cd 00002755 00002689     .'...'..U'...&..
    d388:	0000268d 00002691 000026f9 0000274d     .&...&...&..M'..

0000d398 <_ZTV5Relay>:
	...
    d3a0:	00002695 000027b9 00002699 00002689     .&...'...&...&..
    d3b0:	0000268d 00002691                       .&...&..

0000d3b8 <_ZTV13RelayBuffered>:
	...
    d3c0:	000027b5 000027dd 000026b5 00002689     .'...'...&...&..
    d3d0:	0000268d 00002691 000026f9 0000274d     .&...&...&..M'..

0000d3e0 <__stdin_name>:
    d3e0:	6474732f 00006e69                       /stdin..

0000d3e8 <__stderr_name>:
    d3e8:	6474732f 00727265                       /stderr.

0000d3f0 <__stdout_name>:
    d3f0:	6474732f 0074756f                       /stdout.

0000d3f8 <_ZTVN4mbed10FileHandleE>:
	...
    d400:	00002b69 00002b69 00002b69 00002b69     i+..i+..i+..i+..
    d410:	00002b69 00002b69 000028bd 00000000     i+..i+...(......
    d420:	00000000 0070253a 65637845 6f697470     ....:%p.Exceptio
    d430:	0000006e 006a626f 4a5c3a43 696b6e65     n...obj.C:\Jenki
    d440:	775c736e 736b726f 65636170 65626d5c     ns\workspace\mbe
    d450:	2d322d64 6c697562 696c2d64 72617262     d-2-build-librar
    d460:	61685c79 61745c6c 74656772 61685c73     y\hal\targets\ha
    d470:	41545c6c 54454752 6d74415f 545c6c65     l\TARGET_Atmel\T
    d480:	45475241 41535f54 6f435f4d 78657472     ARGET_SAM_Cortex
    d490:	5c50304d 6f697067 7172695f 6970615f     M0P\gpio_irq_api
    d4a0:	0000632e                                .c..

0000d4a4 <CSWTCH.41>:
    d4a4:	00100000 00200000 00300000 4a5c3a43     ...... ...0.C:\J
    d4b4:	696b6e65 775c736e 736b726f 65636170     enkins\workspace
    d4c4:	65626d5c 2d322d64 6c697562 696c2d64     \mbed-2-build-li
    d4d4:	72617262 61685c79 61745c6c 74656772     brary\hal\target
    d4e4:	61685c73 41545c6c 54454752 6d74415f     s\hal\TARGET_Atm
    d4f4:	545c6c65 45475241 41535f54 6f435f4d     el\TARGET_SAM_Co
    d504:	78657472 5c50304d 69726573 615f6c61     rtexM0P\serial_a
    d514:	632e6970 00000000 75616228 74617264     pi.c....(baudrat
    d524:	3d3d2065 30313120 7c7c2029 61622820     e == 110) || (ba
    d534:	61726475 3d206574 3531203d 7c202930     udrate == 150) |
    d544:	6228207c 72647561 20657461 33203d3d     | (baudrate == 3
    d554:	20293030 28207c7c 64756162 65746172     00) || (baudrate
    d564:	203d3d20 30303231 7c7c2029 61622820      == 1200) || (ba
    d574:	61726475 3d206574 3432203d 20293030     udrate == 2400) 
    d584:	28207c7c 64756162 65746172 203d3d20     || (baudrate == 
    d594:	30303834 7c7c2029 61622820 61726475     4800) || (baudra
    d5a4:	3d206574 3639203d 20293030 28207c7c     te == 9600) || (
    d5b4:	64756162 65746172 203d3d20 30323931     baudrate == 1920
    d5c4:	7c202930 6228207c 72647561 20657461     0) || (baudrate 
    d5d4:	33203d3d 30303438 7c7c2029 61622820     == 38400) || (ba
    d5e4:	61726475 3d206574 3735203d 29303036     udrate == 57600)
    d5f4:	207c7c20 75616228 74617264 3d3d2065      || (baudrate ==
    d604:	35313120 29303032 207c7c20 75616228      115200) || (bau
    d614:	74617264 3d3d2065 30333220 29303034     drate == 230400)
    d624:	207c7c20 75616228 74617264 3d3d2065      || (baudrate ==
    d634:	30363420 29303038 207c7c20 75616228      460800) || (bau
    d644:	74617264 3d3d2065 31323920 29303036     drate == 921600)
    d654:	00000000 6f747328 69625f70 3d207374     ....(stop_bits =
    d664:	2931203d 207c7c20 6f747328 69625f70     = 1) || (stop_bi
    d674:	3d207374 2932203d 00000000 72617028     ts == 2)....(par
    d684:	20797469 50203d3d 74697261 6e6f4e79     ity == ParityNon
    d694:	7c202965 7028207c 74697261 3d3d2079     e) || (parity ==
    d6a4:	72615020 4f797469 20296464 28207c7c      ParityOdd) || (
    d6b4:	69726170 3d207974 6150203d 79746972     parity == Parity
    d6c4:	6e657645 00000029 74616428 69625f61     Even)...(data_bi
    d6d4:	3d207374 2935203d 207c7c20 74616428     ts == 5) || (dat
    d6e4:	69625f61 3d207374 2936203d 207c7c20     a_bits == 6) || 
    d6f4:	74616428 69625f61 3d207374 2937203d     (data_bits == 7)
    d704:	207c7c20 74616428 69625f61 3d207374      || (data_bits =
    d714:	2938203d 00000000 21207874 7628203d     = 8)....tx != (v
    d724:	2a64696f 00003029 74646977 3d3d2068     oid*)0..width ==
    d734:	00003820 21207872 7628203d 2a64696f      8..rx != (void*
    d744:	00003029                                )0..

0000d748 <_ZTVN4mbed11InterruptInE>:
	...
    d750:	00003a69 00003a81                       i:...:..

0000d758 <_ZTVN4mbed3SPIE>:
	...
    d760:	00003cc1 00003b51 00003b81 00000000     .<..Q;...;......

0000d770 <_ZTVN4mbed6SerialE>:
	...
    d778:	00000119 0000018d 00003cd5 00003ced     .........<...<..
    d788:	ffffff24 00000000 00003e65 00003e61     $.......e>..a>..
    d798:	00003e91 00003ec1 00003ebd 00003ec5     .>...>...>...>..
    d7a8:	00003ec9 00000141 000001c1 00003cf5     .>..A........<..
    d7b8:	00003cdd ffffff20 00000000 00000151     .<.. .......Q...
    d7c8:	000001d1 00000000                       ........

0000d7d0 <_ZTVN4mbed10SerialBaseE>:
	...
    d7d8:	00000115 00000161                       ....a...

0000d7e0 <_ZTVN4mbed6StreamE>:
	...
    d7e8:	00003e65 00003e61 00003e91 00003ec1     e>..a>...>...>..
    d7f8:	00003ebd 00003ec5 00003ec9 00000000     .>...>...>......
    d808:	00000000 00002b69 00002b69 fffffffc     ....i+..i+......
	...
    d824:	00002b77 6465626d 73736120 61747265     w+..mbed asserta
    d834:	6e6f6974 69616620 3a64656c 2c732520     tion failed: %s,
    d844:	6c696620 25203a65 6c202c73 20656e69      file: %s, line 
    d854:	0a206425 00000000 4a5c3a43 696b6e65     %d .....C:\Jenki
    d864:	775c736e 736b726f 65636170 65626d5c     ns\workspace\mbe
    d874:	2d322d64 6c697562 696c2d64 72617262     d-2-build-librar
    d884:	622e5c79 646c6975 65626d5c 41545c64     y\.build\mbed\TA
    d894:	54454752 4d41535f 47313252 5c413831     RGET_SAMR21G18A\
    d8a4:	47524154 415f5445 6c656d74 5241545c     TARGET_Atmel\TAR
    d8b4:	5f544547 5f4d4153 74726f43 304d7865     GET_SAM_CortexM0
    d8c4:	70672f50 6f5f6f69 63656a62 00682e74     P/gpio_object.h.
    d8d4:	6c756f63 6f6e2064 69702074 74756f6e     could not pinout
    d8e4:	00000000 6d6e6970 6d207061 6d2d7369     ....pinmap mis-m
    d8f4:	68637461 00000000 6d6e6970 6e207061     atch....pinmap n
    d904:	6620746f 646e756f 726f6620 72657020     ot found for per
    d914:	65687069 006c6172 6d6e6970 6e207061     ipheral.pinmap n
    d924:	6620746f 646e756f 726f6620 6e756620     ot found for fun
    d934:	6f697463 0000006e                       ction...

0000d93c <PinMap_SERCOM_PADEx>:
    d93c:	00000008 00000002 00000003 00000009     ................
    d94c:	00000012 00000003 00000010 00000003     ................
    d95c:	00000003 00000011 00000013 00000003     ................
    d96c:	00000012 00000023 00000003 00000013     ....#...........
    d97c:	00000033 00000003 00000016 00000005     3...............
    d98c:	00000003 00000017 00000015 00000003     ................
    d99c:	00000018 00000025 00000003 00000019     ....%...........
    d9ac:	00000035 00000003 000000ff ffffffff     5...............
    d9bc:	ffffffff                                ....

0000d9c0 <PinMap_SERCOM_PAD>:
    d9c0:	00000000 00000001 00000003 00000001     ................
    d9d0:	00000011 00000003 00000004 00000000     ................
    d9e0:	00000003 00000005 00000010 00000003     ................
    d9f0:	00000006 00000020 00000003 00000007     .... ...........
    da00:	00000030 00000003 00000008 00000000     0...............
    da10:	00000002 00000009 00000010 00000002     ................
    da20:	0000000c 00000002 00000002 0000000d     ................
    da30:	00000012 00000002 0000000e 00000022     ............"...
    da40:	00000002 0000000f 00000032 00000002     ........2.......
    da50:	00000010 00000001 00000002 00000011     ................
    da60:	00000011 00000002 00000012 00000021     ............!...
    da70:	00000002 00000013 00000031 00000002     ........1.......
    da80:	00000016 00000003 00000002 00000017     ................
    da90:	00000013 00000002 00000018 00000023     ............#...
    daa0:	00000002 00000019 00000033 00000002     ........3.......
    dab0:	0000001b 00000003 00000005 0000001c     ................
    dac0:	00000013 00000005 0000001e 00000021     ............!...
    dad0:	00000003 0000001f 00000031 00000003     ........1.......
    dae0:	00000022 00000005 00000003 00000023     "...........#...
    daf0:	00000015 00000003 00000036 00000025     ........6...%...
    db00:	00000003 00000037 00000035 00000003     ....7...5.......
    db10:	0000003e 00000024 00000005 0000003f     >...$.......?...
    db20:	00000014 00000005 00000052 00000034     ........R...4...
    db30:	00000005 00000053 00000004 00000005     ....S...........
    db40:	000000ff ffffffff ffffffff              ............

0000db4c <PinMap_EXTINT>:
    db4c:	00000010 00000000 00000000 00000020     ............ ...
	...
    db64:	00000030 00000000 00000000 00000000     0...............
	...
    db7c:	00000011 00000001 00000000 00000031     ............1...
    db8c:	00000001 00000000 00000001 00000001     ................
    db9c:	00000000 00000012 00000002 00000000     ................
    dbac:	00000022 00000002 00000000 00000013     "...............
    dbbc:	00000003 00000000 00000023 00000003     ........#.......
    dbcc:	00000000 00000004 00000004 00000000     ................
    dbdc:	00000014 00000004 00000000 00000005     ................
    dbec:	00000005 00000000 00000006 00000006     ................
    dbfc:	00000000 00000016 00000006 00000000     ................
    dc0c:	00000036 00000006 00000000 00000007     6...............
    dc1c:	00000007 00000000 00000017 00000007     ................
    dc2c:	00000000 00000037 00000007 00000000     ....7...........
    dc3c:	0000001c 00000008 00000000 00000028     ............(...
    dc4c:	00000008 00000000 00000009 00000009     ................
    dc5c:	00000000 00000029 00000009 00000000     ....)...........
    dc6c:	0000001e 0000000a 00000000 0000000a     ................
    dc7c:	0000000a 00000000 0000001f 0000000b     ................
    dc8c:	00000000 0000000b 0000000b 00000000     ................
    dc9c:	0000000c 0000000c 00000000 00000018     ................
    dcac:	0000000c 00000000 0000000d 0000000d     ................
    dcbc:	00000000 00000019 0000000d 00000000     ................
    dccc:	0000002e 0000000e 00000000 0000003e     ............>...
    dcdc:	0000000e 00000000 0000000e 0000000e     ................
    dcec:	00000000 0000000f 0000000f 00000000     ................
    dcfc:	0000001b 0000000f 00000000 0000002f     ............/...
    dd0c:	0000000f 00000000 0000003f 0000000f     ........?.......
    dd1c:	00000000 000000ff ffffffff ffffffff     ................
    dd2c:	42000800 42000c00 42001000 42001400     ...B...B...B...B
    dd3c:	42001800 42001c00 00004420 00004438     ...B...B D..8D..
    dd4c:	00004438 000043e6 000043e6 000043ec     8D...C...C...C..
    dd5c:	000043f2 00004402 00004426 000044dc     .C...D..&D...D..
    dd6c:	000044ea 000044ea 0000446e 00004472     .D...D..nD..rD..
    dd7c:	00004480 0000448e 0000449c 000044cc     .D...D...D...D..
    dd8c:	206e6970 28203d21 4e6e6950 29656d61     pin != (PinName)
    dd9c:	0000434e 4a5c3a43 696b6e65 775c736e     NC..C:\Jenkins\w
    ddac:	736b726f 65636170 65626d5c 2d322d64     orkspace\mbed-2-
    ddbc:	6c697562 696c2d64 72617262 61685c79     build-library\ha
    ddcc:	61745c6c 74656772 61685c73 41545c6c     l\targets\hal\TA
    dddc:	54454752 6d74415f 545c6c65 45475241     RGET_Atmel\TARGE
    ddec:	41535f54 6f435f4d 78657472 5c50304d     T_SAM_CortexM0P\
    ddfc:	6f697067 6970615f 0000632e 4a5c3a43     gpio_api.c..C:\J
    de0c:	696b6e65 775c736e 736b726f 65636170     enkins\workspace
    de1c:	65626d5c 2d322d64 6c697562 696c2d64     \mbed-2-build-li
    de2c:	72617262 61685c79 61745c6c 74656772     brary\hal\target
    de3c:	61685c73 41545c6c 54454752 6d74415f     s\hal\TARGET_Atm
    de4c:	545c6c65 45475241 41535f54 6f435f4d     el\TARGET_SAM_Co
    de5c:	78657472 5c50304d 6d6e6970 632e7061     rtexM0P\pinmap.c
    de6c:	00000000 74726f70 00000000 42000800     ....port.......B
    de7c:	42000c00 42001000 42001400 42001800     ...B...B...B...B
    de8c:	42001c00 6c637963 705f7365 755f7265     ...Bcycles_per_u
    de9c:	203e2073 00000030 4a5c3a43 696b6e65     s > 0...C:\Jenki
    deac:	775c736e 736b726f 65636170 65626d5c     ns\workspace\mbe
    debc:	2d322d64 6c697562 696c2d64 72617262     d-2-build-librar
    decc:	61685c79 61745c6c 74656772 61685c73     y\hal\targets\ha
    dedc:	41545c6c 54454752 6d74415f 545c6c65     l\TARGET_Atmel\T
    deec:	45475241 41535f54 6f435f4d 78657472     ARGET_SAM_Cortex
    defc:	5c50304d 745f7375 656b6369 00632e72     M0P\us_ticker.c.
    df0c:	75646f6d 0000656c                       module..

0000df14 <tc_interrupt_vectors.12802>:
    df14:	00141312 4a5c3a43 696b6e65 775c736e     ....C:\Jenkins\w
    df24:	736b726f 65636170 65626d5c 2d322d64     orkspace\mbed-2-
    df34:	6c697562 696c2d64 72617262 61685c79     build-library\ha
    df44:	61745c6c 74656772 61685c73 41545c6c     l\targets\hal\TA
    df54:	54454752 6d74415f 545c6c65 45475241     RGET_Atmel\TARGE
    df64:	41535f54 6f435f4d 78657472 5c50304d     T_SAM_CortexM0P\
    df74:	5f697073 2e697061 00000063 6b6c6373     spi_api.c...sclk
    df84:	203d2120 0000434e 00000000               != NC......

0000df90 <_ZTVN4mbed8FileBaseE>:
	...
    df98:	000052dd 00005311                       .R...S..

0000dfa0 <_ZTVN4mbed8FileLikeE>:
	...
    dfa8:	00002b69 00002b69 00002b69 00002b69     i+..i+..i+..i+..
    dfb8:	00002b69 00002b69 000028bd 00000000     i+..i+...(......
    dfc8:	00000000 fffffffc 00000000 00000000     ................
    dfd8:	00000000                                ....

0000dfdc <us_interface>:
    dfdc:	00004c01 00004c15 00004c9d 00004cc1     .L...L...L...L..
    dfec:	00004c35                                5L..

0000dff0 <us_data>:
    dff0:	0000dfdc 20003fa8 42002c00 42003000     .....?. .,.B.0.B
    e000:	42003400 001c1c1b 10000800 00002000     .4.B......... ..

0000e010 <__sf_fake_stdin>:
	...

0000e030 <__sf_fake_stdout>:
	...

0000e050 <__sf_fake_stderr>:
	...
    e070:	00000043                                C...

0000e074 <_global_impure_ptr>:
    e074:	200000d4 2b302d23 6c680020 6665004c     ... #-0+ .hlL.ef
    e084:	47464567 464e4900 666e6900 4e414e00     gEFG.INF.inf.NAN
    e094:	6e616e00 32313000 36353433 41393837     .nan.0123456789A
    e0a4:	45444342 31300046 35343332 39383736     BCDEF.0123456789
    e0b4:	64636261 65006665 00646c25 0000e0de     abcdef.e%ld.....
    e0c4:	0000e0e1 0000e0e4 61462d41 3938662d     ........A-Fa-f89
    e0d4:	33323130 37363534 2d2b005d 00303000     01234567].+-.00.
    e0e4:	00005878                                xX..

0000e0e8 <fpinan.5315>:
    e0e8:	00000034 fffffbce 000003cb 00000001     4...............
	...

0000e100 <tinytens>:
    e100:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
    e110:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
    e120:	64ac6f43 11680628                       Co.d(.h.

0000e128 <fpi.5279>:
    e128:	00000035 fffffbce 000003cb 00000001     5...............
    e138:	00000000                                ....

0000e13c <_ctype_>:
    e13c:	20202000 20202020 28282020 20282828     .         ((((( 
    e14c:	20202020 20202020 20202020 20202020                     
    e15c:	10108820 10101010 10101010 10101010      ...............
    e16c:	04040410 04040404 10040404 10101010     ................
    e17c:	41411010 41414141 01010101 01010101     ..AAAAAA........
    e18c:	01010101 01010101 01010101 10101010     ................
    e19c:	42421010 42424242 02020202 02020202     ..BBBBBB........
    e1ac:	02020202 02020202 02020202 10101010     ................
    e1bc:	00000020 00000000 00000000 00000000      ...............
	...
    e23c:	666e4900 74696e69 614e0079 4f50004e     .Infinity.NaN.PO
    e24c:	00584953 0000002e 00000000              SIX.........

0000e258 <__mprec_tens>:
    e258:	00000000 3ff00000 00000000 40240000     .......?......$@
    e268:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    e278:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    e288:	00000000 412e8480 00000000 416312d0     .......A......cA
    e298:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    e2a8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    e2b8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    e2c8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    e2d8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    e2e8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    e2f8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    e308:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    e318:	79d99db4 44ea7843                       ...yCx.D

0000e320 <__mprec_bigtens>:
    e320:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    e330:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    e340:	7f73bf3c 75154fdd                       <.s..O.u

0000e348 <p05.5314>:
    e348:	00000005 00000019 0000007d 0000bbf0     ........}.......
    e358:	0000bade 0000bbc4 0000baca 0000bbc4     ................
    e368:	0000bbce 0000bbc4 0000baca 0000bade     ................
    e378:	0000bade 0000bbce 0000baca 0000bad4     ................
    e388:	0000bad4 0000bad4 0000be36 0000c484     ........6.......
    e398:	0000c462 0000c462 0000c456 0000c34a     b...b...V...J...
    e3a8:	0000c34a 0000c44a 0000c456 0000c34a     J...J...V...J...
    e3b8:	0000c44a 0000c34a 0000c456 0000c34e     J...J...V...N...
    e3c8:	0000c34e 0000c34e 0000c664              N...N...d...

0000e3d4 <_init>:
    e3d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    e3d6:	46c0      	nop			; (mov r8, r8)
    e3d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
    e3da:	bc08      	pop	{r3}
    e3dc:	469e      	mov	lr, r3
    e3de:	4770      	bx	lr

0000e3e0 <__init_array_start>:
    e3e0:	000000dd 	.word	0x000000dd
    e3e4:	000001e1 	.word	0x000001e1

0000e3e8 <_fini>:
    e3e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    e3ea:	46c0      	nop			; (mov r8, r8)
    e3ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
    e3ee:	bc08      	pop	{r3}
    e3f0:	469e      	mov	lr, r3
    e3f2:	4770      	bx	lr

0000e3f4 <__fini_array_start>:
    e3f4:	000000b5 	.word	0x000000b5
